{"version":3,"file":"static/js/main.1c20e503.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-grid-gallery/node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react-grid-gallery/node_modules/react/jsx-runtime.js","../node_modules/react-grid-gallery/src/styles.ts","../node_modules/react-grid-gallery/src/CheckButton.tsx","../node_modules/react-grid-gallery/src/Image.tsx","../node_modules/react-grid-gallery/src/useContainerWidth.ts","../node_modules/react-grid-gallery/src/buildLayout.ts","../node_modules/react-grid-gallery/src/Gallery.tsx","../node_modules/react-image-gallery/build/image-gallery.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","img/crow_stamp_svg.svg","img/bars-solid.svg","img/x-bars-solid.svg","img/tom_stamp_BW_vector.svg","app/data/homedata.js","pages/home.js","pages/about.js","app/data/skillicons.js","pages/skills.js","app/data/projectdata.js","img/github.svg","img/eye-regular.svg","pages/projects.js","app/data/photos-imagesdata.js","../node_modules/yet-another-react-lightbox/dist/types.js","../node_modules/yet-another-react-lightbox/dist/index.js","pages/photos.js","app/data/art-imagesdata.js","pages/art.js","pages/contact.js","pages/impressum.js","img/mastodon.svg","img/square-arrow-up-right-solid.svg","App.js","index.js"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { CSSProperties } from \"react\";\nimport {\n  ImageExtended,\n  StyleFunction,\n  StyleFunctionContext,\n  StyleProp,\n} from \"./types\";\n\nexport const getStyle = (\n  styleProp: StyleProp | undefined,\n  fallback: StyleFunction,\n  context: StyleFunctionContext\n): CSSProperties => {\n  if (typeof styleProp === \"function\") {\n    return styleProp(context);\n  }\n  if (typeof styleProp === \"object\") {\n    return styleProp;\n  }\n  return fallback(context);\n};\n\nconst rotationTransformMap: Record<number, string> = {\n  3: \"rotate(180deg)\",\n  2: \"rotateY(180deg)\",\n  4: \"rotate(180deg) rotateY(180deg)\",\n  5: \"rotate(270deg) rotateY(180deg)\",\n  6: \"rotate(90deg)\",\n  7: \"rotate(90deg) rotateY(180deg)\",\n  8: \"rotate(270deg)\",\n};\n\nconst SELECTION_MARGIN = 16;\n\nexport const gallery: CSSProperties = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n};\n\nexport const thumbnail = ({ item }: { item: ImageExtended }): CSSProperties => {\n  const rotationTransformValue = rotationTransformMap[item.orientation];\n\n  const style = {\n    cursor: \"pointer\",\n    maxWidth: \"none\",\n    width: item.scaledWidth,\n    height: item.scaledHeight,\n    marginLeft: item.marginLeft,\n    marginTop: 0,\n    transform: rotationTransformValue,\n  };\n\n  if (item.isSelected) {\n    const ratio = item.scaledWidth / item.scaledHeight;\n    const viewportHeight = item.scaledHeight - SELECTION_MARGIN * 2;\n    const viewportWidth = item.viewportWidth - SELECTION_MARGIN * 2;\n\n    let height, width;\n    if (item.scaledWidth > item.scaledHeight) {\n      width = item.scaledWidth - SELECTION_MARGIN * 2;\n      height = Math.floor(width / ratio);\n    } else {\n      height = item.scaledHeight - SELECTION_MARGIN * 2;\n      width = Math.floor(height * ratio);\n    }\n\n    const marginTop = Math.abs(Math.floor((viewportHeight - height) / 2));\n    const marginLeft = Math.abs(Math.floor((viewportWidth - width) / 2));\n\n    style.width = width;\n    style.height = height;\n    style.marginLeft = marginLeft === 0 ? 0 : -marginLeft;\n    style.marginTop = marginTop === 0 ? 0 : -marginTop;\n  }\n\n  return style;\n};\n\nexport const tileViewport = ({\n  item,\n}: {\n  item: ImageExtended;\n}): CSSProperties => {\n  const styles: CSSProperties = {\n    width: item.viewportWidth,\n    height: item.scaledHeight,\n    overflow: \"hidden\",\n  };\n  if (item.nano) {\n    styles.background = `url(${item.nano})`;\n    styles.backgroundSize = \"cover\";\n    styles.backgroundPosition = \"center center\";\n  }\n  if (item.isSelected) {\n    styles.width = item.viewportWidth - SELECTION_MARGIN * 2;\n    styles.height = item.scaledHeight - SELECTION_MARGIN * 2;\n    styles.margin = SELECTION_MARGIN;\n  }\n  return styles;\n};\n\nexport const customOverlay = ({\n  hover,\n}: {\n  hover: boolean;\n}): CSSProperties => ({\n  pointerEvents: \"none\",\n  opacity: hover ? 1 : 0,\n  position: \"absolute\",\n  height: \"100%\",\n  width: \"100%\",\n});\n\nexport const galleryItem = ({ margin }: { margin: number }): CSSProperties => ({\n  margin,\n  WebkitUserSelect: \"none\",\n  position: \"relative\",\n  background: \"#eee\",\n  padding: \"0px\",\n});\n\nexport const tileOverlay = ({\n  showOverlay,\n}: {\n  showOverlay: boolean;\n}): CSSProperties => ({\n  pointerEvents: \"none\",\n  opacity: 1,\n  position: \"absolute\",\n  height: \"100%\",\n  width: \"100%\",\n  background: showOverlay\n    ? \"linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)\"\n    : \"none\",\n});\n\nexport const tileIconBar: CSSProperties = {\n  pointerEvents: \"none\",\n  opacity: 1,\n  position: \"absolute\",\n  height: \"36px\",\n  width: \"100%\",\n};\n\nexport const tileDescription: CSSProperties = {\n  background: \"white\",\n  width: \"100%\",\n  margin: 0,\n  userSelect: \"text\",\n  WebkitUserSelect: \"text\",\n  MozUserSelect: \"text\",\n  overflow: \"hidden\",\n};\n\nexport const bottomBar: CSSProperties = {\n  padding: \"2px\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  minHeight: \"0px\",\n  maxHeight: \"160px\",\n  width: \"100%\",\n  bottom: \"0px\",\n  overflow: \"hidden\",\n};\n\nexport const tagItemBlock: CSSProperties = {\n  display: \"inline-block\",\n  cursor: \"pointer\",\n  pointerEvents: \"visible\",\n  margin: \"2px\",\n};\n\nexport const tagItem = (): CSSProperties => ({\n  display: \"inline\",\n  padding: \".2em .6em .3em\",\n  fontSize: \"75%\",\n  fontWeight: \"600\",\n  lineHeight: \"1\",\n  color: \"yellow\",\n  background: \"rgba(0,0,0,0.65)\",\n  textAlign: \"center\",\n  whiteSpace: \"nowrap\",\n  verticalAlign: \"baseline\",\n  borderRadius: \".25em\",\n});\n\nexport const checkButton = ({\n  isVisible,\n}: {\n  isVisible: boolean;\n}): CSSProperties => ({\n  visibility: isVisible ? \"visible\" : \"hidden\",\n  background: \"none\",\n  float: \"left\",\n  width: 36,\n  height: 36,\n  border: \"none\",\n  padding: 6,\n  cursor: \"pointer\",\n  pointerEvents: \"visible\",\n});\n","import { useState } from \"react\";\nimport * as styles from \"./styles\";\nimport { CheckButtonProps } from \"./types\";\n\nexport const CheckButton = ({\n  isSelected = false,\n  isVisible = true,\n  onClick,\n  color = \"#FFFFFFB2\",\n  selectedColor = \"#4285F4FF\",\n  hoverColor = \"#FFFFFFFF\",\n}: CheckButtonProps): JSX.Element => {\n  const [hover, setHover] = useState(false);\n\n  const circleStyle = { display: isSelected ? \"block\" : \"none\" };\n  const fillColor = isSelected ? selectedColor : hover ? hoverColor : color;\n\n  const handleMouseOver = () => setHover(true);\n  const handleMouseOut = () => setHover(false);\n\n  return (\n    <div\n      data-testid=\"grid-gallery-item_check-button\"\n      title=\"Select\"\n      style={styles.checkButton({ isVisible })}\n      onClick={onClick}\n      onMouseOver={handleMouseOver}\n      onMouseOut={handleMouseOut}\n    >\n      <svg\n        fill={fillColor}\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <radialGradient\n          id=\"shadow\"\n          cx=\"38\"\n          cy=\"95.488\"\n          r=\"10.488\"\n          gradientTransform=\"matrix(1 0 0 -1 -26 109)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\".832\" stopColor=\"#010101\"></stop>\n          <stop offset=\"1\" stopColor=\"#010101\" stopOpacity=\"0\"></stop>\n        </radialGradient>\n\n        <circle\n          style={circleStyle}\n          opacity=\".26\"\n          fill=\"url(#shadow)\"\n          cx=\"12\"\n          cy=\"13.512\"\n          r=\"10.488\"\n        />\n        <circle style={circleStyle} fill=\"#FFF\" cx=\"12\" cy=\"12.2\" r=\"8.292\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n      </svg>\n    </div>\n  );\n};\n","import { useState, MouseEvent } from \"react\";\nimport { CheckButton } from \"./CheckButton\";\nimport { ImageExtended, ImageProps } from \"./types\";\nimport * as styles from \"./styles\";\nimport { getStyle } from \"./styles\";\n\nexport const Image = <T extends ImageExtended>({\n  item,\n  thumbnailImageComponent: ThumbnailImageComponent,\n  isSelectable = true,\n  thumbnailStyle,\n  tagStyle,\n  tileViewportStyle,\n  margin,\n  index,\n  onSelect,\n  onClick,\n}: ImageProps<T>): JSX.Element => {\n  const styleContext = { item };\n\n  const [hover, setHover] = useState(false);\n\n  const thumbnailProps = {\n    key: index,\n    \"data-testid\": \"grid-gallery-item_thumbnail\",\n    src: item.src,\n    alt: item.alt ? item.alt : \"\",\n    title: typeof item.caption === \"string\" ? item.caption : null,\n    style: getStyle(thumbnailStyle, styles.thumbnail, styleContext),\n  };\n\n  const handleCheckButtonClick = (event: MouseEvent<HTMLElement>) => {\n    if (!isSelectable) {\n      return;\n    }\n    onSelect(index, event);\n  };\n\n  const handleViewportClick = (event: MouseEvent<HTMLElement>) => {\n    onClick(index, event);\n  };\n\n  const thumbnailImageProps = {\n    item,\n    index,\n    margin,\n    onSelect,\n    onClick,\n    isSelectable,\n    tileViewportStyle,\n    thumbnailStyle,\n    tagStyle,\n  };\n\n  return (\n    <div\n      className=\"ReactGridGallery_tile\"\n      data-testid=\"grid-gallery-item\"\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      style={styles.galleryItem({ margin })}\n    >\n      <div\n        className=\"ReactGridGallery_tile-icon-bar\"\n        style={styles.tileIconBar}\n      >\n        <CheckButton\n          isSelected={item.isSelected}\n          isVisible={item.isSelected || (isSelectable && hover)}\n          onClick={handleCheckButtonClick}\n        />\n      </div>\n\n      {!!item.tags && (\n        <div\n          className=\"ReactGridGallery_tile-bottom-bar\"\n          style={styles.bottomBar}\n        >\n          {item.tags.map((tag, index) => (\n            <div\n              key={tag.key || index}\n              title={tag.title}\n              style={styles.tagItemBlock}\n            >\n              <span style={getStyle(tagStyle, styles.tagItem, styleContext)}>\n                {tag.value}\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!!item.customOverlay && (\n        <div\n          className=\"ReactGridGallery_custom-overlay\"\n          style={styles.customOverlay({ hover })}\n        >\n          {item.customOverlay}\n        </div>\n      )}\n\n      <div\n        className=\"ReactGridGallery_tile-overlay\"\n        style={styles.tileOverlay({\n          showOverlay: hover && !item.isSelected && isSelectable,\n        })}\n      />\n\n      <div\n        className=\"ReactGridGallery_tile-viewport\"\n        data-testid=\"grid-gallery-item_viewport\"\n        style={getStyle(tileViewportStyle, styles.tileViewport, styleContext)}\n        onClick={handleViewportClick}\n      >\n        {ThumbnailImageComponent ? (\n          <ThumbnailImageComponent\n            {...thumbnailImageProps}\n            imageProps={thumbnailProps}\n          />\n        ) : (\n          <img {...thumbnailProps} />\n        )}\n      </div>\n      {item.thumbnailCaption && (\n        <div\n          className=\"ReactGridGallery_tile-description\"\n          style={styles.tileDescription}\n        >\n          {item.thumbnailCaption}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useRef, useCallback, useState } from \"react\";\n\nexport function useContainerWidth(defaultContainerWidth: number) {\n  const ref = useRef<HTMLElement | null>(null);\n  const observerRef = useRef<ResizeObserver>();\n\n  const [containerWidth, setContainerWidth] = useState(defaultContainerWidth);\n\n  const containerRef = useCallback((node: HTMLElement | null) => {\n    observerRef.current?.disconnect();\n    observerRef.current = undefined;\n\n    ref.current = node;\n\n    const updateWidth = () => {\n      if (!ref.current) {\n        return;\n      }\n      let width = ref.current.clientWidth;\n      try {\n        width = ref.current.getBoundingClientRect().width;\n      } catch (err) {}\n      setContainerWidth(Math.floor(width));\n    };\n\n    updateWidth();\n\n    if (node && typeof ResizeObserver !== \"undefined\") {\n      observerRef.current = new ResizeObserver(updateWidth);\n      observerRef.current.observe(node);\n    }\n  }, []);\n\n  return { containerRef, containerWidth };\n}\n","import {\n  ImageExtended,\n  Image,\n  BuildLayoutOptions,\n  ImageExtendedRow,\n} from \"./types\";\n\nconst calculateCutOff = <T extends ImageExtended = ImageExtended>(\n  items: T[],\n  totalRowWidth: number,\n  protrudingWidth: number\n) => {\n  const cutOff: number[] = [];\n  let cutSum = 0;\n  for (let i in items) {\n    const item = items[i];\n    const fractionOfWidth = item.scaledWidth / totalRowWidth;\n    cutOff[i] = Math.floor(fractionOfWidth * protrudingWidth);\n    cutSum += cutOff[i];\n  }\n\n  let stillToCutOff = protrudingWidth - cutSum;\n  while (stillToCutOff > 0) {\n    for (let i in cutOff) {\n      cutOff[i]++;\n      stillToCutOff--;\n      if (stillToCutOff < 0) break;\n    }\n  }\n  return cutOff;\n};\n\nconst getRow = <T extends Image = Image>(\n  images: T[],\n  { containerWidth, rowHeight, margin }: BuildLayoutOptions\n): [ImageExtendedRow<T>, T[]] => {\n  const row: ImageExtendedRow<T> = [];\n  const imgMargin = 2 * margin;\n  const items = [...images];\n\n  let totalRowWidth = 0;\n  while (items.length > 0 && totalRowWidth < containerWidth) {\n    const item = items.shift();\n    const scaledWidth = Math.floor(rowHeight * (item.width / item.height));\n    const extendedItem: ImageExtended<T> = {\n      ...item,\n      scaledHeight: rowHeight,\n      scaledWidth,\n      viewportWidth: scaledWidth,\n      marginLeft: 0,\n    };\n    row.push(extendedItem);\n    totalRowWidth += extendedItem.scaledWidth + imgMargin;\n  }\n\n  const protrudingWidth = totalRowWidth - containerWidth;\n  if (row.length > 0 && protrudingWidth > 0) {\n    const cutoff = calculateCutOff(row, totalRowWidth, protrudingWidth);\n    for (const i in row) {\n      const pixelsToRemove = cutoff[i];\n      const item = row[i];\n      item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));\n      item.viewportWidth = item.scaledWidth - pixelsToRemove;\n    }\n  }\n\n  return [row, items];\n};\n\nconst getRows = <T extends Image = Image>(\n  images: T[],\n  options: BuildLayoutOptions,\n  rows: ImageExtendedRow<T>[] = []\n): ImageExtendedRow<T>[] => {\n  const [row, imagesLeft] = getRow(images, options);\n  const nextRows = [...rows, row];\n\n  if (options.maxRows && nextRows.length >= options.maxRows) {\n    return nextRows;\n  }\n  if (imagesLeft.length) {\n    return getRows(imagesLeft, options, nextRows);\n  }\n  return nextRows;\n};\n\nexport const buildLayout = <T extends Image = Image>(\n  images: T[],\n  { containerWidth, maxRows, rowHeight, margin }: BuildLayoutOptions\n): ImageExtendedRow<T>[] => {\n  rowHeight = typeof rowHeight === \"undefined\" ? 180 : rowHeight;\n  margin = typeof margin === \"undefined\" ? 2 : margin;\n\n  if (!images) return [];\n  if (!containerWidth) return [];\n\n  const options = { containerWidth, maxRows, rowHeight, margin };\n  return getRows(images, options);\n};\n\nexport const buildLayoutFlat = <T extends Image = Image>(\n  images: T[],\n  options: BuildLayoutOptions\n): ImageExtendedRow<T> => {\n  const rows = buildLayout(images, options);\n  return [].concat.apply([], rows);\n};\n","import { MouseEvent } from \"react\";\nimport { Image } from \"./Image\";\nimport { useContainerWidth } from \"./useContainerWidth\";\nimport { buildLayoutFlat } from \"./buildLayout\";\nimport { Image as ImageInterface, GalleryProps } from \"./types\";\nimport * as styles from \"./styles\";\n\nexport const Gallery = <T extends ImageInterface>({\n  images,\n  id = \"ReactGridGallery\",\n  enableImageSelection = true,\n  onSelect = () => {},\n  rowHeight = 180,\n  maxRows,\n  margin = 2,\n  defaultContainerWidth = 0,\n  onClick = () => {},\n  tileViewportStyle,\n  thumbnailStyle,\n  tagStyle,\n  thumbnailImageComponent,\n}: GalleryProps<T>): JSX.Element => {\n  const { containerRef, containerWidth } = useContainerWidth(\n    defaultContainerWidth\n  );\n\n  const thumbnails = buildLayoutFlat<T>(images, {\n    containerWidth,\n    maxRows,\n    rowHeight,\n    margin,\n  });\n\n  const handleSelect = (index: number, event: MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    onSelect(index, images[index], event);\n  };\n\n  const handleClick = (index: number, event: MouseEvent<HTMLElement>) => {\n    onClick(index, images[index], event);\n  };\n\n  return (\n    <div id={id} className=\"ReactGridGallery\" ref={containerRef}>\n      <div style={styles.gallery}>\n        {thumbnails.map((item, index) => (\n          <Image\n            key={item.key || index}\n            item={item}\n            index={index}\n            margin={margin}\n            height={rowHeight}\n            isSelectable={enableImageSelection}\n            onClick={handleClick}\n            onSelect={handleSelect}\n            tagStyle={tagStyle}\n            tileViewportStyle={tileViewportStyle}\n            thumbnailStyle={thumbnailStyle}\n            thumbnailImageComponent={thumbnailImageComponent}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nGallery.displayName = \"Gallery\";\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],t):\"object\"==typeof exports?exports.ImageGallery=t(require(\"react\")):e.ImageGallery=t(e.React)}(this,(e=>(()=>{var t={703:(e,t,n)=>{\"use strict\";var i=n(414);function r(){}function a(){}a.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,a,o){if(o!==i){var s=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw s.name=\"Invariant Violation\",s}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:r};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},590:e=>{var t=\"undefined\"!=typeof Element,n=\"function\"==typeof Map,i=\"function\"==typeof Set,r=\"function\"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function a(e,o){if(e===o)return!0;if(e&&o&&\"object\"==typeof e&&\"object\"==typeof o){if(e.constructor!==o.constructor)return!1;var s,l,u,c;if(Array.isArray(e)){if((s=e.length)!=o.length)return!1;for(l=s;0!=l--;)if(!a(e[l],o[l]))return!1;return!0}if(n&&e instanceof Map&&o instanceof Map){if(e.size!==o.size)return!1;for(c=e.entries();!(l=c.next()).done;)if(!o.has(l.value[0]))return!1;for(c=e.entries();!(l=c.next()).done;)if(!a(l.value[1],o.get(l.value[0])))return!1;return!0}if(i&&e instanceof Set&&o instanceof Set){if(e.size!==o.size)return!1;for(c=e.entries();!(l=c.next()).done;)if(!o.has(l.value[0]))return!1;return!0}if(r&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(o)){if((s=e.length)!=o.length)return!1;for(l=s;0!=l--;)if(e[l]!==o[l])return!1;return!0}if(e.constructor===RegExp)return e.source===o.source&&e.flags===o.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===o.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===o.toString();if((s=(u=Object.keys(e)).length)!==Object.keys(o).length)return!1;for(l=s;0!=l--;)if(!Object.prototype.hasOwnProperty.call(o,u[l]))return!1;if(t&&e instanceof Element)return!1;for(l=s;0!=l--;)if((\"_owner\"!==u[l]&&\"__v\"!==u[l]&&\"__o\"!==u[l]||!e.$$typeof)&&!a(e[u[l]],o[u[l]]))return!1;return!0}return e!=e&&o!=o}e.exports=function(e,t){try{return a(e,t)}catch(e){if((e.message||\"\").match(/stack|recursion/i))return console.warn(\"react-fast-compare cannot handle circular refs\"),!1;throw e}}},359:t=>{\"use strict\";t.exports=e}},n={};function i(e){var r=n[e];if(void 0!==r)return r.exports;var a=n[e]={exports:{}};return t[e](a,a.exports,i),a.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var r={};return(()=>{\"use strict\";function e(t){var n,i,r=\"\";if(\"string\"==typeof t||\"number\"==typeof t)r+=t;else if(\"object\"==typeof t)if(Array.isArray(t))for(n=0;n<t.length;n++)t[n]&&(i=e(t[n]))&&(r&&(r+=\" \"),r+=i);else for(n in t)t[n]&&(r&&(r+=\" \"),r+=n);return r}function t(){for(var t,n,i=0,r=\"\";i<arguments.length;)(t=arguments[i++])&&(n=e(t))&&(r&&(r+=\" \"),r+=n);return r}i.r(r),i.d(r,{default:()=>nt});var n=i(359),a=i.n(n);const o=function(e){var t=typeof e;return null!=e&&(\"object\"==t||\"function\"==t)},s=\"object\"==typeof global&&global&&global.Object===Object&&global;var l=\"object\"==typeof self&&self&&self.Object===Object&&self;const u=s||l||Function(\"return this\")(),c=function(){return u.Date.now()};var h=/\\s/;var d=/^\\s+/;const p=function(e){return e?e.slice(0,function(e){for(var t=e.length;t--&&h.test(e.charAt(t)););return t}(e)+1).replace(d,\"\"):e},f=u.Symbol;var m=Object.prototype,b=m.hasOwnProperty,g=m.toString,v=f?f.toStringTag:void 0;var y=Object.prototype.toString;var w=f?f.toStringTag:void 0;const S=function(e){return null==e?void 0===e?\"[object Undefined]\":\"[object Null]\":w&&w in Object(e)?function(e){var t=b.call(e,v),n=e[v];try{e[v]=void 0;var i=!0}catch(e){}var r=g.call(e);return i&&(t?e[v]=n:delete e[v]),r}(e):function(e){return y.call(e)}(e)};var T=/^[-+]0x[0-9a-f]+$/i,O=/^0b[01]+$/i,E=/^0o[0-7]+$/i,k=parseInt;const I=function(e){if(\"number\"==typeof e)return e;if(function(e){return\"symbol\"==typeof e||function(e){return null!=e&&\"object\"==typeof e}(e)&&\"[object Symbol]\"==S(e)}(e))return NaN;if(o(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=o(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=p(e);var n=O.test(e);return n||E.test(e)?k(e.slice(2),n?2:8):T.test(e)?NaN:+e};var j=Math.max,x=Math.min;const P=function(e,t,n){var i,r,a,s,l,u,h=0,d=!1,p=!1,f=!0;if(\"function\"!=typeof e)throw new TypeError(\"Expected a function\");function m(t){var n=i,a=r;return i=r=void 0,h=t,s=e.apply(a,n)}function b(e){return h=e,l=setTimeout(v,t),d?m(e):s}function g(e){var n=e-u;return void 0===u||n>=t||n<0||p&&e-h>=a}function v(){var e=c();if(g(e))return y(e);l=setTimeout(v,function(e){var n=t-(e-u);return p?x(n,a-(e-h)):n}(e))}function y(e){return l=void 0,f&&i?m(e):(i=r=void 0,s)}function w(){var e=c(),n=g(e);if(i=arguments,r=this,u=e,n){if(void 0===l)return b(u);if(p)return clearTimeout(l),l=setTimeout(v,t),m(u)}return void 0===l&&(l=setTimeout(v,t)),s}return t=I(t)||0,o(n)&&(d=!!n.leading,a=(p=\"maxWait\"in n)?j(I(n.maxWait)||0,t):a,f=\"trailing\"in n?!!n.trailing:f),w.cancel=function(){void 0!==l&&clearTimeout(l),h=0,i=u=r=l=void 0},w.flush=function(){return void 0===l?s:y(c())},w},_=function(e,t,n){var i=!0,r=!0;if(\"function\"!=typeof e)throw new TypeError(\"Expected a function\");return o(n)&&(i=\"leading\"in n?!!n.leading:i,r=\"trailing\"in n?!!n.trailing:r),P(e,t,{leading:i,maxWait:t,trailing:r})};var R=i(590),M=i.n(R),L=function(){if(\"undefined\"!=typeof Map)return Map;function e(e,t){var n=-1;return e.some((function(e,i){return e[0]===t&&(n=i,!0)})),n}return function(){function t(){this.__entries__=[]}return Object.defineProperty(t.prototype,\"size\",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),t.prototype.get=function(t){var n=e(this.__entries__,t),i=this.__entries__[n];return i&&i[1]},t.prototype.set=function(t,n){var i=e(this.__entries__,t);~i?this.__entries__[i][1]=n:this.__entries__.push([t,n])},t.prototype.delete=function(t){var n=this.__entries__,i=e(n,t);~i&&n.splice(i,1)},t.prototype.has=function(t){return!!~e(this.__entries__,t)},t.prototype.clear=function(){this.__entries__.splice(0)},t.prototype.forEach=function(e,t){void 0===t&&(t=null);for(var n=0,i=this.__entries__;n<i.length;n++){var r=i[n];e.call(t,r[1],r[0])}},t}()}(),D=\"undefined\"!=typeof window&&\"undefined\"!=typeof document&&window.document===document,W=void 0!==i.g&&i.g.Math===Math?i.g:\"undefined\"!=typeof self&&self.Math===Math?self:\"undefined\"!=typeof window&&window.Math===Math?window:Function(\"return this\")(),C=\"function\"==typeof requestAnimationFrame?requestAnimationFrame.bind(W):function(e){return setTimeout((function(){return e(Date.now())}),1e3/60)},F=[\"top\",\"right\",\"bottom\",\"left\",\"width\",\"height\",\"size\",\"weight\"],z=\"undefined\"!=typeof MutationObserver,N=function(){function e(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(e,t){var n=!1,i=!1,r=0;function a(){n&&(n=!1,e()),i&&s()}function o(){C(a)}function s(){var e=Date.now();if(n){if(e-r<2)return;i=!0}else n=!0,i=!1,setTimeout(o,20);r=e}return s}(this.refresh.bind(this))}return e.prototype.addObserver=function(e){~this.observers_.indexOf(e)||this.observers_.push(e),this.connected_||this.connect_()},e.prototype.removeObserver=function(e){var t=this.observers_,n=t.indexOf(e);~n&&t.splice(n,1),!t.length&&this.connected_&&this.disconnect_()},e.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},e.prototype.updateObservers_=function(){var e=this.observers_.filter((function(e){return e.gatherActive(),e.hasActive()}));return e.forEach((function(e){return e.broadcastActive()})),e.length>0},e.prototype.connect_=function(){D&&!this.connected_&&(document.addEventListener(\"transitionend\",this.onTransitionEnd_),window.addEventListener(\"resize\",this.refresh),z?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener(\"DOMSubtreeModified\",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},e.prototype.disconnect_=function(){D&&this.connected_&&(document.removeEventListener(\"transitionend\",this.onTransitionEnd_),window.removeEventListener(\"resize\",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener(\"DOMSubtreeModified\",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},e.prototype.onTransitionEnd_=function(e){var t=e.propertyName,n=void 0===t?\"\":t;F.some((function(e){return!!~n.indexOf(e)}))&&this.refresh()},e.getInstance=function(){return this.instance_||(this.instance_=new e),this.instance_},e.instance_=null,e}(),B=function(e,t){for(var n=0,i=Object.keys(t);n<i.length;n++){var r=i[n];Object.defineProperty(e,r,{value:t[r],enumerable:!1,writable:!1,configurable:!0})}return e},A=function(e){return e&&e.ownerDocument&&e.ownerDocument.defaultView||W},U=V(0,0,0,0);function G(e){return parseFloat(e)||0}function q(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return t.reduce((function(t,n){return t+G(e[\"border-\"+n+\"-width\"])}),0)}var H=\"undefined\"!=typeof SVGGraphicsElement?function(e){return e instanceof A(e).SVGGraphicsElement}:function(e){return e instanceof A(e).SVGElement&&\"function\"==typeof e.getBBox};function K(e){return D?H(e)?function(e){var t=e.getBBox();return V(0,0,t.width,t.height)}(e):function(e){var t=e.clientWidth,n=e.clientHeight;if(!t&&!n)return U;var i=A(e).getComputedStyle(e),r=function(e){for(var t={},n=0,i=[\"top\",\"right\",\"bottom\",\"left\"];n<i.length;n++){var r=i[n],a=e[\"padding-\"+r];t[r]=G(a)}return t}(i),a=r.left+r.right,o=r.top+r.bottom,s=G(i.width),l=G(i.height);if(\"border-box\"===i.boxSizing&&(Math.round(s+a)!==t&&(s-=q(i,\"left\",\"right\")+a),Math.round(l+o)!==n&&(l-=q(i,\"top\",\"bottom\")+o)),!function(e){return e===A(e).document.documentElement}(e)){var u=Math.round(s+a)-t,c=Math.round(l+o)-n;1!==Math.abs(u)&&(s-=u),1!==Math.abs(c)&&(l-=c)}return V(r.left,r.top,s,l)}(e):U}function V(e,t,n,i){return{x:e,y:t,width:n,height:i}}var X=function(){function e(e){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=V(0,0,0,0),this.target=e}return e.prototype.isActive=function(){var e=K(this.target);return this.contentRect_=e,e.width!==this.broadcastWidth||e.height!==this.broadcastHeight},e.prototype.broadcastRect=function(){var e=this.contentRect_;return this.broadcastWidth=e.width,this.broadcastHeight=e.height,e},e}(),$=function(e,t){var n,i,r,a,o,s,l,u=(i=(n=t).x,r=n.y,a=n.width,o=n.height,s=\"undefined\"!=typeof DOMRectReadOnly?DOMRectReadOnly:Object,l=Object.create(s.prototype),B(l,{x:i,y:r,width:a,height:o,top:r,right:i+a,bottom:o+r,left:i}),l);B(this,{target:e,contentRect:u})},Y=function(){function e(e,t,n){if(this.activeObservations_=[],this.observations_=new L,\"function\"!=typeof e)throw new TypeError(\"The callback provided as parameter 1 is not a function.\");this.callback_=e,this.controller_=t,this.callbackCtx_=n}return e.prototype.observe=function(e){if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");if(\"undefined\"!=typeof Element&&Element instanceof Object){if(!(e instanceof A(e).Element))throw new TypeError('parameter 1 is not of type \"Element\".');var t=this.observations_;t.has(e)||(t.set(e,new X(e)),this.controller_.addObserver(this),this.controller_.refresh())}},e.prototype.unobserve=function(e){if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");if(\"undefined\"!=typeof Element&&Element instanceof Object){if(!(e instanceof A(e).Element))throw new TypeError('parameter 1 is not of type \"Element\".');var t=this.observations_;t.has(e)&&(t.delete(e),t.size||this.controller_.removeObserver(this))}},e.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},e.prototype.gatherActive=function(){var e=this;this.clearActive(),this.observations_.forEach((function(t){t.isActive()&&e.activeObservations_.push(t)}))},e.prototype.broadcastActive=function(){if(this.hasActive()){var e=this.callbackCtx_,t=this.activeObservations_.map((function(e){return new $(e.target,e.broadcastRect())}));this.callback_.call(e,t,e),this.clearActive()}},e.prototype.clearActive=function(){this.activeObservations_.splice(0)},e.prototype.hasActive=function(){return this.activeObservations_.length>0},e}(),J=\"undefined\"!=typeof WeakMap?new WeakMap:new L,Q=function e(t){if(!(this instanceof e))throw new TypeError(\"Cannot call a class as a function.\");if(!arguments.length)throw new TypeError(\"1 argument required, but only 0 present.\");var n=N.getInstance(),i=new Y(t,n,this);J.set(this,i)};[\"observe\",\"unobserve\",\"disconnect\"].forEach((function(e){Q.prototype[e]=function(){var t;return(t=J.get(this))[e].apply(t,arguments)}}));const Z=void 0!==W.ResizeObserver?W.ResizeObserver:Q,ee=\"Left\",te=\"Right\",ne=\"Up\",ie=\"Down\",re={delta:10,preventScrollOnSwipe:!1,rotationAngle:0,trackMouse:!1,trackTouch:!0,swipeDuration:1/0,touchEventOptions:{passive:!0}},ae={first:!0,initial:[0,0],start:0,swiping:!1,xy:[0,0]},oe=\"mousemove\",se=\"mouseup\";function le(e,t){if(0===t)return e;const n=Math.PI/180*t;return[e[0]*Math.cos(n)+e[1]*Math.sin(n),e[1]*Math.cos(n)-e[0]*Math.sin(n)]}function ue(e){const{trackMouse:t}=e,i=n.useRef(Object.assign({},ae)),r=n.useRef(Object.assign({},re)),a=n.useRef(Object.assign({},r.current));let o;for(o in a.current=Object.assign({},r.current),r.current=Object.assign(Object.assign({},re),e),re)void 0===r.current[o]&&(r.current[o]=re[o]);const[s,l]=n.useMemo((()=>function(e,t){const n=t=>{const n=\"touches\"in t;n&&t.touches.length>1||e(((e,r)=>{r.trackMouse&&!n&&(document.addEventListener(oe,i),document.addEventListener(se,a));const{clientX:o,clientY:s}=n?t.touches[0]:t,l=le([o,s],r.rotationAngle);return r.onTouchStartOrOnMouseDown&&r.onTouchStartOrOnMouseDown({event:t}),Object.assign(Object.assign(Object.assign({},e),ae),{initial:l.slice(),xy:l,start:t.timeStamp||0})}))},i=t=>{e(((e,n)=>{const i=\"touches\"in t;if(i&&t.touches.length>1)return e;if(t.timeStamp-e.start>n.swipeDuration)return e.swiping?Object.assign(Object.assign({},e),{swiping:!1}):e;const{clientX:r,clientY:a}=i?t.touches[0]:t,[o,s]=le([r,a],n.rotationAngle),l=o-e.xy[0],u=s-e.xy[1],c=Math.abs(l),h=Math.abs(u),d=(t.timeStamp||0)-e.start,p=Math.sqrt(c*c+h*h)/(d||1),f=[l/(d||1),u/(d||1)],m=function(e,t,n,i){return e>t?n>0?te:ee:i>0?ie:ne}(c,h,l,u),b=\"number\"==typeof n.delta?n.delta:n.delta[m.toLowerCase()]||re.delta;if(c<b&&h<b&&!e.swiping)return e;const g={absX:c,absY:h,deltaX:l,deltaY:u,dir:m,event:t,first:e.first,initial:e.initial,velocity:p,vxvy:f};g.first&&n.onSwipeStart&&n.onSwipeStart(g),n.onSwiping&&n.onSwiping(g);let v=!1;return(n.onSwiping||n.onSwiped||n[`onSwiped${m}`])&&(v=!0),v&&n.preventScrollOnSwipe&&n.trackTouch&&t.cancelable&&t.preventDefault(),Object.assign(Object.assign({},e),{first:!1,eventData:g,swiping:!0})}))},r=t=>{e(((e,n)=>{let i;if(e.swiping&&e.eventData){if(t.timeStamp-e.start<n.swipeDuration){i=Object.assign(Object.assign({},e.eventData),{event:t}),n.onSwiped&&n.onSwiped(i);const r=n[`onSwiped${i.dir}`];r&&r(i)}}else n.onTap&&n.onTap({event:t});return n.onTouchEndOrOnMouseUp&&n.onTouchEndOrOnMouseUp({event:t}),Object.assign(Object.assign(Object.assign({},e),ae),{eventData:i})}))},a=e=>{document.removeEventListener(oe,i),document.removeEventListener(se,a),r(e)},o=(e,t)=>{let a=()=>{};if(e&&e.addEventListener){const o=Object.assign(Object.assign({},re.touchEventOptions),t.touchEventOptions),s=[[\"touchstart\",n,o],[\"touchmove\",i,Object.assign(Object.assign({},o),t.preventScrollOnSwipe?{passive:!1}:{})],[\"touchend\",r,o]];s.forEach((([t,n,i])=>e.addEventListener(t,n,i))),a=()=>s.forEach((([t,n])=>e.removeEventListener(t,n)))}return a},s={ref:t=>{null!==t&&e(((e,n)=>{if(e.el===t)return e;const i={};return e.el&&e.el!==t&&e.cleanUpTouch&&(e.cleanUpTouch(),i.cleanUpTouch=void 0),n.trackTouch&&t&&(i.cleanUpTouch=o(t,n)),Object.assign(Object.assign(Object.assign({},e),{el:t}),i)}))}};return t.trackMouse&&(s.onMouseDown=n),[s,o]}((e=>i.current=e(i.current,r.current)),{trackMouse:t})),[t]);return i.current=function(e,t,n,i){return t.trackTouch&&e.el?e.cleanUpTouch?t.preventScrollOnSwipe!==n.preventScrollOnSwipe||t.touchEventOptions.passive!==n.touchEventOptions.passive?(e.cleanUpTouch(),Object.assign(Object.assign({},e),{cleanUpTouch:i(e.el,t)})):e:Object.assign(Object.assign({},e),{cleanUpTouch:i(e.el,t)}):(e.cleanUpTouch&&e.cleanUpTouch(),Object.assign(Object.assign({},e),{cleanUpTouch:void 0}))}(i.current,r.current,a.current,l),s}var ce=i(697);function he(e){return he=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},he(e)}function de(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function pe(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?de(Object(n),!0).forEach((function(t){fe(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):de(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function fe(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==he(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t);if(\"object\"!==he(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e,\"string\");return\"symbol\"===he(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var me={description:\"\",fullscreen:\"\",isFullscreen:!1,originalAlt:\"\",originalHeight:\"\",originalWidth:\"\",originalTitle:\"\",sizes:\"\",srcSet:\"\",loading:\"eager\"},be=a().memo((function(e){var t=pe(pe({},me),e),n=t.description,i=t.fullscreen,r=t.handleImageLoaded,o=t.isFullscreen,s=t.onImageError,l=t.original,u=t.originalAlt,c=t.originalHeight,h=t.originalWidth,d=t.originalTitle,p=t.sizes,f=t.srcSet,m=t.loading,b=o&&i||l;return a().createElement(a().Fragment,null,a().createElement(\"img\",{className:\"image-gallery-image\",src:b,alt:u,srcSet:f,height:c,width:h,sizes:p,title:d,onLoad:function(e){return r(e,l)},onError:s,loading:m}),n&&a().createElement(\"span\",{className:\"image-gallery-description\"},n))}));be.displayName=\"Item\",be.propTypes={description:ce.string,fullscreen:ce.string,handleImageLoaded:ce.func.isRequired,isFullscreen:ce.bool,onImageError:ce.func.isRequired,original:ce.string.isRequired,originalAlt:ce.string,originalHeight:ce.string,originalWidth:ce.string,originalTitle:ce.string,sizes:ce.string,srcSet:ce.string,loading:ce.string};const ge=be;function ve(e){return ve=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ve(e)}function ye(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function we(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ye(Object(n),!0).forEach((function(t){Se(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ye(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Se(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==ve(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t);if(\"object\"!==ve(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e,\"string\");return\"symbol\"===ve(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Te={left:a().createElement(\"polyline\",{points:\"15 18 9 12 15 6\"}),right:a().createElement(\"polyline\",{points:\"9 18 15 12 9 6\"}),maximize:a().createElement(\"path\",{d:\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"}),minimize:a().createElement(\"path\",{d:\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"}),play:a().createElement(\"polygon\",{points:\"5 3 19 12 5 21 5 3\"}),pause:a().createElement(a().Fragment,null,a().createElement(\"rect\",{x:\"6\",y:\"4\",width:\"4\",height:\"16\"}),a().createElement(\"rect\",{x:\"14\",y:\"4\",width:\"4\",height:\"16\"}))},Oe={strokeWidth:1,viewBox:\"0 0 24 24\"},Ee=function(e){var t=we(we({},Oe),e),n=t.strokeWidth,i=t.viewBox,r=t.icon;return a().createElement(\"svg\",{className:\"image-gallery-svg\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:i,fill:\"none\",stroke:\"currentColor\",strokeWidth:n,strokeLinecap:\"round\",strokeLinejoin:\"round\"},Te[r])};Ee.propTypes={strokeWidth:ce.number,viewBox:ce.string,icon:(0,ce.oneOf)([\"left\",\"right\",\"maximize\",\"minimize\",\"play\",\"pause\"]).isRequired};const ke=Ee;var Ie=a().memo((function(e){var t=e.isFullscreen,n=e.onClick;return a().createElement(\"button\",{type:\"button\",className:\"image-gallery-icon image-gallery-fullscreen-button\",onClick:n,\"aria-label\":\"Open Fullscreen\"},a().createElement(ke,{strokeWidth:2,icon:t?\"minimize\":\"maximize\"}))}));Ie.displayName=\"Fullscreen\",Ie.propTypes={isFullscreen:ce.bool.isRequired,onClick:ce.func.isRequired};const je=Ie;var xe=a().memo((function(e){var t=e.disabled,n=e.onClick;return a().createElement(\"button\",{type:\"button\",className:\"image-gallery-icon image-gallery-left-nav\",disabled:t,onClick:n,\"aria-label\":\"Previous Slide\"},a().createElement(ke,{icon:\"left\",viewBox:\"6 0 12 24\"}))}));xe.displayName=\"LeftNav\",xe.propTypes={disabled:ce.bool.isRequired,onClick:ce.func.isRequired};const Pe=xe;var _e=a().memo((function(e){var t=e.disabled,n=e.onClick;return a().createElement(\"button\",{type:\"button\",className:\"image-gallery-icon image-gallery-right-nav\",disabled:t,onClick:n,\"aria-label\":\"Next Slide\"},a().createElement(ke,{icon:\"right\",viewBox:\"6 0 12 24\"}))}));_e.displayName=\"RightNav\",_e.propTypes={disabled:ce.bool.isRequired,onClick:ce.func.isRequired};const Re=_e;var Me=a().memo((function(e){var t=e.isPlaying,n=e.onClick;return a().createElement(\"button\",{type:\"button\",className:\"image-gallery-icon image-gallery-play-button\",onClick:n,\"aria-label\":\"Play or Pause Slideshow\"},a().createElement(ke,{strokeWidth:2,icon:t?\"pause\":\"play\"}))}));Me.displayName=\"PlayPause\",Me.propTypes={isPlaying:ce.bool.isRequired,onClick:ce.func.isRequired};const Le=Me;function De(e){return De=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},De(e)}function We(){return We=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},We.apply(this,arguments)}function Ce(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function Fe(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ce(Object(n),!0).forEach((function(t){ze(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ce(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ze(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==De(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t);if(\"object\"!==De(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e,\"string\");return\"symbol\"===De(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Ne={className:\"\",delta:0,onSwiping:function(){},onSwiped:function(){}},Be=function(e){var t=Fe(Fe({},Ne),e),n=t.children,i=t.className,r=ue({delta:t.delta,onSwiping:t.onSwiping,onSwiped:t.onSwiped});return a().createElement(\"div\",We({},r,{className:i}),n)};Be.propTypes={children:ce.node.isRequired,className:ce.string,delta:ce.number,onSwiped:ce.func,onSwiping:ce.func};const Ae=Be;function Ue(e){return Ue=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ue(e)}function Ge(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function qe(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ge(Object(n),!0).forEach((function(t){Ye(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ge(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function He(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,Je(i.key),i)}}function Ke(e,t){return Ke=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ke(e,t)}function Ve(e,t){if(t&&(\"object\"===Ue(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return Xe(e)}function Xe(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function $e(e){return $e=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$e(e)}function Ye(e,t,n){return(t=Je(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Je(e){var t=function(e,t){if(\"object\"!==Ue(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,t);if(\"object\"!==Ue(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e,\"string\");return\"symbol\"===Ue(t)?t:String(t)}var Qe=[\"fullscreenchange\",\"MSFullscreenChange\",\"mozfullscreenchange\",\"webkitfullscreenchange\"],Ze=(0,ce.arrayOf)((0,ce.shape)({srcSet:ce.string,media:ce.string}));function et(e){var t=parseInt(e.keyCode||e.which||0,10);return 66===t||62===t}var tt=function(e){!function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&Ke(e,t)}(l,e);var n,i,r,o,s=(r=l,o=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=$e(r);if(o){var n=$e(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Ve(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,l),Ye(Xe(t=s.call(this,e)),\"onBulletClick\",(function(e,n){var i=t.props,r=i.onBulletClick,a=i.items,o=t.state.currentIndex;e.target.blur(),o!==n&&(2===a.length?t.slideToIndexWithStyleReset(n,e):t.slideToIndex(n,e)),r&&r(e,n)})),t.state={currentIndex:e.startIndex,thumbsTranslate:0,thumbsSwipedTranslate:0,currentSlideOffset:0,galleryWidth:0,thumbnailsWrapperWidth:0,thumbnailsWrapperHeight:0,thumbsStyle:{transition:\"all \".concat(e.slideDuration,\"ms ease-out\")},isFullscreen:!1,isSwipingThumbnail:!1,isPlaying:!1},t.loadedImages={},t.imageGallery=a().createRef(),t.thumbnailsWrapper=a().createRef(),t.thumbnails=a().createRef(),t.imageGallerySlideWrapper=a().createRef(),t.handleImageLoaded=t.handleImageLoaded.bind(Xe(t)),t.handleKeyDown=t.handleKeyDown.bind(Xe(t)),t.handleMouseDown=t.handleMouseDown.bind(Xe(t)),t.handleResize=t.handleResize.bind(Xe(t)),t.handleTouchMove=t.handleTouchMove.bind(Xe(t)),t.handleOnSwiped=t.handleOnSwiped.bind(Xe(t)),t.handleScreenChange=t.handleScreenChange.bind(Xe(t)),t.handleSwiping=t.handleSwiping.bind(Xe(t)),t.handleThumbnailSwiping=t.handleThumbnailSwiping.bind(Xe(t)),t.handleOnThumbnailSwiped=t.handleOnThumbnailSwiped.bind(Xe(t)),t.onThumbnailMouseLeave=t.onThumbnailMouseLeave.bind(Xe(t)),t.handleImageError=t.handleImageError.bind(Xe(t)),t.pauseOrPlay=t.pauseOrPlay.bind(Xe(t)),t.renderThumbInner=t.renderThumbInner.bind(Xe(t)),t.renderItem=t.renderItem.bind(Xe(t)),t.slideLeft=t.slideLeft.bind(Xe(t)),t.slideRight=t.slideRight.bind(Xe(t)),t.toggleFullScreen=t.toggleFullScreen.bind(Xe(t)),t.togglePlay=t.togglePlay.bind(Xe(t)),t.unthrottledSlideToIndex=t.slideToIndex,t.slideToIndex=_(t.unthrottledSlideToIndex,e.slideDuration,{trailing:!1}),e.lazyLoad&&(t.lazyLoaded=[]),t}return n=l,i=[{key:\"componentDidMount\",value:function(){var e=this.props,t=e.autoPlay,n=e.useWindowKeyDown;t&&this.play(),n?window.addEventListener(\"keydown\",this.handleKeyDown):this.imageGallery.current.addEventListener(\"keydown\",this.handleKeyDown),window.addEventListener(\"mousedown\",this.handleMouseDown),window.addEventListener(\"touchmove\",this.handleTouchMove,{passive:!1}),this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper),this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper),this.addScreenChangeEvent()}},{key:\"componentDidUpdate\",value:function(e,t){var n=this.props,i=n.items,r=n.lazyLoad,a=n.slideDuration,o=n.slideInterval,s=n.startIndex,l=n.thumbnailPosition,u=n.showThumbnails,c=n.useWindowKeyDown,h=this.state,d=h.currentIndex,p=h.isPlaying,f=e.items.length!==i.length,m=!M()(e.items,i),b=e.startIndex!==s,g=e.thumbnailPosition!==l,v=e.showThumbnails!==u;o===e.slideInterval&&a===e.slideDuration||p&&(this.pause(),this.play()),g&&(this.removeResizeObserver(),this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper),this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper)),v&&u&&this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper),v&&!u&&this.removeThumbnailsResizeObserver(),(f||v)&&this.handleResize(),t.currentIndex!==d&&this.slideThumbnailBar(),e.slideDuration!==a&&(this.slideToIndex=_(this.unthrottledSlideToIndex,a,{trailing:!1})),!r||e.lazyLoad&&!m||(this.lazyLoaded=[]),c!==e.useWindowKeyDown&&(c?(this.imageGallery.current.removeEventListener(\"keydown\",this.handleKeyDown),window.addEventListener(\"keydown\",this.handleKeyDown)):(window.removeEventListener(\"keydown\",this.handleKeyDown),this.imageGallery.current.addEventListener(\"keydown\",this.handleKeyDown))),(b||m)&&this.setState({currentIndex:s,slideStyle:{transition:\"none\"}})}},{key:\"componentWillUnmount\",value:function(){var e=this.props.useWindowKeyDown;window.removeEventListener(\"mousedown\",this.handleMouseDown),window.removeEventListener(\"touchmove\",this.handleTouchMove),this.removeScreenChangeEvent(),this.removeResizeObserver(),this.playPauseIntervalId&&(window.clearInterval(this.playPauseIntervalId),this.playPauseIntervalId=null),this.transitionTimer&&window.clearTimeout(this.transitionTimer),e?window.removeEventListener(\"keydown\",this.handleKeyDown):this.imageGallery.current.removeEventListener(\"keydown\",this.handleKeyDown)}},{key:\"onSliding\",value:function(){var e=this,t=this.state,n=t.currentIndex,i=t.isTransitioning,r=this.props,a=r.onSlide,o=r.slideDuration;this.transitionTimer=window.setTimeout((function(){i&&(e.setState({isTransitioning:!i,isSwipingThumbnail:!1}),a&&a(n))}),o+50)}},{key:\"onThumbnailClick\",value:function(e,t){var n=this.props,i=n.onThumbnailClick,r=n.items,a=this.state.currentIndex;e.target.parentNode.parentNode.blur(),a!==t&&(2===r.length?this.slideToIndexWithStyleReset(t,e):this.slideToIndex(t,e)),i&&i(e,t)}},{key:\"onThumbnailMouseOver\",value:function(e,t){var n=this;this.thumbnailMouseOverTimer&&(window.clearTimeout(this.thumbnailMouseOverTimer),this.thumbnailMouseOverTimer=null),this.thumbnailMouseOverTimer=window.setTimeout((function(){n.slideToIndex(t),n.pause()}),300)}},{key:\"onThumbnailMouseLeave\",value:function(){if(this.thumbnailMouseOverTimer){var e=this.props.autoPlay;window.clearTimeout(this.thumbnailMouseOverTimer),this.thumbnailMouseOverTimer=null,e&&this.play()}}},{key:\"setThumbsTranslate\",value:function(e){this.setState({thumbsTranslate:e})}},{key:\"setModalFullscreen\",value:function(e){var t=this.props.onScreenChange;this.setState({modalFullscreen:e}),t&&t(e)}},{key:\"getThumbsTranslate\",value:function(e){var t,n=this.props,i=n.disableThumbnailScroll,r=n.items,a=this.state,o=a.thumbnailsWrapperWidth,s=a.thumbnailsWrapperHeight,l=this.thumbnails&&this.thumbnails.current;if(i)return 0;if(l){if(this.isThumbnailVertical()){if(l.scrollHeight<=s)return 0;t=l.scrollHeight-s}else{if(l.scrollWidth<=o||o<=0)return 0;t=l.scrollWidth-o}return e*(t/(r.length-1))}return 0}},{key:\"getThumbnailPositionClassName\",value:function(e){switch(e){case\"left\":e=\" \".concat(\"image-gallery-thumbnails-left\");break;case\"right\":e=\" \".concat(\"image-gallery-thumbnails-right\");break;case\"bottom\":e=\" \".concat(\"image-gallery-thumbnails-bottom\");break;case\"top\":e=\" \".concat(\"image-gallery-thumbnails-top\")}return e}},{key:\"getAlignmentClassName\",value:function(e){var t=this.state.currentIndex,n=this.props,i=n.infinite,r=n.items,a=\"\",o=\"image-gallery-left\",s=\"image-gallery-right\";switch(e){case t-1:a=\" \".concat(o);break;case t:a=\" \".concat(\"image-gallery-center\");break;case t+1:a=\" \".concat(s)}return r.length>=3&&i&&(0===e&&t===r.length-1?a=\" \".concat(s):e===r.length-1&&0===t&&(a=\" \".concat(o))),a}},{key:\"getTranslateXForTwoSlide\",value:function(e){var t=this.state,n=t.currentIndex,i=t.currentSlideOffset,r=t.previousIndex,a=n!==r,o=0===e&&0===r,s=1===e&&1===r,l=0===e&&1===n,u=1===e&&0===n,c=0===i,h=-100*n+100*e+i;return i>0?this.direction=\"left\":i<0&&(this.direction=\"right\"),u&&i>0&&(h=-100+i),l&&i<0&&(h=100+i),a?o&&c&&\"left\"===this.direction?h=100:s&&c&&\"right\"===this.direction&&(h=-100):(u&&c&&\"left\"===this.direction&&(h=-100),l&&c&&\"right\"===this.direction&&(h=100)),h}},{key:\"getThumbnailBarHeight\",value:function(){return this.isThumbnailVertical()?{height:this.state.gallerySlideWrapperHeight}:{}}},{key:\"getSlideStyle\",value:function(e){var t=this.state,n=t.currentIndex,i=t.currentSlideOffset,r=t.slideStyle,a=this.props,o=a.infinite,s=a.items,l=a.useTranslate3D,u=a.isRTL,c=-100*n,h=s.length-1,d=(c+100*e)*(u?-1:1)+i;o&&s.length>2&&(0===n&&e===h?d=-100*(u?-1:1)+i:n===h&&0===e&&(d=100*(u?-1:1)+i)),o&&2===s.length&&(d=this.getTranslateXForTwoSlide(e));var p=\"translate(\".concat(d,\"%, 0)\");return l&&(p=\"translate3d(\".concat(d,\"%, 0, 0)\")),qe({display:this.isSlideVisible(e)?\"inherit\":\"none\",WebkitTransform:p,MozTransform:p,msTransform:p,OTransform:p,transform:p},r)}},{key:\"getCurrentIndex\",value:function(){return this.state.currentIndex}},{key:\"getThumbnailStyle\",value:function(){var e,t=this.props,n=t.useTranslate3D,i=t.isRTL,r=this.state,a=r.thumbsTranslate,o=r.thumbsStyle,s=i?-1*a:a;return this.isThumbnailVertical()?(e=\"translate(0, \".concat(a,\"px)\"),n&&(e=\"translate3d(0, \".concat(a,\"px, 0)\"))):(e=\"translate(\".concat(s,\"px, 0)\"),n&&(e=\"translate3d(\".concat(s,\"px, 0, 0)\"))),qe({WebkitTransform:e,MozTransform:e,msTransform:e,OTransform:e,transform:e},o)}},{key:\"getSlideItems\",value:function(){var e=this,n=this.state.currentIndex,i=this.props,r=i.items,o=i.slideOnThumbnailOver,s=i.onClick,l=i.lazyLoad,u=i.onTouchMove,c=i.onTouchEnd,h=i.onTouchStart,d=i.onMouseOver,p=i.onMouseLeave,f=i.renderItem,m=i.renderThumbInner,b=i.showThumbnails,g=i.showBullets,v=[],y=[],w=[];return r.forEach((function(i,r){var S=e.getAlignmentClassName(r),T=i.originalClass?\" \".concat(i.originalClass):\"\",O=i.thumbnailClass?\" \".concat(i.thumbnailClass):\"\",E=i.renderItem||f||e.renderItem,k=i.renderThumbInner||m||e.renderThumbInner,I=!l||S||e.lazyLoaded[r];I&&l&&!e.lazyLoaded[r]&&(e.lazyLoaded[r]=!0);var j=e.getSlideStyle(r),x=a().createElement(\"div\",{\"aria-label\":\"Go to Slide \".concat(r+1),key:\"slide-\".concat(r),tabIndex:\"-1\",className:\"image-gallery-slide \".concat(S,\" \").concat(T),style:j,onClick:s,onKeyUp:e.handleSlideKeyUp,onTouchMove:u,onTouchEnd:c,onTouchStart:h,onMouseOver:d,onFocus:d,onMouseLeave:p,role:\"button\"},I?E(i):a().createElement(\"div\",{style:{height:\"100%\"}}));if(v.push(x),b&&i.thumbnail){var P=t(\"image-gallery-thumbnail\",O,{active:n===r});y.push(a().createElement(\"button\",{key:\"thumbnail-\".concat(r),type:\"button\",tabIndex:\"0\",\"aria-pressed\":n===r?\"true\":\"false\",\"aria-label\":\"Go to Slide \".concat(r+1),className:P,onMouseLeave:o?e.onThumbnailMouseLeave:null,onMouseOver:function(t){return e.handleThumbnailMouseOver(t,r)},onFocus:function(t){return e.handleThumbnailMouseOver(t,r)},onKeyUp:function(t){return e.handleThumbnailKeyUp(t,r)},onClick:function(t){return e.onThumbnailClick(t,r)}},k(i)))}if(g){var _=t(\"image-gallery-bullet\",i.bulletClass,{active:n===r});w.push(a().createElement(\"button\",{type:\"button\",key:\"bullet-\".concat(r),className:_,onClick:function(t){return e.onBulletClick(t,r)},\"aria-pressed\":n===r?\"true\":\"false\",\"aria-label\":\"Go to Slide \".concat(r+1)}))}})),{slides:v,thumbnails:y,bullets:w}}},{key:\"ignoreIsTransitioning\",value:function(){var e=this.props.items,t=this.state,n=t.previousIndex,i=t.currentIndex,r=e.length-1;return Math.abs(n-i)>1&&!(0===n&&i===r)&&!(n===r&&0===i)}},{key:\"isFirstOrLastSlide\",value:function(e){return e===this.props.items.length-1||0===e}},{key:\"slideIsTransitioning\",value:function(e){var t=this.state,n=t.isTransitioning,i=t.previousIndex,r=t.currentIndex;return n&&!(e===i||e===r)}},{key:\"isSlideVisible\",value:function(e){return!this.slideIsTransitioning(e)||this.ignoreIsTransitioning()&&!this.isFirstOrLastSlide(e)}},{key:\"slideThumbnailBar\",value:function(){var e=this.state,t=e.currentIndex,n=e.isSwipingThumbnail,i=-this.getThumbsTranslate(t);n||(0===t?this.setState({thumbsTranslate:0,thumbsSwipedTranslate:0}):this.setState({thumbsTranslate:i,thumbsSwipedTranslate:i}))}},{key:\"canSlide\",value:function(){return this.props.items.length>=2}},{key:\"canSlideLeft\",value:function(){return this.props.infinite||this.canSlidePrevious()}},{key:\"canSlideRight\",value:function(){return this.props.infinite||this.canSlideNext()}},{key:\"canSlidePrevious\",value:function(){return this.state.currentIndex>0}},{key:\"canSlideNext\",value:function(){return this.state.currentIndex<this.props.items.length-1}},{key:\"handleSwiping\",value:function(e){var t=e.event,n=e.absX,i=e.dir,r=this.props,a=r.disableSwipe,o=r.stopPropagation,s=this.state,l=s.galleryWidth,u=s.isTransitioning,c=s.swipingUpDown,h=s.swipingLeftRight;if(i!==ne&&i!==ie&&!c||h){if(i!==ee&&i!==te||h||this.setState({swipingLeftRight:!0}),!a){var d=this.props.swipingTransitionDuration;if(o&&t.preventDefault(),u)this.setState({currentSlideOffset:0});else{var p=i===te?1:-1,f=n/l*100;Math.abs(f)>=100&&(f=100);var m={transition:\"transform \".concat(d,\"ms ease-out\")};this.setState({currentSlideOffset:p*f,slideStyle:m})}}}else c||this.setState({swipingUpDown:!0})}},{key:\"handleThumbnailSwiping\",value:function(e){var t=e.event,n=e.absX,i=e.absY,r=e.dir,a=this.props,o=a.stopPropagation,s=a.swipingThumbnailTransitionDuration,l=this.state,u=l.thumbsSwipedTranslate,c=l.thumbnailsWrapperHeight,h=l.thumbnailsWrapperWidth,d=l.swipingUpDown,p=l.swipingLeftRight;if(this.isThumbnailVertical()){if((r===ee||r===te||p)&&!d)return void(p||this.setState({swipingLeftRight:!0}));r!==ne&&r!==ie||d||this.setState({swipingUpDown:!0})}else{if((r===ne||r===ie||d)&&!p)return void(d||this.setState({swipingUpDown:!0}));r!==ee&&r!==te||p||this.setState({swipingLeftRight:!0})}var f,m,b,g,v,y=this.thumbnails&&this.thumbnails.current;if(this.isThumbnailVertical()?(f=u+(r===ie?i:-i),m=y.scrollHeight-c+20,b=Math.abs(f)>m,g=f>20,v=y.scrollHeight<=c):(f=u+(r===te?n:-n),m=y.scrollWidth-h+20,b=Math.abs(f)>m,g=f>20,v=y.scrollWidth<=h),!v&&(r!==ee&&r!==ne||!b)&&(r!==te&&r!==ie||!g)){o&&t.stopPropagation();var w={transition:\"transform \".concat(s,\"ms ease-out\")};this.setState({thumbsTranslate:f,thumbsStyle:w})}}},{key:\"handleOnThumbnailSwiped\",value:function(){var e=this.state.thumbsTranslate,t=this.props.slideDuration;this.resetSwipingDirection(),this.setState({isSwipingThumbnail:!0,thumbsSwipedTranslate:e,thumbsStyle:{transition:\"all \".concat(t,\"ms ease-out\")}})}},{key:\"sufficientSwipe\",value:function(){var e=this.state.currentSlideOffset,t=this.props.swipeThreshold;return Math.abs(e)>t}},{key:\"resetSwipingDirection\",value:function(){var e=this.state,t=e.swipingUpDown,n=e.swipingLeftRight;t&&this.setState({swipingUpDown:!1}),n&&this.setState({swipingLeftRight:!1})}},{key:\"handleOnSwiped\",value:function(e){var t=e.event,n=e.dir,i=e.velocity,r=this.props,a=r.disableSwipe,o=r.stopPropagation,s=r.flickThreshold;if(!a){var l=this.props.isRTL;o&&t.stopPropagation(),this.resetSwipingDirection();var u=(n===ee?1:-1)*(l?-1:1),c=i>s&&!(n===ne||n===ie);this.handleOnSwipedTo(u,c)}}},{key:\"handleOnSwipedTo\",value:function(e,t){var n=this.state,i=n.currentIndex,r=n.isTransitioning,a=i;!this.sufficientSwipe()&&!t||r||(a+=e),(-1===e&&!this.canSlideLeft()||1===e&&!this.canSlideRight())&&(a=i),this.unthrottledSlideToIndex(a)}},{key:\"handleTouchMove\",value:function(e){this.state.swipingLeftRight&&e.preventDefault()}},{key:\"handleMouseDown\",value:function(){this.imageGallery.current.classList.add(\"image-gallery-using-mouse\")}},{key:\"handleKeyDown\",value:function(e){var t=this.props,n=t.disableKeyDown,i=t.useBrowserFullscreen,r=this.state.isFullscreen;if(this.imageGallery.current.classList.remove(\"image-gallery-using-mouse\"),!n)switch(parseInt(e.keyCode||e.which||0,10)){case 37:this.canSlideLeft()&&!this.playPauseIntervalId&&this.slideLeft(e);break;case 39:this.canSlideRight()&&!this.playPauseIntervalId&&this.slideRight(e);break;case 27:r&&!i&&this.exitFullScreen()}}},{key:\"handleImageError\",value:function(e){var t=this.props.onErrorImageURL;t&&-1===e.target.src.indexOf(t)&&(e.target.src=t)}},{key:\"removeThumbnailsResizeObserver\",value:function(){this.resizeThumbnailWrapperObserver&&this.thumbnailsWrapper&&this.thumbnailsWrapper.current&&(this.resizeThumbnailWrapperObserver.unobserve(this.thumbnailsWrapper.current),this.resizeThumbnailWrapperObserver=null)}},{key:\"removeResizeObserver\",value:function(){this.resizeSlideWrapperObserver&&this.imageGallerySlideWrapper&&this.imageGallerySlideWrapper.current&&(this.resizeSlideWrapperObserver.unobserve(this.imageGallerySlideWrapper.current),this.resizeSlideWrapperObserver=null),this.removeThumbnailsResizeObserver()}},{key:\"handleResize\",value:function(){var e=this.state.currentIndex;this.imageGallery&&(this.imageGallery&&this.imageGallery.current&&this.setState({galleryWidth:this.imageGallery.current.offsetWidth}),this.imageGallerySlideWrapper&&this.imageGallerySlideWrapper.current&&this.setState({gallerySlideWrapperHeight:this.imageGallerySlideWrapper.current.offsetHeight}),this.setThumbsTranslate(-this.getThumbsTranslate(e)))}},{key:\"initSlideWrapperResizeObserver\",value:function(e){var t=this;e&&!e.current||(this.resizeSlideWrapperObserver=new Z(P((function(e){e&&e.forEach((function(e){t.setState({thumbnailsWrapperWidth:e.contentRect.width},t.handleResize)}))}),50)),this.resizeSlideWrapperObserver.observe(e.current))}},{key:\"initThumbnailWrapperResizeObserver\",value:function(e){var t=this;e&&!e.current||(this.resizeThumbnailWrapperObserver=new Z(P((function(e){e&&e.forEach((function(e){t.setState({thumbnailsWrapperHeight:e.contentRect.height},t.handleResize)}))}),50)),this.resizeThumbnailWrapperObserver.observe(e.current))}},{key:\"toggleFullScreen\",value:function(){this.state.isFullscreen?this.exitFullScreen():this.fullScreen()}},{key:\"togglePlay\",value:function(){this.playPauseIntervalId?this.pause():this.play()}},{key:\"handleScreenChange\",value:function(){var e=this.props,t=e.onScreenChange,n=e.useBrowserFullscreen,i=document.fullscreenElement||document.msFullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement,r=this.imageGallery.current===i;t&&t(r),n&&this.setState({isFullscreen:r})}},{key:\"slideToIndex\",value:function(e,t){var n=this.state,i=n.currentIndex,r=n.isTransitioning,a=this.props,o=a.items,s=a.slideDuration,l=a.onBeforeSlide;if(!r){t&&this.playPauseIntervalId&&(this.pause(!1),this.play(!1));var u=o.length-1,c=e;e<0?c=u:e>u&&(c=0),l&&c!==i&&l(c),this.setState({previousIndex:i,currentIndex:c,isTransitioning:c!==i,currentSlideOffset:0,slideStyle:{transition:\"all \".concat(s,\"ms ease-out\")}},this.onSliding)}}},{key:\"slideLeft\",value:function(e){var t=this.props.isRTL;this.slideTo(e,t?\"right\":\"left\")}},{key:\"slideRight\",value:function(e){var t=this.props.isRTL;this.slideTo(e,t?\"left\":\"right\")}},{key:\"slideTo\",value:function(e,t){var n=this.state,i=n.currentIndex,r=n.isTransitioning,a=this.props.items,o=i+(\"left\"===t?-1:1);r||(2===a.length?this.slideToIndexWithStyleReset(o,e):this.slideToIndex(o,e))}},{key:\"slideToIndexWithStyleReset\",value:function(e,t){var n=this,i=this.state,r=i.currentIndex,a=i.currentSlideOffset;this.setState({currentSlideOffset:a+(r>e?.001:-.001),slideStyle:{transition:\"none\"}},(function(){window.setTimeout((function(){return n.slideToIndex(e,t)}),25)}))}},{key:\"handleThumbnailMouseOver\",value:function(e,t){this.props.slideOnThumbnailOver&&this.onThumbnailMouseOver(e,t)}},{key:\"handleThumbnailKeyUp\",value:function(e,t){et(e)&&this.onThumbnailClick(e,t)}},{key:\"handleSlideKeyUp\",value:function(e){et(e)&&(0,this.props.onClick)(e)}},{key:\"isThumbnailVertical\",value:function(){var e=this.props.thumbnailPosition;return\"left\"===e||\"right\"===e}},{key:\"addScreenChangeEvent\",value:function(){var e=this;Qe.forEach((function(t){document.addEventListener(t,e.handleScreenChange)}))}},{key:\"removeScreenChangeEvent\",value:function(){var e=this;Qe.forEach((function(t){document.removeEventListener(t,e.handleScreenChange)}))}},{key:\"fullScreen\",value:function(){var e=this.props.useBrowserFullscreen,t=this.imageGallery.current;e?t.requestFullscreen?t.requestFullscreen():t.msRequestFullscreen?t.msRequestFullscreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullscreen?t.webkitRequestFullscreen():this.setModalFullscreen(!0):this.setModalFullscreen(!0),this.setState({isFullscreen:!0})}},{key:\"exitFullScreen\",value:function(){var e=this.state.isFullscreen,t=this.props.useBrowserFullscreen;e&&(t?document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen?document.msExitFullscreen():this.setModalFullscreen(!1):this.setModalFullscreen(!1),this.setState({isFullscreen:!1}))}},{key:\"pauseOrPlay\",value:function(){var e=this.props.infinite,t=this.state.currentIndex;e||this.canSlideRight()?this.slideToIndex(t+1):this.pause()}},{key:\"play\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=this.props,n=t.onPlay,i=t.slideInterval,r=t.slideDuration,a=this.state.currentIndex;this.playPauseIntervalId||(this.setState({isPlaying:!0}),this.playPauseIntervalId=window.setInterval(this.pauseOrPlay,Math.max(i,r)),n&&e&&n(a))}},{key:\"pause\",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=this.props.onPause,n=this.state.currentIndex;this.playPauseIntervalId&&(window.clearInterval(this.playPauseIntervalId),this.playPauseIntervalId=null,this.setState({isPlaying:!1}),t&&e&&t(n))}},{key:\"isImageLoaded\",value:function(e){return!!this.loadedImages[e.original]||(this.loadedImages[e.original]=!0,!1)}},{key:\"handleImageLoaded\",value:function(e,t){var n=this.props.onImageLoad;!this.loadedImages[t]&&n&&(this.loadedImages[t]=!0,n(e))}},{key:\"renderItem\",value:function(e){var t=this.state.isFullscreen,n=this.props.onImageError||this.handleImageError;return a().createElement(ge,{description:e.description,fullscreen:e.fullscreen,handleImageLoaded:this.handleImageLoaded,isFullscreen:t,onImageError:n,original:e.original,originalAlt:e.originalAlt,originalHeight:e.originalHeight,originalWidth:e.originalWidth,originalTitle:e.originalTitle,sizes:e.sizes,loading:e.loading,srcSet:e.srcSet})}},{key:\"renderThumbInner\",value:function(e){var t=this.props.onThumbnailError||this.handleImageError;return a().createElement(\"span\",{className:\"image-gallery-thumbnail-inner\"},a().createElement(\"img\",{className:\"image-gallery-thumbnail-image\",src:e.thumbnail,height:e.thumbnailHeight,width:e.thumbnailWidth,alt:e.thumbnailAlt,title:e.thumbnailTitle,loading:e.thumbnailLoading,onError:t}),e.thumbnailLabel&&a().createElement(\"div\",{className:\"image-gallery-thumbnail-label\"},e.thumbnailLabel))}},{key:\"render\",value:function(){var e=this.state,n=e.currentIndex,i=e.isFullscreen,r=e.modalFullscreen,o=e.isPlaying,s=this.props,l=s.additionalClass,u=s.disableThumbnailSwipe,c=s.indexSeparator,h=s.isRTL,d=s.items,p=s.thumbnailPosition,f=s.renderFullscreenButton,m=s.renderCustomControls,b=s.renderLeftNav,g=s.renderRightNav,v=s.showBullets,y=s.showFullscreenButton,w=s.showIndex,S=s.showThumbnails,T=s.showNav,O=s.showPlayButton,E=s.renderPlayPauseButton,k=this.getThumbnailStyle(),I=this.getSlideItems(),j=I.slides,x=I.thumbnails,P=I.bullets,_=t(\"image-gallery-slide-wrapper\",this.getThumbnailPositionClassName(p),{\"image-gallery-rtl\":h}),R=a().createElement(\"div\",{ref:this.imageGallerySlideWrapper,className:_},m&&m(),this.canSlide()?a().createElement(a().Fragment,null,T&&a().createElement(a().Fragment,null,b(this.slideLeft,!this.canSlideLeft()),g(this.slideRight,!this.canSlideRight())),a().createElement(Ae,{className:\"image-gallery-swipe\",delta:0,onSwiping:this.handleSwiping,onSwiped:this.handleOnSwiped},a().createElement(\"div\",{className:\"image-gallery-slides\"},j))):a().createElement(\"div\",{className:\"image-gallery-slides\"},j),O&&E(this.togglePlay,o),v&&a().createElement(\"div\",{className:\"image-gallery-bullets\"},a().createElement(\"div\",{className:\"image-gallery-bullets-container\",role:\"navigation\",\"aria-label\":\"Bullet Navigation\"},P)),y&&f(this.toggleFullScreen,i),w&&a().createElement(\"div\",{className:\"image-gallery-index\"},a().createElement(\"span\",{className:\"image-gallery-index-current\"},n+1),a().createElement(\"span\",{className:\"image-gallery-index-separator\"},c),a().createElement(\"span\",{className:\"image-gallery-index-total\"},d.length))),M=t(\"image-gallery\",l,{\"fullscreen-modal\":r}),L=t(\"image-gallery-content\",this.getThumbnailPositionClassName(p),{fullscreen:i}),D=t(\"image-gallery-thumbnails-wrapper\",this.getThumbnailPositionClassName(p),{\"thumbnails-wrapper-rtl\":!this.isThumbnailVertical()&&h},{\"thumbnails-swipe-horizontal\":!this.isThumbnailVertical()&&!u},{\"thumbnails-swipe-vertical\":this.isThumbnailVertical()&&!u});return a().createElement(\"div\",{ref:this.imageGallery,className:M,\"aria-live\":\"polite\"},a().createElement(\"div\",{className:L},(\"bottom\"===p||\"right\"===p)&&R,S&&x.length>0?a().createElement(Ae,{className:D,delta:0,onSwiping:!u&&this.handleThumbnailSwiping,onSwiped:!u&&this.handleOnThumbnailSwiped},a().createElement(\"div\",{className:\"image-gallery-thumbnails\",ref:this.thumbnailsWrapper,style:this.getThumbnailBarHeight()},a().createElement(\"nav\",{ref:this.thumbnails,className:\"image-gallery-thumbnails-container\",style:k,\"aria-label\":\"Thumbnail Navigation\"},x))):null,(\"top\"===p||\"left\"===p)&&R))}}],i&&He(n.prototype,i),Object.defineProperty(n,\"prototype\",{writable:!1}),l}(a().Component);tt.propTypes={flickThreshold:ce.number,items:(0,ce.arrayOf)((0,ce.shape)({bulletClass:ce.string,bulletOnClick:ce.func,description:ce.string,original:ce.string,originalHeight:ce.number,originalWidth:ce.number,loading:ce.string,thumbnailHeight:ce.number,thumbnailWidth:ce.number,thumbnailLoading:ce.string,fullscreen:ce.string,originalAlt:ce.string,originalTitle:ce.string,thumbnail:ce.string,thumbnailAlt:ce.string,thumbnailLabel:ce.string,thumbnailTitle:ce.string,originalClass:ce.string,thumbnailClass:ce.string,renderItem:ce.func,renderThumbInner:ce.func,imageSet:Ze,srcSet:ce.string,sizes:ce.string})).isRequired,showNav:ce.bool,autoPlay:ce.bool,lazyLoad:ce.bool,infinite:ce.bool,showIndex:ce.bool,showBullets:ce.bool,showThumbnails:ce.bool,showPlayButton:ce.bool,showFullscreenButton:ce.bool,disableThumbnailScroll:ce.bool,disableKeyDown:ce.bool,disableSwipe:ce.bool,disableThumbnailSwipe:ce.bool,useBrowserFullscreen:ce.bool,onErrorImageURL:ce.string,indexSeparator:ce.string,thumbnailPosition:(0,ce.oneOf)([\"top\",\"bottom\",\"left\",\"right\"]),startIndex:ce.number,slideDuration:ce.number,slideInterval:ce.number,slideOnThumbnailOver:ce.bool,swipeThreshold:ce.number,swipingTransitionDuration:ce.number,swipingThumbnailTransitionDuration:ce.number,onSlide:ce.func,onBeforeSlide:ce.func,onScreenChange:ce.func,onPause:ce.func,onPlay:ce.func,onClick:ce.func,onImageLoad:ce.func,onImageError:ce.func,onTouchMove:ce.func,onTouchEnd:ce.func,onTouchStart:ce.func,onMouseOver:ce.func,onMouseLeave:ce.func,onBulletClick:ce.func,onThumbnailError:ce.func,onThumbnailClick:ce.func,renderCustomControls:ce.func,renderLeftNav:ce.func,renderRightNav:ce.func,renderPlayPauseButton:ce.func,renderFullscreenButton:ce.func,renderItem:ce.func,renderThumbInner:ce.func,stopPropagation:ce.bool,additionalClass:ce.string,useTranslate3D:ce.bool,isRTL:ce.bool,useWindowKeyDown:ce.bool},tt.defaultProps={onErrorImageURL:\"\",additionalClass:\"\",showNav:!0,autoPlay:!1,lazyLoad:!1,infinite:!0,showIndex:!1,showBullets:!1,showThumbnails:!0,showPlayButton:!0,showFullscreenButton:!0,disableThumbnailScroll:!1,disableKeyDown:!1,disableSwipe:!1,disableThumbnailSwipe:!1,useTranslate3D:!0,isRTL:!1,useBrowserFullscreen:!0,flickThreshold:.4,stopPropagation:!1,indexSeparator:\" / \",thumbnailPosition:\"bottom\",startIndex:0,slideDuration:450,swipingTransitionDuration:0,swipingThumbnailTransitionDuration:0,onSlide:null,onBeforeSlide:null,onScreenChange:null,onPause:null,onPlay:null,onClick:null,onImageLoad:null,onImageError:null,onTouchMove:null,onTouchEnd:null,onTouchStart:null,onMouseOver:null,onMouseLeave:null,onBulletClick:null,onThumbnailError:null,onThumbnailClick:null,renderCustomControls:null,renderThumbInner:null,renderItem:null,slideInterval:3e3,slideOnThumbnailOver:!1,swipeThreshold:30,renderLeftNav:function(e,t){return a().createElement(Pe,{onClick:e,disabled:t})},renderRightNav:function(e,t){return a().createElement(Re,{onClick:e,disabled:t})},renderPlayPauseButton:function(e,t){return a().createElement(Le,{onClick:e,isPlaying:t})},renderFullscreenButton:function(e,t){return a().createElement(je,{onClick:e,isFullscreen:t})},useWindowKeyDown:!0};const nt=tt})(),r})()));","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === matches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized: boolean;\n  let hasLazyRoutes = initialMatches.some((m) => m.route.lazy);\n  let hasLoaders = initialMatches.some((m) => m.route.loader);\n  if (hasLazyRoutes) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!hasLoaders) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    initialized = initialMatches.every(\n      (m) =>\n        m.route.loader &&\n        m.route.loader.hydrate !== true &&\n        ((loaderData && loaderData[m.route.id] !== undefined) ||\n          (errors && errors[m.route.id] !== undefined))\n    );\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        future.v7_relativeSplatPath\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingError || null,\n          ...(pendingActionData ? { actionData: pendingActionData } : {}),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since iot's not a \"navigation\"\n    if (\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration)\n    ) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(\n        {\n          navigation: loadingNavigation,\n          ...(actionData\n            ? Object.keys(actionData).length === 0\n              ? { actionData: null }\n              : { actionData }\n            : {}),\n          ...(revalidatingFetchers.length > 0\n            ? { fetchers: new Map(state.fetchers) }\n            : {}),\n        },\n        {\n          flushSync,\n        }\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename,\n      future.v7_relativeSplatPath\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(state, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename,\n      future.v7_relativeSplatPath\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          future.v7_relativeSplatPath\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        future.v7_relativeSplatPath,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          future.v7_relativeSplatPath,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  v7_relativeSplatPath: boolean,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location,\n          v7_relativeSplatPath\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this navigation's state updates\n   */\n  unstable_flushSync?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={{\n                  v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n                }}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <DataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCrowStampSvg(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_31_8)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.3113 96.8968C64.3694 96.8029 64.4503 96.7261 64.4919 96.7261C64.5329 96.7261 64.567 96.8029 64.567 96.8968C64.567 96.9907 64.486 97.0676 64.3864 97.0676H64.2059L64.3113 96.8968ZM74.4513 96.716V96.5351L74.6217 96.6407C74.7155 96.6989 74.7922 96.78 74.7922 96.8216C74.7922 96.8627 74.7155 96.8968 74.6217 96.8968C74.528 96.8968 74.4513 96.8152 74.4513 96.716ZM63.7148 95.602V95.332L63.9172 95.3993C64.0285 95.4366 64.15 95.5582 64.1872 95.6697L64.2543 95.8725H63.7148V95.602ZM81.3534 95.7018L81.2479 95.531H81.429C81.528 95.531 81.609 95.6079 81.609 95.7018C81.609 95.7957 81.5749 95.8725 81.5339 95.8725C81.4924 95.8725 81.4114 95.7957 81.3534 95.7018ZM14.719 95.531L14.6135 95.3603L14.7195 95.1896L14.825 95.0178L15.1605 95.1976L15.4955 95.3774L15.3953 95.5396C15.2638 95.753 14.8521 95.7476 14.719 95.531ZM65.4191 95.3603C65.4191 95.315 65.437 95.2716 65.469 95.2396C65.5009 95.2076 65.5443 95.1896 65.5895 95.1896C65.6347 95.1896 65.678 95.2076 65.71 95.2396C65.7419 95.2716 65.7599 95.315 65.7599 95.3603C65.7599 95.4056 65.7419 95.449 65.71 95.481C65.678 95.513 65.6347 95.531 65.5895 95.531C65.5443 95.531 65.5009 95.513 65.469 95.481C65.437 95.449 65.4191 95.4056 65.4191 95.3603ZM10.2029 94.9335L9.99089 94.6774H10.5437V94.9335C10.5437 95.0743 10.5149 95.1896 10.4798 95.1896C10.4441 95.1896 10.32 95.0743 10.2029 94.9335ZM16.551 95.0765C16.2586 94.9586 16.2837 94.735 16.6027 94.6123L16.8668 94.5109L16.7513 94.6982L16.6352 94.8866L16.87 95.0354L17.1049 95.1848L16.9345 95.1736C16.803 95.1581 16.6741 95.1254 16.551 95.0765ZM12.4662 94.7894C12.3986 94.6806 12.3661 94.4192 12.3933 94.2079L12.4428 93.8238H11.7366V93.6531C11.7366 93.6078 11.7546 93.5644 11.7866 93.5323C11.8185 93.5003 11.8619 93.4823 11.9071 93.4823C11.9523 93.4823 11.9956 93.4644 12.0276 93.4323C12.0595 93.4003 12.0775 93.3569 12.0775 93.3116V93.1409H11.2254V92.8096C11.2254 92.6271 11.154 92.434 11.0667 92.3801L10.908 92.2819L10.7961 92.4628L10.6843 92.6436L10.8781 92.8773L11.0715 93.1105L10.8702 93.2348L10.6694 93.3596L10.5176 93.0875C10.4033 92.8983 10.2678 92.7227 10.1139 92.5642C9.97545 92.4254 9.86201 92.1907 9.86201 92.0434C9.86201 91.7233 9.58561 91.686 9.46365 91.9885L9.37791 92.2019L9.36406 91.9885C9.34489 91.6833 9.00991 91.7233 9.00991 92.0312C9.00991 92.172 8.93322 92.2873 8.83949 92.2873C8.74576 92.2873 8.66907 92.172 8.66907 92.0312C8.66907 91.678 8.439 91.7111 8.0726 92.1165C7.90271 92.3043 7.66093 92.458 7.53471 92.458H7.30571V92.2398C7.30571 92.1197 7.15393 91.8914 6.96859 91.7324L6.63095 91.4432L6.7348 91.1722L6.83865 90.9012L6.47597 90.8062L6.11276 90.7107V90.0961L6.32579 90.0097L6.53882 89.9233L6.28319 89.7392L6.02755 89.5557L6.21022 89.4276C6.31141 89.3572 6.44189 89.1678 6.501 89.0062L6.60911 88.7127L6.43763 88.6071L6.26667 88.5009L6.44828 88.2822L6.62988 88.0624L6.51964 87.7748L6.4094 87.4872L6.18999 87.5715L5.97057 87.6564L5.8827 87.4269L5.79482 87.1975L6.12448 86.8988C6.53242 86.5291 6.54041 86.3599 6.15537 86.2586L5.85713 86.1807L6.15537 86.1609C6.48236 86.1396 6.55426 85.8819 6.28052 85.7128L6.10744 85.6055L6.20809 85.4039C6.26295 85.2929 6.2065 85.3254 6.08241 85.4759L5.85607 85.7501L5.34481 85.716C4.49484 85.66 4.4517 85.6413 4.35956 85.2876L4.27009 84.9461H4.91982V85.4583H5.45398L5.34587 85.1168L5.23776 84.7754H6.14099L6.07069 84.562C6.03235 84.4446 5.81506 84.2552 5.58819 84.1405L5.17598 83.9335L5.04551 84.2264L4.91503 84.5193L4.97627 84.0642L5.03752 83.6091L4.6807 83.4352L4.32335 83.2618L4.78029 83.2506L5.23776 83.2389L5.34055 83.5627L5.4428 83.8866L5.77831 83.7991L6.11276 83.711V82.7267H5.6015V82.1782L5.85713 82.2764L6.11276 82.3746L6.1101 82.2519C6.10637 82.0785 5.77778 81.5882 5.77459 81.7509L5.77192 81.8853L5.44493 81.7093L5.11794 81.5343L5.03166 81.7082L4.94538 81.8816L4.99225 81.6639L5.03965 81.4463L5.36291 81.4596C5.54132 81.4665 5.87844 81.5268 6.11276 81.5935L6.53882 81.7146L6.05578 81.4393L5.57221 81.164L5.85341 80.8525L6.13513 80.5414L5.96791 80.4379L5.80121 80.3344L5.70163 80.5489L5.60204 80.7634L5.66009 80.1925L5.7176 79.6216L5.32404 79.4418L4.93047 79.262L5.02048 79.1164L5.11048 78.9708H4.5875L4.73555 78.5808L4.88361 78.1902L4.67165 77.9005L4.46022 77.6103L4.30844 77.7357C4.22483 77.805 4.30205 77.6882 4.47939 77.4769C4.65674 77.2656 4.89639 77.0928 5.01196 77.0928H5.22072L5.31285 76.7417L5.40445 76.3901L5.20474 76.5539L5.00503 76.7172L4.7936 76.4872L4.58218 76.2573L4.751 76.1527C4.84367 76.0951 4.91982 75.9399 4.91982 75.8075V75.5675L4.46182 75.3274L4.00434 75.0868L4.37714 74.8536L4.7494 74.6205V73.8287L4.89532 73.9194L5.04071 74.0091L5.03486 73.5449C5.03113 73.2899 5.09237 72.9372 5.17066 72.7622L5.31232 72.4437L4.98852 72.6161L4.66419 72.7884L4.46182 72.5686C4.34998 72.448 4.30524 72.3018 4.36223 72.2453C4.41868 72.1882 4.38459 72.1418 4.2866 72.1418C4.18808 72.1418 4.06719 71.9881 4.01819 71.8003L3.92925 71.4589H4.06932C4.14654 71.4589 4.23974 71.5496 4.27702 71.66L4.34359 71.8606L4.54703 71.7347L4.75047 71.6088L4.59123 71.3111L4.43253 71.0139L4.57366 70.7845L4.71478 70.5551L4.98479 70.6591L5.2548 70.7632L5.16533 70.9974L5.07533 71.2311H5.59192L5.51576 70.6319C5.47316 70.3022 5.36025 69.9544 5.26439 69.8583C5.01675 69.6097 5.0487 69.4102 5.33575 69.4102C5.60097 69.4102 5.86193 69.1018 5.71813 68.9583C5.6702 68.9103 5.47209 68.9556 5.2777 69.0597L4.92461 69.2491L5.10462 68.7748C5.20368 68.5144 5.40339 68.1692 5.54878 68.0086L5.81346 67.7152L5.70855 67.4426L5.60417 67.1689L5.44759 67.266C5.23829 67.3956 4.7494 67.1977 4.7494 66.9832V66.8125L5.17545 66.9192L5.6015 67.0264V66.6583L5.76979 66.7629L5.93862 66.8669L5.82305 66.5596C5.75967 66.39 5.59671 66.168 5.46037 66.0656L5.21273 65.8799L5.50404 65.7679L5.79536 65.6558L5.68725 65.3139L5.5786 64.9713H6.45361V64.6656L5.86246 64.799L5.27078 64.9329L5.09663 64.7233L4.92302 64.5131L5.03486 64.401L5.14669 64.2884H4.72916L4.84473 64.1017L4.95976 63.915L5.36451 63.9923L5.76926 64.0697L5.95566 63.8456C6.05738 63.7229 6.11543 63.4892 6.08401 63.327L6.02755 63.0326L5.7666 63.2934L5.50671 63.5543L5.32883 63.3633C5.23084 63.2582 5.10675 63.0048 5.0535 62.7999L4.95604 62.4265L5.08492 62.3758C5.15575 62.3481 5.25108 61.9244 5.29688 61.4347L5.37996 60.5437L5.2351 60.6339L5.09024 60.7235V60.5421C5.09024 60.4434 5.17013 60.3618 5.26705 60.3618H5.44386L5.39487 59.8923L5.34587 59.4228L5.63079 59.4441L5.91518 59.4655L5.82944 59.2414L5.7437 59.0173L5.24628 58.9074C4.97308 58.8471 4.7494 58.7276 4.7494 58.6407V58.4838H5.17545C5.63452 58.4838 5.68991 58.3728 5.43108 57.9716L5.26599 57.7155L5.26333 57.929L5.26066 58.1424H4.71319L4.8442 57.8436C4.91663 57.6793 4.98266 57.372 4.99012 57.1607L5.00503 56.7766H5.31392L5.02048 56.4522L4.72757 56.1278L4.90864 56.0152C5.00876 55.9534 5.09024 55.7837 5.09024 55.6386V55.3745L4.84313 55.4689L4.59656 55.5639L4.70147 55.2891L4.80692 55.0144L4.43732 55.1115L4.06772 55.208V54.5209L4.32335 54.619L4.57898 54.7172V54.57C4.57898 54.4894 4.70254 54.3752 4.85378 54.3176L5.12805 54.212L5.02953 54.4697L4.93047 54.7279H5.08545C5.17066 54.7279 5.2809 54.6628 5.33043 54.5828L5.41937 54.4376L4.95657 54.0348C4.702 53.8129 4.4746 53.6475 4.45117 53.6678C4.42773 53.6875 4.30897 53.7035 4.18701 53.7035H3.96653L4.03683 53.0996L4.10713 52.4956L3.88771 52.5447L3.6683 52.5938L3.65019 52.048C3.6406 51.7482 3.57723 51.4473 3.50959 51.3795C3.44196 51.3118 3.38657 51.1122 3.38657 50.9362V50.6155L3.68481 50.6657L3.98304 50.7158V49.8622L4.32388 49.9193L4.66472 49.9759L4.4517 49.7571C4.33453 49.6365 4.23867 49.4327 4.23867 49.3042V49.071L4.57951 49.1793L4.92035 49.2876L4.91769 49.063C4.91609 48.9392 4.83781 48.7226 4.74408 48.5818L4.57366 48.3257L4.39791 48.6245C4.30098 48.7888 4.11299 48.9232 3.97985 48.9232H3.73753L3.84245 48.6501L3.94683 48.3764L3.7338 48.2446L3.52078 48.1128L3.72155 47.7383L3.9218 47.3638L4.46342 47.4086L5.00503 47.4539L5.30433 47.7036L5.60363 47.9538L5.7192 47.8381L5.83423 47.7223L5.63292 47.5206C5.52162 47.4091 5.43108 47.2485 5.43108 47.1632V47.0085L5.68671 47.1072L5.94234 47.2053V46.6809L5.5589 46.8121C5.29579 46.8942 5.02421 46.9459 4.7494 46.9663C4.51507 46.9791 4.19287 47.0474 4.0331 47.1178L3.74339 47.2459L3.56445 47.1354C3.46646 47.0746 3.38604 46.9156 3.38604 46.7817V46.5384L4.40856 46.6451L5.43108 46.7524V46.356L5.02314 46.4584L4.61573 46.5608L4.09648 46.2919L3.57723 46.0231L3.60226 45.6923L3.62729 45.3615L3.75031 45.4378C3.917 45.5413 4.11192 45.2009 4.13802 44.7602L4.15932 44.399L3.93032 44.16L3.70025 43.9215L3.7828 43.6052L3.86535 43.2893H3.72528C3.64806 43.2893 3.54581 43.3854 3.49841 43.5027L3.41213 43.7161L3.23106 43.46C3.00739 43.1426 2.99194 42.7772 3.20337 42.7772C3.29071 42.7772 3.48669 42.6518 3.64007 42.4987L3.91754 42.2202L4.01553 42.5958L4.11352 42.9714L4.43146 42.4901L4.74887 42.0089L4.66579 41.7864L4.58271 41.5645L4.75153 41.6685L4.91982 41.7731V41.2609L4.28075 41.1931L3.64167 41.1243L4.02511 40.992C4.23601 40.9189 4.40856 40.7941 4.40856 40.7141V40.5684L4.7068 40.6623L5.00503 40.7562L4.73449 40.5289L4.46395 40.3016L4.54649 40.0456L4.62904 39.7895L4.25571 40.1213L3.88292 40.4532L3.99902 40.1491L4.11565 39.845L3.75883 39.9026L3.40202 39.9602L3.39403 39.8322C3.38892 39.7326 3.38626 39.633 3.38604 39.5334V39.3627H4.23814V39.0367L3.61344 38.9193L2.98875 38.8019L3.24278 38.6125C3.38284 38.5085 3.53888 38.2615 3.59001 38.0636L3.68214 37.704L3.52557 37.4233L3.369 37.1432L3.93138 37.1459L4.49377 37.1486L4.24347 37.307L3.99263 37.466L4.10074 37.5749L4.20885 37.6832L4.56673 37.4911L4.92461 37.299L4.62425 36.8962L4.32335 36.4934L4.11246 36.6668L3.90156 36.8397L3.45847 36.7287L3.01537 36.6167L3.21296 36.3782C3.32213 36.2464 3.61557 36.1152 3.86588 36.0863L4.32069 36.0335L4.37394 35.7481L4.42827 35.4627L4.07784 35.5544L3.72688 35.6467V35.2333L4.11033 35.1308L4.49377 35.0284L4.06772 34.9244L3.64167 34.8203L3.66297 34.035L3.68427 33.2497L3.35249 33.1013L3.02017 32.953L3.3903 32.4819L3.7599 32.0108L3.56818 31.7798L3.37752 31.5493L3.64007 31.448C3.78386 31.393 3.98091 31.1407 4.07677 30.8878L4.25145 30.4279L4.056 30.3073L3.86109 30.1862L4.04961 30.0694C4.31589 29.9045 4.28394 29.482 3.98251 29.18C3.84191 29.0392 3.72688 28.8444 3.72688 28.7473V28.5707L3.98251 28.6689L4.23814 28.7671L4.25838 28.559C4.26903 28.4443 4.25944 28.2741 4.23708 28.1802C4.2108 28.0635 4.19441 27.9449 4.18808 27.8254L4.18116 27.6408L3.78386 27.7171L3.38604 27.7934V28.1044C3.38604 28.2762 3.30402 28.4672 3.20443 28.5286L3.0223 28.6412L2.78371 28.3253C2.45458 27.89 2.47642 27.7534 2.87478 27.7534H3.21562V27.4119H2.56589L2.65856 27.0561C2.70968 26.8603 2.85561 26.6602 2.98342 26.6111C3.11124 26.5621 3.21562 26.4148 3.21562 26.2841V26.0461L3.42864 26.0221C3.54581 26.0088 3.83339 25.9896 4.06772 25.9795L4.49377 25.9608L4.54809 25.5767L4.60295 25.1925H4.21844L4.31589 25.0335L4.41389 24.8746L4.25252 24.7748L4.09115 24.675L3.9889 24.8404L3.88665 25.0069L3.63634 24.9108C3.49841 24.8575 3.38604 24.7358 3.38604 24.6398V24.4648L3.96121 24.5587L4.53691 24.6521L4.70839 24.2759L4.87881 23.8998H4.23814V24.1196C4.23814 24.4307 3.99742 24.3917 3.6683 24.0268C3.37006 23.696 3.29284 23.3146 3.52451 23.3146C3.70771 23.3146 4.40856 22.6551 4.40856 22.4823C4.40856 22.4081 4.29672 22.3473 4.16039 22.3473H3.91221L3.99263 22.4775C4.03683 22.5495 3.99529 22.6562 3.89996 22.7154L3.72688 22.8221V22.2902L3.51385 22.2875C3.39669 22.2865 3.18686 22.2129 3.04733 22.1243L2.79436 21.9642L3.15704 21.6255L3.52024 21.2867L3.64486 21.404L3.76948 21.5219L3.64699 21.1234L3.52451 20.7243L3.87014 20.91C4.35051 21.1677 4.48791 21.141 4.23814 20.8391C4.12098 20.6982 4.06825 20.583 4.11991 20.583C4.1721 20.583 4.14707 20.3482 4.06506 20.0623L3.91594 19.5415L4.23388 19.6429L4.55129 19.7437L4.67324 19.3596L4.79467 18.976L4.61093 18.9147L4.42773 18.8538L4.52146 18.6084L4.6152 18.3635H4.06772V18.6095C4.06772 18.745 4.14441 18.9029 4.23814 18.9611C4.33187 19.0192 4.40856 19.1478 4.40856 19.2481V19.4295L4.17956 19.2396L3.95109 19.0496L3.81209 19.1761L3.67256 19.3025L3.78759 18.983L3.90263 18.6639L3.54847 18.7567L3.19485 18.849L3.09526 18.5892L2.99567 18.3289L3.21296 18.1944C3.33225 18.1203 3.72688 18.0749 4.09009 18.0936L4.7494 18.1272V17.6604L4.58271 17.7639L4.41548 17.8674L4.07145 17.6828C3.88186 17.5814 3.72688 17.4267 3.72688 17.3387V17.1791L3.96014 17.2688L4.1934 17.3584L4.28501 17.0074L4.37661 16.6568L4.23388 16.5683C4.15559 16.5197 4.04322 16.5576 3.98411 16.6536C3.92553 16.7491 3.75244 16.827 3.5996 16.827H3.3216L3.68747 16.4856C3.88878 16.2978 4.09967 16.1441 4.15613 16.1441C4.21311 16.1441 4.43572 16.0107 4.65088 15.848L5.04231 15.5525L4.78828 14.781C4.64821 14.3569 4.47939 13.9487 4.41282 13.8746L4.29193 13.7396L4.06559 14.0122L3.83978 14.2854L4.0576 14.2331L4.27542 14.1808L4.51294 14.8488C4.77709 15.5914 4.73769 15.7664 4.38513 15.4132L4.14973 15.1779L3.93831 15.2484L3.72688 15.3188V15.1683C3.72688 15.0851 3.81741 14.9266 3.92872 14.8151C4.20991 14.5334 4.06186 14.4417 3.21136 14.3691L2.47322 14.3062L2.24795 13.9973L2.02268 13.6889L2.00297 13.9343C1.99232 14.0698 1.99711 14.3152 2.01362 14.4796C2.05303 14.8658 1.92841 14.8562 1.32448 14.4251L0.829733 14.072V13.7615C0.829733 13.5907 0.978318 13.269 1.15992 13.0471L1.48905 12.6443L1.83308 12.8539L2.17712 13.0641L2.26286 12.9254L2.34807 12.7867L2.88916 12.8662L3.42971 12.9457L3.51279 13.2642L3.5964 13.5833L3.8744 13.5779L4.15293 13.5726L4.45915 13.1511L4.76538 12.7296H4.59922C4.50762 12.7296 4.31217 12.8507 4.16465 12.9985L3.89623 13.2674L3.78653 12.9809L3.67735 12.695L3.91487 12.5418L4.15293 12.3882L3.8973 12.2121L3.64167 12.0361L4.06772 12.1284L4.49377 12.2207L4.6839 12.091C4.78828 12.0195 4.93367 11.7698 5.00663 11.5362L5.13977 11.1104L4.85911 11.3436C4.70467 11.4716 4.57898 11.6823 4.57898 11.8115C4.57898 12.0814 4.4256 12.1065 4.08689 11.8915L3.85043 11.7416L4.58111 11.2113L5.31179 10.6809H4.94538C4.55182 10.6809 4.49856 10.5598 4.73076 10.1933L4.87722 9.96176L4.99385 10.1506C5.05776 10.2547 5.23137 10.3395 5.37889 10.3395H5.6473L5.19835 9.98577L4.7494 9.63205V9.30287C4.7494 9.12148 4.8181 8.9737 4.90171 8.9737C4.98533 8.9737 5.10143 8.84992 5.15894 8.6984L5.26439 8.42364L5.00716 8.52234L4.7494 8.62158V8.46632C4.7494 8.38096 4.82609 8.26359 4.91982 8.20544C5.01355 8.14728 5.09024 7.94561 5.09024 7.75728V7.41423L5.43108 7.52254L5.77192 7.63084V7.36355C5.77192 7.2163 5.69523 7.09573 5.6015 7.09573H5.43108L5.4444 6.54087L5.45824 5.98602L5.54345 6.19942C5.59138 6.3168 5.69151 6.41283 5.76713 6.41283C5.95779 6.41283 5.89495 5.84357 5.68671 5.68725L5.51629 5.55921L5.73837 5.41516C5.86086 5.33673 5.94288 5.20175 5.92104 5.11639C5.89974 5.03103 5.97536 4.63516 6.08933 4.23609L6.2965 3.51051H6.55106C6.6906 3.51051 7.05327 3.61401 7.3563 3.74099C7.92188 3.97787 8.57321 4.00508 8.77771 3.79968L8.89328 3.68444L9.09246 3.84983L9.29217 4.01522L9.81941 3.86423C10.1102 3.78047 10.3855 3.75059 10.4324 3.79754C10.4793 3.84396 10.9245 3.90424 11.4219 3.93092L12.3267 3.98L12.5429 3.70258L12.7592 3.42515L12.9908 3.72392C13.2294 4.03122 13.4563 4.12138 13.4206 3.89464C13.37 3.57453 13.46 3.36913 13.689 3.2811L13.9377 3.18507L13.7833 3.59267L13.6283 4.00028L13.918 4.02162C14.0778 4.03282 14.6514 4.05736 15.194 4.07497L16.1798 4.10805L16.3215 3.87864L16.4626 3.65029L17.8664 3.4705L19.2703 3.29124L19.4103 3.51798L19.5499 3.74472L19.7917 3.54359C19.9248 3.43315 20.0665 3.37607 20.1069 3.41661C20.2198 3.52972 21.8218 3.75219 22.3027 3.72178C23.167 3.66736 24.1773 3.47103 24.1773 3.35793C24.1773 3.2939 24.3323 3.22988 24.5219 3.21548L24.8665 3.18987L24.7674 3.34992L24.6683 3.51051L25.2329 3.50944L25.7963 3.50838L26.2565 3.2683L26.7161 3.02768L26.8939 3.24215C26.9914 3.36006 27.0297 3.49824 26.9786 3.54999C26.9275 3.60121 27.1277 3.62415 27.4238 3.60068L27.9622 3.55799L28.1124 3.32111L28.2621 3.0837L28.2647 3.38247L28.2674 3.68124H28.7989L28.7105 3.53825C28.6626 3.45983 28.7387 3.22882 28.8809 3.02555L29.1397 2.65582L29.4699 2.83295C29.9034 3.06503 29.8885 3.24802 29.4177 3.4625L29.0343 3.63802L29.7586 3.61668C30.1569 3.60548 30.4829 3.55746 30.4829 3.51051C30.4839 3.46356 31.1294 3.41448 31.9181 3.40114C32.7069 3.3878 33.4162 3.34085 33.4945 3.29657C33.5717 3.25229 33.838 3.168 34.0846 3.10878L34.5341 3.00207L34.7327 3.24162L34.9314 3.4817L35.4032 3.34619C35.6621 3.2715 36.0354 3.10984 36.2324 2.9866L36.5903 2.76252L36.8726 2.99727L37.1548 3.23202L37.2922 3.01061L37.4291 2.7892L37.5021 3.00901L37.5756 3.22935L37.8136 3.0821C37.9452 3.00101 38.228 2.91564 38.4426 2.8927L38.8335 2.85109V3.23468L39.0838 2.90284L39.3341 2.57153L39.3394 2.87029L39.3447 3.16906H40.0264V2.91298C40.0264 2.5902 40.3007 2.57793 40.4221 2.89537L40.5137 3.13385L41.8739 3.11038L43.234 3.08743L43.1611 2.96899C43.1211 2.90444 43.1664 2.80307 43.2617 2.74385L43.4348 2.63715V3.16053L43.9461 3.05809L44.4573 2.95566L44.4627 3.27577L44.468 3.59587L44.6437 3.29337L44.8195 2.9914L44.9931 3.09864C45.089 3.15839 45.5166 3.22882 45.9443 3.25549L46.7218 3.30457L46.1584 3.03142L45.596 2.75879L46.0636 2.63341C46.6483 2.47656 46.9711 2.595 47.1037 3.01434C47.2075 3.34139 47.5244 3.4721 47.5244 3.1872C47.5244 2.9978 48.049 2.78386 48.1832 2.91831C48.2375 2.97273 48.1693 3.09597 48.0314 3.19307L47.7805 3.36913L48.164 3.28537L48.5474 3.20107L48.6444 3.35846L48.7413 3.51585L48.9027 3.41608L49.064 3.31631L48.966 3.15732L48.868 2.99834H49.2291V3.51691L49.6978 3.40541C49.9555 3.34405 50.2932 3.184 50.4476 3.04956L50.7288 2.80521L51.0963 3.20054C51.2987 3.41821 51.5932 3.60601 51.7524 3.61828C51.9111 3.63109 52.1561 3.6695 52.2967 3.70364L52.5523 3.7666L52.5044 3.33979C52.4783 3.10504 52.3824 2.88737 52.2914 2.85589L52.1263 2.79934L52.1332 2.42908L52.1401 2.05935L52.3941 2.52885L52.6482 2.99834H53.8938L54.2879 3.36966L54.6826 3.74099V3.35046L54.9382 3.44862L55.1938 3.54679V3.21601L55.5996 3.29444L56.006 3.3718L56.1274 3.17493L56.2488 2.97753L56.4832 3.28697L56.717 3.59587L56.7223 3.38247L56.7276 3.16906H57.3811L57.445 3.36326L57.5099 3.55693L57.8689 3.33285L58.2278 3.10771L58.6528 3.38674L59.0773 3.66523L58.9985 3.2891L58.9196 2.91298L59.1103 3.21174C59.2152 3.37607 59.3713 3.51051 59.4575 3.51051H59.6141L59.5321 3.29711L59.4501 3.08317L59.7723 2.8815L60.0945 2.68036L60.0726 2.96739L60.0513 3.25442L60.2846 3.20481L60.5189 3.15519L60.4177 3.41821L60.3171 3.68124H60.807L60.7 3.38247L60.5935 3.0837L60.7277 3.20587L60.8624 3.32752L61.1809 3.15679C61.3561 3.06289 61.4994 2.90391 61.4994 2.8036V2.62061L61.2438 2.71878L60.9881 2.81694V2.48616H61.8477L62.0266 2.87936C62.1246 3.09597 62.3504 3.36326 62.5272 3.47423L62.8494 3.6759L63.1115 3.57453C63.2558 3.51958 63.374 3.40274 63.374 3.31578V3.15679L63.7409 3.35366L64.1073 3.54999L64.0024 3.27683L63.8981 3.00367L64.1899 2.85162L64.4817 2.69957L64.8226 2.83722C65.01 2.91244 65.0867 2.98713 64.993 3.00314C64.8993 3.01914 65.0143 3.08957 65.2486 3.15946L65.6747 3.28644L65.9591 3.14345L66.2435 3.00101L66.3287 3.21334L66.4144 3.42515L66.4283 3.12638L66.4416 2.82761H66.9406L67.1232 3.16906C67.2234 3.35686 67.3842 3.51051 67.4801 3.51051H67.6548L67.5642 3.36433L67.4742 3.21815L67.9013 3.30031L68.3279 3.38193L68.6656 3.07623L69.0027 2.77053L68.91 2.47816L68.8179 2.18633L69.2487 2.10363L69.6796 2.02147V2.48616H69.2791L69.6614 2.89377L70.0433 3.30084L70.8842 3.03195L71.7246 2.76252V2.29036L72.0207 2.34745L72.3173 2.40454L72.3791 2.72625L72.4409 3.04795L72.1677 2.94339L71.895 2.83828V3.16906H72.7056L72.909 2.92311L73.113 2.67716L73.3814 2.78066L73.6504 2.88363L73.5289 2.3992L73.4075 1.91424L73.6738 2.13565C73.8202 2.25782 73.9401 2.46322 73.9401 2.59233V2.82761H74.6217V2.47283L74.8593 2.69263C74.9903 2.81374 75.0686 2.96099 75.0329 3.01968C74.9977 3.07836 75.1607 3.12638 75.3961 3.12638H75.8232L76.1832 2.67823L76.5427 2.23008L76.6189 2.44348C76.6609 2.56086 76.8228 2.66222 76.9794 2.66863L77.2633 2.6809L76.9224 2.81428L76.5821 2.94765L77.1291 3.02768L77.676 3.10771L77.7628 2.88256L77.8491 2.65689H78.5308L78.4413 2.89057L78.3518 3.12425L78.8088 3.0741C79.0601 3.04635 79.344 2.94552 79.4399 2.85002L79.6135 2.67556L79.1624 2.56246C78.9147 2.50004 78.7118 2.38106 78.7118 2.29677C78.7118 2.08176 78.9478 2.1079 79.189 2.34958L79.3935 2.55445L79.6065 2.32824L79.8196 2.10203L79.6055 2.02361L79.3914 1.94465L79.4942 1.77872L79.5964 1.61227L79.8201 1.91851L80.0438 2.22528L79.8723 2.54698L79.7003 2.86869L79.8702 2.76359L80.0395 2.65902L80.137 2.91404L80.235 3.16906H80.5731C80.7595 3.16906 81.1068 3.07997 81.3454 2.97113L81.7794 2.77266L81.7821 2.50164L81.7847 2.23008L81.9099 2.4008C81.9791 2.4947 82.1884 2.5982 82.3759 2.63021C82.9292 2.72625 82.8999 2.82761 82.3194 2.82761H81.7794V3.13598L82.6741 3.20641L83.5688 3.27683L83.939 3.14665L84.3091 3.01701L84.5056 3.25336L84.7016 3.49024L84.9402 3.39847L85.1793 3.30671L84.9167 3.04369L84.6547 2.7812L84.8353 2.60034L85.0153 2.42001L85.3641 2.79454L85.7124 3.16906H86.5512V3.53078L86.7306 3.41981C86.8292 3.35846 87.366 3.2891 87.9236 3.26509L88.9371 3.22188L89.2939 2.89804L89.6512 2.57473L89.9745 2.97486L90.2978 3.37446L90.3883 3.13972L90.4778 2.90497L91.1531 2.96899L91.8289 3.03355L92.3614 2.84735L92.8945 2.66116L92.6847 2.91511L92.4743 3.16906H93.3158L93.6827 3.4881C93.8846 3.6631 94.0497 3.89357 94.0497 4.00028C94.0497 4.10645 94.1141 4.19341 94.1935 4.19341C94.2717 4.19341 94.4278 4.49751 94.5391 4.86991L94.7415 5.54587L94.628 5.99775L94.5146 6.44964L94.7511 6.59902L94.987 6.74894L94.783 6.75161L94.5785 6.75428L94.7649 7.30913C94.8672 7.6143 95.0259 7.95895 95.1164 8.07526L95.2815 8.28706L95.4322 8.1937L95.5835 8.0998V8.65252L95.4477 8.56823C95.3731 8.52181 95.2069 8.54848 95.0796 8.62798L94.8475 8.77149L94.7857 9.3733L94.7239 9.97564L95.2511 9.96016L95.7778 9.94522L95.6809 9.56003L95.5851 9.17483L95.8822 9.21751L96.1799 9.26019L96.2332 9.80011L96.2864 10.3395L95.8923 10.3448C95.6756 10.348 95.3491 10.4633 95.1675 10.6009L94.8368 10.8517H95.2426L95.2373 11.3212L95.232 11.7907L95.0051 11.4919C94.6951 11.0821 94.5609 11.1174 94.5609 11.6082V12.0233L94.987 11.9779C95.2213 11.9528 95.4642 11.8819 95.5254 11.8205L95.6372 11.7085L95.8662 11.8984C95.9919 12.003 96.0947 12.1945 96.0947 12.3236V12.5589H95.2426V12.9004H96.0947V13.5833H95.9328C95.8439 13.5833 95.7091 13.4872 95.6346 13.3699C95.56 13.2525 95.3662 13.0529 95.2048 12.926L94.9114 12.6955L94.6504 12.9569C94.2909 13.317 94.3234 13.4125 94.8064 13.4125C95.0354 13.4125 95.2698 13.4899 95.3284 13.5843L95.4349 13.7566L95.1803 14.0111C95.0408 14.1515 94.8437 14.2662 94.7436 14.2662C94.6944 14.2671 94.6477 14.2875 94.6135 14.3229C94.5792 14.3583 94.5604 14.4058 94.5609 14.455V14.6439L94.8059 14.55L95.0504 14.4561L95.1207 14.6599C95.159 14.7719 95.1127 15.0387 95.0168 15.2521L94.8427 15.6416L95.0429 15.8416C95.1526 15.9515 95.2426 16.1719 95.2426 16.3309V16.62L95.5217 16.7267L95.8002 16.834L95.527 17.137L95.2533 17.4395L95.404 17.9442C95.4865 18.2216 95.5606 18.3625 95.5691 18.2568L95.5835 18.0648L96.1363 18.1784L96.6891 18.2915L96.7498 18.6063L96.8099 18.9211L96.394 19.2828L95.9776 19.644L96.0505 19.8574L96.1229 20.0708H95.8535C95.4993 20.0708 95.5078 20.1151 96.0116 20.8583L96.4398 21.4905L96.1778 21.8906C96.034 22.1104 95.9754 22.2907 96.0484 22.2907C96.1208 22.2907 96.1911 22.4881 96.205 22.7288L96.2305 23.1673L95.9919 23.0755L95.7539 22.9838V23.2132C95.7539 23.3402 95.8678 23.5386 96.0074 23.6544L96.2614 23.8657L96.1677 24.0172L96.0739 24.1692L95.7438 23.9921L95.413 23.8145V24.3496L95.6687 24.4477C95.8093 24.5022 95.9243 24.6147 95.9243 24.6985V24.8511H95.5835C95.2352 24.8511 95.1414 25.0335 95.3704 25.2651C95.4407 25.336 95.4982 25.5601 95.4982 25.7629V26.1315L95.7113 26.0888L95.9243 26.0461V26.6928L95.6554 26.7957L95.3859 26.8992L95.4945 27.3954L95.6032 27.8916L95.4232 28.0036C95.3236 28.065 95.2426 28.2917 95.2426 28.5089V28.9026L95.5835 29.3363L95.9243 29.7701L96.246 29.6858L96.5676 29.6015L96.6981 29.8138L96.8291 30.0256L96.6321 29.904L96.4356 29.7818V30.1233C96.4356 30.3111 96.3578 30.5127 96.2625 30.5719L96.0894 30.6792L96.2034 30.8648L96.3179 31.05L96.1134 30.9235L95.9094 30.7971L95.6687 30.9972L95.4285 31.1972L95.6234 31.5099L95.8183 31.823L95.5946 32.093L95.371 32.363H95.5627C95.6676 32.363 95.7539 32.2883 95.7539 32.1976V32.0322L96.0436 32.1437L96.3333 32.2547L96.1384 32.3197L95.9435 32.3848L96.0393 32.6366L96.1363 32.8874L95.9019 33.1803C95.7741 33.3409 95.5813 33.6311 95.4743 33.8248L95.2799 34.1769L95.6127 34.9046L95.9456 35.6323L95.8343 36.1397L95.723 36.6476L95.4935 36.4561L95.2634 36.2651L95.3102 36.7042C95.3358 36.9458 95.4072 37.1945 95.4684 37.2558L95.5803 37.3679L95.4098 37.5743L95.2384 37.7808L95.4961 37.9953L95.7539 38.2092L95.7592 37.975L95.7645 37.7408L95.9914 38.0395L96.2177 38.3383L96.1432 38.8078L96.0681 39.2773L96.2305 39.0458L96.3929 38.8142L96.4941 38.9775L96.5943 39.1407L96.1948 39.3547L95.7954 39.5691L95.8796 39.8924L95.9642 40.2163H95.5941L95.6921 40.4724L95.7906 40.7285H95.2011L95.3608 40.9419C95.4492 41.0592 95.5163 41.4434 95.51 41.7955L95.4982 42.4357H95.822L95.6175 42.6406C95.5052 42.7531 95.413 42.9543 95.413 43.0871V43.3293L95.7475 43.2413L96.0819 43.1538L96.2822 43.3955L96.4824 43.6372L96.1607 44L95.8391 44.3633L96.0521 44.438C96.1693 44.4791 96.2651 44.5831 96.2651 44.6695C96.2651 44.9053 95.7938 44.8573 95.7038 44.6124L95.6255 44.399L95.5009 44.8685C95.4322 45.1267 95.3076 45.338 95.224 45.338C95.1404 45.338 95.0722 45.402 95.0722 45.4805C95.0722 45.5584 95.184 45.6224 95.3204 45.6224C95.4567 45.6224 95.5339 45.5664 95.4919 45.4981C95.4492 45.4298 95.5302 45.3295 95.6713 45.2756L95.927 45.1769L96.3519 45.3386C96.8339 45.5221 96.9058 45.8112 96.508 45.9644C96.239 46.0673 95.9291 46.659 95.8077 47.2998L95.7438 47.6396L96.0377 47.8551L96.3322 48.0707L96.1474 48.2558L95.9626 48.4409L95.8481 48.2553C95.7853 48.1534 95.6617 48.0696 95.5733 48.0696C95.3209 48.0696 95.3864 48.5178 95.674 48.7568L95.9349 48.9739L96.1991 48.6495L96.4633 48.3257L96.3637 48.6405L96.2635 48.9552L96.6054 49.0443C97.0294 49.1553 97.0395 49.3495 96.6363 49.6392C96.4659 49.7619 96.1943 50.13 96.0335 50.4571L95.7406 51.052L96.0026 51.244C96.369 51.5124 96.3301 51.6516 95.8817 51.6746L95.4982 51.6943L95.7821 51.7695C95.9381 51.8111 96.1134 51.9691 96.1709 52.1206L96.2769 52.3959L96.058 52.5346C95.9376 52.6114 95.8774 52.6808 95.9243 52.6893L96.2822 52.7587L96.5554 52.812L96.5698 52.3014C96.5879 51.6671 96.7764 51.4318 96.7764 52.0432V52.4882L96.9548 52.5991L97.1337 52.7096L96.9356 52.9486L96.7375 53.1876L96.5868 53.0942L96.4356 53.0004V53.1673C96.4356 53.2591 96.3839 53.4682 96.3216 53.632L96.2071 53.9303L96.3887 53.8182L96.5698 53.7057L96.7002 54.0034C96.7716 54.1671 96.8169 54.3886 96.8004 54.4953C96.7839 54.602 96.8898 54.7353 97.0363 54.7914L97.3026 54.8938L97.1178 55.2395C97.0161 55.4294 96.9553 55.7191 96.9825 55.8824L97.032 56.179L96.4835 56.1363L95.9349 56.0937L96.0329 56.3498L96.1309 56.6058H96.3812C96.5181 56.6058 96.7365 56.712 96.8659 56.8417L97.1013 57.0775L96.9814 57.2199C96.9154 57.2983 96.9958 57.2599 97.1598 57.1346L97.4581 56.9051V57.4995L97.016 57.4141L96.574 57.3298L96.6614 57.6937C96.7093 57.8932 96.8584 58.4427 96.9926 58.9149L97.2365 59.7722L96.8243 60.0838L96.4121 60.3954L96.508 60.6461L96.6038 60.8964L96.2428 60.7817L95.8817 60.6664L95.9893 60.8409L96.0968 61.0153L95.8945 61.0831L95.6921 61.1503L95.8039 61.4416C95.8652 61.6017 96.0899 61.806 96.3035 61.8951C96.5165 61.9842 96.844 62.1779 97.031 62.3262L97.3713 62.5945L97.1162 62.7562C96.8744 62.9093 96.5021 62.9872 96.2225 62.9429C96.0084 62.9088 96.0803 63.2299 96.3077 63.3228L96.5208 63.4097L96.116 63.7379L95.7107 64.0665L96.0649 64.1593L96.419 64.2522L96.4702 64.1049L96.5208 63.9577L96.7753 64.1167L97.0304 64.2751L96.6907 64.5237L96.3509 64.7729L96.4744 64.8961L96.5975 65.0199L96.8499 64.8102L97.1023 64.6005L97.2802 64.7105C97.3782 64.7713 97.4581 64.9697 97.4581 65.1522V65.4835H96.9468L96.9346 65.2701L96.9228 65.0567L96.8068 65.3128C96.7428 65.4536 96.5394 65.7935 96.3541 66.0682L96.0164 66.5671L96.2332 66.6396L96.4499 66.7117L96.2513 66.9517L96.0532 67.1908H96.2076C96.2928 67.1908 96.3743 67.3444 96.3887 67.5322C96.4025 67.72 96.3541 67.8737 96.2806 67.8737C96.2066 67.8737 96.14 68.1057 96.1315 68.389L96.1171 68.9039L96.2646 68.8132L96.4121 68.7219L96.5261 68.9065C96.7301 69.2373 96.4462 69.3013 96.1128 68.9999L95.788 68.7049L95.7171 68.8441C95.6782 68.9209 95.6612 69.0794 95.6788 69.1968C95.6964 69.3141 95.7209 69.4913 95.732 69.591L95.7533 69.7719L95.9104 69.6748L96.067 69.5777L96.3354 69.8461C96.4824 69.9938 96.663 70.0781 96.7354 70.0328L96.868 69.9512L96.8041 70.6213L96.7402 71.2914L97.0437 71.1745L97.3468 71.0582L97.2371 71.3436L97.1279 71.6296H97.9976L97.9299 71.8339C97.8927 71.946 97.637 72.0991 97.3617 72.1738L96.8611 72.3093L96.6726 72.0548C96.5682 71.915 96.4004 71.8003 96.2992 71.8003H96.1149L96.3594 72.2698C96.6693 72.8652 96.6678 72.9954 96.3503 72.9954H96.0947V73.5076H96.3503C96.4909 73.5076 96.6635 73.5065 96.7338 73.5054C96.8563 73.5038 96.8829 73.4078 96.9271 72.8183L96.9468 72.5558L97.2727 72.5312L97.5992 72.5067L97.367 72.9645C97.2392 73.2163 97.0911 73.5652 97.0384 73.7402L96.9426 74.0582L96.7114 73.8661L96.4808 73.674L96.271 73.9269L96.0612 74.1803L96.0441 74.7763L96.0276 75.3722L96.4414 75.7323L96.8557 76.0919L96.4787 76.3789L96.1022 76.666L96.2034 77.0501C96.2982 77.4092 96.4728 77.5159 96.8478 77.4449L97.0043 77.415L96.7636 77.7053L96.5234 77.9955L96.8856 77.8802L97.2472 77.7655L97.3441 78.0179L97.4405 78.2702L97.1918 78.1742L96.9431 78.0787L97.048 78.354L97.1535 78.6293H96.5378L96.7423 78.8342C96.8547 78.9462 96.9468 79.1031 96.9468 79.181V79.3239L96.614 79.1457L96.2816 78.9676L96.4606 79.4813C96.5586 79.7641 96.7082 79.9951 96.7929 79.9951H96.9468V80.6583L97.3036 80.5894L97.6594 80.5206L97.5614 80.7767L97.4634 81.0328L97.6674 81.3598L97.8713 81.6869L97.751 81.8074L97.6306 81.9275L97.3313 81.6703C97.165 81.5273 96.988 81.3971 96.802 81.2809L96.5719 81.1486L96.721 81.4687C96.8978 81.8475 96.9 82.2236 96.7263 82.5015L96.6001 82.7027L96.7737 82.8099C96.8685 82.8691 96.9468 83.105 96.9468 83.3344V83.7505H97.5715V84.2317L97.0885 84.3283C96.4739 84.4515 96.476 84.6345 97.0959 84.9093L97.5859 85.1264V85.9705H97.2786C97.1092 85.9705 96.8557 85.8552 96.7152 85.7144C96.5746 85.5735 96.4159 85.4583 96.3626 85.4583C96.3088 85.4583 96.2651 85.5735 96.2651 85.7144V85.9705H95.8875L95.9754 85.7411C96.0233 85.6157 96.0058 85.4199 95.936 85.3073L95.8093 85.1014L95.7869 85.7069L95.764 86.3119H95.9195C96.0047 86.3119 96.1219 86.2351 96.1799 86.1412C96.238 86.0473 96.4302 85.9705 96.607 85.9705H96.9292L97.4432 86.521L97.9566 87.0716L97.5923 87.46C97.392 87.6734 97.1263 87.8484 97.0022 87.8484H96.7764V88.478L97.1172 88.7874C97.3047 88.9571 97.4581 89.1769 97.4581 89.2745V89.4532L97.2536 89.2484C96.975 88.9693 96.7764 88.9907 96.7764 89.2996V89.5557L96.5634 89.513L96.3503 89.4703L96.3956 89.7483L96.4409 90.0262L96.0548 90.1324L95.6687 90.2386L95.903 90.3901L96.1384 90.5416L96.0223 90.7294L95.9067 90.9172L96.149 90.8244L96.3914 90.731L96.5032 91.0212C96.5639 91.1813 96.574 91.352 96.5245 91.4011C96.4755 91.4502 96.4356 91.4102 96.4356 91.3125V91.1349H95.5835V91.375C95.5835 91.5067 95.4732 91.6577 95.3385 91.7089L95.0935 91.8034L95.1824 92.0344L95.2708 92.2654L95.495 92.1795L95.7193 92.0931L95.8316 92.2755L95.9445 92.458H95.7837C95.6953 92.458 95.5829 92.6116 95.5334 92.8L95.4445 93.142L95.1436 93.0262L94.8427 92.9109L94.946 93.1804L95.0493 93.4503L94.7622 93.708L94.4757 93.9657L94.0268 93.8787L93.5784 93.7912L93.4729 93.962L93.3675 94.1327L92.771 93.9497C92.1612 93.7619 91.9636 93.4823 92.4408 93.4823H92.7065L92.6054 93.3191L92.5047 93.1558L92.2682 93.2465L92.0313 93.3378L91.6553 93.1361L91.2798 92.935L91.1307 93.166L90.9816 93.397L90.825 93.1521L90.6679 92.9077L89.6321 92.9099L88.5962 92.912V92.3929L88.3438 92.7237L88.0914 93.0555L87.9385 92.8229L87.7851 92.5903L87.6988 92.8229L87.6126 93.0555L87.3559 92.7205L87.0992 92.3854L86.8212 92.617L86.5427 92.848L86.4351 92.7397L86.327 92.6319L86.1161 92.8069L85.9057 92.9819L85.632 92.7077L85.3582 92.4334V92.7994H84.8267L84.9322 92.6287L85.0376 92.458H84.8912C84.8108 92.458 84.6526 92.5503 84.5397 92.6629L84.3357 92.8677V92.2457L84.0524 92.4799L83.7691 92.7146L83.6945 92.4937L83.621 92.2729L83.3542 92.4937L83.0874 92.7141L83.0187 92.5103L82.9505 92.3065L82.7055 92.4004L82.4606 92.4948V92.0749L82.1927 92.2979L81.9237 92.5215L81.7879 92.3006L81.6516 92.0803L81.5238 92.2873L81.396 92.4943L81.2676 92.2862L81.1387 92.0781L79.7125 91.9314C78.9275 91.8509 78.1415 91.829 77.9663 91.8834L77.6467 91.9826L77.4976 91.7505L77.3485 91.519L77.1924 91.7617L77.0369 92.0045L76.6338 91.7399L76.2306 91.4753L74.9221 91.3974L73.6136 91.32L73.5225 91.5585L73.4309 91.7975L73.791 91.6828L74.151 91.5686L74.0748 91.8002L73.9986 92.0312L73.6062 92.0888L73.2142 92.1464L73.3244 91.7047L73.4352 91.2629H72.7642L72.5905 91.5617L72.4164 91.8605L72.4111 91.5718C72.4084 91.4128 72.3259 91.2336 72.2284 91.1728L72.0505 91.0629L71.829 91.2469L71.608 91.431L71.4828 91.3056L71.3582 91.1802L71.1915 91.479L71.0243 91.7778L70.7191 91.6134L70.4134 91.4496L70.2206 91.6428L70.0284 91.8354L69.6897 91.5286L69.351 91.2218L69.0799 91.3259L68.8088 91.4299L68.4451 91.0906C68.0334 90.7065 67.7123 90.6568 67.5312 90.9508L67.4082 91.1503L67.6777 91.0468L67.9471 90.9433L68.0339 91.1706L68.1213 91.3984L67.716 91.4763L67.3107 91.5537L67.1898 91.2805C67.1232 91.1301 67.0854 90.9364 67.1057 90.85L67.1424 90.6931L66.9092 90.8873L66.6754 91.081L66.0469 90.9791L65.4185 90.8767V90.7283C65.4185 90.4082 65.0606 90.6035 64.9073 91.0068L64.7459 91.4336H64.2181L64.4972 91.0068L64.7762 90.58H64.5808C64.4738 90.58 64.3427 90.6921 64.29 90.8297C64.2373 90.9668 64.0445 91.1269 63.8613 91.185L63.5274 91.2917L63.5785 91.6615L63.6296 92.0312H62.9522L62.9022 91.7703L62.8521 91.5089L63.1983 91.137C63.6983 90.5998 63.6264 90.5395 62.9426 90.9247C62.2024 91.3408 61.9238 91.3493 61.6368 90.9641L61.4142 90.6654L60.6899 90.6115L59.9656 90.5571V90.9412L59.8069 90.8436L59.6482 90.7454L59.5411 90.9188L59.4341 91.0922H59.7749C59.9624 91.0922 60.1563 91.1583 60.2063 91.2389L60.2969 91.3851L59.555 91.3275C59.147 91.296 58.5932 91.1792 58.3248 91.0682C58.0553 90.9572 57.7736 90.8804 57.6985 90.8975C57.6229 90.9135 57.4423 90.8084 57.2969 90.6627L57.0322 90.3976L56.8096 90.5827L56.5876 90.7673L56.4864 90.6046L56.3862 90.4413L56.0454 90.5304C55.6454 90.6355 55.5874 90.9215 55.9666 90.9215H56.2281L56.0539 91.2475L55.8798 91.5734L55.5235 91.4801L55.1677 91.3872L55.0197 90.9978L54.8722 90.6094L54.5137 90.4952L54.1548 90.381L53.9498 90.5395C53.8374 90.6264 53.5999 90.7497 53.4225 90.8137L53.1003 90.9295L53.2936 90.6963L53.4864 90.4632L53.3757 90.3522L53.2654 90.2418L53.0364 90.4317C52.9107 90.5363 52.8074 90.7145 52.8074 90.8286V91.0351H51.7705L51.8578 90.8078C51.9873 90.4696 51.7817 90.532 51.4307 90.9369L51.1218 91.2944L50.945 91.185L50.7688 91.0757L50.159 91.1904L49.5492 91.3051L49.6328 91.5233L49.7164 91.7415L49.3878 91.8279L49.0587 91.9138L48.9628 91.758L48.867 91.6022L49.1333 91.4998C49.2797 91.4432 49.3995 91.3307 49.3995 91.249V91.1007L48.8457 91.2106L48.2918 91.3205L48.5293 91.0314L48.7663 90.7427L48.6571 90.6328L48.5474 90.5229L48.5448 90.7652L48.5421 91.0068L48.3877 90.7614L48.2322 90.516L47.8359 90.7075L47.4397 90.8985L47.8247 90.9097L48.2093 90.9215L48.0016 91.2544L47.7944 91.5873L47.6016 91.4267C47.4951 91.3381 47.3619 91.3131 47.3044 91.3702C47.2469 91.4272 47.0754 91.3488 46.9221 91.1957L46.6435 90.9167L46.0273 90.985L45.4112 91.0527L45.0277 91.4993L44.6443 91.9458L44.3375 91.9432L44.0313 91.9405L44.2667 91.7911L44.5026 91.6417L44.0963 91.511C43.845 91.4328 43.5878 91.3751 43.3272 91.3387L42.9646 91.2976L43.0492 91.6214L43.1339 91.9458H42.8581C42.7068 91.9458 42.5731 91.869 42.5614 91.7751C42.5458 91.6603 42.5245 91.5463 42.4975 91.4336C42.4643 91.2786 42.4394 91.1219 42.423 90.9641L42.391 90.6654L42.2366 91.0495C42.1513 91.2608 42.0033 91.4336 41.9064 91.4336H41.7306L41.7253 91.1349L41.72 90.8361L41.5442 91.1386L41.3685 91.4406L41.221 91.3488L41.0724 91.257L40.9659 91.431L40.8583 91.6044H41.1991C41.3866 91.6044 41.5826 91.6732 41.6342 91.757L41.7285 91.9101L41.4739 92.0077C41.1634 92.1272 40.6831 91.9613 40.4525 91.6551L40.282 91.4283L39.6659 91.3499L39.0497 91.2709L38.7461 91.607L38.4426 91.9426L38.1992 91.6455C38.0661 91.4822 38.0048 91.4443 38.0639 91.5617L38.172 91.7751H37.811L37.804 92.2446L37.7971 92.7141L37.5431 92.244L37.2885 91.774L37.4781 91.4182C37.7508 90.9081 37.5654 90.8329 37.1463 91.2837C36.9493 91.4955 36.7884 91.6198 36.7884 91.559C36.7884 91.4993 36.5786 91.6444 36.3219 91.8829L35.8554 92.3161L35.6195 91.9602C35.3212 91.5105 35.0842 91.5041 35.0842 91.9458V92.2873H35.4384L35.219 92.5263L34.999 92.7653L34.7934 92.5967L34.5879 92.4286L34.4244 92.53L34.2614 92.6309L34.189 92.4164L34.1171 92.2019L33.8348 92.4351L33.5526 92.6687L32.9705 92.3918L32.3884 92.1155L32.1173 92.2195L31.8462 92.3235V92.1528C31.8462 92.0589 31.7408 91.9416 31.6119 91.8925L31.3776 91.8018L31.1805 92.236L30.983 92.6698L31.2439 92.569L31.5054 92.4687V93.1772L31.7525 93.0827L31.9991 92.9878L31.9043 93.2348L31.81 93.4823H31.9986C32.2845 93.4823 32.2238 93.7731 31.9123 93.8931L31.638 93.9982L31.7307 93.7566L31.8233 93.5143L31.4937 93.2156L31.1646 92.9168V93.3116H30.6639L30.7737 93.0257L30.8828 92.7402L30.5787 92.8576L30.2746 92.9739L30.3774 92.705L30.4807 92.4356L30.0994 92.5567L29.7186 92.6778L29.9514 92.3972L30.1836 92.1165H29.9871C29.8789 92.1165 29.7463 92.2318 29.6926 92.3726L29.5946 92.6287H29.3001C29.1382 92.6287 28.9555 92.6794 28.8937 92.7408L28.7819 92.8533L28.9715 93.0827L29.1611 93.3116L29.0125 93.3089C28.931 93.3073 28.7584 93.2396 28.629 93.1574L28.3942 93.008L28.5039 92.8304L28.6136 92.6522L28.4219 92.5332L28.2291 92.4142L28.0805 92.649L27.9314 92.8848L27.9292 92.6613L27.9266 92.4377L27.7636 92.5391L27.6006 92.6394L27.7072 92.9184L27.8137 93.1969L27.6076 93.0689L27.4015 92.9414L27.5005 92.6287L27.5996 92.3161L27.4329 92.2126L27.2657 92.1091L27.0899 92.4116L26.9142 92.7141L26.9088 92.3828L26.904 92.0514L26.6623 92.3822L26.4205 92.713L26.2975 92.5903L26.1739 92.466L26.4109 92.1635L26.6484 91.8605L26.3592 92.0872L26.0701 92.3139L25.7809 92.1523L25.4922 91.9906L25.1493 92.0803L24.8057 92.1704L24.9202 91.9842L25.0347 91.7986L24.8617 91.6919L24.6886 91.5841V92.1251L25.0981 92.2809C25.3234 92.3662 25.5577 92.5177 25.6184 92.617L25.7297 92.7968L25.5796 93.0651L25.4299 93.333L25.2089 93.0662C25.0869 92.9195 24.8478 92.7994 24.6763 92.7994H24.3653L23.9089 93.2231L23.453 93.6467L23.3039 93.5544C23.2219 93.5037 23.1548 93.3431 23.1548 93.198V92.9339L23.3982 93.0273L23.641 93.1206L23.8557 92.8613L24.0703 92.6026L23.5697 92.6741C23.2949 92.713 22.9439 92.801 22.79 92.8688L22.5109 92.992L22.5972 93.3228L22.6835 93.6531H22.3027V93.3218C22.3027 93.1393 22.2217 92.9403 22.1232 92.8789L21.9438 92.7685L21.7451 93.2961C21.5278 93.8729 21.4868 93.8963 21.1098 93.6552L20.8541 93.4919L21.2376 93.2215L21.621 92.951V92.1272L21.3228 92.2382C21.1588 92.299 20.9005 92.4889 20.7487 92.6597C20.4137 93.0368 20.157 93.0566 20.0255 92.7141L19.9275 92.458H19.4056L19.7762 92.8293L20.1469 93.2006L19.822 93.3148L19.4977 93.429L19.2016 93.0513L18.9049 92.6741L18.4714 92.7573L18.0374 92.84L18.1386 92.5764L18.2398 92.3123L17.8851 92.4052C17.4526 92.5183 17.4313 92.7248 17.8292 92.9563L18.1274 93.1308L17.8718 93.1478L17.6161 93.1649L17.957 93.3025L18.2978 93.4402L18.5428 93.2481L18.7878 93.0555L18.6706 93.3682C18.6062 93.5405 18.5534 93.7608 18.5534 93.859V94.0361L18.3191 93.8419L18.0853 93.6472L17.8489 93.7379L17.6129 93.8286L16.9755 93.5031L16.338 93.1777V93.6531H15.79L15.8917 93.246L15.9939 92.8384L15.7665 92.6495L15.5397 92.4612L15.4135 92.5876C15.3684 92.631 15.3148 92.6645 15.2562 92.6862C15.1976 92.7079 15.1352 92.7172 15.0728 92.7136C15.0104 92.71 14.9494 92.6935 14.8937 92.6652C14.8379 92.637 14.7886 92.5975 14.7488 92.5492L14.6077 92.3726L14.6769 92.6287L14.7462 92.8848L15.1158 92.9392L15.4859 92.9936V93.1681C15.4859 93.3596 14.8015 93.9796 14.5805 93.9886L14.4421 93.994L14.4953 93.4445L14.5486 92.8949L14.2253 92.8298L13.9026 92.7648L14.0165 93.0625L14.1305 93.3596L13.9132 93.1974C13.6629 93.0096 13.4392 93.007 13.1543 93.1889L12.953 93.3169L13.0324 93.7544L13.1117 94.1924L12.9354 94.0836L12.7592 93.9742V94.1556C12.7592 94.2543 12.8279 94.336 12.9115 94.336C12.9951 94.336 13.1048 94.4437 13.1554 94.575L13.247 94.8145L12.9179 94.9004L12.5893 94.9868L12.4662 94.7894ZM15.0641 93.174C15.0119 93.1211 14.8745 93.174 14.7589 93.2903L14.5486 93.5026L14.8543 93.3858C15.022 93.3217 15.1168 93.2262 15.0641 93.174ZM13.6113 92.6447V92.49L13.2704 92.5791C13.083 92.6282 12.9296 92.6981 12.9296 92.7338C12.9296 92.7701 13.083 92.7994 13.2704 92.7994H13.6113V92.6447ZM22.741 92.5556C23.0179 92.2782 23.0547 92.0093 22.8331 91.8727L22.6819 91.7788L22.7053 92.0755L22.7287 92.3726L22.4332 92.323L22.1376 92.2734L22.2388 92.5364C22.3629 92.8619 22.4332 92.864 22.741 92.5556ZM19.1888 92.355C19.1323 92.2979 18.9854 92.2921 18.8623 92.3411L18.6387 92.4313L18.9651 92.4446C19.1451 92.4521 19.2458 92.4116 19.1888 92.355ZM28.8793 91.8188C28.7611 91.7004 28.4378 91.9416 28.4378 92.1475V92.3289L28.6977 92.1133C28.8404 91.9944 28.9225 91.8621 28.8793 91.8188ZM11.2254 91.9458C11.2254 91.8519 11.1551 91.7751 11.0688 91.7751C10.9831 91.7751 10.7722 91.7223 10.6001 91.6577L10.2881 91.5403L10.5224 91.8284C10.778 92.1432 11.2254 92.2179 11.2254 91.9458ZM21.2802 92.0413C21.2802 91.9997 21.2035 91.9186 21.1098 91.8605L20.9393 91.7548V91.9362C20.9393 92.0349 21.016 92.1165 21.1098 92.1165C21.2035 92.1165 21.2802 92.0824 21.2802 92.0413ZM33.9674 91.9602L34.0638 91.8044L33.8497 91.7175L33.6357 91.6305L33.8913 91.4464L34.1469 91.2629L33.8913 91.0949C33.7507 91.0026 33.5739 90.9257 33.4977 90.9241L33.3598 90.9215L33.4652 91.0922L33.5707 91.2629H33.2096V91.7954L33.38 91.6897L33.5504 91.5841V91.8503C33.5504 92.1405 33.8135 92.2099 33.9674 91.9602ZM14.8042 91.7852C14.8008 91.7357 14.7863 91.6876 14.7616 91.6445C14.737 91.6015 14.7029 91.5646 14.662 91.5366L14.5203 91.4486V91.6972C14.5203 91.8338 14.5843 91.9458 14.662 91.9458C14.7403 91.9458 14.8042 91.8733 14.8042 91.7852ZM20.2577 91.838C20.2577 91.6166 20.0068 91.2629 19.8497 91.2629H19.6484L19.6255 91.5676L19.6026 91.8727H19.9301C20.1101 91.8727 20.2577 91.8567 20.2577 91.838ZM29.9642 91.6812L29.8044 91.4875L29.9253 91.3664L30.0462 91.2448L29.7533 91.3573L29.4604 91.4699V91.9245L29.7927 91.8994L30.1245 91.8743L29.9642 91.6812ZM17.2742 91.6065L17.3781 91.4374L17.1139 91.5387C16.8184 91.6529 16.7646 91.7751 17.0095 91.7751C17.098 91.7751 17.2172 91.6993 17.2742 91.6065ZM31.2487 91.6065L31.3526 91.4374L31.0884 91.5387C30.7928 91.6529 30.739 91.7751 30.984 91.7751C31.0724 91.7751 31.1917 91.6993 31.2487 91.6065ZM18.2435 91.2261L18.0422 91.0239V91.2C18.0422 91.4283 18.2435 91.63 18.3575 91.5163C18.4054 91.4678 18.3543 91.3371 18.2435 91.2261ZM36.192 91.4336L36.2974 91.2629H36.127C36.0333 91.2629 35.9086 91.3397 35.8511 91.4336L35.7457 91.6044H35.9161C36.0098 91.6044 36.1344 91.5275 36.192 91.4336ZM43.094 90.7225C43.094 90.644 42.979 90.58 42.8384 90.58C42.6978 90.58 42.5827 90.644 42.5827 90.7225C42.5827 90.8004 42.6978 90.8644 42.8384 90.8644C42.979 90.8644 43.094 90.8004 43.094 90.7225ZM51.1037 90.58V90.4093L50.7203 90.412L50.3368 90.4146L50.5925 90.58C50.9227 90.794 51.1037 90.794 51.1037 90.58ZM95.9914 89.2857C96.0484 89.1369 96.0942 88.8872 96.0937 88.7309L96.0926 88.446L95.838 88.9352C95.5409 89.5061 95.5323 89.5557 95.7358 89.5557C95.8194 89.5557 95.9344 89.434 95.9914 89.2857ZM96.4265 87.5497C96.41 87.3853 96.4105 87.2125 96.4286 87.1655C96.4467 87.1186 96.4861 86.9511 96.517 86.7931L96.5719 86.5061L96.344 86.5941L96.116 86.6816L96.2023 86.9062L96.288 87.1309L96.1134 87.2392L95.9392 87.3469L96.0351 87.5977C96.0878 87.7359 96.2044 87.8484 96.2939 87.8484H96.4569L96.4265 87.5497ZM91.6995 87.2685C91.7655 87.1666 91.7873 86.9286 91.7474 86.7403C91.7069 86.5515 91.6324 85.5356 91.5807 84.4825C91.529 83.4293 91.4369 82.437 91.3762 82.2775L91.2649 81.9878L91.4646 82.111L91.6638 82.2348V82.0721C91.6638 81.983 91.5402 81.8619 91.389 81.8037L91.1142 81.6981L91.3022 81.4713L91.4902 81.2441L91.3693 81.1224L91.2479 81.0008L91.4971 80.8461L91.7463 80.6924L91.5344 80.4801C91.4183 80.3638 91.3229 80.0869 91.3229 79.8655V79.4627L91.4816 79.5608L91.6404 79.659L91.7469 79.4856L91.8544 79.3122H91.5882C91.4422 79.3122 91.3229 79.2354 91.3229 79.1415C91.3229 79.0476 91.3927 78.9708 91.4779 78.9708H91.6329L91.6212 78.1956L91.6095 77.4209L91.4481 77.3206L91.2867 77.2208L91.5179 77.0714L91.749 76.9221L91.5786 76.794L91.4082 76.666L91.3677 75.7782L91.3272 74.891L91.4966 74.7859L91.6659 74.6808L91.7884 74.9902L91.9098 75.3002L92.0115 74.788L92.1127 74.2758L91.9546 74.0646L91.7959 73.8533L91.8875 73.6148L91.9791 73.3758L91.7208 73.0071L91.463 72.6379L91.5647 72.3723L91.6664 72.1066L91.9034 72.1973L92.1399 72.288L92.2208 71.8638L92.3018 71.4391L92.0488 71.5362L91.7964 71.6333L91.9279 71.333C92.0004 71.1676 92.0435 70.6986 92.0238 70.2915L91.9886 69.551L92.2097 69.6844L92.4307 69.8173L92.2246 69.5622L92.019 69.3072L92.117 68.9316C92.1703 68.7252 92.2821 68.5566 92.3652 68.5566C92.4483 68.5566 92.5159 68.4413 92.5159 68.3005C92.5159 67.9916 92.3172 67.9702 92.0387 68.2493L91.8342 68.4541V68.3106C91.8342 68.2316 91.9684 68.0689 92.1324 67.9489L92.4307 67.7301L92.2235 67.1817L92.0169 66.6327L92.1814 66.3254C92.4062 65.9039 92.3977 65.8815 91.962 65.7412L91.5786 65.6185L91.8624 65.5411C92.2592 65.4334 92.3423 65.117 92.1719 64.361L92.0254 63.709L92.1655 63.4583L92.3055 63.2075L92.2171 62.5492L92.1292 61.8914L92.4062 61.9981L92.682 62.1042L92.6336 61.0159C92.607 60.4183 92.5175 59.8192 92.4349 59.6858L92.2853 59.4431L92.4962 59.3726L92.7071 59.3022L92.4142 58.9784L92.1223 58.6545H92.2991C92.3966 58.6545 92.5164 58.5009 92.5654 58.3131L92.6544 57.9716L92.4988 58.0677L92.3428 58.1637L92.24 57.8948L92.1367 57.6259L92.3572 57.3602L92.5771 57.094L92.6331 56.1246C92.6639 55.5911 92.7097 54.8474 92.7353 54.4718L92.7811 53.7889L92.5633 53.4522C92.4435 53.2671 92.3455 52.9497 92.3455 52.7475V52.3793L92.5936 52.1729L92.8424 51.9664L92.7449 51.4777L92.6469 50.989L92.8269 50.4715L93.0069 49.9551L92.8679 49.8692C92.7912 49.8217 92.7289 49.5811 92.7289 49.3335V48.8843L92.5191 48.7546L92.3093 48.6245L92.4791 48.5194L92.6485 48.4143L92.6538 46.6201L92.6581 44.8258H92.5084C92.4259 44.8258 92.2027 44.9934 92.0131 45.1977L91.667 45.569L91.5514 45.4538L91.4364 45.338H91.8459L91.6654 45.0003L91.4854 44.6626L91.7165 44.7517L91.9476 44.8408V44.2987L91.7256 44.3841L91.504 44.4695L91.4028 44.3062L91.3027 44.1429L91.6963 44.1163C91.9125 44.1008 92.2235 44.1003 92.3875 44.1136L92.6858 44.1387V43.4921L92.3449 43.5812L92.0041 43.6708V43.2893L92.3875 43.2696L92.771 43.2498L92.4711 43.1714L92.1708 43.093L92.2965 42.8924C92.3657 42.782 92.4392 42.4378 92.46 42.1279L92.4972 41.5645L92.2619 41.4738L92.0259 41.3831L92.1159 41.0982C92.1649 40.9419 92.2885 40.641 92.3891 40.4297L92.5729 40.0456L92.4669 39.9399L92.3614 39.8343L92.084 40.1117L91.8065 40.3902L91.6499 40.2931C91.5637 40.2398 91.4928 40.0168 91.4928 39.7975V39.3989L91.7911 39.2688L92.0893 39.1381L91.578 39.0351L91.0668 38.9316L91.0439 38.6776C91.0316 38.5378 91.0119 38.3362 91.0013 38.23C90.9906 38.1233 90.8223 37.9953 90.6274 37.944L90.2733 37.8512L90.3292 37.4676L90.3851 37.0846L90.759 37.0579C90.9645 37.0429 91.128 37.0755 91.1222 37.1299C91.1168 37.1843 91.1206 37.2905 91.1323 37.3663L91.152 37.5039L91.6569 37.2051L92.1617 36.9064L91.9663 36.6706L91.7708 36.4342L92.0153 36.2661L92.2603 36.0981L91.7064 36.2075L91.1525 36.3168V35.8137L91.4082 35.7156C91.5482 35.6617 91.7655 35.6569 91.8907 35.7049L92.1181 35.7919L92.0419 35.2727L91.9657 34.7531H91.8145C91.7314 34.7531 91.6633 34.6331 91.6633 34.4869V34.2206L91.8102 34.3114L91.9572 34.4026L91.9381 34.0233L91.9189 33.6434L91.5354 33.589L91.152 33.534V32.7684L90.5816 32.5444L90.0107 32.3203L89.7476 31.7387L89.4845 31.1572L89.8499 31.2709C90.0507 31.3338 90.2647 31.4629 90.3255 31.5579L90.4362 31.7302L90.7089 31.6256L90.9816 31.5205V32.0247L91.3224 31.8113L91.6633 31.5984V31.3359C91.6633 31.1919 91.5477 30.9081 91.406 30.7053L91.1488 30.3372L91.3299 30.2252L91.5109 30.1131L91.0119 29.6351L90.5129 29.1571L89.631 28.9677C89.1464 28.8636 88.6383 28.7783 88.502 28.7783C88.1824 28.7783 88.1861 28.5361 88.5105 28.2661C88.6511 28.1487 88.7661 27.9561 88.7661 27.8366C88.7661 27.7171 88.6511 27.5752 88.5105 27.5219C88.1867 27.397 88.1766 27.071 88.4966 27.071C88.6292 27.071 88.7725 26.975 88.8151 26.8576L88.8923 26.6442L89.23 26.8432L89.5676 27.0422L89.8488 26.713C90.0033 26.5322 90.13 26.3108 90.13 26.2206V26.0574L89.8877 26.1507L89.6454 26.2435L89.2912 26.0536L88.9371 25.8637V25.3574L89.3402 25.4587L89.7428 25.5601L89.8419 25.3024L89.9404 25.0447L90.4698 25.2448L90.9986 25.4449L90.8958 25.8738C90.8394 26.1096 90.6833 26.3871 90.5497 26.4906C90.4155 26.5935 90.3505 26.7226 90.4048 26.7776C90.5257 26.8987 91.005 26.7296 91.2377 26.4831L91.4082 26.3028L91.4002 25.7052L91.3927 25.1077L90.719 24.755L90.0453 24.4019L89.9857 24.0924L89.926 23.783L90.1513 23.6432L90.3766 23.504L90.5065 23.7083L90.6359 23.9126L90.6386 23.6811L90.6413 23.4495L90.9059 23.5509L91.1701 23.6523L91.0662 23.4837L90.9619 23.3151H91.5136L91.4066 23.1417C91.348 23.0457 91.2335 23.0089 91.1525 23.059C91.1128 23.0826 91.0653 23.0896 91.0205 23.0784C90.9756 23.0672 90.9369 23.0388 90.9129 22.9993L90.8197 22.8488L91.1568 22.5431C91.3421 22.375 91.4934 22.1344 91.4934 22.008V21.7786H90.849L90.7504 22.0347L90.6525 22.2907H89.7897V21.6078H89.4489V20.9047L89.5847 20.989C89.6592 21.0354 89.8307 21.005 89.9649 20.9223L90.2088 20.7708L90.2339 20.273L90.2589 19.7747L89.6896 19.9497L89.1208 20.1247L89.2097 20.2687L89.2987 20.4128H88.5968V20.2559C88.5968 20.17 88.5451 19.9646 88.4817 19.7998L88.3672 19.4999L88.6468 19.6072L88.9264 19.7149L89.0345 19.5399L89.1426 19.365L89.3807 19.4567L89.6193 19.5485V19.047L90.0879 19.0336L90.5566 19.0198L90.3436 18.9344L90.1311 18.848L90.2392 18.4169L90.3473 17.9858L90.113 17.8412L89.8797 17.6967L90.0847 17.1514C90.1976 16.8521 90.2498 16.5411 90.2003 16.461L90.1103 16.3154H90.6418V15.84L90.2584 15.7381C90.0475 15.6816 89.7705 15.5674 89.6432 15.4842L89.4116 15.3332L89.6406 14.6978L89.8701 14.0624L89.476 13.7422L89.0819 13.4221L89.1916 13.0764L89.3013 12.7302H89.5117C89.6273 12.7302 89.8067 12.8155 89.9111 12.9201L90.1007 13.11L90.2946 12.9905L90.4879 12.8705L90.301 12.6448L90.114 12.4191L90.2844 12.314L90.4538 12.2084L90.3899 11.7016L90.326 11.1936H90.85L90.7414 10.6121L90.6322 10.0306L90.8026 9.9719L90.9725 9.91321L91.0668 9.12201L91.161 8.33134L90.6029 8.24598L90.0453 8.16062L89.8488 8.31854L89.6523 8.47646L89.5634 8.25559L89.4749 8.03524L89.3045 8.28066L89.1341 8.52554L88.8737 8.30947L88.6138 8.09286L87.3697 8.16596C86.6854 8.20597 85.9148 8.29026 85.657 8.35375L85.1883 8.46899L85.1857 8.16649L85.183 7.86452L85.0392 8.09126C84.9609 8.21557 84.7895 8.29933 84.659 8.27799C84.528 8.25559 84.2723 8.302 84.0907 8.38043L83.7605 8.52341L83.6929 8.32227L83.6258 8.12061H81.765L81.8151 8.3991L81.8652 8.67813L81.4817 8.73948L81.0983 8.80137V8.63972C81.0983 8.55062 80.8224 8.34682 80.4858 8.18676L79.8734 7.896L79.7296 8.12861L79.5863 8.36069L79.1778 8.14195L78.7688 7.92267L76.6615 8.03258C75.5026 8.09286 74.4961 8.17876 74.4247 8.22251L74.2964 8.30253L74.4013 8.57623L74.5062 8.84992L74.266 8.76989C74.1339 8.72561 74.0258 8.58103 74.0258 8.44765C74.0258 8.31481 73.9257 8.14248 73.8037 8.06459L73.5817 7.92267L72.909 8.03684L72.2364 8.15048V7.71354L71.9861 8.04538L71.7358 8.37669L71.7305 8.16329C71.723 7.87519 71.3843 7.88906 71.3843 8.17716V8.40444L71.7677 8.5885C71.9786 8.68987 72.2907 8.81791 72.4611 8.87233L72.7711 8.97263L72.6545 9.33969L72.5384 9.70728L72.8984 9.61285L73.2584 9.51841L73.3702 9.69928L73.481 9.8796L73.6887 9.59577L73.8953 9.31194L74.1073 9.56803L74.3193 9.82358L74.2245 10.0706L74.1302 10.3182L74.3336 10.4126C74.4455 10.4649 74.3645 10.4649 74.1536 10.4126L73.7702 10.3166V10.6815H74.0258C74.364 10.6815 74.3432 10.8485 73.9406 11.3644L73.6072 11.7912L73.6035 11.5778C73.6014 11.4604 73.5135 11.3644 73.4086 11.3644H73.2168L73.4251 11.6157L73.6333 11.8669L73.3622 12.139L73.0906 12.4106L72.909 12.2975C72.8084 12.2356 72.6534 11.9923 72.5645 11.757L72.402 11.3297L72.1549 11.4247L71.9078 11.5196L72.0058 10.802C72.0601 10.4072 72.1725 10.0583 72.2556 10.0269C72.2979 10.0093 72.3345 9.98015 72.3613 9.94282C72.388 9.90549 72.4038 9.86142 72.4068 9.81558V9.66086L72.0138 9.69341C71.5036 9.73609 70.5822 9.35089 70.4656 9.04679L70.3746 8.80884L70.6866 8.64132L70.9987 8.47433L71.1063 8.5821L71.2139 8.68987L71.2112 8.53301C71.2096 8.44712 71.1526 8.29987 71.0834 8.20597L70.9582 8.03524L69.2088 7.97229L67.4598 7.90933L67.5653 8.1857L67.6718 8.46206H66.7829V7.93228L66.0869 7.99736L65.3903 8.06245L65.2497 8.2908L65.1086 8.51914L64.4546 8.51861H63.8006V8.1953L63.8001 7.87199L62.0053 7.84371L60.21 7.81544L59.9044 8.03951L59.5981 8.26359L59.7883 8.61891C59.8926 8.81417 60.0588 8.97423 60.1579 8.97423C60.2569 8.97423 60.4779 9.14709 60.6499 9.35836L60.962 9.74249L61.1463 9.26126L61.33 8.78003L61.7135 8.83445L62.0964 8.88887L62.1507 9.27353L62.2056 9.65873L61.9377 9.7617L61.6703 9.86413V10.363L61.9968 10.2595L62.3233 10.1554L62.4282 10.3256L62.5331 10.4963L62.7823 10.4003L63.031 10.3043L63.1423 10.5956L63.2542 10.8869L63.0209 11.0309L62.7882 11.175L62.229 10.8287L61.6703 10.483V10.8522H61.3636C60.9828 10.8522 60.1397 10.4707 60.1376 10.2973C60.1376 10.2269 60.0519 10.1693 59.948 10.1693H59.7595L59.8575 10.4254L59.9555 10.6815H59.7851C59.6913 10.6815 59.5699 10.5652 59.5156 10.4233L59.4165 10.165L59.6109 9.93029L59.8048 9.69661L59.367 9.58617L58.9292 9.47627L58.8243 9.20364L58.7199 8.93048L59.1119 8.63438L59.5039 8.33828L59.384 8.14408C59.318 8.03738 59.122 7.94988 58.9473 7.94988H58.631L58.5298 8.16329L58.4286 8.37669L58.4995 7.99256L58.5708 7.60843H58.4308C58.3535 7.60843 58.2454 7.70447 58.1911 7.82184L58.0915 8.03524L57.9919 7.82184C57.8535 7.5236 57.5323 7.55615 57.1435 7.9072C56.9625 8.07152 56.6408 8.22411 56.4299 8.24652L56.0465 8.28706V7.61857L55.7962 7.7146C55.6588 7.76795 55.5629 7.89013 55.5831 7.98669C55.6039 8.08379 55.5246 8.19797 55.4074 8.24118L55.1944 8.31907V7.77862H53.6808L53.5637 7.96749L53.4476 8.15635L53.3038 7.92481L53.16 7.69326L52.8138 7.90827L52.4676 8.12274V7.95095C52.4676 7.67299 52.1731 7.75355 52.0538 8.06352L51.9447 8.34895L52.1481 8.47486C52.2599 8.54422 52.4415 8.56556 52.5518 8.52394L52.7515 8.44712L52.6732 8.98063L52.5949 9.51415L52.2754 9.43092L51.9558 9.34716L51.8174 9.59417L51.6794 9.84119L51.3929 9.73075L51.1064 9.62085L51.2007 9.46773L51.2949 9.31514H50.7432L50.8625 9.12201L50.9813 8.92941L50.7448 9.00997L50.5078 9.09054L50.5675 9.49654L50.6271 9.90201L51.0787 10.3096L51.5303 10.7172L50.7336 10.6185L49.9364 10.5204L49.8746 10.706L49.8128 10.8917L48.8819 10.9205C48.3706 10.936 47.8173 10.8858 47.6533 10.8085C47.3082 10.6468 47.2565 10.2323 47.5681 10.1213L47.7811 10.0455L48.4367 10.3752C49.1024 10.7098 49.4576 10.6703 49.0906 10.3027C48.9793 10.1912 48.8888 10.0306 48.8888 9.94522V9.79051L49.1535 9.89241L49.4176 9.99377L49.3138 9.82518L49.2094 9.65659H49.9113V9.46026C49.9113 9.35249 49.66 9.01958 49.3521 8.72081L48.794 8.17663H48.5006C48.3392 8.17663 48.2071 8.24065 48.2071 8.31907C48.2071 8.3975 48.0537 8.46152 47.8663 8.46152H47.5254V8.71761C47.5254 8.99557 47.5574 9.01104 48.2412 9.06012L48.7013 9.0932L48.6673 8.92675C48.6486 8.83498 48.729 8.72508 48.8462 8.68186L49.0592 8.60397L49.1636 8.87606L49.268 9.14869L49.0672 9.3909L48.8664 9.63312L48.3584 9.61871L47.8503 9.60431L47.6794 9.2842L47.5084 8.96409L47.3667 9.05212C47.2885 9.10014 47.0222 8.9801 46.7745 8.78537L46.325 8.43058L45.8362 8.6013L45.3473 8.77203L45.1731 8.59757C45.0773 8.50154 44.9052 8.45459 44.7907 8.49247L44.583 8.56182L44.8749 8.85526L45.1673 9.14762L45.3313 9.04625L45.4953 8.94435L45.736 9.14442L45.9767 9.34449L46.1339 9.24739L46.291 9.14976L46.3991 9.69074L46.5072 10.2317L46.292 10.3683C45.9965 10.5561 45.6918 10.5444 45.5656 10.3395C45.5076 10.2456 45.3121 10.1688 45.131 10.1688H44.8014L44.5884 10.5102L44.3759 10.8517H43.7757V10.6079C43.7757 10.2957 44.2401 9.82732 44.5495 9.82732H44.7875L44.6832 9.55523L44.5793 9.28313L44.117 9.35142L43.6542 9.41971L43.7426 9.08253L43.8305 8.74535L43.5531 8.85205L43.2751 8.95876L43.1866 8.81471L43.0977 8.67119L41.9458 8.75976C41.312 8.80777 40.6591 8.91714 40.4951 9.00197L40.1968 9.15669V8.97956C40.1974 8.93357 40.1798 8.8892 40.1479 8.85613C40.116 8.82306 40.0723 8.80395 40.0264 8.80297C39.9327 8.80297 39.856 8.91821 39.856 9.05906V9.31514H40.2197L40.1036 9.6822L39.9875 10.0493L40.6032 9.94896L41.2194 9.84866V10.013C41.2194 10.1037 41.025 10.2515 40.788 10.3416L40.3561 10.5059L40.003 10.2947L39.6494 10.0834L39.4544 10.3971C39.3474 10.5694 39.177 10.8287 39.0763 10.9728L38.8926 11.2347L38.5379 11.1222C38.343 11.0603 38.1332 10.8794 38.0724 10.7204L37.9617 10.4313L38.1321 10.3742L38.303 10.3176L38.2093 10.0722L38.1156 9.82732H38.6631V9.65659C38.6631 9.61131 38.6451 9.56789 38.6131 9.53587C38.5812 9.50386 38.5378 9.48587 38.4926 9.48587C38.3989 9.48587 38.3222 9.36476 38.3222 9.21751V8.94862L38.024 9.00731L37.7257 9.06599L37.7247 9.4896C37.7231 10.0311 37.4659 10.4185 37.0888 10.4483L36.7922 10.4718L36.8971 10.3021L37.0015 10.132L36.6537 10.2429L36.3059 10.3534L36.1957 10.1746L36.0849 9.99537L36.3262 9.90308L36.5674 9.81025L36.487 9.38824L36.4066 8.96623L36.2138 9.11561C36.1083 9.19831 35.8442 9.30928 35.628 9.36263L35.2339 9.45919L35.1407 9.21644C35.0896 9.08307 34.9814 8.9737 34.901 8.9737H34.754L34.852 9.22978L34.9506 9.48587H34.4238L34.5234 10.1005L34.623 10.7151L34.2476 10.4846L33.8726 10.2541L33.7028 10.5529C33.6096 10.7172 33.4221 10.8517 33.2863 10.8517H33.0392V10.3624L33.3715 10.2568L33.7033 10.1512L33.6085 9.90414L33.5142 9.65659H32.7266L32.6408 9.44319L32.5551 9.22978L32.5412 9.52855L32.5279 9.82732H32.2824C32.1471 9.82732 31.9911 9.90094 31.9357 9.99111L31.8345 10.1549L32.0534 10.5086L32.2723 10.8623L32.0167 11.0251C31.5906 11.2966 31.3685 11.2171 31.0527 10.6809L30.7502 10.1688H29.9998L29.9136 9.95536L29.8273 9.74196L29.6665 9.97137L29.5056 10.2008L28.9763 9.92655L28.4469 9.65233L28.5459 9.91055L28.6445 10.1688H28.3047L28.3846 9.57924L28.4634 8.98917L28.3036 8.70267L28.1428 8.41564L27.7791 8.78003L27.4153 9.14442V8.63225H26.5632V9.15509L26.1798 9.30074L25.7963 9.44639L25.562 9.25699C25.4342 9.15296 25.0188 9.04732 24.6412 9.02171L23.9542 8.97583L23.7678 9.13055L23.5809 9.28527L23.1122 9.19457L22.6435 9.10441V8.86859C22.6435 8.58903 22.3581 8.55062 22.2691 8.81791L22.2074 9.00411L21.3606 9.06653C20.8142 9.10973 20.2692 9.16844 19.7262 9.24259L18.939 9.35516L18.8219 9.16469L18.7036 8.9737H17.7013V9.32742L17.3781 9.15402L17.0543 8.9801L16.7603 9.43038L16.4658 9.88014L16.7427 9.77343L17.0197 9.66726V9.99804H15.6792L15.5711 10.3395L15.463 10.6809L15.2611 10.6756C15.1504 10.6724 14.9144 10.5598 14.7366 10.4249C14.5587 10.2899 14.3478 10.22 14.2679 10.2701L14.1225 10.3598V10.0183C14.1225 9.83052 14.2045 9.62618 14.3047 9.5643L14.4863 9.45173L14.58 9.81025C14.6317 10.0076 14.7387 10.1688 14.8186 10.1688H14.964L14.866 9.91268L14.768 9.65659L15.0843 9.62992C15.2585 9.61445 15.5349 9.61391 15.6989 9.62725L15.9971 9.65233V9.31514H15.1621L15.0257 9.07506L14.8894 8.83552L14.3782 8.80137C14.097 8.78216 13.7902 8.77736 13.6965 8.7907L13.526 8.81364L13.836 9.04946L14.146 9.2842L13.804 9.39357L13.4627 9.50187L13.4094 9.8764L13.3556 10.2504L13.0574 10.3075L12.7592 10.3646V9.64592L13.0041 9.55149L13.2491 9.45759L13.1565 9.21591L13.0638 8.9737H13.4408V8.44925L13.1261 8.61838L12.8113 8.78697L12.5898 8.58156L12.3683 8.37616L12.4955 8.60024L12.6223 8.82538L12.5126 9.41171L12.4029 9.99804H11.93L11.8218 10.3395L11.7137 10.6809H10.8845V10.5102C10.8845 10.2707 10.6651 10.2979 10.2779 10.5849L9.94722 10.8303L10.2747 11.0736L10.6017 11.3164L10.9564 11.2257L11.3106 11.1339L11.0992 11.3926C10.9825 11.5351 10.9341 11.6978 10.9905 11.7549C11.0475 11.8115 11.1114 12.2271 11.1332 12.6779L11.1727 13.4979L10.8158 13.898L10.4585 14.2992L10.8845 14.264C11.1189 14.2443 11.4491 14.2373 11.6189 14.2475L11.9273 14.2662L11.8293 14.4251L11.7313 14.5841L11.9225 14.7026L12.1142 14.821L11.8916 14.9587L11.6695 15.0958L11.3734 14.9373C11.2105 14.8498 10.8616 14.7842 10.5975 14.7917L10.1176 14.8055L10.3237 14.8893L10.5304 14.9731L10.4249 15.5156C10.3669 15.8144 10.2369 16.1132 10.1357 16.1793L9.95201 16.2994L10.3259 16.6488C10.777 17.0698 10.8845 17.0842 10.8845 16.7235V16.4488L11.2999 16.5528L11.7153 16.6574L11.8266 16.4781L11.9374 16.2983L12.1776 16.4984C12.5499 16.8078 12.4678 16.9503 11.8527 17.066L11.2866 17.1727L10.9149 17.6758C10.7109 17.9527 10.5437 18.2734 10.5437 18.3892V18.5994L10.7748 18.283L11.0054 17.9666L11.2983 18.0792L11.5912 18.1918L11.5327 18.4911L11.4741 18.7904H10.4697L10.2779 19.1734C10.173 19.3842 10.0426 19.5122 9.98823 19.4578C9.93391 19.4039 9.88971 19.7123 9.88971 20.1433V20.9271L10.0037 20.8567L10.1171 20.7862L10.1097 21.984L10.1027 23.1817L10.328 23.2681L10.5533 23.3551L10.4398 23.719C10.3775 23.919 10.2593 24.1266 10.1768 24.1799L10.0276 24.2765L9.96373 25.2896L9.89982 26.3022L10.0665 26.4073C10.2705 26.5354 10.3711 27.6029 10.2018 27.8388C10.1342 27.9327 10.0255 28.2325 9.96054 28.5056L9.84177 29.0018L10.0644 29.1485L10.2875 29.2963L9.9893 29.4724L9.69106 29.6484V30.6354L9.86148 30.7411L10.0319 30.8467V31.8711L9.87905 31.7766L9.72674 31.6822L9.65005 32.4067C9.60798 32.8052 9.61703 33.208 9.67029 33.3019C9.72355 33.3958 9.78372 33.5863 9.80503 33.7256C9.8258 33.8648 9.91047 34.0014 9.99249 34.0286L10.1416 34.0787L10.0676 34.5866L9.99302 35.0945H10.3403L10.2481 36.1157L10.1555 37.1374L10.3562 37.3796L10.5575 37.6223L10.3371 37.7114L10.1171 37.8L10.3578 37.9686L10.5985 38.1366L10.3152 38.4205C9.97971 38.7566 9.94775 39.1316 10.2449 39.2437L10.458 39.3237L10.1427 39.5665L9.8274 39.8097L9.73473 40.9947L9.64206 42.1796L9.47857 42.2863L9.31507 42.3925L9.51105 42.759C9.61863 42.9607 9.66443 43.1944 9.61224 43.2781L9.51851 43.4307L9.7326 43.5177L9.94669 43.6046L9.70171 43.7754L9.45726 43.9461L9.66656 44.1984L9.87586 44.4513L9.65538 44.5404L9.43543 44.629L9.67189 44.7944L9.90835 44.9598L9.81568 45.4463L9.72248 45.9318L9.88651 46.2381L10.05 46.5443L9.84231 47.1205L9.63461 47.6956L9.91846 47.98L10.2023 48.2649V49.4557L10.0319 49.35L9.86148 49.2444V49.5112C9.86148 49.6568 9.92911 49.7769 10.0122 49.7769C10.0947 49.7769 10.2039 49.9337 10.2534 50.1258L10.3445 50.4747L10.1192 50.91L9.89397 51.3454L9.95787 52.7379C9.99249 53.504 10.0234 54.38 10.0266 54.6852L10.0319 55.24L10.3301 55.2454L10.6284 55.2507L10.3727 55.4588C10.1123 55.6706 10.0729 55.9758 10.2471 56.4351C10.3003 56.576 10.3834 56.9777 10.4324 57.3282L10.5208 57.9652L10.3727 58.057L10.2247 58.1488L10.3205 59.7248L10.4169 61.3008L10.7359 62.0167C10.9112 62.411 11.0544 62.9291 11.0544 63.1691V63.6055H10.6774L10.7732 63.8563L10.8691 64.107L10.7136 64.2031L10.5581 64.2991L10.6513 64.5925C10.7024 64.7542 10.8297 65.0636 10.9335 65.2808L11.1231 65.6756L10.9186 66.0037C10.8057 66.1851 10.7136 66.5666 10.7136 66.8531V67.3738L10.949 67.7515C11.0784 67.9595 11.2334 68.341 11.293 68.5992L11.4017 69.0687H11.0544V69.9426L10.884 69.837L10.7136 69.7314V69.8781C10.7136 69.9586 10.7828 70.0979 10.8664 70.187C10.9506 70.2761 11.0597 70.8725 11.1087 71.5122L11.1982 72.6753L10.9799 72.759L10.7604 72.8433L10.7839 73.5065C10.7961 73.8714 10.8584 74.2219 10.9223 74.2854L11.0379 74.4017L10.9421 74.8803L10.8462 75.3594L11.121 75.7521C11.2717 75.9676 11.3953 76.2402 11.3953 76.3571V76.5699L11.1119 76.4611L10.8281 76.3517L10.9543 76.5566C11.0235 76.6686 11.1087 76.9855 11.1434 77.2608C11.1785 77.5351 11.3255 77.9411 11.4704 78.163L11.734 78.5664L11.8437 79.3661L11.9529 80.1658H11.4427L11.5295 80.6353C11.5774 80.8935 11.6717 81.1432 11.7388 81.1902C11.8059 81.2371 11.9113 81.4393 11.9736 81.6394L12.0871 82.0032L11.8261 82.1035C11.6828 82.1585 11.5657 82.2828 11.5657 82.3799V82.556H12.2474V82.7267C12.2474 82.8206 12.1781 82.8974 12.0929 82.8974H11.9385L12.037 83.2815L12.1361 83.6657L11.8469 83.4277L11.5577 83.1903L11.4522 83.296L11.3468 83.4016L11.5486 83.6449L11.7505 83.8887L11.5497 83.9554L11.3495 84.0226L11.6328 84.3064L11.9166 84.5903L12.1499 84.5006L12.3832 84.4105L12.5051 84.6079L12.6265 84.8053L12.437 84.9952C12.3326 85.0998 12.2474 85.2902 12.2474 85.4188V85.6519L12.5882 85.5436L12.929 85.4353L12.8864 85.8307L12.8438 86.2265L13.7811 86.1695L14.7185 86.1124L15.096 85.8707C15.5386 85.5874 15.7181 85.5602 15.5706 85.7997L15.4651 85.9705L15.6036 85.9598C15.6792 85.9534 16.2011 85.8499 16.7635 85.7293L17.786 85.51L17.7487 85.1857L17.7109 84.8607L17.8052 85.0742L17.8995 85.2876H19.576V85.629H19.9919C20.2209 85.629 20.451 85.6989 20.5037 85.7848L20.5996 85.94L21.1534 85.7421C21.457 85.6327 21.7696 85.4668 21.8468 85.3729L21.988 85.2022L22.0742 85.4156L22.1605 85.629H23.1271L23.6735 85.3302L24.2194 85.0315L24.2849 85.2059L24.3499 85.3799L27.2886 85.3484L30.2272 85.3164L30.5447 85.191C30.9973 85.0123 31.671 85.0037 32.3271 85.1686L32.8938 85.3105L33.3012 85.0432C33.5254 84.896 33.7885 84.7754 33.8854 84.7754C34.1805 84.7754 34.0825 85.087 33.7635 85.1622L33.4652 85.2331L33.9595 85.3708L34.4542 85.5084L34.7668 85.3126C34.9388 85.2049 35.2951 85.1168 35.5593 85.1168H36.0386L36.2399 84.9157L36.4407 84.714L36.8598 84.9386L37.2789 85.1632L38.3121 85.167L39.3447 85.1707V85.4775L40.7496 85.3671C41.5224 85.3057 42.227 85.2113 42.3154 85.1569L42.4751 85.0576L42.145 84.9285L41.8158 84.7994L42.104 84.7871C42.2627 84.7807 42.4341 84.8431 42.4858 84.9264C42.5369 85.0101 42.8676 85.1318 43.2197 85.1985C43.5722 85.2641 43.9418 85.3852 44.0409 85.4668L44.2209 85.6162L45.4042 85.6125C46.5706 85.6093 49.08 85.7122 49.9108 85.7976C50.1451 85.8216 50.437 85.8317 50.56 85.8205L50.7831 85.7997L50.6985 85.6626L50.6138 85.5255L51.4126 85.5543L52.2115 85.5831L52.3553 85.3927L52.4991 85.2022L52.4032 85.501L52.3073 85.7997H52.4586C52.5417 85.7997 52.744 85.8515 52.9086 85.915L53.2079 86.0297L53.1035 85.7565L52.9986 85.4834L53.2441 85.279L53.4896 85.0752V85.7597L53.8672 85.859L54.2443 85.9576L54.3641 85.764L54.4834 85.5698L55.3073 85.5773C55.7599 85.581 56.4187 85.6093 56.7702 85.6407L57.4093 85.6968V85.8461C57.4093 85.9278 57.5355 85.8686 57.6894 85.7138L57.9701 85.4332L58.0734 85.5735C58.1299 85.6509 58.3679 85.7234 58.6022 85.7352L59.0283 85.7554L59.1668 85.518L59.3052 85.2806L59.4677 85.3809L59.6301 85.4823L59.5321 85.6407L59.4341 85.7997H59.6045C59.6983 85.7997 59.8175 85.7304 59.8708 85.645L59.9661 85.4903L60.3144 85.5815L60.6627 85.6728L60.8971 85.3526L61.1308 85.032L61.2587 85.16L61.3859 85.2876H60.9679L61.0733 85.4583C61.1314 85.5522 61.3252 85.629 61.5042 85.629H61.829L61.7385 85.39L61.6464 85.1515L61.821 85.0432L61.9957 84.9354L61.8929 84.6671L61.7907 84.3993L62.1134 84.4697L62.4367 84.5396L62.3962 84.737L62.3557 84.9338L62.6092 84.8362C62.7488 84.7829 62.8627 84.6751 62.8627 84.5972C62.8627 84.5188 62.997 84.4606 63.161 84.4675C63.325 84.4739 63.5865 84.4249 63.742 84.3592L64.0248 84.2387L64.1366 84.5924C64.1984 84.7871 64.3204 84.9461 64.4082 84.9461C64.4956 84.9461 64.567 85.0229 64.567 85.1168V85.2876H63.8437L64.0711 85.5623L64.2991 85.8371L64.3587 85.6573L64.4184 85.4775L64.641 85.5629L64.8631 85.6482L65.4664 85.3089L66.0693 84.9696L66.3196 85.4871L66.5699 86.0057L66.6913 85.8088L66.8128 85.6125L66.7137 85.3537L66.6141 85.095L66.4139 85.2193L66.2131 85.3436L66.3223 85.0597L66.4309 84.7754H66.2376C66.1311 84.7754 66.0885 84.7306 66.1428 84.6762C66.1971 84.6217 66.4016 84.6628 66.5976 84.7674L66.9528 84.9584L66.9555 84.7386L66.9582 84.5193L67.1232 84.7754L67.2883 85.0315L67.291 84.8079L67.2937 84.5844L67.4481 84.6804L67.6026 84.7759L67.5227 85.0822L67.4428 85.3889L67.9221 85.3783L68.4014 85.3676L68.3615 84.7076L68.3215 84.0482L68.1245 83.8103L67.9274 83.5723L68.0366 83.4624L68.1458 83.3525V83.7713L68.3045 83.6731L68.4632 83.575L68.5995 83.7911C68.6746 83.91 68.7444 84.3102 68.7545 84.681L68.7726 85.3548L68.9942 85.4284L69.2157 85.5026L69.0921 85.3014L68.9681 85.1003L69.0703 84.8335L69.1726 84.5662L69.4085 84.7626L69.6444 84.9589L69.5571 85.294L69.4697 85.629H69.637C69.7291 85.629 69.9895 85.4834 70.2153 85.3046L70.627 84.9808L70.9199 85.1958C71.3002 85.4738 71.297 85.6493 70.9156 85.5063L70.6174 85.3943L70.8544 85.6866C70.9849 85.8472 71.1313 85.939 71.1793 85.8904C71.2277 85.8424 71.3816 85.8974 71.5206 86.0131L71.7741 86.2239L71.6501 85.8328L71.5265 85.4417L71.7315 85.1942L71.9376 84.9461L71.6181 84.9258C71.4396 84.9147 71.2604 84.9176 71.0823 84.9344C70.963 84.9504 70.7713 84.8629 70.6563 84.7412L70.447 84.5193V83.5878L70.6174 83.6267C70.7111 83.6481 70.782 83.8001 70.7745 83.9644C70.7671 84.1288 70.8246 84.2632 70.9023 84.2632C70.9801 84.2632 71.0435 84.1821 71.0435 84.0824V83.9015L71.1947 83.9954L71.3454 84.0888L71.5563 83.8348C71.6719 83.6945 71.838 83.5803 71.9248 83.5803H72.083L71.9233 83.8663L71.7635 84.1517L72.3067 84.6772L72.8499 85.2022L72.7807 85.5436L72.7109 85.8851L73.1551 85.4711C73.4001 85.2438 73.5998 84.9557 73.5998 84.8309C73.5998 84.5118 73.8831 84.5492 74.0114 84.8853L74.119 85.1665L73.8618 85.4514L73.6046 85.7362L73.8069 85.939C73.9177 86.0499 74.0748 86.1412 74.1552 86.1412H74.3017L74.1994 85.9758L74.0982 85.8104L74.4274 85.605L74.757 85.3985L74.4066 85.1147L74.0567 84.8309L74.176 84.6377L74.2948 84.4451L75.0483 84.8117L75.8019 85.1787L75.8743 85.4465L75.9462 85.7144L75.9713 85.2022L75.9963 84.69L76.2466 85.0213L76.4969 85.3526V84.6409L76.7334 84.5502L76.9698 84.4595L76.8835 84.7882L76.7983 85.1168H77.3693L77.2713 84.9578L77.1733 84.7989L77.3346 84.6991L77.496 84.5993L77.5935 84.7572L77.6909 84.9152L77.1797 85.3462L76.6684 85.7768L77.0087 85.8851L77.349 85.9934L77.3543 86.281L77.3597 86.568L77.5386 86.2596L77.7175 85.9518L77.9396 86.1358L78.1617 86.3204L78.2469 86.0969C78.2948 85.9742 78.3103 85.6648 78.2821 85.4097L78.2315 84.9461H78.7129V84.4339H78.894C78.9941 84.4339 79.2268 84.515 79.4116 84.6143L79.7477 84.7941L80.293 84.522L80.8384 84.2493L80.8969 84.427C80.93 84.5246 81.0844 84.6031 81.2405 84.602L81.5248 84.5993L81.2703 84.4382L81.0162 84.2776L81.1851 84.116C81.2783 84.0274 81.5078 83.9276 81.6953 83.894L82.0361 83.8327L82.0915 83.44L82.1474 83.0473L82.3897 82.954C82.5229 82.9028 82.6326 82.7582 82.6326 82.6333C82.6326 82.5079 82.7125 82.3559 82.8105 82.2951L82.9883 82.1852L83.2514 82.4039L83.515 82.6232L83.2338 82.8291L82.9526 83.0351L83.1257 83.1423L83.2993 83.2495L83.2088 83.4848C83.1215 83.7142 82.5362 83.9426 82.2182 83.8716L82.0606 83.8364L81.9243 84.3464L81.7879 84.8565L82.0398 85.1083L82.2917 85.3606V85.1536C82.2924 85.127 82.2879 85.1005 82.2784 85.0756C82.2689 85.0508 82.2545 85.028 82.2362 85.0087C82.2179 84.9894 82.196 84.9739 82.1717 84.963C82.1474 84.9522 82.1213 84.9463 82.0947 84.9456H81.8987L82.3082 84.6079L82.8941 84.1229C83.122 83.934 83.7163 84.0205 83.7941 84.2541C83.956 84.7412 84.5072 84.2851 84.5072 83.663V83.4325L84.1664 83.3242L83.8255 83.2159L83.8282 82.9284L83.8308 82.6413L83.956 82.8201C84.0247 82.9188 84.2537 83.01 84.4646 83.0228L84.848 83.0468V82.8899C84.848 82.8035 84.6563 82.6851 84.422 82.6259L83.9959 82.5192V82.206C83.9959 82.0342 84.0726 81.8459 84.1664 81.7877L84.3368 81.6821V82.0438H84.9812L85.0781 82.2972L85.1756 82.5501L85.4685 82.4381L85.7608 82.325L85.4743 82.7347C85.1239 83.2362 85.1133 83.4096 85.4339 83.4096C85.5686 83.4096 85.7342 83.4987 85.8013 83.607L85.9233 83.8044L85.5558 83.7084L85.1883 83.6123V83.8113C85.1883 83.9207 85.3417 84.1064 85.5292 84.2237L85.87 84.4371V84.1896C85.87 84.053 85.9393 83.8988 86.0245 83.846L86.1789 83.7505L86.0836 84.1149L85.9888 84.4798L86.2274 84.3982L86.4665 84.3166L86.4873 83.735C86.4985 83.4149 86.5176 83.0111 86.5299 82.8366L86.5512 82.5197L86.8494 82.6456C87.014 82.715 87.2861 82.7667 87.4555 82.7592L87.7628 82.7464L87.857 82.9929L87.9513 83.2389H88.4657L88.3805 83.5675L88.2943 83.8962L88.5121 83.8124L88.7294 83.7292L88.6431 83.3984L88.5568 83.0681H88.674C88.7384 83.0681 88.919 83.1962 89.0761 83.353L89.3604 83.6385L89.149 83.7089C89.0324 83.7478 88.9376 83.8636 88.9376 83.9655V84.1522L89.3317 83.7809C90.0698 83.0863 90.4149 83.4203 89.7865 84.2205L89.4425 84.6585L89.779 84.9733C89.9644 85.1462 90.2152 85.2886 90.3361 85.2902L90.5566 85.2929L90.3862 85.4183C90.2924 85.4876 90.1918 85.717 90.1625 85.9278L90.1092 86.3119H90.2903C90.3899 86.3119 90.4714 86.3903 90.4714 86.4864V86.6614L90.0363 86.3759L89.6017 86.0905L89.7806 85.9112C90.0357 85.6557 90.0027 85.5154 89.6885 85.5154H89.4174L89.5138 85.9987L89.6108 86.4826L89.3168 86.5077C89.1549 86.521 88.7544 86.5173 88.4263 86.4986L87.8299 86.4645L88.3049 86.7232L88.7805 86.9815L89.1597 86.8081L89.5394 86.6347L89.9628 86.8043L90.3862 86.9735L90.0736 86.9841L89.7609 86.9948L89.8355 87.2082L89.9101 87.4216L90.1779 87.3747C90.3249 87.3485 90.4943 87.4067 90.5539 87.5027L90.6626 87.6788L91.1206 87.5667C91.373 87.5048 91.6334 87.3709 91.6995 87.269V87.2685ZM53.9162 85.4599L53.8209 85.3052L54.1665 85.1195L54.5121 84.9338V85.1777C54.5121 85.3121 54.3998 85.4652 54.2618 85.518L54.0115 85.6141L53.9162 85.4599ZM56.9247 85.2764L56.9832 84.8607H57.2815C57.7251 84.8607 57.7182 85.1254 57.2655 85.4263L56.8661 85.692L56.9247 85.2758V85.2764ZM13.1799 85.279L13.0659 85.0939L13.1708 84.9888L13.2763 84.8837L13.4584 85.0662L13.6411 85.2491L13.4675 85.3564L13.2939 85.4636L13.1799 85.279ZM24.5475 84.8335L24.6082 84.5193H25.1146V85.0267L24.8004 85.0875L24.4873 85.1478L24.5475 84.8335ZM59.6248 84.9461C59.6248 84.8522 59.7446 84.7754 59.8905 84.7754H60.1563L60.0508 84.9461C59.9928 85.04 59.8735 85.1168 59.7851 85.1168C59.6967 85.1168 59.6248 85.04 59.6248 84.9461ZM90.5135 84.7941C89.9154 84.523 89.8232 84.3523 90.1971 84.2083L90.4346 84.1176L90.8229 84.531C91.3064 85.0464 91.2239 85.1163 90.5135 84.7941ZM50.4189 84.6858L50.2032 84.4259L50.3086 84.3203L50.4141 84.2147L50.6734 84.4307C50.9589 84.6676 51.0185 84.9461 50.7837 84.9461C50.7017 84.9461 50.5371 84.8287 50.4189 84.6858ZM60.3064 84.7754C60.3064 84.7301 60.3244 84.6867 60.3564 84.6547C60.3883 84.6226 60.4317 84.6047 60.4769 84.6047C60.5221 84.6047 60.5654 84.6226 60.5974 84.6547C60.6293 84.6867 60.6473 84.7301 60.6473 84.7754C60.6473 84.8207 60.6293 84.8641 60.5974 84.8961C60.5654 84.9281 60.5221 84.9461 60.4769 84.9461C60.4317 84.9461 60.3883 84.9281 60.3564 84.8961C60.3244 84.8641 60.3064 84.8207 60.3064 84.7754ZM65.4063 84.9034C65.3988 84.88 65.3685 84.7455 65.3386 84.6047C65.2841 84.3618 65.2255 84.12 65.1629 83.8791L65.0415 83.4096H65.5857L65.5581 83.7937C65.5491 84.0535 65.5823 84.3129 65.6566 84.562L65.7828 84.9461H65.6012C65.5011 84.9461 65.4132 84.9269 65.4063 84.9034ZM46.2542 84.6164L46.1562 84.4574L46.3053 84.3651C46.4704 84.2632 46.6728 84.411 46.6728 84.6329C46.6728 84.8255 46.3756 84.8138 46.2542 84.6164ZM64.4727 84.5897L64.3582 84.4041L64.5329 84.2291L64.7075 84.0541L64.8929 84.1688C64.9946 84.2317 65.0782 84.3939 65.0782 84.5294V84.7754H64.8327C64.6974 84.7754 64.5355 84.6916 64.4727 84.5897ZM16.2048 84.0925L16.2192 83.5803H16.6788V84.6047H16.1905L16.2048 84.0925ZM35.5955 84.4238V84.2429L35.7659 84.3486C35.8596 84.4067 35.9363 84.4878 35.9363 84.5294C35.9363 84.5705 35.8596 84.6047 35.7659 84.6047C35.6722 84.6047 35.5955 84.523 35.5955 84.4238ZM61.329 84.4339C61.329 84.3887 61.3469 84.3452 61.3789 84.3132C61.4108 84.2812 61.4542 84.2632 61.4994 84.2632C61.5446 84.2632 61.5879 84.2812 61.6199 84.3132C61.6518 84.3452 61.6698 84.3887 61.6698 84.4339C61.6698 84.4792 61.6518 84.5226 61.6199 84.5547C61.5879 84.5867 61.5446 84.6047 61.4994 84.6047C61.4542 84.6047 61.4108 84.5867 61.3789 84.5547C61.3469 84.5226 61.329 84.4792 61.329 84.4339ZM21.2802 84.1778V83.8967L21.5784 83.9543L21.8766 84.0119L21.8431 84.18C21.8245 84.2728 21.6902 84.3736 21.5449 84.4041L21.2802 84.459V84.1778ZM39.1743 84.188C39.1743 84.0525 39.2425 83.8999 39.3256 83.8481L39.4763 83.7548L39.6648 83.982L39.8528 84.2093L39.741 84.3214C39.6792 84.3832 39.5263 84.4339 39.4017 84.4339H39.1743V84.188ZM69.2759 84.2269C69.393 84.0375 69.8095 84.0594 69.9347 84.2621L70.039 84.4318L69.6162 84.3966L69.1928 84.3614L69.2759 84.2269ZM74.3864 84.1688L74.2852 83.9042L74.4428 84.0018L74.601 84.0994L74.7687 83.7985C74.9599 83.4571 75.0409 83.5035 75.2086 84.0498L75.3263 84.4339H74.4875L74.3864 84.1688ZM77.0928 84.2104C76.9054 84.0984 76.7307 83.9991 76.7051 83.989C76.6796 83.9788 76.7067 83.8444 76.7664 83.6902C76.9075 83.321 77.2814 83.3317 77.414 83.7084C77.472 83.8727 77.5636 84.1032 77.6185 84.2205L77.7175 84.4339L77.5759 84.4238C77.4976 84.4185 77.2803 84.3224 77.0928 84.2104ZM62.1225 84.0498C62.1656 83.9794 62.3499 83.9218 62.532 83.9218C62.7142 83.9218 62.8627 83.9794 62.8627 84.0498C62.8627 84.1202 62.6785 84.1778 62.4527 84.1778H62.0431L62.1225 84.0498ZM67.0237 83.6534C67.1249 83.3312 67.2772 83.0681 67.364 83.0681H67.5211L67.4156 83.1738L67.3097 83.2794L67.5653 83.5355C67.7053 83.6758 67.7916 83.8769 67.757 83.9815L67.6931 84.1725L67.267 84.2056L66.841 84.2381L67.0237 83.6534ZM75.6017 84.1453C75.2944 84.0653 75.1809 83.751 75.46 83.751C75.755 83.751 76.1555 83.958 76.1555 84.1106C76.1555 84.2701 76.0927 84.2739 75.6017 84.1453ZM78.1931 83.9356L78.3832 83.5803H78.9073L78.8503 83.8791L78.7933 84.1778L78.3987 84.2344L78.0035 84.2904L78.1931 83.9356ZM44.6278 83.9218C44.6278 83.8765 44.6457 83.8331 44.6777 83.801C44.7096 83.769 44.753 83.751 44.7982 83.751C44.8434 83.751 44.8867 83.769 44.9187 83.801C44.9507 83.8331 44.9686 83.8765 44.9686 83.9218C44.9686 83.967 44.9507 84.0105 44.9187 84.0425C44.8867 84.0745 44.8434 84.0925 44.7982 84.0925C44.753 84.0925 44.7096 84.0745 44.6777 84.0425C44.6457 84.0105 44.6278 83.967 44.6278 83.9218ZM83.9949 83.9218C83.9949 83.8765 84.0128 83.8331 84.0448 83.801C84.0767 83.769 84.1201 83.751 84.1653 83.751C84.2105 83.751 84.2538 83.769 84.2858 83.801C84.3178 83.8331 84.3357 83.8765 84.3357 83.9218C84.3357 83.967 84.3178 84.0105 84.2858 84.0425C84.2538 84.0745 84.2105 84.0925 84.1653 84.0925C84.1201 84.0925 84.0767 84.0745 84.0448 84.0425C84.0128 84.0105 83.9949 83.967 83.9949 83.9218ZM19.9557 83.5483C19.9799 83.4872 20.0164 83.4316 20.0628 83.3851C20.1092 83.3386 20.1647 83.3021 20.2257 83.2778L20.4281 83.2106V83.751H19.8886L19.9557 83.5483ZM25.7111 83.5803C25.7111 83.535 25.7291 83.4916 25.761 83.4596C25.793 83.4276 25.8363 83.4096 25.8815 83.4096C25.9267 83.4096 25.9701 83.4276 26.002 83.4596C26.034 83.4916 26.0519 83.535 26.0519 83.5803C26.0519 83.6256 26.034 83.669 26.002 83.701C25.9701 83.7331 25.9267 83.751 25.8815 83.751C25.8363 83.751 25.793 83.7331 25.761 83.701C25.7291 83.669 25.7111 83.6256 25.7111 83.5803ZM80.9273 83.5803C80.9273 83.535 80.9453 83.4916 80.9772 83.4596C81.0092 83.4276 81.0525 83.4096 81.0977 83.4096C81.1429 83.4096 81.1863 83.4276 81.2182 83.4596C81.2502 83.4916 81.2681 83.535 81.2681 83.5803C81.2681 83.6256 81.2502 83.669 81.2182 83.701C81.1863 83.7331 81.1429 83.751 81.0977 83.751C81.0525 83.751 81.0092 83.7331 80.9772 83.701C80.9453 83.669 80.9273 83.6256 80.9273 83.5803ZM30.9941 83.4096C30.9941 83.3643 31.0121 83.3209 31.0441 83.2889C31.076 83.2569 31.1194 83.2389 31.1646 83.2389C31.2098 83.2389 31.2531 83.2569 31.2851 83.2889C31.317 83.3209 31.335 83.3643 31.335 83.4096C31.335 83.4549 31.317 83.4983 31.2851 83.5303C31.2531 83.5623 31.2098 83.5803 31.1646 83.5803C31.1194 83.5803 31.076 83.5623 31.0441 83.5303C31.0121 83.4983 30.9941 83.4549 30.9941 83.4096ZM46.782 83.4619C46.5903 83.2698 46.6648 83.0681 46.9284 83.0681C47.069 83.0681 47.1841 83.1407 47.1841 83.2287C47.1841 83.4443 46.9178 83.5985 46.782 83.4619ZM56.7276 83.4096C56.7276 83.3643 56.7456 83.3209 56.7775 83.2889C56.8095 83.2569 56.8528 83.2389 56.898 83.2389C56.9432 83.2389 56.9866 83.2569 57.0185 83.2889C57.0505 83.3209 57.0685 83.3643 57.0685 83.4096C57.0685 83.4549 57.0505 83.4983 57.0185 83.5303C56.9866 83.5623 56.9432 83.5803 56.898 83.5803C56.8528 83.5803 56.8095 83.5623 56.7775 83.5303C56.7456 83.4983 56.7276 83.4549 56.7276 83.4096ZM29.9716 83.2389C29.9716 83.145 30.0526 83.0681 30.1522 83.0681H30.3327L30.2272 83.2389C30.1692 83.3328 30.0882 83.4096 30.0467 83.4096C30.0057 83.4096 29.9716 83.3328 29.9716 83.2389ZM43.7757 83.2389C43.7757 83.1936 43.7936 83.1502 43.8256 83.1181C43.8575 83.0861 43.9009 83.0681 43.9461 83.0681C43.9913 83.0681 44.0346 83.0861 44.0666 83.1181C44.0986 83.1502 44.1165 83.1936 44.1165 83.2389C44.1165 83.2841 44.0986 83.3276 44.0666 83.3596C44.0346 83.3916 43.9913 83.4096 43.9461 83.4096C43.9009 83.4096 43.8575 83.3916 43.8256 83.3596C43.7936 83.3276 43.7757 83.2841 43.7757 83.2389ZM69.6226 83.296C69.553 83.2149 69.5129 83.1126 69.5091 83.0057V82.8291L69.711 83.0313C69.8218 83.1423 69.8729 83.273 69.8244 83.3216C69.7765 83.3696 69.6854 83.3584 69.6226 83.296ZM85.7843 83.2389L85.6788 83.0681H85.8599C85.959 83.0681 86.0399 83.145 86.0399 83.2389C86.0399 83.3328 86.0058 83.4096 85.9648 83.4096C85.9233 83.4096 85.8423 83.3328 85.7843 83.2389ZM90.1327 83.0761C89.6294 82.6888 89.7008 82.5528 90.343 82.676L90.8117 82.7667V83.0879C90.8117 83.4907 90.6679 83.488 90.1327 83.0761ZM38.45 83.0495C38.286 82.9561 38.1518 82.7688 38.1518 82.6333V82.3852H38.6737L38.7696 82.636C38.8228 82.7736 38.8388 82.9609 38.8068 83.0521L38.7483 83.2175L38.45 83.0495ZM54.0009 82.9828V82.6984L54.1841 82.7592C54.2853 82.7928 54.3673 82.8937 54.3673 82.9828C54.3673 83.0719 54.2847 83.1727 54.1841 83.2063L54.0009 83.2671V82.9828ZM60.4769 83.0681L60.2313 82.9161L60.357 82.7902L60.4827 82.6643L60.6814 82.8633C60.9386 83.121 60.7953 83.265 60.4769 83.0681ZM89.0782 82.8643L89.0223 82.4706L88.6388 82.302L88.2554 82.1334V81.5316H88.4769C88.7965 81.5316 89.1075 81.8907 89.1075 82.2588V82.5762L89.2779 82.4706L89.4483 82.365V82.6317C89.4483 82.7774 89.4537 82.9529 89.4611 83.0212C89.468 83.0895 89.3972 83.1706 89.304 83.2015L89.1336 83.2586L89.0782 82.8643ZM12.7757 82.8323L12.5802 82.596L12.8683 82.485L13.157 82.374L13.3183 82.5357L13.4792 82.6968L13.3647 82.8825C13.2102 83.1332 13.0111 83.1167 12.7757 82.8323ZM14.9176 82.9545C14.7217 82.7576 14.7936 82.556 15.0598 82.556H15.3155V82.8121C15.3155 83.0788 15.1142 83.1508 14.9176 82.9545ZM57.0685 82.8974C57.0685 82.8521 57.0864 82.8087 57.1184 82.7767C57.1503 82.7447 57.1937 82.7267 57.2389 82.7267C57.2841 82.7267 57.3274 82.7447 57.3594 82.7767C57.3913 82.8087 57.4093 82.8521 57.4093 82.8974C57.4093 82.9427 57.3913 82.9861 57.3594 83.0181C57.3274 83.0502 57.2841 83.0681 57.2389 83.0681C57.1937 83.0681 57.1503 83.0502 57.1184 83.0181C57.0864 82.9861 57.0685 82.9427 57.0685 82.8974ZM59.4543 82.8974C59.4543 82.8521 59.4723 82.8087 59.5043 82.7767C59.5362 82.7447 59.5796 82.7267 59.6248 82.7267C59.67 82.7267 59.7133 82.7447 59.7453 82.7767C59.7772 82.8087 59.7952 82.8521 59.7952 82.8974C59.7952 82.9427 59.7772 82.9861 59.7453 83.0181C59.7133 83.0502 59.67 83.0681 59.6248 83.0681C59.5796 83.0681 59.5362 83.0502 59.5043 83.0181C59.4723 82.9861 59.4543 82.9427 59.4543 82.8974ZM71.3225 82.9497C71.1308 82.7576 71.2053 82.556 71.469 82.556C71.6096 82.556 71.7246 82.6285 71.7246 82.7166C71.7246 82.9321 71.4583 83.0863 71.3225 82.9497ZM77.1839 82.7379C76.9549 82.3084 76.9618 82.2145 77.2223 82.2145C77.4752 82.2145 77.8864 82.8142 77.7362 82.9646C77.5498 83.1508 77.3634 83.074 77.1839 82.7379ZM79.6023 82.867C79.6396 82.756 79.7956 82.5864 79.9495 82.4887L80.2291 82.3122L80.3436 82.4269L80.4581 82.541L80.3569 82.8046L80.2563 83.0681H79.5357L79.6023 82.867ZM22.1323 82.7267C22.1323 82.6328 22.2132 82.556 22.3128 82.556H22.4934L22.3879 82.7267C22.3299 82.8206 22.2489 82.8974 22.2074 82.8974C22.1664 82.8974 22.1323 82.8206 22.1323 82.7267ZM62.6114 82.7336L62.5001 82.5533L62.7743 82.4482C63.1487 82.3041 63.2654 82.4626 62.9671 82.7107L62.7227 82.914L62.6114 82.7336ZM69.85 82.7267C69.85 82.6328 69.9309 82.556 70.0305 82.556H70.2111L70.1056 82.7267C70.0476 82.8206 69.9666 82.8974 69.9251 82.8974C69.8841 82.8974 69.85 82.8206 69.85 82.7267ZM73.6408 82.6867L73.7111 82.4759L74.1872 82.4391L74.6633 82.4023L74.3443 82.6445C74.1685 82.7779 73.923 82.8889 73.7979 82.8921L73.571 82.8974L73.6408 82.6867ZM33.4562 82.541L33.3417 82.3554L33.5313 82.1654L33.7209 81.9755L33.9105 82.1654L34.1001 82.3554L33.9855 82.541C33.9227 82.6429 33.8034 82.7267 33.7209 82.7267C33.6383 82.7267 33.519 82.6429 33.4562 82.541ZM16.5132 82.3916L16.2629 82.2332L16.3896 82.1057L16.5164 81.9787L16.8045 82.2673L17.0926 82.556L16.9286 82.5533C16.8381 82.5517 16.6517 82.4791 16.5132 82.3916ZM52.1263 82.2855V82.0155L52.3286 82.0827C52.4399 82.1201 52.5614 82.2417 52.5986 82.3532L52.6658 82.556H52.1263V82.2855ZM59.2839 82.3852C59.2839 82.34 59.3019 82.2965 59.3338 82.2645C59.3658 82.2325 59.4091 82.2145 59.4543 82.2145C59.4995 82.2145 59.5429 82.2325 59.5748 82.2645C59.6068 82.2965 59.6248 82.34 59.6248 82.3852C59.6248 82.4305 59.6068 82.4739 59.5748 82.506C59.5429 82.538 59.4995 82.556 59.4543 82.556C59.4091 82.556 59.3658 82.538 59.3338 82.506C59.3019 82.4739 59.2839 82.4305 59.2839 82.3852ZM67.9045 82.4082C67.831 82.2892 67.8167 82.1457 67.8726 82.0891C68.0254 81.9366 68.1921 82.1612 68.1096 82.4092L68.0377 82.6243L67.9045 82.4082ZM23.1548 82.2145C23.1548 82.1692 23.1728 82.1258 23.2047 82.0938C23.2367 82.0618 23.28 82.0438 23.3252 82.0438C23.3704 82.0438 23.4138 82.0618 23.4457 82.0938C23.4777 82.1258 23.4956 82.1692 23.4956 82.2145C23.4956 82.2598 23.4777 82.3032 23.4457 82.3352C23.4138 82.3673 23.3704 82.3852 23.3252 82.3852C23.28 82.3852 23.2367 82.3673 23.2047 82.3352C23.1728 82.3032 23.1548 82.2598 23.1548 82.2145ZM90.7265 82.2145C90.7845 82.1206 90.8655 82.0438 90.907 82.0438C90.948 82.0438 90.9821 82.1206 90.9821 82.2145C90.9821 82.3084 90.9012 82.3852 90.8016 82.3852H90.621L90.7265 82.2145ZM70.6435 81.951L70.7378 81.7045L70.8906 81.7989C71.1015 81.9296 71.0823 81.992 70.7958 82.102L70.5492 82.1969L70.6435 81.951ZM87.169 82.0785C87.1226 82.0038 87.1556 81.8304 87.2414 81.6943L87.398 81.4463L87.4006 81.8304C87.4033 82.2252 87.317 82.318 87.169 82.0785ZM57.6649 81.8731L57.5595 81.7023H57.7406C57.8391 81.7023 57.9206 81.7792 57.9206 81.8731C57.9206 81.967 57.8865 82.0438 57.8455 82.0438C57.8039 82.0438 57.723 81.967 57.6649 81.8731ZM58.4318 81.8629V81.6821L58.6022 81.7877C58.696 81.8459 58.7727 81.927 58.7727 81.9686C58.7727 82.0097 58.696 82.0438 58.6022 82.0438C58.5085 82.0438 58.4318 81.9622 58.4318 81.8629ZM76.5725 81.8581L76.458 81.6725L76.6327 81.4975L76.8074 81.3225L76.9927 81.4372C77.0944 81.5001 77.1781 81.6623 77.1781 81.7978V82.0438H76.9325C76.7973 82.0438 76.6354 81.96 76.5725 81.8581ZM85.8695 81.8731C85.8695 81.8278 85.8874 81.7844 85.9194 81.7523C85.9514 81.7203 85.9947 81.7023 86.0399 81.7023C86.0851 81.7023 86.1285 81.7203 86.1604 81.7523C86.1924 81.7844 86.2103 81.8278 86.2103 81.8731C86.2103 81.9184 86.1924 81.9618 86.1604 81.9938C86.1285 82.0258 86.0851 82.0438 86.0399 82.0438C85.9947 82.0438 85.9514 82.0258 85.9194 81.9938C85.8874 81.9618 85.8695 81.9184 85.8695 81.8731ZM86.5767 81.8816C86.6502 81.6613 86.8835 81.6218 86.9048 81.8261C86.9117 81.8944 86.8255 81.9808 86.7131 82.0182L86.5086 82.0865L86.5767 81.8816ZM69.2524 81.7013L69.1465 81.529L69.4207 81.4239C69.7467 81.2985 69.9288 81.4367 69.7722 81.6906C69.63 81.92 69.3909 81.9254 69.253 81.7013H69.2524ZM72.2359 81.5316V81.1902H72.4734C72.7301 81.1902 72.958 81.6047 72.7924 81.7712C72.7359 81.8272 72.5879 81.8731 72.4633 81.8731H72.2359V81.5316ZM80.8421 81.7023L80.7366 81.5316H80.9177C81.0168 81.5316 81.0977 81.6084 81.0977 81.7023C81.0977 81.7962 81.0636 81.8731 81.0226 81.8731C80.9811 81.8731 80.9001 81.7962 80.8421 81.7023ZM82.5394 81.6911C82.4776 81.5908 82.4728 81.4628 82.5287 81.4062C82.5857 81.3502 82.6315 81.3982 82.6315 81.5129V81.7226L82.8019 81.617L82.9723 81.5113V81.6927C82.9723 81.9264 82.6842 81.9259 82.5394 81.6906V81.6911ZM84.847 81.7023C84.847 81.6084 84.9279 81.5316 85.0275 81.5316H85.208L85.1026 81.7023C85.0446 81.7962 84.9636 81.8731 84.9221 81.8731C84.8811 81.8731 84.847 81.7962 84.847 81.7023ZM90.7265 81.7023C90.7845 81.6084 90.8655 81.5316 90.907 81.5316C90.948 81.5316 90.9821 81.6084 90.9821 81.7023C90.9821 81.7962 90.9006 81.8731 90.8016 81.8731H90.621L90.7265 81.7023ZM50.6937 81.5583L50.5872 81.3844L50.7714 81.2702L50.9562 81.156L51.0611 81.2611L51.166 81.3668L50.9839 81.5492L50.8012 81.7322L50.6937 81.5583ZM87.6003 81.4372C87.6323 81.2702 87.7622 81.0989 87.8879 81.0568L88.1174 80.98L88.0589 81.2841C88.0264 81.4516 87.8964 81.6229 87.7702 81.665L87.5412 81.7418L87.6003 81.4372ZM58.2151 81.4281C58.0297 81.2425 58.2539 81.0194 58.6267 81.0194H58.9713L58.9005 81.2328C58.8195 81.4767 58.3866 81.5999 58.2151 81.4281ZM64.7374 81.3609C64.7374 81.3156 64.7553 81.2722 64.7873 81.2402C64.8192 81.2082 64.8626 81.1902 64.9078 81.1902C64.953 81.1902 64.9963 81.2082 65.0283 81.2402C65.0603 81.2722 65.0782 81.3156 65.0782 81.3609C65.0782 81.4062 65.0603 81.4496 65.0283 81.4816C64.9963 81.5136 64.953 81.5316 64.9078 81.5316C64.8626 81.5316 64.8192 81.5136 64.7873 81.4816C64.7553 81.4496 64.7374 81.4062 64.7374 81.3609ZM83.1428 81.3609C83.1428 81.3156 83.1607 81.2722 83.1927 81.2402C83.2246 81.2082 83.268 81.1902 83.3132 81.1902C83.3584 81.1902 83.4017 81.2082 83.4337 81.2402C83.4657 81.2722 83.4836 81.3156 83.4836 81.3609C83.4836 81.4062 83.4657 81.4496 83.4337 81.4816C83.4017 81.5136 83.3584 81.5316 83.3132 81.5316C83.268 81.5316 83.2246 81.5136 83.1927 81.4816C83.1607 81.4496 83.1428 81.4062 83.1428 81.3609ZM85.6139 81.3609C85.6719 81.267 85.7912 81.1902 85.8796 81.1902C85.9675 81.1902 86.0399 81.267 86.0399 81.3609C86.0399 81.4548 85.9201 81.5316 85.7742 81.5316H85.5084L85.6139 81.3609ZM30.7449 80.8114C30.8818 80.0346 30.9941 80.0004 30.9941 80.7351V81.3609H30.6485L30.7449 80.8114ZM45.9224 81.2168L45.8154 81.0429L45.9996 80.9287L46.1844 80.8146L46.2894 80.9197L46.3943 81.0253L46.2121 81.2078L46.0295 81.3908L45.9224 81.2168ZM70.5572 81.1987C70.5945 81.0861 70.6808 80.9997 70.749 81.0066C70.9529 81.028 70.9135 81.2617 70.6936 81.3353L70.4891 81.4036L70.5572 81.1987ZM40.3673 81.0194C40.3673 80.9742 40.3852 80.9307 40.4172 80.8987C40.4491 80.8667 40.4925 80.8487 40.5377 80.8487C40.5829 80.8487 40.6262 80.8667 40.6582 80.8987C40.6901 80.9307 40.7081 80.9742 40.7081 81.0194C40.7081 81.0647 40.6901 81.1081 40.6582 81.1402C40.6262 81.1722 40.5829 81.1902 40.5377 81.1902C40.4925 81.1902 40.4491 81.1722 40.4172 81.1402C40.3852 81.1081 40.3673 81.0647 40.3673 81.0194ZM42.9971 81.0002L42.8799 80.8103L43.1068 80.67C43.3864 80.4971 43.6052 80.6172 43.6052 80.9442V81.1902H43.3597C43.2245 81.1902 43.0615 81.1048 42.9971 81.0002ZM77.5615 80.9768C77.5852 80.9161 77.626 80.8636 77.679 80.8257C77.7319 80.7878 77.7947 80.7661 77.8597 80.7634C77.9247 80.7661 77.9876 80.7878 78.0405 80.8257C78.0935 80.8636 78.1343 80.9161 78.158 80.9768L78.2288 81.1902H77.4907L77.5615 80.9768ZM81.528 81.0264L81.4268 80.8626L81.6441 80.5142C81.8923 80.1167 82.0462 80.0783 82.2257 80.3691L82.3508 80.5724L82.1506 80.6396C82.0398 80.6764 81.9498 80.8156 81.9498 80.9485C81.9498 81.2233 81.6803 81.2729 81.528 81.0264ZM88.9371 80.8487C89.0372 80.6609 89.1932 80.5073 89.2838 80.5073H89.4483V81.1902H88.7544L88.9371 80.8487ZM26.9946 80.8578L26.8838 80.678L26.9893 80.5073C27.0473 80.4134 27.2108 80.3365 27.3525 80.3365H27.6108L27.5554 80.6209C27.4893 80.964 27.149 81.1075 26.9946 80.8578ZM66.5268 80.8487C66.5848 80.7548 66.6658 80.678 66.7073 80.678C66.7483 80.678 66.7824 80.7548 66.7824 80.8487C66.7824 80.9426 66.7015 81.0194 66.6019 81.0194H66.4213L66.5268 80.8487ZM85.8029 80.606C85.903 80.3446 86.3754 80.1034 86.5144 80.2432C86.6465 80.375 86.1965 80.8487 85.9393 80.8487H85.7103L85.8029 80.606ZM74.3901 80.5596C74.1984 80.3675 74.2729 80.1658 74.5365 80.1658C74.6771 80.1658 74.7922 80.2378 74.7922 80.3264C74.7922 80.542 74.5259 80.6961 74.3901 80.5596ZM75.7694 80.5756C75.6331 80.439 75.812 79.9951 76.0037 79.9951H76.1555V80.3365C76.1555 80.6695 75.9745 80.7815 75.7694 80.5761V80.5756ZM84.7458 80.4811L84.6244 80.2848L84.945 80.05L85.2656 79.8153L85.3758 80.1183C85.5643 80.6369 85.0312 80.9442 84.7458 80.4811ZM58.7727 80.2693C58.7727 80.0116 59.1865 79.7838 59.3526 79.9497C59.4085 80.0058 59.4543 80.1546 59.4543 80.2795V80.5073H58.7727V80.2693ZM69.4239 80.1658L69.3185 79.9951H69.4996C69.5986 79.9951 69.6796 80.0719 69.6796 80.1658C69.6796 80.2597 69.6455 80.3365 69.6045 80.3365C69.5629 80.3365 69.482 80.2597 69.4239 80.1658ZM70.5317 79.9951C70.5317 79.9498 70.5496 79.9064 70.5816 79.8744C70.6135 79.8424 70.6569 79.8244 70.7021 79.8244C70.7473 79.8244 70.7906 79.8424 70.8226 79.8744C70.8545 79.9064 70.8725 79.9498 70.8725 79.9951C70.8725 80.0404 70.8545 80.0838 70.8226 80.1158C70.7906 80.1478 70.7473 80.1658 70.7021 80.1658C70.6569 80.1658 70.6135 80.1478 70.5816 80.1158C70.5496 80.0838 70.5317 80.0404 70.5317 79.9951ZM84.2686 79.8959C84.1088 79.4781 84.1435 79.437 84.4209 79.7145C84.7106 80.0047 84.7474 80.1658 84.5242 80.1658C84.4406 80.1658 84.3256 80.0442 84.2686 79.8959ZM85.6991 79.8244V79.4146L85.9036 79.6195L86.1081 79.8244L85.9036 80.0292L85.6991 80.2341V79.8244ZM90.5561 79.9951C90.6141 79.9012 90.695 79.8244 90.7366 79.8244C90.7776 79.8244 90.8117 79.9012 90.8117 79.9951C90.8117 80.089 90.7307 80.1658 90.6311 80.1658H90.4506L90.5561 79.9951ZM55.6199 79.8244L55.5144 79.6536L55.6215 79.4803L55.7285 79.3063L55.8872 79.405L56.0459 79.5032V79.3533C56.0459 79.2706 55.6598 79.0977 55.188 78.9691L54.3295 78.7349L54.1228 78.4853C54.0089 78.3476 53.954 78.1897 54.0009 78.1331C54.0478 78.0776 53.9135 78.0072 53.7027 77.9773C53.4918 77.9469 53.3192 77.86 53.3192 77.7842C53.3192 77.558 52.3483 77.2246 51.5724 77.1845L50.8481 77.1472L50.4838 77.383L50.1196 77.6188L49.865 77.3638L49.6104 77.1088L48.9927 77.4246L48.3749 77.7394L48.2806 77.5868L48.1864 77.4342H47.0413L46.5253 77.7309L46.0098 78.0275L45.9267 78.3455L45.8436 78.6634L45.6604 78.5503L45.4772 78.4367L45.3707 78.7157L45.2642 78.9948L44.9883 78.5936L44.713 78.1924L44.3199 78.2174L43.9269 78.242L44.0217 77.9949C44.0739 77.8589 44.1165 77.6727 44.1165 77.581C44.1165 77.4892 44.174 77.4497 44.2443 77.4929L44.3721 77.5713L44.3892 77.0992L44.4062 76.627L44.1863 76.6468C44.0648 76.6574 43.9663 76.5891 43.9674 76.4952L43.9685 76.3245L44.2262 76.3779L44.484 76.4312L44.5644 76.1218L44.6453 75.8123L45.1049 75.5925L45.5651 75.3727L45.7153 75.6043L45.8654 75.8358L46.6829 75.6235L47.5004 75.4111L47.8508 75.5029C48.0436 75.5531 48.401 75.5445 48.6454 75.4826L49.0896 75.3711L48.9863 75.1006L48.8824 74.8301L49.0603 74.6157L49.2376 74.4012L48.9889 74.3052L48.7402 74.2091L48.908 73.6004L49.0757 72.9906L48.9559 72.7959L48.8356 72.6011L48.9985 72.702L49.1609 72.8028V71.6291H49.0193C48.9415 71.6291 49.0491 71.3981 49.2579 71.1153L49.6376 70.6004L49.62 69.989L49.603 69.3776L49.1285 68.8815C48.8675 68.6094 48.5725 68.3832 48.4734 68.38C48.3733 68.3768 48.1102 68.2231 47.8881 68.0375L47.485 67.7013L47.6783 67.4677L47.8716 67.234L47.7651 66.9566C47.7065 66.8034 47.5925 66.6786 47.5121 66.6786H47.3651L47.4631 66.4225L47.5611 66.1664H47.0866L47.0722 65.8676C47.0403 65.2168 46.8422 64.1615 46.6014 63.3628C46.4619 62.9008 46.3895 62.4548 46.4406 62.3721L46.5338 62.2216L46.1344 61.623L45.735 61.0249L44.6272 61.122C44.0185 61.1754 43.1595 61.2405 42.7185 61.2661C42.2781 61.2917 41.8632 61.3669 41.7972 61.4331L41.6768 61.5536L41.4478 61.3637L41.2188 61.1738L41.1997 61.4934C41.189 61.6694 41.1592 62.5428 41.1336 63.4348L41.0868 65.0567L40.9131 65.5988C40.8173 65.897 40.7784 66.1797 40.8258 66.2278C40.8737 66.2753 40.8498 66.4156 40.7725 66.5393C40.69 66.6757 40.6269 66.8229 40.5851 66.9768C40.4615 67.5338 40.3902 67.7878 40.3587 67.7878C40.3396 67.7878 40.306 67.9531 40.2842 68.1548C40.2629 68.3565 40.0962 68.7406 39.9135 69.0084C39.7314 69.2763 39.4523 69.925 39.2931 70.4495L39.0039 71.4034V72.9954L38.7909 72.9981L38.5778 73.0007L38.8335 73.1688L39.0891 73.3368L38.858 73.4862L38.6268 73.6356L38.8154 73.753C38.9192 73.817 39.0742 73.8261 39.1599 73.7727L39.3154 73.6767L39.3794 73.8666L39.4422 74.0571L40.4589 74.1665L41.475 74.2758L41.3898 74.4466L41.3046 74.6173L41.9863 74.7085C42.3612 74.7592 42.7563 74.8552 42.865 74.9219L43.062 75.0446L42.9731 75.3861C42.9241 75.5733 42.7973 75.7281 42.6908 75.7297L42.4975 75.7323L42.7531 75.8977L43.0088 76.0631L42.6679 76.0791L42.3271 76.0951L42.5401 76.1815C42.6573 76.2296 42.7531 76.3325 42.7531 76.412C42.7531 76.6542 42.1796 76.6894 41.7541 76.4734L41.3514 76.2685L40.7741 76.3219L40.1968 76.3757V76.1293L39.1008 76.1154L38.0048 76.101L38.0943 76.3837L38.1838 76.666L38.0165 76.4307L37.8488 76.1954L36.5094 76.1186L35.1694 76.0418L34.7008 76.2216L34.2321 76.4013V76.9221H33.7209V76.539L33.4525 76.762L33.1835 76.9855L33.0291 76.7401L32.8741 76.4952L32.8714 76.794L32.8688 77.0928L32.6557 77.1125C32.5386 77.1232 32.3468 77.1424 32.2297 77.1552C32.1125 77.168 31.8382 77.3857 31.6204 77.6396L31.2242 78.1006L30.8109 78.0088L30.3977 77.9165L30.6533 78.0995L30.9089 78.2825L30.7081 78.2852C30.5111 78.2879 29.9716 77.8344 29.9716 77.6663C29.9716 77.6199 30.1442 77.6348 30.3551 77.6999L30.7385 77.8178L30.6192 77.6919C30.5537 77.6226 30.2624 77.5164 29.9716 77.4572L29.4433 77.3489L29.4689 77.1781C29.4827 77.0842 29.5637 77.0266 29.6478 77.0501L29.8012 77.0928V76.5806H29.9839C30.1937 76.5806 30.4861 76.2866 30.7545 75.8049C30.9766 75.4069 32.0049 74.6754 32.1855 74.7869C32.2547 74.8296 32.4464 74.716 32.6115 74.534L32.9103 74.2027L33.6831 74.3089L34.4558 74.4151L34.3413 74.2294L34.2273 74.0443L34.5703 73.9349C34.7594 73.8752 34.9165 73.7354 34.9191 73.6239L34.9245 73.4222L35.1423 73.7087L35.3596 73.9952L35.6051 73.8394C35.7403 73.7541 36.0205 73.6826 36.2282 73.681L36.6063 73.6783L36.782 73.3475C36.8795 73.1661 36.9589 72.8252 36.9589 72.5899C36.9589 72.3546 37.0361 72.114 37.1309 72.0553L37.3024 71.9492L37.2214 71.501L37.1405 71.0539L37.2906 70.8725C37.3732 70.7722 37.4355 70.6522 37.4291 70.6052C37.3902 70.3433 37.6975 69.1221 37.8472 68.9407L38.0229 68.7273L37.8743 68.7011C37.7464 68.6817 37.6178 68.6673 37.4888 68.6579L37.2523 68.6403L37.2012 68.158L37.1495 67.6757L36.6942 67.2526L36.2388 66.8301L36.5381 66.6103L36.8374 66.3916L36.4684 66.1317L36.0993 65.873L36.2031 65.6014L36.307 65.3304L35.9693 64.9676L35.6317 64.6048L35.686 64.0217L35.7398 63.4391L35.604 63.3548C35.5289 63.3084 35.4677 63.0694 35.4677 62.8239V62.3774L35.0949 62.0093L34.7221 61.6422L34.7753 61.877L34.8286 62.1117L34.6156 62.1901L34.4025 62.268V61.7169L34.6475 61.6225L34.8925 61.5286L34.8073 61.3066L34.7221 61.0847L34.0084 60.9545C33.6159 60.8825 33.2043 60.8371 33.0946 60.8531L32.8943 60.883L32.7851 60.5368C32.7244 60.3468 32.6089 60.1911 32.5274 60.1911C32.4464 60.1911 32.1636 60.1084 31.9 60.0075L31.4202 59.824L31.7355 59.5919L32.0507 59.3604L31.9277 59.1608C31.8601 59.0509 31.5427 58.8514 31.2221 58.7175L30.6394 58.4737L30.7417 58.3083L30.844 58.1424H30.5777C30.4317 58.1424 30.3125 58.0693 30.3125 57.9791V57.8164L29.6734 57.7171C29.3219 57.6627 28.7084 57.4563 28.31 57.2589L27.5857 56.8998V56.2644H27.0745L27.0691 56.051L27.0638 55.8376L26.8135 56.1689L26.5632 56.5002V55.9165L26.1372 56.0232L25.7111 56.1305V55.8701C25.7111 55.7271 25.8043 55.5788 25.9188 55.5409L26.126 55.4716L25.5721 54.929C25.2669 54.6302 24.9437 54.3864 24.8531 54.3864C24.7626 54.3864 24.6886 54.284 24.6886 54.1591V53.9319L24.2625 53.7035L23.8365 53.4752V53.0238L23.2437 52.6381L22.651 52.2524L22.7442 51.9536L22.8369 51.6548L22.4731 51.1427C22.2729 50.861 22.1578 50.6305 22.2175 50.6305C22.2771 50.6305 22.1589 50.3957 21.9549 50.1087C21.751 49.8211 21.6301 49.5405 21.686 49.484C21.7424 49.4274 21.703 49.2786 21.5986 49.1521C21.4943 49.0262 21.4655 48.9232 21.5337 48.9232C21.6029 48.9232 21.4921 48.7877 21.2882 48.6223L20.9175 48.322L20.8696 47.1776L20.8216 46.0332L20.4174 45.7051L20.0127 45.377L20.2523 45.0889L20.4914 44.7997L20.2465 44.645C20.1123 44.5596 20.0691 44.4887 20.1506 44.4871L20.2997 44.4844L20.1096 44.255L19.92 44.0261L20.0276 43.9178L20.1357 43.8095L19.969 43.5924L19.8028 43.3747L19.8172 41.8808L19.8316 40.3881L19.576 40.3849L19.3203 40.3817L19.5509 40.2355L19.7815 40.0888L19.5845 39.719L19.3864 39.3499L19.5009 38.588L19.6148 37.8261H19.985L19.7805 37.6213C19.5217 37.362 19.5153 36.8503 19.7698 36.7655L19.9631 36.701L19.7427 36.3472L19.5222 35.9935L19.6617 35.6718C19.7384 35.4958 19.8167 35.0049 19.8359 34.5824C19.855 34.1598 19.9488 33.5298 20.0446 33.1824L20.2177 32.5513L20.0153 32.1581L19.814 31.7654L19.9227 31.3386L20.0313 30.9118L19.8806 30.4957C19.798 30.2662 19.5792 29.9728 19.3949 29.8437C19.2101 29.7141 19.0956 29.5487 19.1403 29.4761C19.2394 29.3161 18.4374 28.7015 17.9112 28.5339C17.7019 28.4678 17.5309 28.3424 17.5309 28.2565V28.0991L16.8402 27.9881L16.1489 27.8777L16.2373 27.6472L16.3252 27.4178L15.7777 26.896C15.4768 26.609 14.9618 26.2473 14.6338 26.091C14.3057 25.9352 13.9841 25.7298 13.9196 25.6343C13.8546 25.5388 13.6246 25.4513 13.4084 25.4395C13.1916 25.4273 12.7687 25.3617 12.4678 25.2934L11.9214 25.1685L11.9853 24.54C12.0216 24.1949 12.1014 23.7814 12.1643 23.6213L12.2783 23.3311L12.8662 23.1364L13.4547 22.9422L13.689 23.0323L13.9239 23.1225L14.0187 22.8755C14.0703 22.7394 14.1731 22.6407 14.2455 22.6551C14.3185 22.6701 14.7233 22.6162 15.145 22.5362C15.5668 22.4561 15.978 22.4092 16.0589 22.4321C16.1399 22.4551 16.306 22.3361 16.4285 22.1686L16.6511 21.8639L16.7726 21.9856L16.894 22.1072L17.2258 21.9296L17.5576 21.7519L17.4718 21.5278L17.3861 21.3043L17.7141 21.3907L18.0422 21.4761V21.0882L18.4922 21.1704L18.9428 21.252L19.2804 21.0706C19.4663 20.9714 19.8194 20.8679 20.0654 20.8407L20.5122 20.7916L20.8531 20.3119C21.0411 20.0484 21.3819 19.653 21.6098 19.4332L22.0252 19.0342L22.217 19.1078L22.4087 19.182L22.8241 18.8618C23.0531 18.6858 23.1708 18.5401 23.0861 18.538C23.0014 18.5359 23.1026 18.386 23.3108 18.2051L23.69 17.8759L24.7871 17.7585L25.8842 17.6406L26.0956 17.8007C26.3124 17.965 26.7326 18.0381 27.7135 18.0824C28.0182 18.0963 28.2674 18.1624 28.2674 18.2302V18.3529L28.5097 18.2595L28.752 18.1667L29.0822 18.3438C29.3927 18.5103 29.6563 18.7455 31.4543 20.4624L32.17 21.1458L32.2254 21.5049L32.2803 21.8634L32.4832 21.8229L32.6861 21.7823L32.5886 22.0363L32.4917 22.2902H33.0285L32.9305 22.5463L32.8325 22.8024H33.1989L33.1015 23.0569L33.004 23.3119L33.2666 23.4127L33.5291 23.5136L33.4461 23.7302L33.363 23.9468L33.7976 24.2322L34.2321 24.5176V24.2002L34.557 24.2856L34.8819 24.3704L35.2642 25.2507C35.4746 25.7351 35.6317 26.2286 35.6131 26.3476L35.5795 26.5637L35.8005 26.5183L36.0215 26.473L35.9811 26.8571L35.9406 27.2412H36.618V27.4173C36.618 27.5144 36.5078 27.636 36.373 27.6878L36.1281 27.7817L36.0194 28.2757L35.9113 28.7692L36.152 29.1139L36.3927 29.4585L36.5056 29.3459L36.618 29.2328V29.9728H36.7884C36.8822 29.9728 36.9445 30.0304 36.9269 30.1009C36.9099 30.1713 37.027 30.5319 37.1879 30.9027L37.4808 31.5766L37.3956 31.799L37.3103 32.0215H37.6608L37.5628 32.1805L37.4648 32.3395L37.8701 32.778C38.0937 33.0192 38.3526 33.2166 38.4452 33.2166C38.539 33.2166 38.9 33.4855 39.2478 33.8141L39.8805 34.4117H40.4951L40.5899 34.8865L40.6847 35.3613L41.2987 35.6547C41.6364 35.8164 42.1402 35.9482 42.4182 35.9482H42.9236V36.3099L43.1057 36.1973L43.2873 36.0848L43.3757 36.4235L43.4641 36.7623L43.8076 36.6716L44.1517 36.582L44.2864 36.8007L44.4217 37.02L44.9659 37.0627L45.5102 37.1059L46.0492 37.6213L46.5876 38.1366L47.3066 38.3484L48.025 38.5597L47.9472 38.6856C47.9046 38.755 47.9739 38.899 48.1017 39.0047L48.3339 39.1978L48.6108 39.0911L48.8883 38.9844V39.352L49.1439 39.2538L49.3995 39.1557L49.4001 39.3872L49.4011 39.6188L50.6457 40.259C51.3306 40.6111 52.0054 40.8992 52.1449 40.8992C52.2844 40.8992 52.4857 40.9861 52.5923 41.0928C52.6982 41.1996 52.9246 41.3009 53.095 41.3185C53.2654 41.3361 53.7495 41.5122 54.1708 41.7091C54.5931 41.9065 55.4132 42.1647 55.9937 42.2837L57.0487 42.4997L56.9518 42.6571L56.8554 42.814L57.1883 42.7078L57.5217 42.6022L58.0191 43.0306C58.2928 43.2669 58.6427 43.4595 58.7966 43.46H59.0768L59.1753 43.7161L59.2733 43.9722H60.1563L60.0327 44.1718L59.9097 44.3718L60.1903 44.2635L60.4715 44.1558L60.6505 44.4908L60.8294 44.8258H61.6698V45.1673H62.3717L62.2663 45.338L62.1608 45.5087H62.4905C62.6716 45.5087 63.1471 45.6245 63.5471 45.7659L64.274 46.0225L64.4759 45.855L64.6772 45.6875L64.8774 45.8886L65.0782 46.0892V45.5087H65.2486C65.3424 45.5087 65.4191 45.6122 65.4191 45.7387V45.9692L66.1007 46.277C66.4757 46.4461 66.7824 46.6515 66.7824 46.7332C66.7824 46.9252 69.1646 48.4714 69.2812 48.355C69.3297 48.3065 69.8777 48.6079 70.4997 49.0257L71.6298 49.7849L72.2705 49.8878L72.9112 49.9903L72.8078 50.1578L72.7045 50.3258L73.0667 50.2106L73.4288 50.0954V50.5526L74.0253 50.8748C74.3533 51.0514 74.6217 51.2696 74.6217 51.3587V51.5204L74.3448 51.4137L74.0673 51.3075L73.8714 51.4702C73.7638 51.5599 73.2941 51.657 72.8275 51.6868L71.9802 51.7402L72.0037 52.039C72.0324 52.3975 71.7992 52.4364 71.6682 52.0955L71.5755 51.8533L70.6904 51.9413L69.8052 52.0294L69.6844 51.833L69.5635 51.6372L69.1001 51.8485L68.6373 52.0603L68.1985 51.5588L67.7597 51.0573L67.6824 51.2718L67.6052 51.4862L67.4247 51.3742L67.2436 51.2622L67.3672 51.7535L67.4897 52.2449L67.0934 51.8218L66.6961 51.3987L66.3132 51.3854C66.1029 51.3779 65.9303 51.419 65.9303 51.4766C65.9303 51.5343 65.7961 51.594 65.6321 51.6079C65.4681 51.6228 65.0654 51.674 64.7374 51.7226C63.1429 51.9584 61.8669 52.0374 59.2839 52.0598L56.472 52.0843L56.0885 51.9589L55.7051 51.8341V52.3793L55.466 52.1809L55.2268 51.9819L55.1448 52.2027L55.0623 52.4231L54.8301 52.1233L54.5974 51.8234L54.0435 51.9835L53.4896 52.1435L53.0204 52.0085C52.7621 51.9339 51.9542 51.8176 51.2241 51.7487L49.8969 51.6244L49.6621 51.8197L49.4272 52.0149L49.2856 51.7727L49.1439 51.53L48.5474 51.4217C48.2194 51.3619 47.3758 51.2744 46.6728 51.2264C45.9698 51.1784 45.2029 51.092 44.9686 51.0333C44.7343 50.9746 44.2992 50.9068 44.002 50.8823C43.7048 50.8578 43.3789 50.7863 43.2777 50.7244L43.094 50.6102V51.0082L42.7957 50.8855C42.2323 50.6524 40.788 50.5179 40.3673 50.6593C40.2267 50.7068 40.1691 50.7126 40.2394 50.6737C40.4748 50.5419 40.3705 50.3296 40.0264 50.2394L39.6856 50.1503L39.5855 50.3136L39.4848 50.4763L39.2718 50.2986C39.1541 50.201 39.0241 50.1546 38.9831 50.1957C38.9426 50.2367 38.7584 50.0457 38.5741 49.771L38.2386 49.2716L37.8072 49.0924L37.3764 48.9136L37.2102 48.5343L37.0441 48.155L36.7884 48.147L36.5328 48.1395L36.5807 47.9186C36.6068 47.7975 36.4572 47.1664 36.2484 46.5171L35.8687 45.3364L35.5683 45.4324L35.2674 45.5274L34.9159 45.3391L34.5634 45.1502L34.6726 44.9731L34.7817 44.796L34.9671 44.9816C35.0688 45.0835 35.2903 45.1673 35.4592 45.1673H35.7659V44.8258H35.0842V44.6551C35.0842 44.5612 35.1519 44.4844 35.2349 44.4844C35.3175 44.4844 35.4267 44.3259 35.4773 44.1323L35.5689 43.7802L35.3372 43.6916L35.1055 43.6025L35.1993 43.3582L35.293 43.1143L35.0928 42.8732C34.983 42.7403 34.9159 42.5301 34.9436 42.4058C34.9724 42.2815 34.8499 41.6995 34.672 41.1126L34.3488 40.0456H34.0415L34.1469 40.2163L34.2524 40.387H33.5504V40.5577C33.5504 40.6516 33.4354 40.7285 33.2948 40.7285C32.9518 40.7285 32.9699 41.0144 33.3268 41.214L33.6133 41.3751L33.3225 41.82C33.1627 42.0649 32.9502 42.265 32.8512 42.265H32.6712L32.7889 42.8198C32.8539 43.125 33.0195 43.5027 33.1569 43.659L33.4072 43.944L33.224 44.287L33.0402 44.6306L33.1366 44.8819C33.1899 45.0206 33.3875 45.1742 33.576 45.2233L33.919 45.3135L33.8865 45.7099C33.8684 45.9281 33.862 46.197 33.8726 46.3085L33.8913 46.5102L34.3498 46.5646L34.8089 46.6185L34.9687 47.216L35.1284 47.8135L35.2057 47.6001C35.2483 47.4827 35.392 47.3867 35.5247 47.3867H35.7659V47.8989H35.5103C35.1891 47.8989 35.1812 48.1374 35.4938 48.3972C35.6248 48.5066 35.7798 48.7845 35.8378 49.0161C35.8953 49.2465 36.0178 49.4354 36.1099 49.4354C36.2021 49.4354 36.2772 49.5208 36.2772 49.6243C36.2772 49.7283 36.487 49.978 36.7432 50.1791L37.2086 50.5451H37.8962L37.8413 51.0146L37.7865 51.4841H39.0145L39.1125 51.7402L39.2105 51.9963H39.8278L39.9023 51.7829L39.9769 51.5695L40.3252 51.8789L40.674 52.1894L40.7869 52.007L40.8988 51.8245L41.1869 51.9755C41.3456 52.0582 41.9096 52.1345 42.4411 52.1451C42.972 52.1558 43.5866 52.2332 43.8066 52.3169C44.027 52.4007 44.5713 52.5191 45.0171 52.5794L45.8276 52.6898L45.9533 52.35L46.0785 52.0101L46.333 52.1867L46.5876 52.3639L46.3735 52.4508L46.1594 52.5378L46.267 52.7117L46.3746 52.8862L46.5237 52.6546L46.6728 52.4231L46.8006 52.5938C46.8709 52.6877 47.0626 52.7869 47.2267 52.8147L47.5249 52.8648L47.5276 52.644L47.5302 52.4231L47.6953 52.6792L47.8604 52.9353L47.8631 52.5725L47.8658 52.2086L48.1256 51.9931C48.4878 51.6916 48.6492 51.9184 48.312 52.2566C48.1603 52.4087 48.0362 52.6237 48.0362 52.7352V52.9374L49.0161 53.0041C49.555 53.0409 50.3028 53.0793 50.6777 53.0894C51.0526 53.1001 51.4403 53.1609 51.5394 53.225C51.7487 53.3599 52.2333 53.3119 52.4059 53.1391L52.5246 53.0201L52.8314 53.2975L53.1376 53.5755L53.4838 53.4848L53.8305 53.3941V53.7041L54.9382 53.6614L56.0459 53.6182L56.0885 53.7473L56.1317 53.8764L56.693 53.664L57.2543 53.4522L57.412 53.7057L57.5691 53.9596L57.9131 53.7462C58.1022 53.6288 58.4883 53.5328 58.7705 53.5328H59.2839V53.7158C59.2839 53.8161 59.3883 54.0034 59.5156 54.1309L59.7478 54.3629L60.0694 54.3027C60.2468 54.2691 60.3917 54.2274 60.3917 54.2093C60.3917 54.1917 60.9668 54.1495 61.6698 54.1159C62.3728 54.0823 63.178 54.0338 63.4592 54.0071L63.9705 53.9591L64.0988 53.7606L64.2272 53.5611L64.8274 53.6091L65.4276 53.6566L65.5234 53.5008L65.6198 53.3455L65.86 53.5451L66.1007 53.7451V53.4688C66.1007 53.1753 66.3739 53.0846 66.4698 53.3461L66.5268 53.5003L67.5493 53.5557L68.5718 53.6112L68.7849 53.4768L68.9979 53.3423L69.0005 53.5659L69.0032 53.7894L69.1683 53.5333L69.3334 53.2772L69.3361 53.5008L69.3387 53.7243L69.5251 53.6086C69.7808 53.4501 71.2346 53.321 72.6193 53.3338L73.7696 53.3445V53.0532L74.0849 53.1353L74.3991 53.218L75.1501 52.8819C75.5623 52.6973 76.0261 52.5047 76.1795 52.4546L76.4596 52.3633L77.1658 52.5719L77.8725 52.7811L77.7383 52.9283L77.6041 53.0756L77.9242 52.9598L78.2437 52.8446L78.4354 53.0036C78.5409 53.091 78.7033 53.1887 78.7976 53.2202C78.8908 53.2516 78.9483 53.3349 78.9254 53.4053C78.9014 53.4757 78.9909 53.5333 79.124 53.5333C79.2572 53.5333 79.3988 53.6294 79.4399 53.7467L79.5144 53.9601L79.8632 53.6502L80.2121 53.3407L80.317 53.5104L80.4219 53.6806L80.2488 53.7873C80.153 53.8465 80.0752 53.9649 80.0752 54.0503V54.205L80.3308 54.1074L80.5865 54.0087V54.3763L80.8421 54.2781L81.0977 54.1794V54.7177L81.3534 54.6196L81.609 54.5209V54.9194L81.781 54.8127L81.953 54.706L82.1112 55.1013L82.2694 55.4961L82.28 55.2827C82.2955 54.9808 82.6315 55.0165 82.6315 55.3201V55.5708L82.9154 55.462L83.1987 55.3531L83.0868 55.5345L82.975 55.717L83.2125 55.8082C83.3435 55.8589 83.6141 55.8573 83.8143 55.8045L84.1765 55.7095L84.4832 55.9875L84.7895 56.2649L84.9077 56.1476L85.0254 56.0291L85.297 56.4175L85.5686 56.8059L85.8897 56.7221L86.2103 56.6379L86.3009 56.7851L86.3914 56.9324L86.6417 56.8363L86.892 56.7403V57.118H87.1476C87.2882 57.118 87.4033 57.1948 87.4033 57.2887C87.4033 57.3826 87.5183 57.4595 87.6589 57.4595H87.9145V57.8377L88.1515 57.747L88.3885 57.6553L88.7427 57.986C88.9376 58.168 89.157 58.2987 89.23 58.2768C89.3035 58.2544 89.5799 58.4411 89.8451 58.6913L90.3276 59.1459L90.5795 59.0488L90.8319 58.9517L90.9241 59.3038L91.0157 59.6559L91.2548 59.5636L91.4934 59.4719V59.5877C91.4934 59.7338 91.0428 60.1911 90.899 60.1911C90.8399 60.1911 90.8357 60.1196 90.8894 60.0326L90.9874 59.8736L90.8144 59.7664L90.6413 59.6591V59.9985C90.6413 60.1852 90.7494 60.4461 90.8815 60.5784L91.1216 60.8185L90.9864 61.0372L90.8516 61.2565L90.7036 60.9977L90.5561 60.739L89.917 61.0175L89.2779 61.296V61.7276H88.8066L88.7113 61.3637L88.6165 60.9993L87.7537 61.0826L86.892 61.1653V60.874H86.0506L86.1486 61.13L86.2471 61.3861H85.6629L85.7545 61.1471L85.8461 60.9076L85.4743 60.8099L85.1026 60.7123L85.0456 60.8788C85.0147 60.97 84.8805 61.0447 84.7474 61.0447H84.5061V60.6467L84.3943 60.7587L84.2819 60.8708L84.0529 60.6808L83.8245 60.4909L83.8234 60.8964L83.8223 61.3008L83.4836 60.7886L83.1449 60.2764L83.1438 60.4786L83.1428 60.6808L82.6315 60.6659L82.1202 60.6515V60.3239L81.5073 60.4391L80.8938 60.5544L81.0056 60.373L81.118 60.1916H80.9374C80.8384 60.1916 80.7574 60.2679 80.7574 60.3623V60.533H80.4448C80.2733 60.533 80.0795 60.5864 80.0145 60.6504C79.9495 60.716 79.7322 60.7945 79.5309 60.8249C79.3296 60.8558 79.0825 60.9412 78.9813 61.0153C78.7843 61.1594 78.3891 61.146 77.1786 60.955C76.7568 60.8884 76.2967 60.8323 76.1561 60.8307C76.0155 60.8291 75.8211 60.7657 75.7247 60.6899C75.5276 60.5362 75.0366 60.573 74.8545 60.7555C74.789 60.8206 74.5525 60.874 74.3283 60.874H73.9204L74.0258 60.7032C74.1568 60.4909 74.0753 60.4898 73.5305 60.6974L73.0986 60.8617L72.9468 60.5896L72.7951 60.318L72.6758 60.5106L72.557 60.7032H70.3863L70.1248 60.4418L69.8633 60.1793L69.0474 60.1201L68.2315 60.0603L68.0057 60.2428L67.7794 60.4253L67.6649 60.2449L67.5498 60.0646L66.4102 60.0892C65.7833 60.1025 65.2146 60.1692 65.1458 60.2375C65.0777 60.3058 64.8428 60.3618 64.6239 60.3618H64.2261V60.0214L63.0534 60.0993C62.3852 60.1438 61.7177 60.1974 61.051 60.2599C60.5946 60.3058 59.6855 60.3922 59.0309 60.4525C58.3759 60.5128 57.7624 60.6109 57.6676 60.6707C57.4876 60.7838 57.3241 60.8211 56.472 60.9465C56.1908 60.9881 55.9224 61.0388 55.8755 61.0591C55.7275 61.1247 55.459 61.1754 55.1571 61.1957L54.8652 61.2154L54.9568 62.069L55.049 62.9226H54.5121V63.2502C54.5121 63.43 54.4307 63.6045 54.3311 63.6381L54.1495 63.6984L54.052 64.4629C53.9988 64.8833 53.8843 65.3645 53.7985 65.531L53.643 65.8351L53.4811 65.7343L53.3192 65.6345V66.1301L53.0636 66.2283L52.8079 66.3265V67.4906L52.5523 67.7029L52.2967 67.9158V69.1872L52.6375 69.5809C53.0007 70.0008 53.0753 70.1731 52.826 70.0189L52.6732 69.9245L52.5646 70.2083L52.4559 70.4916L52.2498 70.2857L52.0437 70.0792L52.293 69.9245L52.5422 69.7703L52.4309 69.6583L52.3191 69.5468L52.138 69.6593C52.0379 69.7212 51.9558 69.8829 51.9558 70.0179C51.9558 70.1534 51.8962 70.2638 51.8227 70.2638C51.7497 70.2638 51.6006 70.5002 51.4925 70.7888L51.2944 71.3132L51.3876 71.557L51.4808 71.8003H51.321C51.2332 71.8003 51.0744 72.082 50.9695 72.4261L50.7778 73.0519L50.8774 73.2136L50.977 73.3753L50.7421 73.5396L50.5073 73.705L50.7203 73.7909C51.0345 73.9189 50.9791 74.1883 50.6351 74.2043L50.3368 74.2177L50.5499 74.3036C50.8465 74.4236 50.8167 74.7026 50.5073 74.7026H50.2516V75.3429H50.6809C50.9168 75.3429 51.1495 75.2783 51.1991 75.1988L51.288 75.0548L52.0906 75.3605L52.8932 75.6662L53.1914 75.5989L53.4896 75.5312L53.4923 75.7574L53.495 75.9831L53.6441 75.7483L53.7927 75.5125L53.9844 75.6315L54.1772 75.751L54.0675 75.9281L53.9583 76.1052L54.3247 75.9884L54.6911 75.8721L54.6442 76.0946L54.5974 76.3165L54.9835 76.3752L55.3696 76.4344L55.2647 76.6046L55.1597 76.7743L55.475 76.7204L55.7903 76.666L55.7663 76.9679L55.7418 77.2699L56.022 77.224L56.3016 77.1781L56.252 77.4742L56.203 77.7703L56.4949 77.6583L56.7867 77.5463L56.6807 77.8226L56.5742 78.1001L56.8448 77.996L57.1153 77.892L57.0301 78.1326C56.9822 78.2649 57.0088 78.4997 57.0882 78.6544L57.232 78.935L56.9481 79.1666L56.6637 79.3976L56.7793 79.0903L56.8943 78.7824L56.726 78.887C56.6333 78.9441 56.5572 79.1127 56.5572 79.2605C56.5572 79.7219 55.8276 80.161 55.6199 79.8244ZM49.57 75.0441C49.57 74.9502 49.489 74.8734 49.3894 74.8734H49.2089L49.3143 75.0441C49.3724 75.138 49.4533 75.2148 49.4949 75.2148C49.5359 75.2148 49.57 75.138 49.57 75.0441ZM50.7629 66.7458C50.7629 66.7085 50.6053 66.6786 50.4119 66.6786H50.061L50.1622 66.8418L50.2623 67.0051L50.5126 66.9091C50.6505 66.8557 50.7629 66.7826 50.7629 66.7458ZM32.7836 59.6789L32.6781 59.5082H32.8869C33.0019 59.5082 33.0498 59.4623 32.9934 59.4057C32.9375 59.3492 32.8086 59.3545 32.7069 59.4175L32.5226 59.5316L32.6206 59.6906C32.6738 59.7781 32.7569 59.8496 32.8038 59.8496C32.8507 59.8496 32.8411 59.7728 32.7836 59.6789ZM55.3643 58.1424C55.3643 58.0485 55.2833 57.9716 55.1837 57.9716H55.0032L55.1086 58.1424C55.1667 58.2363 55.2476 58.3131 55.2892 58.3131C55.3302 58.3131 55.3643 58.2363 55.3643 58.1424ZM29.6308 48.9232C29.6308 48.8293 29.5967 48.7525 29.5557 48.7525C29.5141 48.7525 29.4332 48.8293 29.3751 48.9232L29.2697 49.094H29.4508C29.5498 49.094 29.6308 49.0171 29.6308 48.9232ZM53.3192 44.6551C53.3192 44.5612 53.2851 44.4844 53.2441 44.4844C53.2026 44.4844 53.1216 44.5612 53.0636 44.6551L52.9581 44.8258H53.1392C53.2377 44.8258 53.3192 44.749 53.3192 44.6551ZM33.7794 39.7223C33.649 39.1765 33.5281 39.0383 33.428 39.32L33.3518 39.5334H32.7303L32.8086 39.8322L32.8869 40.1309L33.3864 40.1491L33.8854 40.1672L33.7794 39.7223ZM25.8826 24.5224C25.93 24.5155 26.069 24.2829 26.1915 24.006L26.4141 23.5024L26.233 23.1646L26.053 22.8269L26.151 22.5719L26.2485 22.3164L25.8831 21.9504L25.5178 21.5844L25.2739 21.7871L25.0294 21.9904L24.761 21.7674L24.4921 21.5438L24.3776 21.7039C24.3142 21.7914 24.1092 21.9488 23.9217 22.0528C23.7342 22.1568 23.5809 22.3233 23.5809 22.4225C23.5809 22.5218 23.5265 22.6573 23.46 22.7245L23.3391 22.8456L23.5947 23.3418L23.8509 23.8379L23.9819 23.7568C24.0532 23.7126 24.3376 23.8956 24.6135 24.1634L25.1146 24.6505L25.4555 24.5929C25.6429 24.5608 25.8352 24.5288 25.8826 24.5224ZM32.6983 79.6536C32.6983 79.6084 32.7163 79.5649 32.7483 79.5329C32.7802 79.5009 32.8236 79.4829 32.8688 79.4829C32.914 79.4829 32.9573 79.5009 32.9893 79.5329C33.0212 79.5649 33.0392 79.6084 33.0392 79.6536C33.0392 79.6989 33.0212 79.7424 32.9893 79.7744C32.9573 79.8064 32.914 79.8244 32.8688 79.8244C32.8236 79.8244 32.7802 79.8064 32.7483 79.7744C32.7163 79.7424 32.6983 79.6989 32.6983 79.6536ZM49.1439 79.6536C49.202 79.5598 49.2829 79.4829 49.3244 79.4829C49.3655 79.4829 49.3995 79.5598 49.3995 79.6536C49.3995 79.7476 49.3186 79.8244 49.219 79.8244H49.0385L49.1439 79.6536ZM82.1485 79.675L81.9211 79.5304L82.2049 79.421C82.5809 79.277 82.5745 79.2743 82.5745 79.5683C82.5745 79.858 82.476 79.8831 82.1485 79.675ZM25.7111 79.4829C25.7111 79.389 25.8304 79.3122 25.9769 79.3122H26.2426L26.1372 79.4829C26.0791 79.5768 25.9598 79.6536 25.8714 79.6536C25.7835 79.6536 25.7111 79.5768 25.7111 79.4829ZM40.4615 79.4973L40.3619 79.3357L40.5233 79.2359L40.6847 79.1361L40.7843 79.2978L40.8838 79.4594L40.7225 79.5592L40.5611 79.659L40.4615 79.4973ZM64.1057 79.4066L63.9007 79.1719L64.1622 79.0716C64.3065 79.0161 64.4951 78.9708 64.5808 78.9708H64.7374V79.6536L64.5243 79.6472C64.4072 79.6435 64.2187 79.5352 64.1057 79.4066ZM73.9401 79.4829C73.9401 79.389 74.0215 79.3122 74.1206 79.3122H74.3012L74.1957 79.4829C74.1377 79.5768 74.0567 79.6536 74.0152 79.6536C73.9742 79.6536 73.9401 79.5768 73.9401 79.4829ZM43.3496 79.3122L43.2442 79.1415H43.4252C43.5243 79.1415 43.6052 79.2183 43.6052 79.3122C43.6052 79.4061 43.5717 79.4829 43.5302 79.4829C43.4886 79.4829 43.4077 79.4061 43.3496 79.3122ZM60.0599 79.3266L59.9603 79.165L60.1216 79.0652L60.283 78.9649L60.3826 79.1271L60.4822 79.2887L60.3208 79.3885L60.1595 79.4883L60.0599 79.3266ZM77.8597 79.3122C77.8597 79.2669 77.8777 79.2235 77.9097 79.1915C77.9416 79.1595 77.985 79.1415 78.0302 79.1415C78.0754 79.1415 78.1187 79.1595 78.1507 79.1915C78.1826 79.2235 78.2006 79.2669 78.2006 79.3122C78.2006 79.3575 78.1826 79.4009 78.1507 79.4329C78.1187 79.4649 78.0754 79.4829 78.0302 79.4829C77.985 79.4829 77.9416 79.4649 77.9097 79.4329C77.8777 79.4009 77.8597 79.3575 77.8597 79.3122ZM88.8518 79.3122C88.9099 79.2183 89.0292 79.1415 89.1176 79.1415C89.206 79.1415 89.2779 79.2183 89.2779 79.3122C89.2779 79.4061 89.1586 79.4829 89.0122 79.4829H88.7464L88.8518 79.3122ZM83.9949 79.1415C83.9949 79.0476 84.0764 78.9708 84.1754 78.9708H84.3559L84.2505 79.1415C84.1924 79.2354 84.1115 79.3122 84.07 79.3122C84.029 79.3122 83.9949 79.2354 83.9949 79.1415ZM84.5349 78.9531L84.3107 78.5936L84.4816 78.6997L84.6531 78.8054L84.7596 78.632C84.8188 78.5365 84.9753 78.4586 85.1074 78.4586H85.347L85.2086 78.8336C85.0201 79.3442 84.8028 79.3832 84.5349 78.9531ZM86.9916 79.0321L86.884 78.7515L87.1439 78.9676C87.4395 79.213 87.4704 79.3122 87.251 79.3122C87.1674 79.3122 87.0507 79.1863 86.9916 79.0321ZM88.1867 79.1682L88.0796 78.9942L88.2639 78.8801L88.4487 78.7659L88.5536 78.871L88.6585 78.9766L88.4764 79.1591L88.2937 79.3421L88.1867 79.1682ZM38.9187 78.9708C38.9767 78.8769 39.0577 78.8 39.0992 78.8C39.1402 78.8 39.1743 78.8769 39.1743 78.9708C39.1743 79.0647 39.0934 79.1415 38.9938 79.1415H38.8132L38.9187 78.9708ZM44.4573 78.9708C44.4573 78.8769 44.5383 78.8 44.6379 78.8H44.8184L44.713 78.9708C44.6549 79.0647 44.574 79.1415 44.5324 79.1415C44.4914 79.1415 44.4573 79.0647 44.4573 78.9708ZM85.8109 78.8768C85.9148 78.6069 86.2103 78.5365 86.2103 78.7819C86.2103 78.8656 86.099 78.9771 85.9632 79.0289L85.7166 79.1239L85.8109 78.8768ZM47.9419 78.7851L47.8274 78.5994L48.017 78.4095L48.2066 78.2196L48.3962 78.4095L48.5858 78.5994L48.4713 78.7851C48.4084 78.887 48.2891 78.9708 48.2066 78.9708C48.1241 78.9708 48.0048 78.887 47.9419 78.7851ZM77.0998 78.8118L77.0023 78.6528L77.1754 78.5461L77.3485 78.4383V78.7051C77.3485 79.0044 77.2462 79.0486 77.1003 78.8118H77.0998ZM87.9145 78.6293C87.9145 78.5354 87.9955 78.4586 88.0951 78.4586H88.2756L88.1702 78.6293C88.1121 78.7232 88.0312 78.8 87.9896 78.8C87.9486 78.8 87.9145 78.7232 87.9145 78.6293ZM75.9984 78.2089L76.0117 77.861L76.098 78.0744C76.1454 78.1918 76.2924 78.2879 76.4255 78.2879C76.5582 78.2879 76.6668 78.3599 76.6668 78.4479V78.608L76.326 78.5824L75.9851 78.5567L75.9984 78.2089ZM88.7347 78.513C88.8577 78.4634 89.0047 78.4692 89.0611 78.5263C89.1181 78.5829 89.0175 78.6234 88.8375 78.616L88.511 78.6021L88.7347 78.513ZM53.5748 78.2879L53.4694 78.1171H53.6505C53.749 78.1171 53.8305 78.194 53.8305 78.2879C53.8305 78.3818 53.7964 78.4586 53.7554 78.4586C53.7138 78.4586 53.6329 78.3818 53.5748 78.2879ZM75.2092 78.2729L75.0947 78.0872L75.2843 77.8973L75.4739 77.7074L75.6634 77.8973L75.853 78.0872L75.7385 78.2729C75.6757 78.3748 75.5564 78.4586 75.4739 78.4586C75.3913 78.4586 75.272 78.3748 75.2092 78.2729ZM67.4641 77.9464C67.4641 77.9011 67.4821 77.8577 67.514 77.8257C67.546 77.7937 67.5893 77.7757 67.6345 77.7757C67.6797 77.7757 67.7231 77.7937 67.755 77.8257C67.787 77.8577 67.8049 77.9011 67.8049 77.9464C67.8049 77.9917 67.787 78.0351 67.755 78.0671C67.7231 78.0991 67.6797 78.1171 67.6345 78.1171C67.5893 78.1171 67.546 78.0991 67.514 78.0671C67.4821 78.0351 67.4641 77.9917 67.4641 77.9464ZM84.847 77.9464C84.847 77.9011 84.8649 77.8577 84.8969 77.8257C84.9288 77.7937 84.9722 77.7757 85.0174 77.7757C85.0626 77.7757 85.1059 77.7937 85.1379 77.8257C85.1699 77.8577 85.1878 77.9011 85.1878 77.9464C85.1878 77.9917 85.1699 78.0351 85.1379 78.0671C85.1059 78.0991 85.0626 78.1171 85.0174 78.1171C84.9722 78.1171 84.9288 78.0991 84.8969 78.0671C84.8649 78.0351 84.847 77.9917 84.847 77.9464ZM87.8293 77.9464L87.7239 77.7757H88.2756L88.1702 77.9464C88.1121 78.0403 88.0354 78.1171 87.9998 78.1171C87.9641 78.1171 87.8874 78.0403 87.8293 77.9464ZM89.312 77.5708C88.9765 77.2347 89.0787 77.1115 89.5192 77.3195L89.9303 77.5137L89.8499 77.645C89.7343 77.8322 89.5474 77.8066 89.312 77.5708ZM69.1683 77.2534V77.0725L69.3387 77.1781C69.4324 77.2363 69.5091 77.3174 69.5091 77.359C69.5091 77.4001 69.4324 77.4342 69.3387 77.4342C69.245 77.4342 69.1683 77.3526 69.1683 77.2534ZM79.1379 77.2635L79.0143 77.0629L79.1848 76.8922L79.3552 76.7215L79.4787 76.9221L79.6023 77.1227L79.4319 77.2934L79.2614 77.4641L79.1379 77.2635ZM84.7511 77.1328L84.57 77.0074L84.7916 76.5806L85.0126 76.1538L85.0153 76.4382C85.0169 76.595 85.1079 76.7529 85.2176 76.7903L85.4189 76.857L85.2933 77.0597C85.1495 77.2929 85.0094 77.3115 84.7516 77.1328H84.7511ZM85.6991 77.1013C85.6991 76.8106 85.9068 76.4099 86.058 76.4099C86.1416 76.4099 86.2103 76.5555 86.2103 76.7332V77.0565L85.9547 77.1547L85.6991 77.2528V77.1013ZM87.0086 77.1355C86.9682 77.065 86.9964 76.8538 87.072 76.666L87.2089 76.3245L87.2211 76.5241C87.2275 76.6334 87.2797 76.8447 87.3362 76.9935L87.4395 77.2635H87.2611C87.1631 77.2635 87.0491 77.2059 87.0086 77.1355ZM90.3856 77.0928L90.2802 76.9221H90.5465C90.6924 76.9221 90.8117 76.9989 90.8117 77.0928C90.8117 77.1867 90.7398 77.2635 90.6514 77.2635C90.563 77.2635 90.4437 77.1867 90.3856 77.0928ZM58.0201 76.945C57.9466 76.826 57.9323 76.6825 57.9882 76.626C58.141 76.4734 58.3077 76.698 58.2252 76.9461L58.1533 77.1611L58.0201 76.945ZM87.7846 76.8943C87.6685 76.778 87.5737 76.5667 87.5737 76.4248V76.1661L87.849 76.4419C88.0008 76.5934 88.0956 76.8047 88.0599 76.9114L87.9955 77.1056L87.7846 76.8943ZM66.4416 76.7716C66.4416 76.6777 66.5183 76.5529 66.612 76.4952L66.7824 76.3896V76.5603C66.7824 76.6542 66.7057 76.7791 66.612 76.8367L66.4416 76.9423V76.7716ZM29.0343 76.5806L28.9289 76.4099H29.1099C29.209 76.4099 29.2899 76.4867 29.2899 76.5806C29.2899 76.6745 29.2564 76.7513 29.2148 76.7513C29.1733 76.7513 29.0924 76.6745 29.0343 76.5806ZM89.1075 76.1538V75.8977H89.7892V76.4099H89.1075V76.1538ZM85.8695 76.0631C85.8695 75.9724 85.9845 75.8977 86.1251 75.8977C86.2657 75.8977 86.3808 75.9281 86.3808 75.9649C86.3808 76.0017 86.2657 76.0759 86.1251 76.1303L85.8695 76.2285V76.0631ZM65.9303 75.727C65.9303 75.6817 65.9483 75.6383 65.9802 75.6063C66.0122 75.5742 66.0555 75.5563 66.1007 75.5563C66.1459 75.5563 66.1893 75.5742 66.2212 75.6063C66.2532 75.6383 66.2712 75.6817 66.2712 75.727C66.2712 75.7723 66.2532 75.8157 66.2212 75.8477C66.1893 75.8797 66.1459 75.8977 66.1007 75.8977C66.0555 75.8977 66.0122 75.8797 65.9802 75.8477C65.9483 75.8157 65.9303 75.7723 65.9303 75.727ZM90.3004 75.727C90.3004 75.6331 90.3819 75.5563 90.481 75.5563H90.6615L90.5561 75.727C90.498 75.8209 90.4171 75.8977 90.3755 75.8977C90.3345 75.8977 90.3004 75.8209 90.3004 75.727ZM59.7952 75.5563C59.7952 75.511 59.8131 75.4676 59.8451 75.4355C59.8771 75.4035 59.9204 75.3855 59.9656 75.3855C60.0108 75.3855 60.0541 75.4035 60.0861 75.4355C60.1181 75.4676 60.136 75.511 60.136 75.5563C60.136 75.6015 60.1181 75.645 60.0861 75.677C60.0541 75.709 60.0108 75.727 59.9656 75.727C59.9204 75.727 59.8771 75.709 59.8451 75.677C59.8131 75.645 59.7952 75.6015 59.7952 75.5563ZM73.3622 75.4586L73.2594 75.1903L73.5433 75.2452C73.6988 75.2756 73.8586 75.3962 73.8975 75.5136L73.9683 75.727H73.465L73.3622 75.4586ZM87.0624 75.5461V75.3653L87.2329 75.4709C87.3266 75.5291 87.4033 75.6101 87.4033 75.6518C87.4033 75.6928 87.3266 75.727 87.2329 75.727C87.1391 75.727 87.0624 75.6454 87.0624 75.5461ZM89.5335 75.5563L89.4281 75.3855H89.5985C89.6922 75.3855 89.8169 75.4624 89.8744 75.5563L89.9798 75.727H89.8094C89.7157 75.727 89.591 75.6502 89.5335 75.5563ZM62.6923 75.3855C62.6923 75.3403 62.7103 75.2968 62.7422 75.2648C62.7742 75.2328 62.8175 75.2148 62.8627 75.2148C62.9079 75.2148 62.9513 75.2328 62.9832 75.2648C63.0152 75.2968 63.0332 75.3403 63.0332 75.3855C63.0332 75.4308 63.0152 75.4742 62.9832 75.5063C62.9513 75.5383 62.9079 75.5563 62.8627 75.5563C62.8175 75.5563 62.7742 75.5383 62.7422 75.5063C62.7103 75.4742 62.6923 75.4308 62.6923 75.3855ZM80.7047 75.4469C80.506 75.2484 80.7702 75.0441 81.2255 75.0441H81.674L81.3438 75.2948C80.9704 75.5776 80.8607 75.6038 80.7047 75.4469ZM84.6765 75.2148C84.6765 75.1695 84.6945 75.1261 84.7265 75.0941C84.7584 75.0621 84.8018 75.0441 84.847 75.0441C84.8922 75.0441 84.9355 75.0621 84.9675 75.0941C84.9994 75.1261 85.0174 75.1695 85.0174 75.2148C85.0174 75.2601 84.9994 75.3035 84.9675 75.3355C84.9355 75.3675 84.8922 75.3855 84.847 75.3855C84.8018 75.3855 84.7584 75.3675 84.7265 75.3355C84.6945 75.3035 84.6765 75.2601 84.6765 75.2148ZM75.6443 75.0441C75.6443 74.9502 75.7636 74.8734 75.91 74.8734H76.1758L76.0703 75.0441C76.0123 75.138 75.893 75.2148 75.8046 75.2148C75.7162 75.2148 75.6443 75.138 75.6443 75.0441ZM52.8079 74.8632V74.6824L52.9784 74.788C53.0721 74.8462 53.1488 74.9272 53.1488 74.9689C53.1488 75.0099 53.0721 75.0441 52.9784 75.0441C52.8846 75.0441 52.8079 74.963 52.8079 74.8632ZM65.6747 74.8734L65.5692 74.7026H66.121L66.0155 74.8734C65.9575 74.9673 65.8808 75.0441 65.8451 75.0441C65.8094 75.0441 65.7327 74.9673 65.6747 74.8734ZM67.1994 74.8584L67.0849 74.6728L67.2335 74.5239L67.3815 74.3756L67.6153 74.5196L67.8486 74.6642L67.7314 74.8542C67.5823 75.0958 67.3469 75.0974 67.1989 74.8584H67.1994ZM78.0302 74.8638V74.6824L78.2006 74.788C78.2943 74.8462 78.371 74.9272 78.371 74.9689C78.371 75.0099 78.2943 75.0441 78.2006 75.0441C78.1068 75.0441 78.0302 74.963 78.0302 74.8632V74.8638ZM75.2182 74.7026L75.1128 74.5319H75.2938C75.3924 74.5319 75.4739 74.6087 75.4739 74.7026C75.4739 74.7965 75.4398 74.8734 75.3988 74.8734C75.3572 74.8734 75.2763 74.7965 75.2182 74.7026ZM86.5512 74.6173C86.5512 74.4764 86.6279 74.3612 86.7216 74.3612H86.892V73.6783H87.4033V74.3612H87.2329C87.1391 74.3612 87.0624 74.4764 87.0624 74.6173V74.8734H86.5512V74.6173ZM45.2482 74.5842C45.0565 74.3921 45.131 74.1905 45.3947 74.1905C45.5353 74.1905 45.6503 74.263 45.6503 74.3511C45.6503 74.5666 45.384 74.7208 45.2482 74.5842ZM73.2584 74.3612C73.2584 74.3159 73.2763 74.2725 73.3083 74.2405C73.3403 74.2085 73.3836 74.1905 73.4288 74.1905C73.474 74.1905 73.5174 74.2085 73.5493 74.2405C73.5813 74.2725 73.5992 74.3159 73.5992 74.3612C73.5992 74.4065 73.5813 74.4499 73.5493 74.4819C73.5174 74.5139 73.474 74.5319 73.4288 74.5319C73.3836 74.5319 73.3403 74.5139 73.3083 74.4819C73.2763 74.4499 73.2584 74.4065 73.2584 74.3612ZM83.9949 74.3612C83.9949 74.3159 84.0128 74.2725 84.0448 74.2405C84.0767 74.2085 84.1201 74.1905 84.1653 74.1905C84.2105 74.1905 84.2538 74.2085 84.2858 74.2405C84.3178 74.2725 84.3357 74.3159 84.3357 74.3612C84.3357 74.4065 84.3178 74.4499 84.2858 74.4819C84.2538 74.5139 84.2105 74.5319 84.1653 74.5319C84.1201 74.5319 84.0767 74.5139 84.0448 74.4819C84.0128 74.4499 83.9949 74.4065 83.9949 74.3612ZM77.2872 74.2428C77.0955 74.0507 77.1701 73.849 77.4337 73.849C77.5743 73.849 77.6893 73.921 77.6893 74.0096C77.6893 74.2252 77.423 74.3793 77.2872 74.2428ZM30.4307 74.0811C30.3705 74.0213 30.3604 73.9093 30.4078 73.8325L30.4935 73.6932L30.7438 73.7893C30.8818 73.8426 30.9941 73.9547 30.9941 74.0379C30.9941 74.2134 30.5931 74.2438 30.4307 74.0811ZM68.1831 73.9925C68.2193 73.8837 68.435 73.7663 68.6624 73.7316L69.0767 73.6682L68.7391 73.9242C68.3316 74.2326 68.0936 74.262 68.1831 73.9925ZM81.7794 73.849C81.7794 73.8037 81.7974 73.7603 81.8293 73.7283C81.8613 73.6963 81.9046 73.6783 81.9498 73.6783C81.995 73.6783 82.0384 73.6963 82.0703 73.7283C82.1023 73.7603 82.1202 73.8037 82.1202 73.849C82.1202 73.8943 82.1023 73.9377 82.0703 73.9697C82.0384 74.0018 81.995 74.0197 81.9498 74.0197C81.9046 74.0197 81.8613 74.0018 81.8293 73.9697C81.7974 73.9377 81.7794 73.8943 81.7794 73.849ZM84.3016 73.6441L84.5061 73.4393L84.7106 73.6441L84.9151 73.849H84.0971L84.3016 73.6441ZM51.615 73.4323C51.615 73.2856 51.6917 73.1661 51.7854 73.1661C51.8792 73.1661 51.9558 73.2381 51.9558 73.3267C51.9558 73.4153 51.8792 73.5348 51.7854 73.5929L51.615 73.6986V73.4323ZM85.3582 73.5113L85.1026 73.3491L85.3998 73.0514L85.6964 72.7537L85.8908 72.9484L86.0852 73.1432L85.9829 73.4105C85.8658 73.7172 85.7204 73.7407 85.3582 73.5113ZM64.6681 73.3635L64.5616 73.1896L64.7459 73.0754L64.9307 72.9613L65.0356 73.0664L65.1405 73.172L64.9584 73.3544L64.7757 73.5374L64.6681 73.3635ZM73.301 73.3262C72.8909 73.1666 72.8046 72.9148 73.097 72.734C73.1463 72.7012 73.1838 72.6534 73.204 72.5978C73.2242 72.5421 73.2261 72.4814 73.2094 72.4245L73.1428 72.2271L73.5838 72.0404L74.0253 71.8537L74.5019 72.0175L74.978 72.1807L74.9141 72.3744C74.8795 72.4811 74.6841 72.5931 74.4806 72.623C74.2772 72.6529 74.1105 72.7345 74.1105 72.8044C74.1105 72.8738 74.0146 73.053 73.8975 73.2029L73.6844 73.4761L73.301 73.3262ZM82.1202 73.0807L81.8886 72.647L82.0798 72.4555L82.271 72.2639L82.877 72.552C83.7009 72.9436 83.6684 73.2926 82.82 73.173C82.6896 73.1549 82.5308 73.2243 82.4669 73.3267L82.3519 73.514L82.1202 73.0807ZM78.5414 72.9853V72.8044L78.7118 72.91C78.8056 72.9682 78.8823 73.0493 78.8823 73.0909C78.8823 73.132 78.8056 73.1661 78.7118 73.1661C78.6181 73.1661 78.5414 73.0845 78.5414 72.9853ZM43.9461 72.6742C43.9461 72.4864 44.0228 72.2848 44.1165 72.2271L44.2869 72.1215V72.463C44.2869 72.6507 44.2102 72.8524 44.1165 72.91L43.9461 73.0157V72.6742ZM77.3874 72.6246C77.2723 72.5094 77.1781 72.3152 77.1781 72.193V71.971H77.4236C77.7474 71.971 77.8422 72.1578 77.7069 72.5307L77.5961 72.8343L77.3874 72.6246ZM84.9322 72.6539L84.8267 72.4832L84.9322 72.3125C85.0573 72.1098 85.6991 72.0815 85.6991 72.2784C85.6991 72.6619 85.1138 72.9484 84.9322 72.6539ZM88.2554 72.6539C88.2554 72.6087 88.2733 72.5652 88.3053 72.5332C88.3373 72.5012 88.3806 72.4832 88.4258 72.4832C88.471 72.4832 88.5143 72.5012 88.5463 72.5332C88.5783 72.5652 88.5962 72.6087 88.5962 72.6539C88.5962 72.6992 88.5783 72.7427 88.5463 72.7747C88.5143 72.8067 88.471 72.8247 88.4258 72.8247C88.3806 72.8247 88.3373 72.8067 88.3053 72.7747C88.2733 72.7427 88.2554 72.6992 88.2554 72.6539ZM89.5335 72.6539L89.4281 72.4832H89.6092C89.7082 72.4832 89.7892 72.5601 89.7892 72.6539C89.7892 72.7478 89.7551 72.8247 89.7141 72.8247C89.6725 72.8247 89.5916 72.7478 89.5335 72.6539ZM78.3097 72.5355C78.118 72.3434 78.1926 72.1418 78.4562 72.1418C78.5968 72.1418 78.7118 72.2143 78.7118 72.3024C78.7118 72.5179 78.4456 72.6721 78.3097 72.5355ZM79.966 72.3973L79.8691 72.1439L79.7184 72.2373L79.5677 72.3301L79.6598 72.09L79.7519 71.8499L80.3394 72.1167C81.0386 72.4341 81.0796 72.567 80.4954 72.6155L80.0635 72.6513L79.966 72.3973ZM52.9784 72.3125C52.9784 72.2186 53.0934 72.1418 53.234 72.1418C53.3746 72.1418 53.4896 72.2186 53.4896 72.3125C53.4896 72.4064 53.3746 72.4832 53.234 72.4832C53.0934 72.4832 52.9784 72.4064 52.9784 72.3125ZM70.8725 72.3024V72.1215L71.0429 72.2271C71.1367 72.2853 71.2133 72.3664 71.2133 72.408C71.2133 72.4491 71.1367 72.4832 71.0429 72.4832C70.9492 72.4832 70.8725 72.4016 70.8725 72.3024ZM86.7472 72.321C86.8207 72.1007 87.0539 72.0612 87.0752 72.2655C87.0821 72.3338 86.9959 72.4203 86.8835 72.4576L86.679 72.5259L86.7472 72.321ZM35.939 72.1845C35.9401 72.114 36.013 71.9433 36.1004 71.8057L36.2585 71.5544L36.3741 71.6696L36.4897 71.7854L36.3885 72.0489C36.2873 72.3152 35.9342 72.4213 35.939 72.1845ZM76.4021 71.9561L76.2876 71.7704L76.4772 71.5805L76.6668 71.3906L76.8564 71.5805L77.046 71.7704L76.9315 71.9561C76.8686 72.058 76.7493 72.1418 76.6668 72.1418C76.5842 72.1418 76.465 72.058 76.4021 71.9561ZM74.707 71.8003C74.765 71.7064 74.846 71.6296 74.8875 71.6296C74.9285 71.6296 74.9626 71.7064 74.9626 71.8003C74.9626 71.8942 74.8811 71.971 74.7821 71.971H74.6015L74.707 71.8003ZM90.2951 71.5298C90.0736 70.9467 90.0704 70.951 90.5545 71.1761C91.0343 71.3991 91.1105 71.7144 90.7211 71.8643L90.4602 71.9646L90.2951 71.5298ZM91.1914 71.7683C91.2157 71.7072 91.2521 71.6517 91.2986 71.6052C91.345 71.5587 91.4004 71.5221 91.4614 71.4978L91.6638 71.4306V71.971H91.1243L91.1914 71.7683ZM78.4237 71.2999L78.3374 70.9702L78.0983 71.0619L77.8597 71.1537V70.8016L78.4972 70.8811C78.8476 70.9243 79.2013 71.0273 79.2833 71.1094L79.4324 71.2588L79.3174 71.4439C79.2545 71.5458 79.0468 71.6296 78.8562 71.6296H78.51L78.4237 71.2999ZM86.3808 71.4589C86.3808 71.4136 86.3987 71.3702 86.4307 71.3382C86.4626 71.3061 86.506 71.2881 86.5512 71.2881C86.5964 71.2881 86.6397 71.3061 86.6717 71.3382C86.7036 71.3702 86.7216 71.4136 86.7216 71.4589C86.7216 71.5042 86.7036 71.5476 86.6717 71.5796C86.6397 71.6116 86.5964 71.6296 86.5512 71.6296C86.506 71.6296 86.4626 71.6116 86.4307 71.5796C86.3987 71.5476 86.3808 71.5042 86.3808 71.4589ZM81.5664 71.2689C81.4024 71.1761 81.2681 70.9888 81.2681 70.8528V70.6052H81.5025C81.6319 70.6052 81.8359 70.7237 81.9557 70.8688L82.174 71.1318L82.0196 71.2849L81.8646 71.4375L81.5664 71.2689ZM84.4353 71.3308C84.365 71.2604 84.2505 71.2028 84.1813 71.2028C84.112 71.2028 83.9192 71.0662 83.7526 70.8987L83.449 70.5951L83.555 70.1736L83.6604 69.7516H83.8591C83.9688 69.7516 84.2462 69.9245 84.4758 70.1358L84.8938 70.5199L84.97 70.3065C85.0115 70.1891 85.1148 70.0931 85.199 70.0931H85.3513L85.2922 70.6052L85.2325 71.1174H85.3806C85.4621 71.1174 85.5287 71.1942 85.5287 71.2881V71.4589H85.0456C84.7804 71.4589 84.5056 71.4013 84.4353 71.3308ZM11.5662 71.0465V70.776H12.1057L12.0386 70.9787C12.0144 71.0398 11.9779 71.0954 11.9315 71.1419C11.885 71.1884 11.8296 71.2249 11.7686 71.2492L11.5662 71.3164V71.0465ZM73.3372 71.1068L73.2254 70.9254L73.5236 70.5946C73.6882 70.4127 73.9257 70.2638 74.0519 70.2638H74.2809V70.4585C74.2809 70.5652 74.4151 70.7637 74.5792 70.8992L74.8774 71.1452L74.5845 71.0534L74.2916 70.9616L74.1909 71.1249C74.0556 71.3447 73.4762 71.333 73.3372 71.1068ZM89.1927 71.1174C89.2507 71.0235 89.3317 70.9467 89.3732 70.9467C89.4142 70.9467 89.4483 71.0235 89.4483 71.1174C89.4483 71.2113 89.3674 71.2881 89.2678 71.2881H89.0872L89.1927 71.1174ZM14.4634 70.7658V70.585L14.6338 70.6906C14.7275 70.7488 14.8042 70.8299 14.8042 70.8715C14.8042 70.9126 14.7275 70.9467 14.6338 70.9467C14.5401 70.9467 14.4634 70.8651 14.4634 70.7658ZM53.3192 70.776C53.3192 70.7307 53.3372 70.6873 53.3691 70.6553C53.4011 70.6232 53.4444 70.6052 53.4896 70.6052C53.5348 70.6052 53.5782 70.6232 53.6101 70.6553C53.6421 70.6873 53.66 70.7307 53.66 70.776C53.66 70.8213 53.6421 70.8647 53.6101 70.8967C53.5782 70.9287 53.5348 70.9467 53.4896 70.9467C53.4444 70.9467 53.4011 70.9287 53.3691 70.8967C53.3372 70.8647 53.3192 70.8213 53.3192 70.776ZM79.6401 70.761L79.5256 70.5754L79.7077 70.3929L79.8904 70.2099L80.153 70.4287C80.2978 70.5487 80.416 70.7146 80.416 70.7968C80.416 71.0118 79.7764 70.9824 79.6401 70.761ZM31.794 70.6666C31.6348 70.5076 31.8271 70.2638 32.112 70.2638H32.3575V70.776H32.1301C32.0055 70.776 31.8542 70.7269 31.794 70.6666ZM82.4637 70.6479C82.4654 70.5775 82.5404 70.4046 82.6315 70.2638L82.7966 70.0077L82.7993 70.3918L82.8019 70.776H82.6315C82.5378 70.776 82.4622 70.7184 82.4637 70.6479ZM87.2329 70.6052C87.2329 70.56 87.2508 70.5165 87.2828 70.4845C87.3147 70.4525 87.3581 70.4345 87.4033 70.4345C87.4485 70.4345 87.4918 70.4525 87.5238 70.4845C87.5557 70.5165 87.5737 70.56 87.5737 70.6052C87.5737 70.6505 87.5557 70.6939 87.5238 70.726C87.4918 70.758 87.4485 70.776 87.4033 70.776C87.3581 70.776 87.3147 70.758 87.2828 70.726C87.2508 70.6939 87.2329 70.6505 87.2329 70.6052ZM76.9299 70.4463L76.8319 70.2873L77.005 70.1806L77.1781 70.0728V69.1167L77.6094 69.1994L78.0408 69.2816L78.2054 69.5905L78.3705 69.8989L77.9215 70.2521C77.4395 70.6325 77.087 70.7008 76.9299 70.4463ZM34.0617 70.2542V70.0728L34.2321 70.1784C34.3259 70.2366 34.4025 70.3177 34.4025 70.3593C34.4025 70.4004 34.3259 70.4345 34.2321 70.4345C34.1384 70.4345 34.0617 70.3529 34.0617 70.2537V70.2542ZM65.2486 70.1784V69.9223H65.7599V70.4345H65.2486V70.1784ZM88.3406 70.2638C88.3986 70.1699 88.4796 70.0931 88.5211 70.0931C88.5621 70.0931 88.5962 70.1699 88.5962 70.2638C88.5962 70.3577 88.5153 70.4345 88.4157 70.4345H88.2351L88.3406 70.2638ZM63.7148 70.0931C63.7148 70.0478 63.7328 70.0044 63.7648 69.9724C63.7967 69.9403 63.8401 69.9223 63.8853 69.9223C63.9305 69.9223 63.9738 69.9403 64.0058 69.9724C64.0377 70.0044 64.0557 70.0478 64.0557 70.0931C64.0557 70.1384 64.0377 70.1818 64.0058 70.2138C63.9738 70.2458 63.9305 70.2638 63.8853 70.2638C63.8401 70.2638 63.7967 70.2458 63.7648 70.2138C63.7328 70.1818 63.7148 70.1384 63.7148 70.0931ZM86.7807 70.1539L86.8899 69.9581L86.6247 69.8562L86.3589 69.7543L86.4654 69.582C86.6236 69.3248 86.842 69.3739 86.9645 69.6945L87.0736 69.9794L86.8728 70.1646L86.6715 70.3492L86.7807 70.1539ZM74.9509 69.8231L74.7272 69.5521L74.9056 69.2677C75.0041 69.1114 75.2054 68.9594 75.354 68.93L75.6235 68.8767L75.9878 69.2421L76.352 69.607L76.2594 69.8503L76.1662 70.0931H75.1746L74.9509 69.8231ZM89.7892 69.9223C89.7892 69.8771 89.8071 69.8336 89.8391 69.8016C89.871 69.7696 89.9144 69.7516 89.9596 69.7516C90.0048 69.7516 90.0481 69.7696 90.0801 69.8016C90.112 69.8336 90.13 69.8771 90.13 69.9223C90.13 69.9676 90.112 70.0111 90.0801 70.0431C90.0481 70.0751 90.0048 70.0931 89.9596 70.0931C89.9144 70.0931 89.871 70.0751 89.8391 70.0431C89.8071 70.0111 89.7892 69.9676 89.7892 69.9223ZM90.9821 69.9223C90.9821 69.8285 91.0631 69.7516 91.1626 69.7516H91.3432L91.2377 69.9223C91.1797 70.0163 91.0987 70.0931 91.0572 70.0931C91.0162 70.0931 90.9821 70.0163 90.9821 69.9223ZM88.1702 69.7516C88.1121 69.6577 87.9161 69.5809 87.734 69.5809H87.4033V69.335C87.4033 69.1994 87.4746 69.0447 87.562 68.9908L87.7207 68.8927L87.8272 69.0661C87.8863 69.1616 88.1127 69.2395 88.331 69.2395H88.7267L88.8204 68.8809L88.9142 68.5224L89.0958 68.6344C89.1959 68.6969 89.2779 68.8585 89.2779 68.9935V69.2395H88.7347L88.6457 69.5809C88.5494 69.9496 88.339 70.0253 88.1702 69.7516ZM81.0796 69.5169L81.274 69.2827L81.1675 69.0052L81.061 68.7273H81.2314C81.3257 68.7273 81.4402 68.8265 81.487 68.9476L81.5712 69.1685L81.3581 69.4598C81.241 69.6204 81.0865 69.7516 81.0157 69.7516C80.9438 69.7516 80.9731 69.646 81.0796 69.5169ZM72.3285 69.4219L72.2305 69.2629L72.4036 69.1562L72.5767 69.0485L72.7471 69.1541C72.8409 69.2122 72.9175 69.3318 72.9175 69.4203C72.9175 69.6284 72.4563 69.6294 72.3285 69.4219ZM29.0343 68.898L28.9289 68.7273H29.1099C29.209 68.7273 29.2899 68.8041 29.2899 68.898C29.2899 68.9919 29.2558 69.0687 29.2148 69.0687C29.1733 69.0687 29.0924 68.9919 29.0343 68.898ZM78.2948 68.9124L78.1953 68.7508L78.3566 68.651L78.518 68.5512L78.6176 68.7129L78.7172 68.8745L78.5558 68.9743L78.3944 69.0741L78.2948 68.9124ZM79.9708 68.8671L79.8664 68.6974L80.0443 68.5192L80.2227 68.3405L80.4895 68.4429C80.8607 68.5859 80.8235 68.8409 80.416 68.9476L80.0752 69.0367L79.9708 68.8671ZM83.0016 68.7769C83.244 68.4845 83.4836 68.4968 83.4836 68.802V69.0474L83.1513 69.0223L82.8195 68.9972L83.0016 68.7769ZM68.1458 68.5566C68.1458 68.5113 68.1637 68.4678 68.1957 68.4358C68.2276 68.4038 68.271 68.3858 68.3162 68.3858C68.3614 68.3858 68.4047 68.4038 68.4367 68.4358C68.4687 68.4678 68.4866 68.5113 68.4866 68.5566C68.4866 68.6018 68.4687 68.6453 68.4367 68.6773C68.4047 68.7093 68.3614 68.7273 68.3162 68.7273C68.271 68.7273 68.2276 68.7093 68.1957 68.6773C68.1637 68.6453 68.1458 68.6018 68.1458 68.5566ZM69.5944 68.3858C69.6524 68.2919 69.7333 68.2151 69.7749 68.2151C69.8159 68.2151 69.85 68.2919 69.85 68.3858C69.85 68.4797 69.7685 68.5566 69.6694 68.5566H69.4889L69.5944 68.3858ZM85.8269 68.421L85.5287 68.3608V68.1271C85.5287 67.999 85.6123 67.8422 85.714 67.7792L85.8993 67.6645L86.0708 67.8363C86.1196 67.8911 86.1551 67.9564 86.1747 68.0272C86.1943 68.098 86.1974 68.1723 86.1837 68.2445L86.1251 68.4808L85.8269 68.421ZM86.4734 68.3976L86.3754 68.2386L86.5485 68.1319L86.7216 68.0241L86.8947 68.1313L87.0678 68.2386L86.9698 68.3976C86.9165 68.4851 86.8047 68.5566 86.7216 68.5566C86.639 68.5566 86.5272 68.4851 86.4734 68.3976ZM87.6632 68.2215C87.5188 67.9878 87.6467 67.8118 87.8986 67.8987L88.0743 67.959L87.9305 68.1906L87.7867 68.4221L87.6632 68.2215ZM89.1075 68.0444C89.1075 67.9991 89.1254 67.9557 89.1574 67.9237C89.1894 67.8916 89.2327 67.8737 89.2779 67.8737C89.3231 67.8737 89.3664 67.8916 89.3984 67.9237C89.4304 67.9557 89.4483 67.9991 89.4483 68.0444C89.4483 68.0897 89.4304 68.1331 89.3984 68.1651C89.3664 68.1971 89.3231 68.2151 89.2779 68.2151C89.2327 68.2151 89.1894 68.1971 89.1574 68.1651C89.1254 68.1331 89.1075 68.0897 89.1075 68.0444ZM77.4667 67.5936C77.3304 67.4575 77.4843 67.1908 77.6994 67.1908C77.7873 67.1908 77.8597 67.306 77.8597 67.4468C77.8597 67.7109 77.6584 67.7862 77.4667 67.5936ZM81.609 67.4468V67.1625L81.7922 67.2233C81.8934 67.2569 81.9754 67.3577 81.9754 67.4468C81.9754 67.5359 81.8928 67.6368 81.7922 67.6704L81.609 67.7312V67.4468ZM90.3856 67.5322L90.2802 67.3615H90.4613C90.5598 67.3615 90.6413 67.4383 90.6413 67.5322C90.6413 67.6261 90.6072 67.7029 90.5662 67.7029C90.5246 67.7029 90.4437 67.6261 90.3856 67.5322ZM89.8488 67.2815L89.9447 67.0307L89.7817 66.9299C89.5293 66.7736 89.5895 66.3852 89.8829 66.272L90.1476 66.1707L90.032 66.3579L89.9159 66.5463L90.1263 66.6765L90.3366 66.8066L90.2221 67.1694C90.1588 67.3689 90.0272 67.5322 89.9298 67.5322H89.7529L89.8488 67.2815ZM84.2862 67.02L84.1972 66.6786H84.3458C84.4273 66.6786 84.5764 66.8322 84.6765 67.02L84.8592 67.3615H84.3757L84.2862 67.02ZM86.5549 67.1097L86.3392 66.8493H86.5203C86.7264 66.8493 86.9666 67.1731 86.8483 67.2916C86.8057 67.3343 86.6731 67.2526 86.5544 67.1097H86.5549ZM53.5157 66.9256C53.5482 66.7586 53.6782 66.5868 53.8044 66.5452L54.0334 66.4684L53.9748 66.7725C53.9423 66.94 53.8124 67.1113 53.6861 67.1534L53.4571 67.2302L53.5157 66.9256ZM85.445 67.0174L85.5521 66.844L85.7108 66.9421C85.9472 67.0883 85.903 67.1908 85.6043 67.1908H85.338L85.445 67.0174ZM88.8801 67.0771C88.8178 67.0142 88.7666 66.8221 88.7666 66.6503V66.3371H89.2779V67.0403L89.4366 66.9421L89.5953 66.844L89.7018 67.0174L89.8094 67.1908H89.4015C89.1778 67.1908 88.9429 67.1395 88.8801 67.0771ZM87.6056 66.6679C87.6324 66.6004 87.6727 66.5391 87.724 66.4877C87.7753 66.4363 87.8365 66.396 87.9039 66.3691L88.1276 66.2945L88.053 66.5185C88.0262 66.5861 87.986 66.6474 87.9347 66.6988C87.8834 66.7501 87.8222 66.7905 87.7548 66.8173L87.5311 66.892L87.6056 66.6679ZM89.1075 65.9957C89.1075 65.9018 89.1884 65.825 89.288 65.825H89.4686L89.3631 65.9957C89.3051 66.0896 89.2241 66.1664 89.1826 66.1664C89.1416 66.1664 89.1075 66.0896 89.1075 65.9957ZM91.0673 65.9957C91.1254 65.9018 91.2063 65.825 91.2479 65.825C91.2889 65.825 91.3229 65.9018 91.3229 65.9957C91.3229 66.0896 91.2415 66.1664 91.1424 66.1664H90.9619L91.0673 65.9957ZM85.4434 65.3128L85.3199 65.1122L85.4903 64.9415L85.6607 64.7707L85.7843 64.9713L85.9078 65.1719L85.7374 65.3427L85.567 65.5134L85.4434 65.3128ZM84.5248 64.9393C84.4428 64.7222 84.4097 64.4869 84.4507 64.4165C84.6031 64.1577 84.8097 64.3002 84.8896 64.7195L84.9716 65.1501L84.8225 65.2424L84.6734 65.3347L84.5248 64.9393ZM90.9821 64.886C90.9821 64.7451 91.0125 64.6299 91.0492 64.6299C91.086 64.6299 91.16 64.7451 91.2143 64.886L91.3123 65.1421H91.1472C91.0567 65.1421 90.9821 65.0268 90.9821 64.886ZM77.1781 64.8006C77.1781 64.7553 77.196 64.7119 77.228 64.6799C77.2599 64.6479 77.3033 64.6299 77.3485 64.6299C77.3937 64.6299 77.437 64.6479 77.469 64.6799C77.5009 64.7119 77.5189 64.7553 77.5189 64.8006C77.5189 64.8459 77.5009 64.8893 77.469 64.9213C77.437 64.9534 77.3937 64.9713 77.3485 64.9713C77.3033 64.9713 77.2599 64.9534 77.228 64.9213C77.196 64.8893 77.1781 64.8459 77.1781 64.8006ZM83.2562 64.8577C83.1866 64.7767 83.1466 64.6743 83.1428 64.5675V64.3909L83.3446 64.5931C83.4554 64.704 83.5065 64.8348 83.458 64.8833C83.4101 64.9313 83.319 64.9201 83.2562 64.8577ZM12.0775 64.4485V64.2676L12.2479 64.3733C12.3416 64.4314 12.4183 64.5125 12.4183 64.5541C12.4183 64.5952 12.3416 64.6294 12.2479 64.6294C12.1542 64.6294 12.0775 64.5477 12.0775 64.4485ZM34.2321 64.0318V63.7757H34.7434V64.2879H34.2321V64.0318ZM78.7118 64.1172C78.7118 64.0719 78.7298 64.0285 78.7618 63.9965C78.7937 63.9644 78.8371 63.9465 78.8823 63.9465C78.9275 63.9465 78.9708 63.9644 79.0028 63.9965C79.0347 64.0285 79.0527 64.0719 79.0527 64.1172C79.0527 64.1625 79.0347 64.2059 79.0028 64.2379C78.9708 64.2699 78.9275 64.2879 78.8823 64.2879C78.8371 64.2879 78.7937 64.2699 78.7618 64.2379C78.7298 64.2059 78.7118 64.1625 78.7118 64.1172ZM87.4619 64.0233L87.374 63.7939L87.6866 63.3633C88.0525 62.8602 88.2261 62.8175 88.3709 63.1953L88.4753 63.469L88.2378 63.6354L87.9998 63.8019L88.2128 63.8883C88.5653 64.0318 88.4535 64.2009 87.9875 64.2282L87.5497 64.2532L87.4619 64.0233ZM32.7979 63.9694C32.7244 63.8504 32.7101 63.7069 32.7665 63.6504C32.9188 63.4978 33.0855 63.7224 33.003 63.9705L32.9311 64.1855L32.7979 63.9694ZM12.0088 63.8211C11.8261 63.6376 11.9017 63.4343 12.1526 63.4343C12.2878 63.4343 12.4402 63.5031 12.4923 63.5869L12.5866 63.74L12.3486 63.8312C12.2181 63.8819 12.0647 63.8776 12.0088 63.8211ZM33.7209 63.6055C33.7209 63.5603 33.7388 63.5168 33.7708 63.4848C33.8027 63.4528 33.8461 63.4348 33.8913 63.4348C33.9365 63.4348 33.9798 63.4528 34.0118 63.4848C34.0438 63.5168 34.0617 63.5603 34.0617 63.6055C34.0617 63.6508 34.0438 63.6942 34.0118 63.7263C33.9798 63.7583 33.9365 63.7763 33.8913 63.7763C33.8461 63.7763 33.8027 63.7583 33.7708 63.7263C33.7388 63.6942 33.7209 63.6508 33.7209 63.6055ZM89.4845 63.5735C89.3711 63.4599 89.2779 63.2998 89.2779 63.2182V63.0694L89.6614 63.1243L90.0448 63.1787V63.4204C90.0448 63.7459 89.7396 63.8291 89.4845 63.5735ZM90.9395 63.6482C90.7755 63.6109 90.6413 63.5138 90.6413 63.4322C90.6413 63.1601 90.898 63.1216 91.2074 63.3484L91.5136 63.5725L91.3757 63.6445C91.3 63.684 91.1035 63.6856 90.9395 63.6482ZM86.7946 63.2641C86.7946 62.856 86.9847 62.8154 87.1295 63.1926C87.2733 63.5682 87.2627 63.6055 87.014 63.6055H86.7946V63.2641ZM86.0399 63.1787C86.0399 63.0379 86.1166 62.9226 86.2103 62.9226C86.3041 62.9226 86.3808 63.0379 86.3808 63.1787C86.3808 63.3196 86.3041 63.4348 86.2103 63.4348C86.1166 63.4348 86.0399 63.3196 86.0399 63.1787ZM58.7727 62.4958C58.7727 62.355 58.8493 62.2397 58.9431 62.2397C59.0368 62.2397 59.1135 62.355 59.1135 62.4958C59.1135 62.6367 59.0368 62.7519 58.9431 62.7519C58.8493 62.7519 58.7727 62.6367 58.7727 62.4958ZM62.0106 62.5812C62.0106 62.4873 62.1257 62.4105 62.2663 62.4105C62.4069 62.4105 62.5219 62.4873 62.5219 62.5812C62.5219 62.6751 62.4069 62.7519 62.2663 62.7519C62.1257 62.7519 62.0106 62.6751 62.0106 62.5812ZM87.4885 62.5812L87.383 62.4105H87.5641C87.6626 62.4105 87.7441 62.4873 87.7441 62.5812C87.7441 62.6751 87.71 62.7519 87.669 62.7519C87.6275 62.7519 87.5465 62.6751 87.4885 62.5812ZM28.7787 61.8882V61.7073L28.9491 61.8129C29.0428 61.8711 29.1195 61.9522 29.1195 61.9938C29.1195 62.0349 29.0428 62.069 28.9491 62.069C28.8554 62.069 28.7787 61.9874 28.7787 61.8882ZM86.2103 61.7276C86.2103 61.6823 86.2283 61.6389 86.2603 61.6069C86.2922 61.5748 86.3356 61.5569 86.3808 61.5569C86.426 61.5569 86.4693 61.5748 86.5013 61.6069C86.5332 61.6389 86.5512 61.6823 86.5512 61.7276C86.5512 61.7729 86.5332 61.8163 86.5013 61.8483C86.4693 61.8803 86.426 61.8983 86.3808 61.8983C86.3356 61.8983 86.2922 61.8803 86.2603 61.8483C86.2283 61.8163 86.2103 61.7729 86.2103 61.7276ZM12.0775 61.5569C12.0775 61.5116 12.0954 61.4681 12.1274 61.4361C12.1594 61.4041 12.2027 61.3861 12.2479 61.3861C12.2931 61.3861 12.3364 61.4041 12.3684 61.4361C12.4004 61.4681 12.4183 61.5116 12.4183 61.5569C12.4183 61.6021 12.4004 61.6456 12.3684 61.6776C12.3364 61.7096 12.2931 61.7276 12.2479 61.7276C12.2027 61.7276 12.1594 61.7096 12.1274 61.6776C12.0954 61.6456 12.0775 61.6021 12.0775 61.5569ZM30.0478 61.3712L29.9333 61.1855L30.1229 60.9956L30.3125 60.8057L30.502 60.9956L30.6916 61.1855L30.5771 61.3712C30.5143 61.4731 30.395 61.5569 30.3125 61.5569C30.2299 61.5569 30.1106 61.4731 30.0478 61.3712ZM26.4849 60.5442L26.3875 60.3853L26.5605 60.2785L26.7336 60.1708L26.9067 60.278L27.0798 60.3853L26.9818 60.5442C26.9285 60.6317 26.8167 60.7032 26.7336 60.7032C26.6511 60.7032 26.5387 60.6317 26.4849 60.5442ZM13.4408 59.3374C13.4408 59.2922 13.4588 59.2487 13.4908 59.2167C13.5227 59.1847 13.5661 59.1667 13.6113 59.1667C13.6565 59.1667 13.6998 59.1847 13.7318 59.2167C13.7637 59.2487 13.7817 59.2922 13.7817 59.3374C13.7817 59.3827 13.7637 59.4261 13.7318 59.4582C13.6998 59.4902 13.6565 59.5082 13.6113 59.5082C13.5661 59.5082 13.5227 59.4902 13.4908 59.4582C13.4588 59.4261 13.4408 59.3827 13.4408 59.3374ZM90.2434 58.3702C90.0783 58.2048 90.105 57.8009 90.2807 57.8009C90.3633 57.8009 90.4714 57.9546 90.5204 58.1424L90.6093 58.4838H90.4831C90.4139 58.4838 90.3063 58.4326 90.2434 58.3702ZM87.4885 56.9473L87.383 56.7766H87.6493C87.7952 56.7766 87.9145 56.8534 87.9145 56.9473C87.9145 57.0412 87.8426 57.118 87.7542 57.118C87.6658 57.118 87.5465 57.0412 87.4885 56.9473ZM88.7166 56.775C88.5973 56.3167 88.6953 56.1187 88.9206 56.361L89.0686 56.5205L88.9461 56.8529L88.8236 57.1852L88.7166 56.775ZM88.085 56.6058C88.085 56.5606 88.1029 56.5171 88.1349 56.4851C88.1668 56.4531 88.2102 56.4351 88.2554 56.4351C88.3006 56.4351 88.3439 56.4531 88.3759 56.4851C88.4078 56.5171 88.4258 56.5606 88.4258 56.6058C88.4258 56.6511 88.4078 56.6945 88.3759 56.7266C88.3439 56.7586 88.3006 56.7766 88.2554 56.7766C88.2102 56.7766 88.1668 56.7586 88.1349 56.7266C88.1029 56.6945 88.085 56.6511 88.085 56.6058ZM85.5287 56.0654V55.8659L85.6426 55.98L85.7566 56.0942L86.0687 55.8114L86.3808 55.5287V55.7197C86.3808 55.8248 86.2322 55.9907 86.0511 56.0878C85.6277 56.3145 85.5287 56.3103 85.5287 56.0654ZM87.0624 56.0937C87.0624 56.0484 87.0804 56.005 87.1124 55.9729C87.1443 55.9409 87.1877 55.9229 87.2329 55.9229C87.2781 55.9229 87.3214 55.9409 87.3534 55.9729C87.3853 56.005 87.4033 56.0484 87.4033 56.0937C87.4033 56.1389 87.3853 56.1824 87.3534 56.2144C87.3214 56.2464 87.2781 56.2644 87.2329 56.2644C87.1877 56.2644 87.1443 56.2464 87.1124 56.2144C87.0804 56.1824 87.0624 56.1389 87.0624 56.0937ZM86.5512 55.9229C86.5512 55.8777 86.5691 55.8342 86.6011 55.8022C86.633 55.7702 86.6764 55.7522 86.7216 55.7522C86.7668 55.7522 86.8101 55.7702 86.8421 55.8022C86.8741 55.8342 86.892 55.8777 86.892 55.9229C86.892 55.9682 86.8741 56.0116 86.8421 56.0437C86.8101 56.0757 86.7668 56.0937 86.7216 56.0937C86.6764 56.0937 86.633 56.0757 86.6011 56.0437C86.5691 56.0116 86.5512 55.9682 86.5512 55.9229ZM88.5962 55.852V55.5815H89.1357L89.0686 55.7842C89.0443 55.8453 89.0079 55.9009 88.9614 55.9474C88.915 55.9939 88.8596 56.0304 88.7986 56.0547L88.5962 56.1219V55.852ZM87.8293 55.7522C87.8874 55.6583 88.045 55.5815 88.1803 55.5815C88.315 55.5815 88.4258 55.6583 88.4258 55.7522V55.9229H87.7239L87.8293 55.7522ZM24.3477 55.4108C24.3477 55.3655 24.3657 55.3221 24.3977 55.29C24.4296 55.258 24.473 55.24 24.5182 55.24C24.5634 55.24 24.6067 55.258 24.6387 55.29C24.6706 55.3221 24.6886 55.3655 24.6886 55.4108C24.6886 55.456 24.6706 55.4995 24.6387 55.5315C24.6067 55.5635 24.5634 55.5815 24.5182 55.5815C24.473 55.5815 24.4296 55.5635 24.3977 55.5315C24.3657 55.4995 24.3477 55.456 24.3477 55.4108ZM89.2779 55.1547V54.8735L89.5761 54.9311L89.8744 54.9888L89.8408 55.1568C89.8222 55.2496 89.688 55.3505 89.5426 55.3809L89.2779 55.4358V55.1547ZM12.6739 54.7279L12.5685 54.5571H12.7496C12.8486 54.5571 12.9296 54.634 12.9296 54.7279C12.9296 54.8218 12.8955 54.8986 12.8545 54.8986C12.8129 54.8986 12.732 54.8218 12.6739 54.7279ZM85.5867 54.5337C85.6458 54.3117 85.6953 54.0343 85.6969 53.9169L85.6991 53.7035H86.221L86.3685 54.0877L86.5155 54.4718L86.4053 54.5806C86.3451 54.6404 86.1118 54.7455 85.8871 54.8132L85.4786 54.9375L85.5867 54.5337ZM88.2554 54.5571C88.2554 54.5119 88.2733 54.4684 88.3053 54.4364C88.3373 54.4044 88.3806 54.3864 88.4258 54.3864C88.471 54.3864 88.5143 54.4044 88.5463 54.4364C88.5783 54.4684 88.5962 54.5119 88.5962 54.5571C88.5962 54.6024 88.5783 54.6458 88.5463 54.6779C88.5143 54.7099 88.471 54.7279 88.4258 54.7279C88.3806 54.7279 88.3373 54.7099 88.3053 54.6779C88.2733 54.6458 88.2554 54.6024 88.2554 54.5571ZM90.3856 54.3864C90.4437 54.2925 90.5246 54.2157 90.5662 54.2157C90.6072 54.2157 90.6413 54.2925 90.6413 54.3864C90.6413 54.4803 90.5598 54.5571 90.4607 54.5571H90.2802L90.3856 54.3864ZM11.4885 54.0567L11.3905 53.8977L11.5636 53.791L11.7366 53.6833V53.95C11.7366 54.2493 11.6344 54.2936 11.4885 54.0567ZM84.7852 53.5851C84.7255 53.5248 84.6765 53.3733 84.6765 53.2484V53.0206H85.1878V53.2666C85.1878 53.552 84.9444 53.7446 84.7857 53.5851H84.7852ZM86.9772 53.5328L86.8718 53.3621H87.0529C87.1519 53.3621 87.2329 53.4389 87.2329 53.5328C87.2329 53.6267 87.1988 53.7035 87.1578 53.7035C87.1162 53.7035 87.0353 53.6267 86.9772 53.5328ZM67.5424 53.1801C67.3853 52.9257 67.5674 52.7875 67.8939 52.9134L68.1676 53.018L68.0611 53.1903C67.9232 53.4144 67.684 53.4096 67.5424 53.1801ZM87.6413 52.9694L87.9577 52.7373L87.7654 52.3772L87.5726 52.0171L87.7446 51.9104L87.9172 51.8037L87.9987 52.0278C88.044 52.1515 88.1009 52.4348 88.1254 52.6578L88.1702 53.0633L87.7473 53.1327L87.3245 53.201L87.6413 52.9694ZM22.1323 52.7645V52.5084H22.6435V53.0206H22.1323V52.7645ZM78.9084 52.6989L78.6783 52.5527L78.7379 52.246C78.7699 52.0774 78.8839 51.9098 78.9898 51.8752L79.1821 51.8111L79.2583 52.3303C79.3381 52.8776 79.2822 52.9369 78.9084 52.6989ZM83.5688 52.6792C83.6269 52.5853 83.7078 52.5084 83.7494 52.5084C83.7904 52.5084 83.8245 52.5853 83.8245 52.6792C83.8245 52.7731 83.7435 52.8499 83.6439 52.8499H83.4634L83.5688 52.6792ZM52.2189 52.5202L52.1209 52.3612L52.294 52.2545L52.4671 52.1467V52.4135C52.4671 52.7128 52.3649 52.7571 52.2189 52.5202ZM10.9697 52.3377L10.8643 52.167H11.0454C11.1444 52.167 11.2254 52.2438 11.2254 52.3377C11.2254 52.4316 11.1913 52.5084 11.1503 52.5084C11.1087 52.5084 11.0278 52.4316 10.9697 52.3377ZM13.1852 52.3377C13.2433 52.2438 13.3242 52.167 13.3657 52.167C13.4068 52.167 13.4408 52.2438 13.4408 52.3377C13.4408 52.4316 13.3599 52.5084 13.2603 52.5084H13.0798L13.1852 52.3377ZM86.2103 52.3377C86.2103 52.2924 86.2283 52.249 86.2603 52.217C86.2922 52.185 86.3356 52.167 86.3808 52.167C86.426 52.167 86.4693 52.185 86.5013 52.217C86.5332 52.249 86.5512 52.2924 86.5512 52.3377C86.5512 52.383 86.5332 52.4264 86.5013 52.4585C86.4693 52.4905 86.426 52.5084 86.3808 52.5084C86.3356 52.5084 86.2922 52.4905 86.2603 52.4585C86.2283 52.4264 86.2103 52.383 86.2103 52.3377ZM89.0223 51.9963C88.9626 51.8992 88.8492 51.8597 88.7709 51.9082L88.6282 51.9968L88.7171 51.6554C88.829 51.2253 88.969 51.2232 89.2337 51.6468L89.4414 51.9803L89.2864 52.0763L89.1309 52.1723L89.0223 51.9963ZM74.0253 51.8256L73.9198 51.6548H74.1009C74.2 51.6548 74.2809 51.7317 74.2809 51.8256C74.2809 51.9194 74.2468 51.9963 74.2058 51.9963C74.1643 51.9963 74.0833 51.9194 74.0253 51.8256ZM84.7857 51.8778C84.6233 51.7151 84.6537 51.3134 84.8283 51.3134C84.9125 51.3134 85.0243 51.4259 85.077 51.5641L85.1729 51.8149L85.0339 51.9008C84.9572 51.9483 84.8454 51.9381 84.7857 51.8778ZM90.13 51.8352C90.13 51.7471 90.2056 51.6282 90.2983 51.5705L90.4671 51.4665L90.3659 51.7311C90.252 52.0272 90.13 52.0806 90.13 51.8352ZM20.5133 51.6548L20.4078 51.4841H20.5889C20.688 51.4841 20.7689 51.5609 20.7689 51.6548C20.7689 51.7487 20.7354 51.8256 20.6938 51.8256C20.6523 51.8256 20.5713 51.7487 20.5133 51.6548ZM82.2907 51.6548C82.2907 51.6095 82.3086 51.5661 82.3406 51.5341C82.3725 51.5021 82.4159 51.4841 82.4611 51.4841C82.5063 51.4841 82.5496 51.5021 82.5816 51.5341C82.6136 51.5661 82.6315 51.6095 82.6315 51.6548C82.6315 51.7001 82.6136 51.7435 82.5816 51.7755C82.5496 51.8076 82.5063 51.8256 82.4611 51.8256C82.4159 51.8256 82.3725 51.8076 82.3406 51.7755C82.3086 51.7435 82.2907 51.7001 82.2907 51.6548ZM14.8042 51.4841C14.8042 51.3902 14.8852 51.3134 14.9847 51.3134H15.1653L15.0598 51.4841C15.0018 51.578 14.9208 51.6548 14.8793 51.6548C14.8383 51.6548 14.8042 51.578 14.8042 51.4841ZM39.3447 51.4841C39.3447 51.3902 39.2872 51.3326 39.2169 51.3561C39.1466 51.3795 39.0641 51.324 39.0337 51.2323C38.9272 50.9122 39.2638 50.9741 39.4757 51.3128L39.6888 51.6548H39.5168C39.4714 51.655 39.4278 51.6371 39.3955 51.6051C39.3633 51.5731 39.345 51.5296 39.3447 51.4841ZM42.9236 51.3134C42.9236 51.2681 42.9415 51.2247 42.9735 51.1927C43.0054 51.1606 43.0488 51.1427 43.094 51.1427C43.1392 51.1427 43.1825 51.1606 43.2145 51.1927C43.2465 51.2247 43.2644 51.2681 43.2644 51.3134C43.2644 51.3587 43.2465 51.4021 43.2145 51.4341C43.1825 51.4661 43.1392 51.4841 43.094 51.4841C43.0488 51.4841 43.0054 51.4661 42.9735 51.4341C42.9415 51.4021 42.9236 51.3587 42.9236 51.3134ZM79.7344 51.4185C79.7344 51.3827 79.8877 51.3128 80.0752 51.2638L80.416 51.1747L80.5114 51.3294L80.6067 51.4841H80.17C79.9303 51.4841 79.7344 51.4548 79.7344 51.4185ZM84.2505 51.1427L84.1451 50.9719H84.3261C84.4252 50.9719 84.5061 51.0488 84.5061 51.1427C84.5061 51.2366 84.4726 51.3134 84.431 51.3134C84.3895 51.3134 84.3085 51.2366 84.2505 51.1427ZM83.7392 50.4598L83.6338 50.289H83.8149C83.9139 50.289 83.9949 50.3659 83.9949 50.4598C83.9949 50.5537 83.9613 50.6305 83.9198 50.6305C83.8782 50.6305 83.7973 50.5537 83.7392 50.4598ZM84.6095 50.3595C84.446 49.9332 84.487 49.7769 84.7618 49.7769H85.0174V50.1082C85.0174 50.2906 84.9487 50.4816 84.8651 50.5339L84.7122 50.6283L84.6095 50.3595ZM20.1799 50.3008L20.0819 50.1418L20.255 50.0351L20.4281 49.9273L20.6012 50.0345L20.7742 50.1418L20.6762 50.3008C20.623 50.3883 20.5112 50.4598 20.4281 50.4598C20.3455 50.4598 20.2337 50.3883 20.1799 50.3008ZM83.0517 49.8195C83.1167 49.4674 83.245 49.1025 83.3377 49.0086L83.5065 48.8379L83.7595 49.1793L84.0119 49.5208L83.7478 49.5757L83.4836 49.6312V50.4598H82.9345L83.0517 49.8195ZM88.5962 50.1935V49.9273L88.7693 50.0345L88.9424 50.1418L88.8444 50.3008C88.6985 50.5376 88.5962 50.4928 88.5962 50.1935ZM78.8823 49.7769C78.8823 49.7316 78.9002 49.6882 78.9322 49.6561C78.9641 49.6241 79.0075 49.6061 79.0527 49.6061C79.0979 49.6061 79.1412 49.6241 79.1732 49.6561C79.2051 49.6882 79.2231 49.7316 79.2231 49.7769C79.2231 49.8221 79.2051 49.8656 79.1732 49.8976C79.1412 49.9296 79.0979 49.9476 79.0527 49.9476C79.0075 49.9476 78.9641 49.9296 78.9322 49.8976C78.9002 49.8656 78.8823 49.8221 78.8823 49.7769ZM90.2333 49.3645C90.2903 49.2156 90.4117 49.094 90.5033 49.094H90.6695L90.6024 49.2967C90.5781 49.3578 90.5417 49.4133 90.4952 49.4598C90.4488 49.5063 90.3934 49.5429 90.3324 49.5672L90.13 49.6344L90.2333 49.3645ZM81.609 49.2647C81.609 49.2194 81.6269 49.176 81.6589 49.144C81.6909 49.1119 81.7342 49.094 81.7794 49.094C81.8246 49.094 81.8679 49.1119 81.8999 49.144C81.9319 49.176 81.9498 49.2194 81.9498 49.2647C81.9498 49.31 81.9319 49.3534 81.8999 49.3854C81.8679 49.4174 81.8246 49.4354 81.7794 49.4354C81.7342 49.4354 81.6909 49.4174 81.6589 49.3854C81.6269 49.3534 81.609 49.31 81.609 49.2647ZM87.4033 49.2647C87.4033 49.2194 87.4212 49.176 87.4532 49.144C87.4852 49.1119 87.5285 49.094 87.5737 49.094C87.6189 49.094 87.6622 49.1119 87.6942 49.144C87.7262 49.176 87.7441 49.2194 87.7441 49.2647C87.7441 49.31 87.7262 49.3534 87.6942 49.3854C87.6622 49.4174 87.6189 49.4354 87.5737 49.4354C87.5285 49.4354 87.4852 49.4174 87.4532 49.3854C87.4212 49.3534 87.4033 49.31 87.4033 49.2647ZM73.9401 48.9942V48.7242L74.1424 48.7915C74.2537 48.8288 74.3752 48.9504 74.4125 49.0619L74.4796 49.2647H73.9401V48.9942ZM75.3034 49.094C75.3034 49.0487 75.3214 49.0053 75.3533 48.9732C75.3853 48.9412 75.4287 48.9232 75.4739 48.9232C75.519 48.9232 75.5624 48.9412 75.5944 48.9732C75.6263 49.0053 75.6443 49.0487 75.6443 49.094C75.6443 49.1392 75.6263 49.1827 75.5944 49.2147C75.5624 49.2467 75.519 49.2647 75.4739 49.2647C75.4287 49.2647 75.3853 49.2467 75.3533 49.2147C75.3214 49.1827 75.3034 49.1392 75.3034 49.094ZM88.5962 48.9184V48.7296L88.2554 48.8379L87.9145 48.9462V48.7701C87.9145 48.673 88.0498 48.5215 88.2154 48.4324L88.5158 48.2713L88.789 48.4714L89.0622 48.6714L88.8289 48.8896L88.5962 49.1073V48.9184ZM87.3271 48.7669L87.2275 48.6053L87.3889 48.5055L87.5503 48.4057L87.6499 48.5674L87.7494 48.729L87.5881 48.8288L87.4267 48.9286L87.3271 48.7669ZM91.5583 48.6752C91.4369 48.3582 91.6137 48.0696 91.9295 48.0696C92.1948 48.0696 92.2342 48.2297 92.0717 48.6533C91.9423 48.991 91.683 49.0022 91.5583 48.6752ZM14.0373 48.5818L13.9319 48.4111L14.0389 48.2377L14.146 48.0643L14.3047 48.1624C14.5118 48.2905 14.5102 48.7525 14.3031 48.7525C14.2147 48.7525 14.0954 48.6757 14.0373 48.5818ZM71.9376 48.3225C71.9376 48.0862 72.0117 47.8471 72.1017 47.7911L72.2657 47.6898L72.435 47.8594L72.6049 48.0296L72.3791 48.3908C72.0809 48.8699 71.9376 48.8475 71.9376 48.3225ZM82.8019 48.5818C82.8019 48.5365 82.8199 48.4931 82.8518 48.4611C82.8838 48.429 82.9272 48.4111 82.9723 48.4111C83.0175 48.4111 83.0609 48.429 83.0929 48.4611C83.1248 48.4931 83.1428 48.5365 83.1428 48.5818C83.1428 48.6271 83.1248 48.6705 83.0929 48.7025C83.0609 48.7345 83.0175 48.7525 82.9723 48.7525C82.9272 48.7525 82.8838 48.7345 82.8518 48.7025C82.8199 48.6705 82.8019 48.6271 82.8019 48.5818ZM84.8193 48.4975C84.7729 48.4511 84.7698 48.179 84.8113 47.8925L84.888 47.3718L85.0802 47.4358L85.273 47.5004L85.2933 47.8893L85.3135 48.2777L85.5489 48.4271L85.7843 48.5765L85.3439 48.5791C85.1021 48.5807 84.8656 48.5439 84.8193 48.4975ZM73.6844 48.2403L73.579 48.0696H73.7601C73.8591 48.0696 73.9401 48.1464 73.9401 48.2403C73.9401 48.3342 73.906 48.4111 73.865 48.4111C73.8234 48.4111 73.7425 48.3342 73.6844 48.2403ZM75.9233 48.155C76.033 47.8685 76.2573 47.8199 76.4 48.0515L76.4942 48.2046L76.2258 48.3076C75.8424 48.4553 75.8136 48.4409 75.9233 48.155ZM18.383 48.0878C18.383 48.004 18.5045 47.8888 18.6525 47.8317C19.0189 47.6908 19.0647 47.6994 19.0647 47.909V48.0899L18.8943 47.9843L18.7239 47.8786V48.06C18.7239 48.1587 18.6472 48.2403 18.5534 48.2403C18.4597 48.2403 18.383 48.1715 18.383 48.0878ZM87.4959 47.9106L87.398 47.7516L87.571 47.6449C87.6664 47.5857 87.7441 47.3883 87.7441 47.2059V46.8745H88.4151L88.3172 47.1306C88.2628 47.2715 88.1574 47.3867 88.0828 47.3867H87.9465L88.0354 47.7282L88.1249 48.0696H87.8591C87.7132 48.0696 87.5497 47.9981 87.4959 47.9106ZM82.6315 47.5574C82.6315 47.5122 82.6495 47.4687 82.6814 47.4367C82.7134 47.4047 82.7567 47.3867 82.8019 47.3867C82.8471 47.3867 82.8905 47.4047 82.9224 47.4367C82.9544 47.4687 82.9723 47.5122 82.9723 47.5574C82.9723 47.6027 82.9544 47.6461 82.9224 47.6782C82.8905 47.7102 82.8471 47.7282 82.8019 47.7282C82.7567 47.7282 82.7134 47.7102 82.6814 47.6782C82.6495 47.6461 82.6315 47.6027 82.6315 47.5574ZM78.6586 47.447C78.5941 47.383 78.5414 47.2219 78.5414 47.0895V46.8495L78.8397 46.9071L79.1379 46.9647V47.2043C79.1379 47.4737 78.837 47.6257 78.6586 47.447ZM86.2103 47.3014C86.2103 47.1605 86.287 47.0453 86.3808 47.0453C86.4745 47.0453 86.5512 47.1605 86.5512 47.3014C86.5512 47.4422 86.4745 47.5574 86.3808 47.5574C86.287 47.5574 86.2103 47.4422 86.2103 47.3014ZM89.7892 47.4027V47.248L90.13 47.3371C90.3175 47.3862 90.4708 47.4561 90.4708 47.4918C90.4708 47.5281 90.3175 47.5574 90.13 47.5574H89.7892V47.4027ZM11.1402 47.216C11.1982 47.1221 11.2792 47.0453 11.3207 47.0453C11.3617 47.0453 11.3958 47.1221 11.3958 47.216C11.3958 47.3099 11.3148 47.3867 11.2153 47.3867H11.0347L11.1402 47.216ZM14.6364 47.1205C14.6402 46.8847 14.9427 46.4445 15.0364 46.5384C15.0811 46.5827 15.0082 46.7678 14.8756 46.9503C14.7424 47.1322 14.6348 47.2091 14.6359 47.121L14.6364 47.1205ZM85.2725 46.8735L85.166 46.7011L85.4403 46.596C85.7662 46.4707 85.9483 46.6088 85.7917 46.8628C85.6495 47.0922 85.4104 47.0975 85.2725 46.8735ZM89.7673 47.0122C89.7551 46.9834 89.7322 46.7486 89.7167 46.4904L89.688 46.0209H90.0554L90.0901 46.4392L90.1247 46.8575L89.9569 46.9615C89.8648 47.0186 89.779 47.041 89.7673 47.0122ZM81.9498 46.7038C81.9498 46.6585 81.9678 46.6151 81.9997 46.5831C82.0317 46.5511 82.075 46.5331 82.1202 46.5331C82.1654 46.5331 82.2088 46.5511 82.2407 46.5831C82.2727 46.6151 82.2907 46.6585 82.2907 46.7038C82.2907 46.7491 82.2727 46.7925 82.2407 46.8245C82.2088 46.8566 82.1654 46.8745 82.1202 46.8745C82.075 46.8745 82.0317 46.8566 81.9997 46.8245C81.9678 46.7925 81.9498 46.7491 81.9498 46.7038ZM13.55 46.5854C13.3583 46.3933 13.4329 46.1916 13.6965 46.1916C13.8371 46.1916 13.9521 46.2637 13.9521 46.3522C13.9521 46.5678 13.6858 46.722 13.55 46.5854ZM19.4056 46.5331C19.4056 46.4392 19.4865 46.3624 19.5861 46.3624H19.7666L19.6612 46.5331C19.6031 46.627 19.5222 46.7038 19.4806 46.7038C19.4396 46.7038 19.4056 46.627 19.4056 46.5331ZM77.1051 46.444L76.777 46.1954L76.9155 46.0652L77.054 45.9356L77.1307 46.15L77.2073 46.3645L77.3629 46.2685L77.5189 46.1714V46.4381C77.5189 46.7572 77.5189 46.7572 77.1051 46.444ZM89.0223 46.5331C89.0803 46.4392 89.1613 46.3624 89.2028 46.3624C89.2438 46.3624 89.2779 46.4392 89.2779 46.5331C89.2779 46.627 89.1969 46.7038 89.0974 46.7038H88.9168L89.0223 46.5331ZM90.4293 46.1127L90.1316 45.7029L90.2434 45.3924L90.3547 45.0819L90.2216 45.202L90.0895 45.322L89.8547 45.0867L89.6198 44.8515L89.7226 44.5826L89.8254 44.3137H89.655C89.5618 44.3137 89.4345 44.1109 89.3722 43.8623L89.2593 43.4104L89.4217 43.2477L89.5847 43.0845L90.3686 43.5443L91.1525 44.0048V45.5087H90.4069L90.7835 45.8609L91.16 46.2119L91.0609 46.3725C90.9076 46.6217 90.752 46.5576 90.4293 46.1127ZM90.31 44.3318C90.1098 43.9568 89.7892 43.8436 89.7892 44.1483C89.7892 44.2454 89.9085 44.3702 90.0544 44.4262L90.3201 44.5287L90.2147 44.805L90.1098 45.0819L90.3063 44.8867L90.5023 44.6919L90.31 44.3318ZM86.3808 46.1916C86.7109 45.9782 86.892 45.9782 86.892 46.1916V46.3624L86.5086 46.3597L86.1251 46.357L86.3808 46.1916ZM87.3111 46.094C87.6573 45.8369 87.9183 45.8358 87.9699 46.0913L87.9998 46.2391L87.4885 46.2909L86.9772 46.3426L87.3111 46.094ZM10.0324 46.0209C10.0324 45.9756 10.0504 45.9322 10.0823 45.9002C10.1143 45.8682 10.1577 45.8502 10.2029 45.8502C10.2481 45.8502 10.2914 45.8682 10.3234 45.9002C10.3553 45.9322 10.3733 45.9756 10.3733 46.0209C10.3733 46.0662 10.3553 46.1096 10.3234 46.1416C10.2914 46.1737 10.2481 46.1916 10.2029 46.1916C10.1577 46.1916 10.1143 46.1737 10.0823 46.1416C10.0504 46.1096 10.0324 46.0662 10.0324 46.0209ZM81.7112 45.7478L81.5978 45.4517L81.7682 45.2809L81.9386 45.1102L82.0521 45.4063L82.1655 45.7024L81.9951 45.8731L81.8247 46.0439L81.7112 45.7478ZM85.8951 45.8587C85.9685 45.6384 86.2018 45.5989 86.2231 45.8032C86.23 45.8715 86.1438 45.958 86.0314 45.9953L85.8269 46.0636L85.8951 45.8587ZM92.0046 45.8502C92.0046 45.7563 92.0771 45.6795 92.1649 45.6795C92.2533 45.6795 92.3726 45.7563 92.4307 45.8502L92.5361 46.0209H92.2698C92.1239 46.0209 92.0046 45.9441 92.0046 45.8502ZM34.1469 45.6795C34.205 45.5856 34.2859 45.5087 34.3275 45.5087C34.3685 45.5087 34.4025 45.5856 34.4025 45.6795C34.4025 45.7734 34.3216 45.8502 34.222 45.8502H34.0415L34.1469 45.6795ZM66.612 45.6693V45.4885L66.7824 45.5941C66.8761 45.6523 66.9528 45.7334 66.9528 45.775C66.9528 45.8161 66.8761 45.8502 66.7824 45.8502C66.6887 45.8502 66.612 45.7691 66.612 45.6693ZM74.0583 45.7408C73.922 45.6048 74.0759 45.338 74.291 45.338C74.3789 45.338 74.4513 45.4533 74.4513 45.5941C74.4513 45.8582 74.25 45.9334 74.0583 45.7408ZM85.4658 45.5594C85.4067 45.5007 85.3582 45.3583 85.3582 45.2441V45.0361L85.7358 44.9374L86.1129 44.8386L86.2375 45.0414L86.3626 45.2431L86.4745 44.9496L86.5869 44.6573L86.7397 44.7517L86.892 44.8461V44.2747L86.4234 44.3553C86.1656 44.3996 85.8205 44.494 85.6565 44.5639L85.3582 44.6919V44.0122L85.6991 43.9226L86.0399 43.8335V43.4451L85.8269 43.4729C85.7097 43.4878 85.518 43.4915 85.4008 43.4803L85.1878 43.46V42.9479H85.6991V42.4224L85.967 42.6422C86.1145 42.7633 86.3824 42.997 86.5634 43.1613L86.892 43.46V43.2893C86.892 43.244 86.91 43.2006 86.9419 43.1686C86.9739 43.1366 87.0172 43.1186 87.0624 43.1186C87.1562 43.1186 87.2329 43.2338 87.2329 43.3747C87.2329 43.5155 87.1562 43.6308 87.0624 43.6308C86.8265 43.6308 86.8473 44.0997 87.0869 44.1798L87.2818 44.2449L87.0624 44.6551L86.843 45.0659L87.0379 45.1305C87.145 45.1662 87.2329 45.2639 87.2329 45.3482V45.5002L86.7429 45.402L86.2519 45.3039L85.9126 45.4853L85.5734 45.6672L85.4658 45.5594ZM86.5512 44.0677C86.5512 44.0261 86.4745 43.945 86.3808 43.8869L86.2103 43.7812V43.9626C86.2103 44.0613 86.287 44.1429 86.3808 44.1429C86.4745 44.1429 86.5512 44.1088 86.5512 44.0677ZM88.085 45.5269C88.085 45.4431 88.2 45.3306 88.3406 45.2761L88.5962 45.178V45.6795H88.3406C88.2 45.6795 88.085 45.6106 88.085 45.5269ZM72.1901 45.1801L72.1038 44.8515L72.3402 44.9422C72.4702 44.9923 72.5767 45.1401 72.5767 45.2708C72.5767 45.6256 72.2886 45.5578 72.1901 45.1801ZM64.0557 45.1673C64.0557 45.122 64.0736 45.0786 64.1056 45.0466C64.1376 45.0146 64.1809 44.9966 64.2261 44.9966C64.2713 44.9966 64.3147 45.0146 64.3466 45.0466C64.3786 45.0786 64.3965 45.122 64.3965 45.1673C64.3965 45.2126 64.3786 45.256 64.3466 45.288C64.3147 45.32 64.2713 45.338 64.2261 45.338C64.1809 45.338 64.1376 45.32 64.1056 45.288C64.0736 45.256 64.0557 45.2126 64.0557 45.1673ZM87.4959 45.179L87.398 45.02L87.5471 44.9277C87.7122 44.8258 87.9145 44.9736 87.9145 45.1956C87.9145 45.3882 87.6174 45.3764 87.4959 45.179ZM88.9749 45.1273L88.5861 44.9406L88.6447 44.7656C88.6654 44.7132 88.6966 44.6656 88.7364 44.6257C88.7761 44.5858 88.8236 44.5544 88.8758 44.5335L89.0489 44.4753L89.2449 44.9069C89.353 45.1438 89.4233 45.3327 89.402 45.3263C89.3807 45.3199 89.1884 45.2303 88.9749 45.1273ZM66.4416 44.9966C66.4416 44.9513 66.4595 44.9079 66.4915 44.8759C66.5234 44.8438 66.5668 44.8258 66.612 44.8258C66.6572 44.8258 66.7005 44.8438 66.7325 44.8759C66.7645 44.9079 66.7824 44.9513 66.7824 44.9966C66.7824 45.0419 66.7645 45.0853 66.7325 45.1173C66.7005 45.1493 66.6572 45.1673 66.612 45.1673C66.5668 45.1673 66.5234 45.1493 66.4915 45.1173C66.4595 45.0853 66.4416 45.0419 66.4416 44.9966ZM77.2686 44.8349L77.1578 44.6551L77.2633 44.4844C77.3213 44.3905 77.4848 44.3137 77.6265 44.3137H77.8848L77.8294 44.598C77.7633 44.9411 77.423 45.0846 77.2686 44.8349ZM88.085 44.5025C88.085 44.4188 88.2064 44.3035 88.3544 44.2464C88.7395 44.0987 88.7677 44.1131 88.658 44.399C88.5531 44.6727 88.085 44.7576 88.085 44.5025ZM87.4837 44.3062L87.374 44.128L87.5859 43.8719L87.7979 43.6158L87.9641 43.7828L88.1302 43.9493L88.028 44.2166C87.9103 44.5239 87.6445 44.5671 87.4837 44.3062ZM64.4892 44.1547L64.3912 43.9957L64.5403 43.9034C64.7054 43.8015 64.9078 43.9493 64.9078 44.1712C64.9078 44.3638 64.6106 44.3521 64.4892 44.1547ZM82.4611 44.0576V43.7764L82.7593 43.834L83.0576 43.8917L83.024 44.0597C83.0054 44.1525 82.8712 44.2534 82.7258 44.2838L82.4611 44.3387V44.0576ZM88.4998 43.8202L87.9955 43.3475L87.7846 43.4179L87.5737 43.4883V43.3443C87.5737 43.2643 87.7457 43.1239 87.9561 43.0311L88.339 42.8625L88.8082 43.3571C89.5868 44.1776 89.3168 44.5842 88.4998 43.8202ZM18.383 43.5454V43.2893H18.8943V43.8015H18.383V43.5454ZM70.1056 43.6308C69.9394 43.3619 70.1482 43.1613 70.594 43.1613H71.003L70.7292 43.4814C70.422 43.8415 70.2595 43.8805 70.1056 43.6308ZM83.5246 43.4536L83.7392 43.1058L84.1349 43.0055L84.5312 42.9041L84.7229 43.0967L84.9151 43.2893H84.3719L84.2739 43.5454L84.1759 43.8015H83.3105L83.5246 43.4536ZM90.4091 43.204C90.4634 43.0631 90.5678 42.9479 90.6413 42.9479C90.7148 42.9479 90.8191 43.0631 90.8735 43.204L90.9715 43.46H90.3111L90.4091 43.204ZM91.6755 43.2808L91.6638 43.0167L90.9869 42.5979C90.3058 42.1775 90.1423 41.8707 90.4858 41.6584L90.6711 41.5437L90.8607 41.7336C90.9651 41.8382 91.1211 41.9235 91.2074 41.9235H91.3645L91.1456 41.6589L90.9262 41.3943L91.193 41.127L91.4603 40.8592L91.676 41.2636C91.9231 41.7256 91.9279 41.6829 91.5844 42.027C91.4406 42.1711 91.3229 42.3605 91.3229 42.448V42.6064H91.6638C92.0339 42.6064 92.0568 42.6854 91.8342 43.204L91.6878 43.5454L91.6755 43.2808ZM61.2651 43.1527C61.2187 43.0781 61.2438 42.9148 61.321 42.79L61.461 42.5627L61.6506 42.6801C61.755 42.7441 61.8402 42.9079 61.8402 43.0428V43.2893H61.5947C61.4594 43.2893 61.3114 43.2274 61.2651 43.1527ZM80.4475 43.0818C80.2083 42.8422 80.1838 42.6064 80.3979 42.6064C80.554 42.6064 80.8112 43.1213 80.7068 43.2253C80.6749 43.2573 80.5577 43.1933 80.4475 43.0818ZM88.6857 42.9548L88.5845 42.791L88.8034 42.4373L89.0223 42.0836L88.7911 41.9395L88.56 41.7955L88.7059 41.7155C88.7858 41.6706 88.985 41.5874 89.148 41.5287L89.4441 41.4236L89.3924 41.8947C89.3642 42.154 89.2843 42.4581 89.214 42.5712L89.0872 42.7772L89.1927 42.9479L89.2981 43.1186H89.0425C88.9019 43.1186 88.7411 43.045 88.6857 42.9548ZM87.0188 42.8204C86.9836 42.7494 86.9602 42.5445 86.966 42.3653L86.9772 42.0382L87.1903 41.9667L87.4033 41.8953V42.2773L87.7478 42.0921L88.0919 41.9075L88.274 42.0206L88.4562 42.1327L88.1206 42.3269C87.9364 42.4336 87.6275 42.6171 87.4342 42.735L87.0827 42.9484L87.0188 42.8204ZM89.6187 42.798C89.6187 42.7158 89.7253 42.56 89.8547 42.4522L90.0901 42.2564L90.1838 42.5003C90.2349 42.6336 90.2312 42.79 90.1753 42.846C90.0192 43.0018 89.6187 42.9671 89.6187 42.798ZM12.5275 42.6587C12.3358 42.4666 12.4103 42.265 12.6739 42.265C12.8145 42.265 12.9296 42.337 12.9296 42.4256C12.9296 42.6411 12.6633 42.7953 12.5275 42.6587ZM64.306 42.5979L64.192 42.4128L64.2969 42.3077L64.4024 42.2026L64.5845 42.385L64.7672 42.568L64.5936 42.6753L64.42 42.7825L64.306 42.5979ZM82.9723 42.4554C82.9723 42.3023 83.4847 42.0382 83.5853 42.1396C83.6146 42.1684 83.4884 42.2863 83.3052 42.401L82.9723 42.6091V42.4554ZM85.0174 42.4357C85.0174 42.3904 85.0354 42.347 85.0673 42.315C85.0993 42.283 85.1426 42.265 85.1878 42.265C85.233 42.265 85.2764 42.283 85.3083 42.315C85.3403 42.347 85.3582 42.3904 85.3582 42.4357C85.3582 42.481 85.3403 42.5244 85.3083 42.5564C85.2764 42.5884 85.233 42.6064 85.1878 42.6064C85.1426 42.6064 85.0993 42.5884 85.0673 42.5564C85.0354 42.5244 85.0174 42.481 85.0174 42.4357ZM83.8298 42.3077C83.8394 42.0841 84.2809 41.5821 84.4683 41.5821C84.5674 41.5821 84.6829 41.486 84.7255 41.3687L84.8022 41.1553L84.5519 40.8672L84.3022 40.5791L84.43 40.3721L84.5578 40.1645L84.7671 40.4505L84.9753 40.7365L85.0749 40.3555L85.1745 39.9751L85.2874 40.0882L85.4003 40.2019L85.6927 39.8402L85.9845 39.479L86.1549 39.5846L86.3248 39.6897L86.2956 40.0808L86.2657 40.4724L85.8562 40.4756L85.4466 40.4788L85.3859 40.7967L85.3247 41.1142L85.5548 41.2582L85.7843 41.4018L85.5926 41.7053L85.4003 42.0094L84.9487 42.002L84.4971 41.995L84.5812 42.2154L84.6659 42.4357H84.2452C84.0135 42.4357 83.8271 42.3781 83.8298 42.3077ZM86.2103 41.7405C86.2103 41.5463 86.3184 41.2785 86.4511 41.1462L86.6912 40.905L86.606 40.5796L86.5214 40.2547L86.7184 40.1331L86.9154 40.0114L87.006 40.3609L87.0976 40.7103L87.3782 40.7706C87.7606 40.8533 88.2554 40.7221 88.2554 40.538C88.2554 40.4548 88.119 40.387 87.9524 40.387H87.6493L87.3511 40.0376L87.0523 39.6881L87.1524 39.5254C87.3053 39.2778 87.7367 39.3307 88.0397 39.6348L88.3113 39.9063L88.7885 39.8103L89.2657 39.7153L89.0739 40.1368L88.8822 40.5577H88.3603L88.6915 40.8085L89.0223 41.0592L88.6388 41.0646L88.2554 41.0699V41.7528H88.0935C88.0045 41.7528 87.8634 41.6306 87.7798 41.4818L87.6286 41.2102L87.3814 41.4391C87.1141 41.6861 86.4399 42.0943 86.2977 42.0943C86.2497 42.0943 86.2103 41.9353 86.2103 41.7405ZM33.83 41.4636C33.7699 41.4034 33.7209 41.2518 33.7209 41.127V40.8992H34.2321V41.1451C34.2321 41.4306 33.9887 41.6232 33.83 41.4636ZM54.7795 41.4306L54.6863 41.2796L54.9473 41.0624L55.2082 40.8453L55.3909 41.0283L55.573 41.2108L55.4585 41.3964C55.3206 41.6205 54.9094 41.6408 54.7795 41.4306ZM89.7263 41.4626C89.6672 41.4028 89.6187 41.1318 89.6187 40.8597V40.3635L89.9585 40.4718L90.2983 40.5801L90.196 40.3129L90.0938 40.0456H90.4607L90.4378 40.6522L90.4149 41.2588L90.1247 41.4146L89.8339 41.5698L89.7263 41.4626ZM76.6668 41.2406C76.6668 41.1954 76.6847 41.1519 76.7167 41.1199C76.7487 41.0879 76.792 41.0699 76.8372 41.0699C76.8824 41.0699 76.9258 41.0879 76.9577 41.1199C76.9897 41.1519 77.0076 41.1954 77.0076 41.2406C77.0076 41.2859 76.9897 41.3293 76.9577 41.3614C76.9258 41.3934 76.8824 41.4114 76.8372 41.4114C76.792 41.4114 76.7487 41.3934 76.7167 41.3614C76.6847 41.3293 76.6668 41.2859 76.6668 41.2406ZM61.9585 41.1313C61.8221 40.9952 61.976 40.7285 62.1912 40.7285C62.2791 40.7285 62.3515 40.8437 62.3515 40.9845C62.3515 41.2486 62.1502 41.3239 61.9585 41.1313ZM60.4156 40.9515C60.3554 40.8912 60.3064 40.7397 60.3064 40.6148V40.387H60.8177V40.633C60.8177 40.9184 60.5743 41.111 60.4156 40.9515ZM68.4866 40.8992C68.4866 40.8053 68.5676 40.7285 68.6672 40.7285H68.8477L68.7422 40.8992C68.6842 40.9931 68.6032 41.0699 68.5617 41.0699C68.5207 41.0699 68.4866 40.9931 68.4866 40.8992ZM83.3915 40.888C83.2168 40.6041 83.3734 40.5652 83.6184 40.8309L83.8378 41.0699H83.6711C83.5789 41.0699 83.4527 40.9877 83.3915 40.888ZM83.7792 40.5364C83.8947 40.4201 84.0321 40.3673 84.0843 40.4201C84.1371 40.4724 84.0423 40.5679 83.8745 40.6319L83.5688 40.7487L83.7792 40.5364ZM11.3958 40.2163C11.3958 40.1224 11.4767 40.0456 11.5763 40.0456H11.7569L11.6514 40.2163C11.5934 40.3102 11.5124 40.387 11.4709 40.387C11.4299 40.387 11.3958 40.3102 11.3958 40.2163ZM78.5414 40.2163C78.5414 40.171 78.5594 40.1276 78.5913 40.0956C78.6233 40.0635 78.6666 40.0456 78.7118 40.0456C78.757 40.0456 78.8004 40.0635 78.8323 40.0956C78.8643 40.1276 78.8823 40.171 78.8823 40.2163C78.8823 40.2616 78.8643 40.305 78.8323 40.337C78.8004 40.369 78.757 40.387 78.7118 40.387C78.6666 40.387 78.6233 40.369 78.5913 40.337C78.5594 40.305 78.5414 40.2616 78.5414 40.2163ZM82.6123 40.1736C82.6017 40.0562 82.5671 39.7431 82.5362 39.4774L82.4797 38.9945L82.7114 39.1877L82.9436 39.3808L83.0549 39.0303C83.1763 38.6462 83.1859 38.6408 83.8703 38.5928L84.3426 38.5597L84.2665 38.8334C84.2249 38.9833 84.1424 39.3477 84.0833 39.6417L83.9768 40.1773L83.4533 40.2819C82.7242 40.4281 82.6342 40.4164 82.6118 40.1736H82.6123ZM16.2762 39.7564C16.0845 39.5643 16.1596 39.3627 16.4232 39.3627C16.5638 39.3627 16.6788 39.4347 16.6788 39.5233C16.6788 39.7388 16.412 39.893 16.2762 39.7564ZM81.0977 39.7041C81.0977 39.6102 81.1787 39.5334 81.2783 39.5334H81.4588L81.3534 39.7041C81.2953 39.798 81.2144 39.8748 81.1728 39.8748C81.1318 39.8748 81.0977 39.798 81.0977 39.7041ZM89.5495 39.6001L89.451 39.3408L89.2816 39.4459L89.1123 39.5505L89.1698 39.0543C89.2427 38.4285 89.402 38.1676 89.7119 38.1676H89.9548L90.2152 38.7918C90.3585 39.1343 90.4549 39.4224 90.4304 39.432C90.2907 39.5022 90.1529 39.576 90.0171 39.6534L89.6491 39.8588L89.5495 39.6001ZM12.0775 39.5334C12.0775 39.4881 12.0954 39.4447 12.1274 39.4127C12.1594 39.3806 12.2027 39.3627 12.2479 39.3627C12.2931 39.3627 12.3364 39.3806 12.3684 39.4127C12.4004 39.4447 12.4183 39.4881 12.4183 39.5334C12.4183 39.5787 12.4004 39.6221 12.3684 39.6541C12.3364 39.6861 12.2931 39.7041 12.2479 39.7041C12.2027 39.7041 12.1594 39.6861 12.1274 39.6541C12.0954 39.6221 12.0775 39.5787 12.0775 39.5334ZM63.7148 39.5334C63.7148 39.4881 63.7328 39.4447 63.7648 39.4127C63.7967 39.3806 63.8401 39.3627 63.8853 39.3627C63.9305 39.3627 63.9738 39.3806 64.0058 39.4127C64.0377 39.4447 64.0557 39.4881 64.0557 39.5334C64.0557 39.5787 64.0377 39.6221 64.0058 39.6541C63.9738 39.6861 63.9305 39.7041 63.8853 39.7041C63.8401 39.7041 63.7967 39.6861 63.7648 39.6541C63.7328 39.6221 63.7148 39.5787 63.7148 39.5334ZM84.847 39.5334C84.847 39.4881 84.8649 39.4447 84.8969 39.4127C84.9288 39.3806 84.9722 39.3627 85.0174 39.3627C85.0626 39.3627 85.1059 39.3806 85.1379 39.4127C85.1699 39.4447 85.1878 39.4881 85.1878 39.5334C85.1878 39.5787 85.1699 39.6221 85.1379 39.6541C85.1059 39.6861 85.0626 39.7041 85.0174 39.7041C84.9722 39.7041 84.9288 39.6861 84.8969 39.6541C84.8649 39.6221 84.847 39.5787 84.847 39.5334ZM10.6289 39.1919L10.5235 39.0212H10.7045C10.8036 39.0212 10.8845 39.098 10.8845 39.1919C10.8845 39.2858 10.8504 39.3627 10.8094 39.3627C10.7679 39.3627 10.687 39.2858 10.6289 39.1919ZM51.2742 39.0964V38.8302L51.4472 38.9375L51.6203 39.0447L51.5223 39.2037C51.3764 39.4406 51.2742 39.3957 51.2742 39.0964ZM84.447 39.2341L84.3533 39.082L84.6792 38.8025L85.0057 38.5224L85.0749 38.644C85.1133 38.7107 85.0083 38.9049 84.8422 39.0756L84.5407 39.3861L84.447 39.2341ZM86.6896 39.2458C86.8127 39.1967 86.9597 39.2031 87.0161 39.2597C87.0731 39.3162 86.9724 39.3568 86.7924 39.3493L86.466 39.3355L86.6896 39.2458ZM56.2217 39.0276C56.0832 38.9407 56.015 38.8249 56.0688 38.7705C56.2036 38.636 56.7276 38.8505 56.7276 39.0394C56.7276 39.2341 56.5401 39.2293 56.2217 39.0276ZM63.8853 39.0116V38.8302L64.0557 38.9359C64.1494 38.994 64.2261 39.0751 64.2261 39.1167C64.2261 39.1578 64.1494 39.1919 64.0557 39.1919C63.962 39.1919 63.8853 39.1108 63.8853 39.0116ZM58.0377 38.9108C57.9733 38.8468 57.9206 38.6856 57.9206 38.5533V38.3132L58.2188 38.3709L58.517 38.4285V38.668C58.517 38.9375 58.2161 39.0895 58.0377 38.9108ZM85.9462 38.8702C85.592 38.5154 86.0271 38.421 86.4761 38.755L86.8068 39.0015L86.4148 38.9748C86.1992 38.9593 85.9888 38.9129 85.9462 38.8702ZM87.8384 38.8649L87.7415 38.7086L88.2655 38.1836L88.789 37.6591L88.6931 37.5044L88.5983 37.3497L88.8364 37.2579C89.148 37.1384 89.7892 37.3092 89.7892 37.5119V37.6704L89.4909 37.6202L89.1927 37.5701L89.2428 37.8048L89.2923 38.0395L88.9445 38.2844C88.7528 38.4183 88.5962 38.6392 88.5962 38.7753V39.0212H88.2655C88.0834 39.0212 87.8911 38.9508 87.8384 38.8649ZM52.9784 38.6798C52.9784 38.6345 52.9963 38.5911 53.0283 38.559C53.0602 38.527 53.1036 38.509 53.1488 38.509C53.194 38.509 53.2373 38.527 53.2693 38.559C53.3013 38.5911 53.3192 38.6345 53.3192 38.6798C53.3192 38.725 53.3013 38.7685 53.2693 38.8005C53.2373 38.8325 53.194 38.8505 53.1488 38.8505C53.1036 38.8505 53.0602 38.8325 53.0283 38.8005C52.9963 38.7685 52.9784 38.725 52.9784 38.6798ZM86.9101 38.2743L86.6833 38.0011L86.7823 37.7429L86.8814 37.4847H87.7841L87.6957 37.1464L87.6073 36.8077L87.9358 36.9837L88.265 37.1603L88.1531 37.3417L88.0413 37.5231L88.2761 37.672L88.511 37.8213L88.0631 37.8235L87.6158 37.8261L87.3761 38.1873L87.1365 38.548L86.9101 38.2748V38.2743ZM84.5061 38.1078V37.8774L83.8266 37.9456L83.147 38.0134L83.2461 37.7557C83.3004 37.6138 83.4847 37.4532 83.6562 37.3983L83.9672 37.2996L84.0854 36.5815C84.2116 35.8153 84.4561 35.3848 84.684 35.5262L84.8235 35.6126L85.0483 35.2925C85.1718 35.1164 85.4456 34.918 85.6565 34.8513L86.0399 34.7302V35.1143L86.2103 35.0092L86.3808 34.9036V35.2546L86.6087 35.1671L86.8361 35.0796L86.8116 35.4141C86.7844 35.7849 86.4239 36.2896 86.1864 36.2896H86.0335L86.14 35.8628L86.2471 35.436H85.7358L85.633 35.7028L85.5308 35.97L85.1623 35.9167L84.7937 35.8628L84.7325 36.041C84.6989 36.1392 84.8166 36.376 84.994 36.5665C85.1713 36.7575 85.3684 37.0766 85.4312 37.2761L85.5462 37.6378L85.1963 37.9883C84.7942 38.3911 84.5061 38.4413 84.5061 38.1078ZM18.2978 37.8261C18.3559 37.7322 18.4368 37.6554 18.4784 37.6554C18.5194 37.6554 18.5534 37.7322 18.5534 37.8261C18.5534 37.92 18.4725 37.9969 18.3729 37.9969H18.1924L18.2978 37.8261ZM54.1713 37.8363C54.1713 37.7477 54.248 37.6282 54.3417 37.5701L54.5121 37.4644V37.7312C54.5121 37.8768 54.4355 37.9969 54.3417 37.9969C54.248 37.9969 54.1713 37.9243 54.1713 37.8363ZM46.332 37.5701V37.2857L46.5152 37.3465C46.6164 37.3801 46.6984 37.481 46.6984 37.5701C46.6984 37.6591 46.6158 37.76 46.5152 37.7936L46.332 37.8544V37.5701ZM82.6315 37.6554C82.6315 37.5615 82.7125 37.4847 82.8121 37.4847H82.9926L82.8871 37.6554C82.8291 37.7493 82.7481 37.8261 82.7066 37.8261C82.6656 37.8261 82.6315 37.7493 82.6315 37.6554ZM18.7265 37.5642C18.7276 37.4735 18.8006 37.2868 18.8879 37.148L19.0461 36.8973L19.1734 37.0243L19.3001 37.1512L19.012 37.4399L18.7239 37.7285L18.7265 37.5642ZM85.9094 37.5066L85.7422 37.3993L85.8855 37.0152L86.0293 36.6311H86.2689C86.4015 36.6311 86.6023 36.7431 86.7152 36.8797L86.9213 37.1283L86.8244 37.2857C86.6923 37.4996 86.1161 37.6383 85.9094 37.5066ZM11.9071 37.314C11.9071 37.2687 11.925 37.2253 11.957 37.1932C11.9889 37.1612 12.0323 37.1432 12.0775 37.1432C12.1227 37.1432 12.166 37.1612 12.198 37.1932C12.2299 37.2253 12.2479 37.2687 12.2479 37.314C12.2479 37.3592 12.2299 37.4027 12.198 37.4347C12.166 37.4667 12.1227 37.4847 12.0775 37.4847C12.0323 37.4847 11.9889 37.4667 11.957 37.4347C11.925 37.4027 11.9071 37.3592 11.9071 37.314ZM53.8305 37.314C53.8305 37.2201 53.9114 37.1432 54.011 37.1432H54.1915L54.0861 37.314C54.028 37.4079 53.9471 37.4847 53.9056 37.4847C53.8646 37.4847 53.8305 37.4079 53.8305 37.314ZM62.4367 37.314L62.3312 37.1432H63.0534L62.948 37.314C62.8899 37.4079 62.7749 37.4847 62.6923 37.4847C62.6098 37.4847 62.4947 37.4079 62.4367 37.314ZM12.3331 36.8018L12.2277 36.6311L12.3347 36.4577L12.4418 36.2843L12.6005 36.3825C12.8076 36.5105 12.806 36.9725 12.5989 36.9725C12.5105 36.9725 12.3912 36.8957 12.3331 36.8018ZM56.1471 36.8285L56.0406 36.6545L56.2249 36.5404L56.4097 36.4262L56.5146 36.5313L56.6195 36.6369L56.4374 36.8194L56.2547 37.0024L56.1471 36.8285ZM88.413 36.7314L88.6127 36.4908L88.446 36.3873L88.2788 36.2843L88.167 36.4657L88.0546 36.6476L87.8096 36.4443L87.5646 36.2405L87.8517 35.9236C88.0088 35.7492 88.2564 35.6067 88.4013 35.6067H88.6644L88.4647 35.8068L88.265 36.0069L88.642 36.1952L89.0191 36.3835L89.0761 36.678L89.1325 36.9725H88.2138L88.413 36.7314ZM86.778 36.5457V36.2896H87.4033V36.8018H86.7786L86.778 36.5457ZM89.9308 36.4177C89.7854 36.3003 89.6198 36.0698 89.5628 35.9055L89.459 35.6067H90.13V35.7774C90.13 35.8713 90.245 35.9482 90.3856 35.9482H90.6413V36.6311H90.4181C90.2956 36.6311 90.0762 36.535 89.9308 36.4177ZM60.6473 36.2043C60.6473 36.0634 60.724 35.9482 60.8177 35.9482C60.9114 35.9482 60.9881 36.0634 60.9881 36.2043C60.9881 36.3451 60.9114 36.4603 60.8177 36.4603C60.724 36.4603 60.6473 36.3451 60.6473 36.2043ZM81.0977 36.2896C81.0977 36.2443 81.1157 36.2009 81.1476 36.1689C81.1796 36.1369 81.2229 36.1189 81.2681 36.1189C81.3133 36.1189 81.3567 36.1369 81.3887 36.1689C81.4206 36.2009 81.4386 36.2443 81.4386 36.2896C81.4386 36.3349 81.4206 36.3783 81.3887 36.4103C81.3567 36.4424 81.3133 36.4603 81.2681 36.4603C81.2229 36.4603 81.1796 36.4424 81.1476 36.4103C81.1157 36.3783 81.0977 36.3349 81.0977 36.2896ZM16.8492 36.0479V35.7774H17.3887L17.3216 35.9802C17.2974 36.0413 17.2609 36.0968 17.2145 36.1434C17.1681 36.1899 17.1126 36.2264 17.0516 36.2507L16.8492 36.3179V36.0479ZM88.9387 36.1216L88.6841 35.9626L88.8929 35.7534C89.141 35.5048 89.3312 35.6441 89.2502 36.0159L89.1927 36.2805L88.9387 36.1216ZM87.2329 35.7673V35.5864L87.4033 35.6921C87.497 35.7502 87.5737 35.8313 87.5737 35.8729C87.5737 35.914 87.497 35.9482 87.4033 35.9482C87.3095 35.9482 87.2329 35.8665 87.2329 35.7673ZM11.6376 35.4136L11.5279 35.2354L11.7026 35.0604L11.8772 34.8854L12.0626 35.0001C12.3225 35.1607 12.2932 35.3821 11.9976 35.4958L11.7473 35.5918L11.6376 35.4136ZM90.376 35.3869L90.2834 35.1452L89.8659 35.2253C89.3583 35.3224 89.3237 35.1735 89.7956 34.9206L90.1428 34.7339L90.4772 34.8406L90.8117 34.9473V35.1815C90.8117 35.3101 90.7345 35.4637 90.6402 35.5219L90.4682 35.6286L90.376 35.3869ZM44.0313 35.2653L43.9258 35.0945H44.1069C44.206 35.0945 44.2869 35.1714 44.2869 35.2653C44.2869 35.3592 44.2528 35.436 44.2118 35.436C44.1703 35.436 44.0893 35.3592 44.0313 35.2653ZM87.7441 35.1799C87.7441 35.0391 87.8208 34.9238 87.9145 34.9238C88.0083 34.9238 88.085 35.0391 88.085 35.1799C88.085 35.3208 88.0083 35.436 87.9145 35.436C87.8208 35.436 87.7441 35.3208 87.7441 35.1799ZM83.7302 35.0796L83.6157 34.8939L83.8053 34.704L83.9949 34.5141L84.1845 34.704L84.3741 34.8939L84.2595 35.0796C84.1967 35.1815 84.0774 35.2653 83.9949 35.2653C83.9123 35.2653 83.793 35.1815 83.7302 35.0796ZM87.1476 35.0945L87.0422 34.9238H87.5939L87.4885 35.0945C87.4304 35.1884 87.3537 35.2653 87.3181 35.2653C87.2824 35.2653 87.2057 35.1884 87.1476 35.0945ZM88.1276 34.8555C87.9167 34.6517 87.7441 34.4303 87.7441 34.3631C87.7441 34.1156 88.2117 34.2511 88.5147 34.5866L88.8268 34.9318L88.6687 35.0791L88.511 35.2263L88.1276 34.8555ZM79.9048 34.9238C79.9048 34.8299 79.9857 34.7531 80.0853 34.7531H80.2659L80.1604 34.9238C80.1024 35.0177 80.0214 35.0945 79.9799 35.0945C79.9389 35.0945 79.9048 35.0177 79.9048 34.9238ZM81.012 34.752L80.9055 34.5797L81.1797 34.4746C81.5057 34.3492 81.6878 34.4874 81.5312 34.7414C81.389 34.9708 81.1499 34.9761 81.012 34.752ZM89.0042 34.6539C89.0612 34.505 89.1075 34.3471 89.1075 34.3017C89.1075 34.2575 89.1842 34.2681 89.2779 34.3263C89.3716 34.3844 89.4483 34.5424 89.4483 34.6779V34.9238H88.9009L89.0042 34.6539ZM15.3155 34.4117C15.3155 34.3178 15.3964 34.2409 15.496 34.2409H15.6765L15.5711 34.4117C15.513 34.5056 15.4321 34.5824 15.3906 34.5824C15.3495 34.5824 15.3155 34.5056 15.3155 34.4117ZM41.9863 34.4117L41.8627 34.211L42.0331 34.0403L42.2035 33.8696L42.3271 34.0702L42.4506 34.2708L42.2802 34.4415L42.1098 34.6123L41.9863 34.4117ZM84.782 34.4602C84.7239 34.4021 84.6765 34.2479 84.6765 34.1171V33.8792L84.8342 33.9768L84.9918 34.0745L85.0472 33.7858L85.1026 33.4972L85.3582 33.7421L85.6139 33.987L86.123 34.0131C86.4026 34.0275 86.7589 33.9704 86.9144 33.8877L87.1966 33.7357L87.4043 33.9864L87.612 34.2372L87.3798 34.3092C87.252 34.3487 86.9751 34.4191 86.7642 34.4661L86.3808 34.5504V34.2516L86.1677 34.3167C85.6442 34.4767 84.8779 34.5562 84.782 34.4602ZM90.1716 34.4687L89.9575 34.3823L90.0496 34.2329L90.1423 34.0835L89.582 33.9342L89.0223 33.7853L88.8998 33.9704L88.7762 34.1556L88.4732 33.9368C88.2866 33.8062 88.0847 33.6992 87.8719 33.6183C87.7079 33.5634 87.5737 33.446 87.5737 33.3569V33.1968L87.415 33.2945L87.2563 33.3926L87.1567 33.231L87.0571 33.0693L87.2318 32.961L87.4065 32.8533L87.7457 32.961L88.085 33.0688V33.3137C88.085 33.7992 88.7975 33.3585 89.2113 32.6164L89.4004 32.2776H89.8744L89.819 32.5993C89.7886 32.7764 89.8094 33.1029 89.8648 33.3249L89.966 33.7288H90.6051L90.7089 34.0003C90.8857 34.4623 90.6546 34.664 90.1716 34.4687ZM12.5887 34.2409C12.5887 34.1956 12.6067 34.1522 12.6387 34.1202C12.6706 34.0882 12.714 34.0702 12.7592 34.0702C12.8044 34.0702 12.8477 34.0882 12.8797 34.1202C12.9116 34.1522 12.9296 34.1956 12.9296 34.2409C12.9296 34.2862 12.9116 34.3296 12.8797 34.3616C12.8477 34.3937 12.8044 34.4117 12.7592 34.4117C12.714 34.4117 12.6706 34.3937 12.6387 34.3616C12.6067 34.3296 12.5887 34.2862 12.5887 34.2409ZM47.8658 34.0702C47.8658 33.9763 47.9808 33.8995 48.1214 33.8995C48.262 33.8995 48.377 33.9763 48.377 34.0702C48.377 34.1641 48.262 34.2409 48.1214 34.2409C47.9808 34.2409 47.8658 34.1641 47.8658 34.0702ZM11.5662 33.7288C11.5662 33.6835 11.5842 33.64 11.6161 33.608C11.6481 33.576 11.6914 33.558 11.7366 33.558C11.7818 33.558 11.8252 33.576 11.8571 33.608C11.8891 33.64 11.9071 33.6835 11.9071 33.7288C11.9071 33.774 11.8891 33.8175 11.8571 33.8495C11.8252 33.8815 11.7818 33.8995 11.7366 33.8995C11.6914 33.8995 11.6481 33.8815 11.6161 33.8495C11.5842 33.8175 11.5662 33.774 11.5662 33.7288ZM86.1667 33.5153L85.911 33.1312L85.3449 33.3425L84.7793 33.5538L84.6632 33.366L84.5471 33.1782L84.455 33.4108L84.3629 33.6434L84.349 33.4337C84.3416 33.3185 84.5242 33.1008 84.7543 32.9498L85.1729 32.6751L85.3582 32.7898L85.5436 32.9045L85.771 32.7156L85.9984 32.5267L86.0926 32.8885L86.1874 33.2513L86.3467 33.1526L86.5059 33.0539L86.7914 33.3702L87.0773 33.6866L86.8004 33.7933C86.4276 33.9363 86.4553 33.9486 86.1667 33.5153ZM82.934 33.6333C82.8184 33.5175 82.9692 32.8837 83.1204 32.8533C83.179 32.841 83.4319 32.8186 83.6807 32.8026L84.1333 32.7743L83.7659 33.2422C83.4091 33.6967 83.1284 33.8285 82.934 33.6333ZM46.6728 33.2064V33.0256L46.8432 33.1312C46.937 33.1894 47.0136 33.2705 47.0136 33.3121C47.0136 33.3532 46.937 33.3873 46.8432 33.3873C46.7495 33.3873 46.6728 33.3057 46.6728 33.2064ZM78.5414 33.2166C78.5414 33.1713 78.5594 33.1279 78.5913 33.0959C78.6233 33.0638 78.6666 33.0459 78.7118 33.0459C78.757 33.0459 78.8004 33.0638 78.8323 33.0959C78.8643 33.1279 78.8823 33.1713 78.8823 33.2166C78.8823 33.2619 78.8643 33.3053 78.8323 33.3373C78.8004 33.3693 78.757 33.3873 78.7118 33.3873C78.6666 33.3873 78.6233 33.3693 78.5913 33.3373C78.5594 33.3053 78.5414 33.2619 78.5414 33.2166ZM90.0714 33.1237L90.1721 32.8607L90.3531 32.921C90.4533 32.9546 90.5651 33.0731 90.6024 33.1846L90.6695 33.3873H89.9702L90.0714 33.1237ZM88.2927 32.9018L88.0732 32.7626L88.1904 32.4344C88.2543 32.2541 88.4151 31.981 88.5467 31.8262L88.7863 31.5461L89.1171 31.6331C89.5511 31.7467 89.5442 32.0215 89.1075 32.0215H88.7666L88.7464 32.3203C88.7358 32.4846 88.7389 32.7151 88.7539 32.8324C88.7858 33.0768 88.6095 33.1029 88.2921 32.9018H88.2927ZM13.2704 32.7044C13.2704 32.6591 13.2884 32.6157 13.3203 32.5837C13.3523 32.5517 13.3956 32.5337 13.4408 32.5337C13.486 32.5337 13.5294 32.5517 13.5613 32.5837C13.5933 32.6157 13.6113 32.6591 13.6113 32.7044C13.6113 32.7497 13.5933 32.7931 13.5613 32.8251C13.5294 32.8571 13.486 32.8751 13.4408 32.8751C13.3956 32.8751 13.3523 32.8571 13.3203 32.8251C13.2884 32.7931 13.2704 32.7497 13.2704 32.7044ZM38.5778 32.7044C38.6359 32.6105 38.7168 32.5337 38.7584 32.5337C38.7994 32.5337 38.8335 32.6105 38.8335 32.7044C38.8335 32.7983 38.7525 32.8751 38.6529 32.8751H38.4724L38.5778 32.7044ZM82.2055 32.5337L82.1 32.363H82.2811C82.3801 32.363 82.4611 32.4398 82.4611 32.5337C82.4611 32.6276 82.4275 32.7044 82.386 32.7044C82.3445 32.7044 82.2635 32.6276 82.2055 32.5337ZM86.418 32.2349L86.4798 31.9361L86.8611 31.9778L87.2425 32.0194L87.3974 31.6102C87.4826 31.385 87.6333 31.1513 87.7319 31.09L87.9108 30.9796L87.7979 31.2741L87.685 31.5686L87.9699 31.4592L88.2554 31.3493V31.6801H87.5844L87.6823 31.9361L87.7803 32.1922H87.0624V32.5337H86.3557L86.418 32.2349ZM83.1002 32.2632C83.0501 32.213 83.1167 31.9543 83.2493 31.6891L83.4895 31.2063L83.8703 31.0799L84.2505 30.9539L83.8671 30.8782C83.4543 30.7971 83.3675 30.5773 83.6732 30.3874L83.8628 30.2705L83.9885 30.4743C84.0577 30.5864 84.2217 30.6957 84.3527 30.7165C84.4838 30.7373 84.7373 30.8376 84.9162 30.9401L85.2411 31.1257L84.8699 31.4437C84.6664 31.6187 84.3666 31.7628 84.2042 31.7638L83.9097 31.7654L83.9512 32.0268L83.9927 32.2883L83.5923 32.3219C83.3718 32.34 83.1502 32.3139 83.1002 32.2632ZM85.4701 31.4741C85.4158 31.2671 85.3881 31.0943 85.4078 31.09C85.4275 31.0857 85.7332 30.9353 86.0873 30.7539L86.7312 30.4263L86.916 30.6114L87.1008 30.7966L86.9772 30.9972L86.8537 31.1978L86.5315 31.1135L86.2098 31.0292L86.3099 31.1914L86.41 31.3535L86.2039 31.6022C86.091 31.7387 85.9014 31.8508 85.7832 31.8508H85.5686L85.4701 31.4741ZM15.2303 31.5093L15.1248 31.3386H15.3059C15.4049 31.3386 15.4859 31.4154 15.4859 31.5093C15.4859 31.6032 15.4523 31.6801 15.4108 31.6801C15.3693 31.6801 15.2883 31.6032 15.2303 31.5093ZM46.758 31.5093C46.8161 31.4154 46.897 31.3386 46.9386 31.3386C46.9796 31.3386 47.0136 31.4154 47.0136 31.5093C47.0136 31.6032 46.9327 31.6801 46.8331 31.6801H46.6526L46.758 31.5093ZM38.4926 30.9972C38.4926 30.9519 38.5106 30.9085 38.5425 30.8764C38.5745 30.8444 38.6179 30.8264 38.6631 30.8264C38.7083 30.8264 38.7516 30.8444 38.7836 30.8764C38.8155 30.9085 38.8335 30.9519 38.8335 30.9972C38.8335 31.0424 38.8155 31.0859 38.7836 31.1179C38.7516 31.1499 38.7083 31.1679 38.6631 31.1679C38.6179 31.1679 38.5745 31.1499 38.5425 31.1179C38.5106 31.0859 38.4926 31.0424 38.4926 30.9972ZM88.1957 30.9171L88.0999 30.6664L88.2282 30.5869C88.2991 30.5431 88.4588 30.5709 88.5834 30.6477L88.8103 30.788L88.6931 30.978C88.5302 31.242 88.3097 31.2148 88.1957 30.9171ZM12.1717 30.8408L12.0722 30.6792L12.2335 30.5794L12.3949 30.4797L12.4945 30.6413L12.5941 30.803L12.4327 30.9027L12.2713 31.0025L12.1717 30.8408ZM89.042 30.732L88.9584 30.5133L89.2007 30.4204L89.4425 30.3271L89.3386 29.8085L89.2353 29.2899H89.6363L89.8147 29.8021C89.9947 30.3196 90.2216 30.4652 90.3324 30.1334L90.3926 29.952L90.8149 30.4167L91.2377 30.8809L90.9448 30.7758L90.6519 30.6707L90.5656 30.8104C90.5182 30.8878 90.1747 30.9507 89.803 30.9507H89.1261L89.042 30.732ZM44.1506 30.612L43.9296 30.3447L44.1197 30.2273C44.3716 30.071 44.501 30.2188 44.4297 30.5837L44.3721 30.8798L44.1506 30.612ZM82.1202 30.6653C82.1202 30.4167 82.4009 30.302 82.7157 30.4226L83.0011 30.5325L82.7737 30.6765C82.4691 30.8702 82.1202 30.8638 82.1202 30.6653ZM87.2329 30.3996V29.9728H87.5939L87.4874 30.1446L87.3814 30.3169L87.6477 30.4188C87.7947 30.4754 87.9145 30.5901 87.9145 30.6739V30.8264H87.2329V30.3996ZM40.8785 30.3143C40.8785 30.2204 40.9595 30.1435 41.0591 30.1435H41.2396L41.1342 30.3143C41.0761 30.4082 40.9952 30.485 40.9536 30.485C40.9126 30.485 40.8785 30.4082 40.8785 30.3143ZM85.5287 30.27C85.5287 30.1297 85.6522 29.9125 85.8029 29.7866L86.0767 29.5588L86.2716 29.8234C86.3781 29.9691 86.581 30.1329 86.7216 30.1878L86.9772 30.2871L86.6364 30.3031C86.3919 30.3211 86.1495 30.361 85.9121 30.422L85.5287 30.525V30.27ZM84.5487 30.2012C84.2505 30.0806 84.2835 29.6778 84.6068 29.4969C84.7559 29.4132 84.8704 29.2744 84.8624 29.1891C84.86 29.1693 84.8619 29.1493 84.868 29.1304C84.874 29.1114 84.884 29.094 84.8973 29.0793C84.9107 29.0646 84.927 29.0529 84.9452 29.0451C84.9635 29.0372 84.9832 29.0334 85.003 29.0338C85.0893 29.0338 85.2171 28.9762 85.2874 28.9058C85.4631 28.7297 86.0399 28.7441 86.0399 28.9245C86.0399 29.069 84.9215 30.3271 84.8155 30.3009C84.7254 30.2711 84.6364 30.2378 84.5487 30.2012ZM11.8309 29.9878L11.7313 29.8256L11.8927 29.7258L12.054 29.626L12.1536 29.7877L12.2532 29.9493L12.0919 30.0491L11.9305 30.1489L11.8309 29.9878ZM87.5785 29.8933C87.4645 29.7557 87.4017 29.5519 87.4384 29.4398L87.5061 29.2371L88.0514 29.2211C88.3507 29.212 88.5962 29.219 88.5962 29.236C88.5962 29.2536 88.5217 29.4649 88.4301 29.7055L88.2639 30.1435H88.0248C87.8932 30.1435 87.6925 30.0315 87.5785 29.8933ZM81.7522 29.7594C81.7379 29.642 81.7112 29.331 81.6926 29.068L81.6596 28.5899L81.9067 28.6849L82.1538 28.7799L82.681 28.3349L83.2093 27.89L83.7621 27.9801L84.316 28.0703L84.382 27.8713L84.4481 27.6723L84.9008 27.8788L85.354 28.0858L85.6117 27.9865L85.8695 27.8878V28.2741L85.4328 28.4406L84.995 28.607L84.6765 28.4363C84.5013 28.3424 84.1696 28.2656 83.939 28.2656H83.5204L83.4282 28.5056C83.3776 28.6369 83.3819 28.9181 83.4367 29.1299L83.5374 29.514L83.3212 29.3801L83.105 29.2462L82.9958 29.3961C82.8509 29.5962 82.1687 29.9728 81.952 29.9728C81.8572 29.9728 81.7672 29.8768 81.7522 29.7594ZM86.6066 29.3913L86.2354 29.1853L86.5613 28.9815C86.7408 28.8695 86.965 28.7777 87.0603 28.7777H87.2329V29.2046C87.2329 29.674 87.1556 29.697 86.6066 29.3913ZM38.9442 29.2099L38.8484 28.9591L39.0114 28.8583C39.1008 28.8028 39.1743 28.7943 39.1743 28.8391C39.1743 28.8839 39.2206 29.0418 39.2776 29.1907L39.3809 29.4606H39.2105C39.1168 29.4606 38.9975 29.3481 38.9442 29.2099ZM83.654 29.2046C83.654 29.0637 83.7307 28.9485 83.8245 28.9485C83.9182 28.9485 83.9949 29.0637 83.9949 29.2046C83.9949 29.3454 83.9182 29.4606 83.8245 29.4606C83.7307 29.4606 83.654 29.3454 83.654 29.2046ZM43.3496 29.1192C43.4077 29.0253 43.4886 28.9485 43.5302 28.9485C43.5712 28.9485 43.6052 29.0253 43.6052 29.1192C43.6052 29.2131 43.5243 29.2899 43.4247 29.2899H43.2442L43.3496 29.1192ZM14.4634 28.9485C14.4634 28.9032 14.4813 28.8598 14.5133 28.8277C14.5452 28.7957 14.5886 28.7777 14.6338 28.7777C14.679 28.7777 14.7223 28.7957 14.7543 28.8277C14.7862 28.8598 14.8042 28.9032 14.8042 28.9485C14.8042 28.9937 14.7862 29.0372 14.7543 29.0692C14.7223 29.1012 14.679 29.1192 14.6338 29.1192C14.5886 29.1192 14.5452 29.1012 14.5133 29.0692C14.4813 29.0372 14.4634 28.9937 14.4634 28.9485ZM87.8293 28.7777L87.7239 28.607H87.9049C88.0035 28.607 88.085 28.6838 88.085 28.7777C88.085 28.8716 88.0509 28.9485 88.0099 28.9485C87.9683 28.9485 87.8874 28.8716 87.8293 28.7777ZM12.1558 28.2544C11.9987 27.9999 12.1808 27.8617 12.5073 27.9876L12.781 28.0922L12.6745 28.2645C12.5365 28.4886 12.2974 28.4838 12.1558 28.2544ZM87.4033 28.2656C87.4033 28.2203 87.4212 28.1769 87.4532 28.1448C87.4852 28.1128 87.5285 28.0948 87.5737 28.0948C87.6189 28.0948 87.6622 28.1128 87.6942 28.1448C87.7262 28.1769 87.7441 28.2203 87.7441 28.2656C87.7441 28.3108 87.7262 28.3543 87.6942 28.3863C87.6622 28.4183 87.6189 28.4363 87.5737 28.4363C87.5285 28.4363 87.4852 28.4183 87.4532 28.3863C87.4212 28.3543 87.4033 28.3108 87.4033 28.2656ZM15.145 27.9241C15.145 27.8788 15.163 27.8354 15.195 27.8034C15.2269 27.7714 15.2703 27.7534 15.3155 27.7534C15.3607 27.7534 15.404 27.7714 15.436 27.8034C15.4679 27.8354 15.4859 27.8788 15.4859 27.9241C15.4859 27.9694 15.4679 28.0128 15.436 28.0448C15.404 28.0769 15.3607 28.0948 15.3155 28.0948C15.2703 28.0948 15.2269 28.0769 15.195 28.0448C15.163 28.0128 15.145 27.9694 15.145 27.9241ZM87.5577 27.819L87.3287 27.5432L87.6504 27.6056C87.8267 27.6398 88.0035 27.7641 88.0424 27.8814L88.1132 28.0948H87.9497C87.8591 28.0948 87.6834 27.9705 87.5572 27.819H87.5577ZM80.0752 27.6766C80.0752 27.5405 79.941 27.3506 79.777 27.2551L79.4787 27.0806L79.9261 27.0753L80.3734 27.0705V27.9241H80.2243C80.1423 27.9241 80.0752 27.8126 80.0752 27.6766ZM86.4148 27.7192C86.3025 27.6067 86.2103 27.3666 86.2103 27.1857V26.8571L86.728 26.9606L87.2456 27.0646L87.3468 26.8016L87.4475 26.5386L87.6898 26.6319L87.9321 26.7253L87.8352 26.5679L87.7388 26.4111L87.9002 26.3113L88.0615 26.2115L88.184 26.4105L88.3076 26.6101L88.0253 26.8165C87.8709 26.9302 87.7441 27.103 87.7441 27.2012V27.3799L87.4193 27.2946L87.0955 27.2097L86.982 27.5672C86.8531 27.9737 86.7078 28.0127 86.4148 27.7192ZM82.9212 27.4738C82.7061 27.2594 82.7961 26.919 83.1555 26.5829L83.5092 26.2532L83.326 26.1395C83.2248 26.0771 83.1428 26.0718 83.1428 26.1272C83.1428 26.1833 82.9963 26.1502 82.8174 26.0542L82.492 25.8797L82.5703 25.5788L82.6491 25.2779L83.0661 25.0805L83.4836 24.8831L83.4863 25.0805L83.4889 25.2779L83.654 25.0218C83.7446 24.881 83.8207 24.7054 83.8218 24.6313L83.8245 24.4968L83.3558 24.5459L82.8871 24.595V24.0876L83.1854 24.03L83.4836 23.9724V24.1559C83.4836 24.5849 83.7424 24.2925 83.7749 23.8262L83.8111 23.3146H83.6471C83.5571 23.3146 83.4836 23.1993 83.4836 23.0585C83.4836 22.7554 83.2008 22.7144 83.1044 23.0041L83.0373 23.2052L82.7375 23.0899L82.4377 22.9747L82.5463 22.6327L82.6544 22.2902H82.1005L82.2001 22.128L82.3003 21.9658L81.9434 21.7748L81.5872 21.5833L81.7831 21.347L81.9791 21.1101L81.8811 20.9511L81.7831 20.7926L82.165 20.6902C82.3748 20.6336 82.8041 20.5867 83.1183 20.5851L83.6908 20.583L83.5875 20.8519L83.4847 21.1207L83.7195 21.3555L83.9544 21.5908L84.0598 21.4851L84.1653 21.3795V21.5689C84.1625 21.6253 84.1469 21.6804 84.1198 21.7299C84.0927 21.7794 84.0547 21.8222 84.0087 21.8549L83.8521 21.952L83.6253 21.737C83.5007 21.6185 83.2258 21.5161 83.015 21.5086L82.6315 21.4947V21.6367C82.6315 21.7684 82.8919 21.8447 83.1854 21.7983C83.2557 21.7876 83.3132 21.8629 83.3132 21.9669V22.1558L83.5688 22.0576L83.8245 21.9594V22.2427L84.2771 22.1563L84.7293 22.0699L84.6228 22.6002L84.5173 23.1305L84.6824 23.2324C84.7729 23.2889 84.847 23.4458 84.847 23.5808V23.8267H84.3357V24.0295C84.3357 24.1404 84.4912 24.3976 84.6813 24.6003L85.0275 24.9685L84.9189 25.2512C84.7847 25.6012 84.6105 25.6097 84.3373 25.28L84.1264 25.0255L83.9576 25.1306L83.7882 25.2352L84.0194 25.3819L84.2505 25.5286L83.931 25.5313L83.6125 25.534L83.8229 25.7879L84.0337 26.0424L84.1797 25.9517C84.3544 25.8439 85.1878 26.3615 85.1878 26.5781V26.729H83.9629L83.874 27.0705C83.825 27.2583 83.7233 27.4119 83.6482 27.4119C83.5731 27.4119 83.4053 27.4525 83.2754 27.5026C83.146 27.5523 82.9862 27.54 82.9207 27.4744L82.9212 27.4738ZM84.7974 27.2412C84.8464 27.0534 84.9071 26.8998 84.9322 26.8998C84.9572 26.8998 85.0174 27.0534 85.0669 27.2412L85.1559 27.5827H84.7085L84.7974 27.2412ZM85.4509 26.6864C85.5148 26.4751 85.6298 26.2339 85.7071 26.1513L85.8477 25.9997L86.1155 26.2681L86.384 26.537L86.0037 26.8037C85.7944 26.9505 85.5585 27.0705 85.4791 27.0705H85.3353L85.4509 26.6864ZM82.3759 26.3876L82.2704 26.2169H82.4515C82.5506 26.2169 82.6315 26.2937 82.6315 26.3876C82.6315 26.4815 82.5974 26.5583 82.5564 26.5583C82.5149 26.5583 82.4339 26.4815 82.3759 26.3876ZM86.3792 26.0429L86.1837 25.6775L86.5805 25.7335L86.9772 25.7901V26.0317C86.9772 26.1651 86.8867 26.3038 86.7759 26.3412L86.5741 26.4084L86.3792 26.0429ZM12.1957 26.1075C12.0365 25.9485 12.2287 25.7047 12.5136 25.7047H12.7592V26.2169H12.5318C12.4071 26.2169 12.2559 26.1678 12.1957 26.1075ZM79.0527 26.0461C79.0527 25.9522 79.1336 25.8754 79.2332 25.8754H79.4138L79.3083 26.0461C79.2503 26.14 79.1693 26.2169 79.1278 26.2169C79.0868 26.2169 79.0527 26.14 79.0527 26.0461ZM88.3406 26.0413L87.9998 25.9122L88.3054 25.7874C88.6356 25.6524 88.8391 25.7575 88.7421 26.0125L88.6814 26.171L88.3406 26.0413ZM87.3814 26.0136C87.3692 25.9843 87.3463 25.7383 87.3303 25.4662L87.3016 24.9717L87.6078 24.8916C88.0226 24.7828 87.9976 24.5096 87.5737 24.5096H87.2329V23.9975H86.5618L86.6598 23.7424L86.7573 23.4874L86.9096 23.5818L87.0624 23.6763V23.4949C87.0624 23.3957 87.1391 23.3146 87.2329 23.3146H87.4033V23.9153L87.7548 24.1351L88.1063 24.3549L88.4258 24.2535L88.7459 24.1522L88.9498 24.5443C89.0617 24.7598 89.0926 24.8794 89.0185 24.81L88.8833 24.6836L88.6415 24.8842L88.3997 25.0853L88.2517 24.8452L88.1031 24.6046L87.9843 24.9156L87.865 25.2272L88.0679 25.3531L88.2714 25.4785L88.0503 25.6503C87.7308 25.8989 87.4065 26.0744 87.3814 26.0131V26.0136ZM10.2029 25.7186C10.2029 25.6327 10.2492 25.4411 10.3062 25.2928L10.409 25.0239L10.5618 25.1184C10.6454 25.1701 10.7141 25.3617 10.7141 25.5441V25.8754H10.4585C10.3179 25.8754 10.2029 25.805 10.2029 25.7186ZM85.6139 25.5212C85.4264 25.4475 85.3401 25.3819 85.4221 25.375L85.5702 25.3633L85.3502 25.0976L85.1303 24.8319L85.2869 24.8601C85.5585 24.9082 86.2103 24.6467 86.2103 24.4899V24.3389H87.0587L87.0236 24.7657L86.9879 25.192L86.6987 25.0997L86.4095 25.0079L86.1821 25.3318L85.9547 25.6551L85.6139 25.5212ZM11.334 24.7668L11.4315 24.5118L11.5843 24.6062C11.8245 24.755 11.7622 25.0218 11.4863 25.0218H11.236L11.334 24.7668ZM84.6765 24.3506C84.6765 24.2626 84.8342 24.141 85.027 24.0796L85.3779 23.9681L85.542 23.5349L85.7071 23.1017L85.411 22.8851L85.1154 22.6685L85.3428 22.3942C85.5793 22.1088 86.0399 22.0176 86.0399 22.2561C86.0399 22.3308 85.9441 22.4892 85.8269 22.6077L85.6139 22.8227L85.9318 22.7015L86.2497 22.5799L86.1379 22.9331L86.0261 23.2857L86.2178 23.4042L86.4085 23.5226L85.9366 24.0161L85.4647 24.5096H84.6765V24.3506ZM89.2806 24.2109L89.2779 23.9975H88.5962V23.3146H88.7666C88.8604 23.3146 89.0809 23.4591 89.2577 23.6357L89.5783 23.9569L89.4307 24.1906L89.2832 24.4243L89.2806 24.2109ZM87.6493 23.195L87.3479 22.8931L86.925 22.9486L86.5027 23.0041L86.6071 22.732L86.7109 22.4609L86.5032 22.4556L86.2956 22.4503L86.5959 22.2753L86.8968 22.0997L87.162 22.366C87.3079 22.5122 87.4965 22.6317 87.5806 22.6317H87.7335L87.644 22.3974L87.554 22.1638L87.8064 22.0667L88.0589 21.9696L87.9832 22.3857L87.9076 22.8024H88.167C88.4908 22.8024 88.5009 23.0398 88.1883 23.2996L87.9507 23.497L87.6493 23.195ZM89.6187 23.2431V22.9731H89.4409C89.3429 22.9731 89.0729 22.7965 88.8401 22.5804L88.4178 22.1878L88.4641 21.7695L88.511 21.3512L87.8719 21.3331L87.2329 21.3149V21.5284C87.2329 21.6457 87.1253 21.7828 86.9937 21.8335L86.7546 21.9253L86.4404 21.6916L86.1251 21.4574L86.4223 21.1554L86.7189 20.8535L86.9075 21.0423L87.0955 21.2307L87.5556 20.9666L88.0157 20.7019L88.519 20.9426L89.0223 21.1837L89.0809 21.6089C89.149 22.1115 89.5724 22.6317 89.9127 22.6317H90.154L90.0991 23.0025L90.0448 23.3732L89.8318 23.4437L89.6187 23.5136V23.2431ZM12.4183 21.778V21.4083L12.6313 21.4793C12.7485 21.5182 12.8444 21.6527 12.8444 21.778C12.8416 21.8432 12.82 21.9061 12.7822 21.9591C12.7444 22.0122 12.6919 22.0531 12.6313 22.0768L12.4183 22.1478V21.778ZM15.6563 21.9488C15.6563 21.9035 15.6743 21.8601 15.7062 21.828C15.7382 21.796 15.7815 21.778 15.8267 21.778C15.8719 21.778 15.9153 21.796 15.9472 21.828C15.9792 21.8601 15.9971 21.9035 15.9971 21.9488C15.9971 21.994 15.9792 22.0375 15.9472 22.0695C15.9153 22.1015 15.8719 22.1195 15.8267 22.1195C15.7815 22.1195 15.7382 22.1015 15.7062 22.0695C15.6743 22.0375 15.6563 21.994 15.6563 21.9488ZM14.7456 21.4921C14.6844 21.4302 14.6338 21.2771 14.6338 21.1522V20.9244H14.8793C15.0146 20.9244 15.1669 20.9927 15.2185 21.0759L15.3117 21.2269L15.0849 21.4158L14.858 21.6041L14.7456 21.4921ZM84.6765 21.2659C84.6765 21.2206 84.6945 21.1772 84.7265 21.1451C84.7584 21.1131 84.8018 21.0951 84.847 21.0951C84.8922 21.0951 84.9355 21.1131 84.9675 21.1451C84.9994 21.1772 85.0174 21.2206 85.0174 21.2659C85.0174 21.3111 84.9994 21.3546 84.9675 21.3866C84.9355 21.4186 84.8922 21.4366 84.847 21.4366C84.8018 21.4366 84.7584 21.4186 84.7265 21.3866C84.6945 21.3546 84.6765 21.3111 84.6765 21.2659ZM85.2576 20.8391C85.1575 20.4394 84.847 20.2308 84.847 20.5632C84.847 20.6459 84.7 20.7521 84.5205 20.7996L84.194 20.8849L84.0093 20.6998C83.9081 20.5984 83.8245 20.345 83.8245 20.1369V19.7598L84.063 19.7944C84.194 19.8136 84.414 19.9235 84.5514 20.0377L84.8017 20.2458L85.0142 19.9897L85.2267 19.7331L85.3705 19.8222L85.5137 19.9107L85.411 20.2042L85.3082 20.4976L85.5372 20.2842C85.8546 19.9897 86.1534 20.0174 86.2817 20.3525L86.3898 20.6347L86.0516 20.95C85.8652 21.1239 85.6346 21.2659 85.5388 21.2659H85.3646L85.2576 20.8391ZM70.5317 20.7537C70.5317 20.6598 70.651 20.583 70.7974 20.583H71.0632L70.9577 20.7537C70.8997 20.8476 70.7804 20.9244 70.692 20.9244C70.6041 20.9244 70.5317 20.8476 70.5317 20.7537ZM16.764 20.583L16.6586 20.4122H16.8397C16.9387 20.4122 17.0197 20.4891 17.0197 20.583C17.0197 20.6769 16.9856 20.7537 16.9446 20.7537C16.903 20.7537 16.8221 20.6769 16.764 20.583ZM62.3515 20.4224C62.3515 20.01 62.4463 19.9689 62.5816 20.321L62.6774 20.5718L62.5145 20.6731L62.3515 20.774V20.4224ZM89.3738 20.5328C89.4377 20.3648 89.5335 20.2698 89.5857 20.3226C89.6384 20.3749 89.5857 20.5125 89.4696 20.6283L89.2577 20.8391L89.3738 20.5328ZM79.2231 20.4122C79.2231 20.367 79.2411 20.3235 79.273 20.2915C79.305 20.2595 79.3483 20.2415 79.3935 20.2415C79.4387 20.2415 79.4821 20.2595 79.514 20.2915C79.546 20.3235 79.5639 20.367 79.5639 20.4122C79.5639 20.4575 79.546 20.5009 79.514 20.533C79.4821 20.565 79.4387 20.583 79.3935 20.583C79.3483 20.583 79.305 20.565 79.273 20.533C79.2411 20.5009 79.2231 20.4575 79.2231 20.4122ZM12.8018 20.1988C12.8255 20.1381 12.8663 20.0856 12.9192 20.0477C12.9722 20.0098 13.035 19.9882 13.1 19.9854C13.165 19.9882 13.2278 20.0098 13.2808 20.0477C13.3337 20.0856 13.3745 20.1381 13.3982 20.1988L13.4691 20.4122H12.7309L12.8018 20.1988ZM86.5901 20.2122C86.475 20.0969 86.3808 19.9091 86.3808 19.7955V19.588L86.8494 19.7139L87.3181 19.8392V20.3221L87.0587 20.3722C86.9165 20.4 86.7056 20.3279 86.5901 20.2122ZM58.7727 20.0708C58.7727 19.9769 58.8925 19.9001 59.0384 19.9001H59.3042L59.1987 20.0708C59.1407 20.1647 59.0214 20.2415 58.933 20.2415C58.8446 20.2415 58.7727 20.1647 58.7727 20.0708ZM68.4866 19.9854C68.4866 19.8446 68.5633 19.7293 68.657 19.7293C68.7508 19.7293 68.8275 19.8446 68.8275 19.9854C68.8275 20.1263 68.7508 20.2415 68.657 20.2415C68.5633 20.2415 68.4866 20.1263 68.4866 19.9854ZM19.1499 19.9001L19.0264 19.6995L19.1968 19.5287L19.3672 19.358L19.4908 19.5586L19.6143 19.7592L19.4439 19.9299L19.2735 20.1007L19.1499 19.9001ZM64.567 19.9001C64.567 19.8548 64.5849 19.8114 64.6169 19.7793C64.6488 19.7473 64.6922 19.7293 64.7374 19.7293C64.7826 19.7293 64.8259 19.7473 64.8579 19.7793C64.8898 19.8114 64.9078 19.8548 64.9078 19.9001C64.9078 19.9453 64.8898 19.9888 64.8579 20.0208C64.8259 20.0528 64.7826 20.0708 64.7374 20.0708C64.6922 20.0708 64.6488 20.0528 64.6169 20.0208C64.5849 19.9888 64.567 19.9453 64.567 19.9001ZM81.977 19.8478L81.7922 19.6248L82.2731 19.3399L82.754 19.0555L82.8632 19.1649L82.9723 19.2743V18.705H83.3404L83.2296 18.1992L83.1188 17.6935L83.286 17.3941L83.4533 17.0943L83.0309 16.7016L82.6081 16.3095L82.4494 16.4077C82.362 16.461 82.2907 16.6547 82.2907 16.8372V17.1685H82.1202C82.0265 17.1685 81.9498 17.058 81.9498 16.9225C81.9498 16.787 82.0265 16.6291 82.1202 16.5709C82.214 16.5128 82.2907 16.286 82.2907 16.0668V15.6682L82.5617 15.5642C82.7109 15.5071 82.9074 15.506 82.9984 15.5626L83.1641 15.6656L83.4879 15.3721L83.8117 15.0787L84.0737 15.179L84.3357 15.2798V16.3149H84.6036C85.2533 16.3149 85.5729 17.0724 84.9876 17.2256C84.5386 17.3429 84.3623 17.2469 84.1488 16.7667L83.9853 16.4002L84.0529 16.7603C84.0902 16.9577 84.0609 17.2277 83.9874 17.3589L83.8543 17.598L84.0812 17.9095L84.3086 18.2211L84.479 17.9021L84.6494 17.583L85.1319 17.6177C85.3971 17.6369 85.6714 17.6593 85.7417 17.6668C85.812 17.6742 85.8695 17.7719 85.8695 17.8828C85.8695 17.9944 86.0373 18.2643 86.2423 18.4831L86.6151 18.88L86.45 19.0454C86.3595 19.1361 86.0383 19.2604 85.7364 19.3207L85.1878 19.4306L85.2943 18.8971L85.4008 18.3635H84.6403L84.7399 18.625L84.8401 18.8859L84.3176 18.9904L83.7952 19.095L83.605 19.5405C83.3441 20.1503 83.3521 20.1449 83.0767 19.9161L82.8323 19.7128L82.722 19.8915C82.5697 20.138 82.2001 20.1161 81.977 19.8478ZM20.5255 19.6317C20.1357 19.2417 20.1969 19.1089 20.5985 19.4733C20.786 19.6434 20.9393 19.8088 20.9393 19.8414C20.9393 19.9678 20.7812 19.8883 20.5255 19.6317ZM72.2561 19.7416L72.0367 19.6061L72.3014 19.5047L72.5661 19.4028L72.6593 19.5543C72.7935 19.772 72.5144 19.9017 72.2561 19.7416ZM87.5236 19.6744L87.431 19.4316L87.9465 19.0496L88.462 18.6682L88.7421 18.9541L89.0223 19.2396L88.8518 19.2081C88.7028 19.1894 88.5522 19.1859 88.4024 19.1974L88.1228 19.2172L88.1467 19.5095L88.1702 19.8014L87.8932 19.859L87.6163 19.9166L87.5236 19.6744ZM10.6619 19.4492C10.5027 19.2903 10.6949 19.0464 10.9799 19.0464H11.2254V19.5586H10.998C10.8734 19.5586 10.7221 19.5095 10.6619 19.4492ZM17.7013 19.3879C17.7013 19.3655 17.7058 19.3433 17.7143 19.3226C17.7229 19.3018 17.7354 19.283 17.7513 19.2672C17.7671 19.2513 17.7859 19.2387 17.8066 19.2302C17.8272 19.2216 17.8494 19.2172 17.8718 19.2172C17.8941 19.2172 17.9163 19.2216 17.937 19.2302C17.9577 19.2387 17.9764 19.2513 17.9923 19.2672C18.0081 19.283 18.0207 19.3018 18.0292 19.3226C18.0378 19.3433 18.0422 19.3655 18.0422 19.3879C18.0422 19.4332 18.0242 19.4766 17.9923 19.5086C17.9603 19.5406 17.917 19.5586 17.8718 19.5586C17.8266 19.5586 17.7832 19.5406 17.7513 19.5086C17.7193 19.4766 17.7013 19.4332 17.7013 19.3879ZM56.7276 19.3879C56.7276 19.3655 56.732 19.3433 56.7406 19.3226C56.7491 19.3018 56.7617 19.283 56.7775 19.2672C56.7934 19.2513 56.8121 19.2387 56.8328 19.2302C56.8535 19.2216 56.8757 19.2172 56.898 19.2172C56.9204 19.2172 56.9426 19.2216 56.9633 19.2302C56.9839 19.2387 57.0027 19.2513 57.0185 19.2672C57.0344 19.283 57.0469 19.3018 57.0555 19.3226C57.064 19.3433 57.0685 19.3655 57.0685 19.3879C57.0685 19.4332 57.0505 19.4766 57.0185 19.5086C56.9866 19.5406 56.9432 19.5586 56.898 19.5586C56.8528 19.5586 56.8095 19.5406 56.7775 19.5086C56.7456 19.4766 56.7276 19.4332 56.7276 19.3879ZM79.8286 19.4023L79.729 19.2406L79.8904 19.1409L80.0518 19.0411L80.1514 19.2028L80.2509 19.3644L80.0896 19.4642L79.9282 19.564L79.8286 19.4023ZM19.6942 19.2785C19.5579 19.1425 19.7118 18.8757 19.9269 18.8757C20.0148 18.8757 20.0872 18.991 20.0872 19.1318C20.0872 19.3959 19.8859 19.4711 19.6942 19.2785ZM38.1518 19.207V19.0262L38.3222 19.1318C38.4159 19.19 38.4926 19.2711 38.4926 19.3127C38.4926 19.3537 38.4159 19.3879 38.3222 19.3879C38.2285 19.3879 38.1518 19.3063 38.1518 19.207ZM34.0617 19.0363V18.8554L34.2321 18.9611C34.3259 19.0192 34.4025 19.1003 34.4025 19.1419C34.4025 19.183 34.3259 19.2172 34.2321 19.2172C34.1384 19.2172 34.0617 19.1355 34.0617 19.0363ZM62.3962 18.9008L62.4202 18.5844L62.7269 18.6644L63.0332 18.7445V19.2172H62.3728L62.3962 18.9008ZM78.7118 18.9611V18.705L78.9249 18.7077C79.042 18.7087 79.2401 18.7754 79.3653 18.8544L79.5927 18.9984L79.3088 19.1078C78.8679 19.2775 78.7118 19.239 78.7118 18.9611ZM81.4386 19.0464C81.4386 19.0012 81.4565 18.9577 81.4885 18.9257C81.5204 18.8937 81.5638 18.8757 81.609 18.8757C81.6542 18.8757 81.6975 18.8937 81.7295 18.9257C81.7615 18.9577 81.7794 19.0012 81.7794 19.0464C81.7794 19.0917 81.7615 19.1351 81.7295 19.1672C81.6975 19.1992 81.6542 19.2172 81.609 19.2172C81.5638 19.2172 81.5204 19.1992 81.4885 19.1672C81.4565 19.1351 81.4386 19.0917 81.4386 19.0464ZM54.5121 18.705C54.5121 18.6597 54.5301 18.6163 54.5621 18.5843C54.594 18.5523 54.6374 18.5343 54.6826 18.5343C54.7278 18.5343 54.7711 18.5523 54.8031 18.5843C54.835 18.6163 54.853 18.6597 54.853 18.705C54.853 18.7503 54.835 18.7937 54.8031 18.8257C54.7711 18.8577 54.7278 18.8757 54.6826 18.8757C54.6374 18.8757 54.594 18.8577 54.5621 18.8257C54.5301 18.7937 54.5121 18.7503 54.5121 18.705ZM64.2261 18.5343C64.2261 18.489 64.2441 18.4456 64.276 18.4135C64.308 18.3815 64.3513 18.3635 64.3965 18.3635C64.4417 18.3635 64.4851 18.3815 64.517 18.4135C64.549 18.4456 64.567 18.489 64.567 18.5343C64.567 18.5795 64.549 18.623 64.517 18.655C64.4851 18.687 64.4417 18.705 64.3965 18.705C64.3513 18.705 64.308 18.687 64.276 18.655C64.2441 18.623 64.2261 18.5795 64.2261 18.5343ZM40.7081 18.3635C40.7081 18.3183 40.7261 18.2748 40.758 18.2428C40.79 18.2108 40.8333 18.1928 40.8785 18.1928C40.9237 18.1928 40.9671 18.2108 40.999 18.2428C41.031 18.2748 41.0489 18.3183 41.0489 18.3635C41.0489 18.4088 41.031 18.4522 40.999 18.4843C40.9671 18.5163 40.9237 18.5343 40.8785 18.5343C40.8333 18.5343 40.79 18.5163 40.758 18.4843C40.7261 18.4522 40.7081 18.4088 40.7081 18.3635ZM87.1903 18.323L86.7216 18.1645V17.9325C86.7216 17.6412 86.9485 17.4998 87.6802 17.3344L88.258 17.2037L88.3848 17.4288L88.511 17.6529L89.0942 17.7095L89.6779 17.766L89.7311 17.9367C89.7599 18.0306 89.7119 18.2211 89.6246 18.3593L89.4659 18.6116L88.9775 18.2494L88.4886 17.8876L88.2016 18.0488L87.9145 18.2099L87.9023 18.0733C87.8959 17.9986 87.8384 18.0594 87.7745 18.2094L87.6589 18.482L87.1903 18.323ZM72.6939 18.0829C72.6294 18.0178 72.5767 17.8572 72.5767 17.7255V17.4854L72.8749 17.5425L73.1732 17.6001V17.8396C73.1732 18.1091 72.8723 18.2616 72.6939 18.0829ZM79.4862 18.0338L79.3882 17.8748L79.5613 17.7681L79.7344 17.6604L79.9048 17.766C79.9985 17.8242 80.0752 17.9437 80.0752 18.0322C80.0752 18.2403 79.614 18.2414 79.4862 18.0338ZM56.3016 17.8514C56.3596 17.7575 56.4406 17.6806 56.4821 17.6806C56.5231 17.6806 56.5572 17.7575 56.5572 17.8514C56.5572 17.9453 56.4762 18.0221 56.3767 18.0221H56.1961L56.3016 17.8514ZM28.8639 17.6806L28.7584 17.5099H28.9395C29.0386 17.5099 29.1195 17.5867 29.1195 17.6806C29.1195 17.7745 29.0854 17.8514 29.0444 17.8514C29.0029 17.8514 28.9219 17.7745 28.8639 17.6806ZM67.1605 17.654C67.2489 17.3883 67.6303 17.3419 67.6436 17.5953C67.6484 17.6892 67.5248 17.7927 67.3682 17.8247L67.0838 17.8839L67.1605 17.654ZM86.3808 17.7185V17.5099H85.6575L85.8679 17.256L86.0783 17.002L85.9478 16.7011C85.8759 16.5357 85.8093 16.285 85.8008 16.1441L85.7843 15.888L85.1969 15.9462L84.6095 16.0043L84.8342 15.7323C84.9577 15.5834 85.1985 15.4612 85.3689 15.4612C85.5393 15.4612 85.7262 15.3844 85.7843 15.2905C85.8423 15.1966 85.9707 15.1198 86.0697 15.1198H86.2503L86.1715 15.5306L86.0932 15.9425L86.3222 15.8544L86.5512 15.7664V16.1804L86.7786 16.0934L87.0055 16.0059V16.4856H86.548L86.7466 16.8035L86.9442 17.121L86.6625 17.5243L86.3808 17.9271V17.7185ZM13.526 17.5099C13.5841 17.416 13.665 17.3392 13.7066 17.3392C13.7476 17.3392 13.7817 17.416 13.7817 17.5099C13.7817 17.6038 13.7007 17.6806 13.6011 17.6806H13.4206L13.526 17.5099ZM27.0745 17.4139V17.1578L26.8199 17.0596C26.6798 17.0063 26.6016 16.9033 26.6452 16.8318L26.7251 16.7022L27.1554 16.7843L27.5857 16.867V17.4736L27.3301 17.5718L27.0745 17.67V17.4139ZM71.2133 17.5099C71.2133 17.4646 71.2313 17.4212 71.2633 17.3892C71.2952 17.3572 71.3386 17.3392 71.3838 17.3392C71.429 17.3392 71.4723 17.3572 71.5043 17.3892C71.5362 17.4212 71.5542 17.4646 71.5542 17.5099C71.5542 17.5552 71.5362 17.5986 71.5043 17.6306C71.4723 17.6627 71.429 17.6806 71.3838 17.6806C71.3386 17.6806 71.2952 17.6627 71.2633 17.6306C71.2313 17.5986 71.2133 17.5552 71.2133 17.5099ZM16.6788 17.1685C16.6788 17.1232 16.6968 17.0798 16.7287 17.0478C16.7607 17.0157 16.804 16.9977 16.8492 16.9977C16.8944 16.9977 16.9378 17.0157 16.9698 17.0478C17.0017 17.0798 17.0197 17.1232 17.0197 17.1685C17.0197 17.2138 17.0017 17.2572 16.9698 17.2892C16.9378 17.3212 16.8944 17.3392 16.8492 17.3392C16.804 17.3392 16.7607 17.3212 16.7287 17.2892C16.6968 17.2572 16.6788 17.2138 16.6788 17.1685ZM60.7234 17.1535L60.6089 16.9679L60.7836 16.7929L60.9583 16.6179L61.1436 16.7326C61.2453 16.7955 61.329 16.9577 61.329 17.0932V17.3392H61.0835C60.9482 17.3392 60.7863 17.2554 60.7234 17.1535ZM74.4513 17.1685C74.4513 17.1232 74.4693 17.0798 74.5012 17.0478C74.5332 17.0157 74.5765 16.9977 74.6217 16.9977C74.6669 16.9977 74.7103 17.0157 74.7423 17.0478C74.7742 17.0798 74.7922 17.1232 74.7922 17.1685C74.7922 17.2138 74.7742 17.2572 74.7423 17.2892C74.7103 17.3212 74.6669 17.3392 74.6217 17.3392C74.5765 17.3392 74.5332 17.3212 74.5012 17.2892C74.4693 17.2572 74.4513 17.2138 74.4513 17.1685ZM37.2997 16.9876V16.8068L37.4701 16.9124C37.5638 16.9705 37.6405 17.0516 37.6405 17.0932C37.6405 17.1343 37.5638 17.1685 37.4701 17.1685C37.3764 17.1685 37.2997 17.0868 37.2997 16.9876ZM52.4032 16.906C52.2381 16.4765 52.2871 16.3655 52.4884 16.7118C52.5875 16.883 52.6327 17.0591 52.5891 17.1034C52.5449 17.1471 52.4618 17.0586 52.4032 16.906ZM63.1184 16.9977L63.0129 16.827H63.194C63.2925 16.827 63.374 16.9038 63.374 16.9977C63.374 17.0916 63.3399 17.1685 63.2989 17.1685C63.2574 17.1685 63.1764 17.0916 63.1184 16.9977ZM24.7738 16.827C24.8318 16.7331 24.9128 16.6563 24.9543 16.6563C24.9953 16.6563 25.0294 16.7331 25.0294 16.827C25.0294 16.9209 24.9485 16.9977 24.8489 16.9977H24.6683L24.7738 16.827ZM76.6668 16.827C76.6668 16.7817 76.6847 16.7383 76.7167 16.7063C76.7487 16.6743 76.792 16.6563 76.8372 16.6563C76.8824 16.6563 76.9258 16.6743 76.9577 16.7063C76.9897 16.7383 77.0076 16.7817 77.0076 16.827C77.0076 16.8723 76.9897 16.9157 76.9577 16.9477C76.9258 16.9798 76.8824 16.9977 76.8372 16.9977C76.792 16.9977 76.7487 16.9798 76.7167 16.9477C76.6847 16.9157 76.6668 16.8723 76.6668 16.827ZM77.2633 16.827L77.1578 16.6563H77.3389C77.4379 16.6563 77.5189 16.7331 77.5189 16.827C77.5189 16.9209 77.4848 16.9977 77.4438 16.9977C77.4023 16.9977 77.3213 16.9209 77.2633 16.827ZM79.5639 16.7417V16.4573L79.7471 16.5181C79.8483 16.5517 79.9303 16.6526 79.9303 16.7417C79.9303 16.8308 79.8478 16.9316 79.7471 16.9652L79.5639 17.026V16.7417ZM81.2681 16.827C81.2681 16.7817 81.2861 16.7383 81.3181 16.7063C81.35 16.6743 81.3934 16.6563 81.4386 16.6563C81.4838 16.6563 81.5271 16.6743 81.5591 16.7063C81.591 16.7383 81.609 16.7817 81.609 16.827C81.609 16.8723 81.591 16.9157 81.5591 16.9477C81.5271 16.9798 81.4838 16.9977 81.4386 16.9977C81.3934 16.9977 81.35 16.9798 81.3181 16.9477C81.2861 16.9157 81.2681 16.8723 81.2681 16.827ZM88.3262 16.5389L87.8895 16.0668L87.5726 16.4872C87.1961 16.9871 87.0598 16.914 87.1817 16.2775L87.2707 15.8133L87.6136 15.7045L87.9571 15.5957L88.1036 15.8272L88.2501 16.0588L88.2527 15.8331L88.2554 15.6074L88.5179 15.8704L88.78 16.1329L89.2848 16.0316L89.7892 15.9307V16.3149H89.2577L89.3578 16.477L89.4579 16.6392L89.1107 16.8254L88.7634 17.0116L88.3262 16.5389ZM12.6313 16.7139C12.5142 16.6664 12.4183 16.5192 12.4183 16.3858C12.4183 16.253 12.3416 16.1441 12.2479 16.1441H12.0775V15.4719L12.3331 15.5701C12.4737 15.6245 12.5887 15.7755 12.5887 15.9062V16.1441H13.1V16.4856C13.1 16.8308 13.0185 16.8702 12.6313 16.7139ZM17.0197 16.5709C17.0197 16.4301 17.0964 16.3149 17.1901 16.3149C17.2838 16.3149 17.3605 16.4301 17.3605 16.5709C17.3605 16.7118 17.2838 16.827 17.1901 16.827C17.0964 16.827 17.0197 16.7118 17.0197 16.5709ZM22.8566 16.7139C22.7394 16.6664 22.6435 16.5576 22.6435 16.4712V16.3149H23.3252V16.5709C23.3252 16.834 23.2272 16.8644 22.8566 16.7139ZM73.7111 16.7118C73.6498 16.6499 73.5992 16.4968 73.5992 16.3719V16.1441H73.8447C73.98 16.1441 74.1323 16.2124 74.184 16.2956L74.2772 16.4466L74.0503 16.6355L73.8234 16.8238L73.7111 16.7118ZM48.1512 16.4168C48.0553 16.166 48.1651 15.9734 48.4052 15.9734C48.4835 15.9734 48.5474 16.1271 48.5474 16.3149V16.6563H48.3951C48.3115 16.6563 48.2018 16.5485 48.1512 16.4168ZM13.7204 16.3671C13.6603 16.3068 13.6113 16.1553 13.6113 16.0305V15.8027H14.1225V16.0486C14.1225 16.3341 13.8791 16.5267 13.7204 16.3671ZM38.8319 16.1473L39.0268 15.7819L39.2286 15.8491C39.3394 15.8864 39.4299 16.0252 39.4299 16.1585V16.4002L39.0332 16.4568L38.6364 16.5128L38.8319 16.1473ZM62.4367 16.3149L62.3312 16.1441H62.5017C62.5954 16.1441 62.72 16.221 62.7775 16.3149L62.883 16.4856H62.7126C62.6188 16.4856 62.4942 16.4087 62.4367 16.3149ZM70.1056 16.1441L70.0002 15.9734H70.1812C70.2803 15.9734 70.3612 16.0502 70.3612 16.1441C70.3612 16.238 70.3272 16.3149 70.2862 16.3149C70.2446 16.3149 70.1637 16.238 70.1056 16.1441ZM61.329 15.9734C61.329 15.9281 61.3469 15.8847 61.3789 15.8527C61.4108 15.8207 61.4542 15.8027 61.4994 15.8027C61.5446 15.8027 61.5879 15.8207 61.6199 15.8527C61.6518 15.8847 61.6698 15.9281 61.6698 15.9734C61.6698 16.0187 61.6518 16.0621 61.6199 16.0941C61.5879 16.1261 61.5446 16.1441 61.4994 16.1441C61.4542 16.1441 61.4108 16.1261 61.3789 16.0941C61.3469 16.0621 61.329 16.0187 61.329 15.9734ZM79.5639 15.9734C79.5639 15.9281 79.5819 15.8847 79.6139 15.8527C79.6458 15.8207 79.6892 15.8027 79.7344 15.8027C79.7796 15.8027 79.8229 15.8207 79.8549 15.8527C79.8868 15.8847 79.9048 15.9281 79.9048 15.9734C79.9048 16.0187 79.8868 16.0621 79.8549 16.0941C79.8229 16.1261 79.7796 16.1441 79.7344 16.1441C79.6892 16.1441 79.6458 16.1261 79.6139 16.0941C79.5819 16.0621 79.5639 16.0187 79.5639 15.9734ZM80.416 15.8027V15.4362L80.7143 15.4938L81.0125 15.5514V16.054L80.7143 16.1116L80.416 16.1692V15.8027ZM58.1757 15.8016L58.0691 15.6293L58.3434 15.5242C58.6693 15.3988 58.8515 15.537 58.6949 15.7909C58.5527 16.0203 58.3136 16.0257 58.1757 15.8016ZM29.8864 15.632L29.781 15.4612H29.962C30.0611 15.4612 30.142 15.5381 30.142 15.632C30.142 15.7259 30.108 15.8027 30.0669 15.8027C30.0254 15.8027 29.9445 15.7259 29.8864 15.632ZM41.6028 15.5893C41.6265 15.5286 41.6673 15.4761 41.7203 15.4382C41.7732 15.4003 41.836 15.3786 41.901 15.3759C41.9661 15.3786 42.0289 15.4003 42.0818 15.4382C42.1348 15.4761 42.1756 15.5286 42.1993 15.5893L42.2701 15.8027H41.532L41.6028 15.5893ZM88.5962 15.6218V15.441L88.7666 15.5466C88.8604 15.6047 88.9371 15.6858 88.9371 15.7275C88.9371 15.7685 88.8604 15.8027 88.7666 15.8027C88.6729 15.8027 88.5962 15.721 88.5962 15.6218ZM12.9296 15.4612C12.9296 15.3673 13.0105 15.2905 13.1101 15.2905H13.2907L13.1852 15.4612C13.1272 15.5551 13.0462 15.632 13.0047 15.632C12.9637 15.632 12.9296 15.5551 12.9296 15.4612ZM21.5433 15.473L21.4453 15.314L21.5944 15.2217C21.7595 15.1198 21.9619 15.2676 21.9619 15.4895C21.9619 15.6821 21.6647 15.6709 21.5433 15.4735V15.473ZM55.7994 15.4756L55.6998 15.314L55.8611 15.2142L56.0225 15.1144L56.1221 15.2761L56.2217 15.4378L56.0603 15.5375L55.8989 15.6373L55.7994 15.4756ZM64.3395 15.5183C64.2772 15.4554 64.2261 15.3423 64.2261 15.2676V15.1304L64.4817 15.2286C64.6223 15.283 64.7374 15.3956 64.7374 15.4794C64.7374 15.6586 64.503 15.681 64.3395 15.5183ZM34.7434 15.2153C34.7434 15.0686 34.8201 14.9491 34.9138 14.9491C35.0075 14.9491 35.0842 15.0216 35.0842 15.1096C35.0842 15.1982 35.0075 15.3177 34.9138 15.3759L34.7434 15.4815V15.2153ZM36.192 15.2905L36.0865 15.1198H36.2676C36.3666 15.1198 36.4476 15.1966 36.4476 15.2905C36.4476 15.3844 36.4135 15.4612 36.3725 15.4612C36.331 15.4612 36.25 15.3844 36.192 15.2905ZM77.0076 15.2521V15.0061L77.3447 15.0312C77.5306 15.0446 77.7351 15.1086 77.7996 15.1731L77.9167 15.2905H77.7314C77.6302 15.2905 77.4257 15.3369 77.2771 15.394L77.0076 15.4975V15.2521ZM87.2105 15.2324L87.4001 15.0029L87.2792 14.8818L87.1583 14.7602L87.4512 14.8728L87.7441 14.9853V15.4612H87.0209L87.2105 15.2324ZM15.0135 15.0883C15.0377 15.0271 15.0741 14.9715 15.1206 14.9249C15.167 14.8783 15.2225 14.8416 15.2835 14.8173L15.4859 14.7501V14.9165C15.4859 15.0083 15.3645 15.1299 15.2159 15.187L14.9464 15.2905L15.0135 15.0883ZM16.7939 15.0499C16.698 14.7997 16.8082 14.6076 17.0479 14.6076C17.2386 14.6076 17.23 15.075 17.0372 15.1945L16.8849 15.2884L16.7939 15.0499ZM82.035 15.1198C82.0931 15.0259 82.2124 14.9491 82.3008 14.9491C82.3887 14.9491 82.4611 15.0259 82.4611 15.1198C82.4611 15.2137 82.3413 15.2905 82.1953 15.2905H81.9296L82.035 15.1198ZM82.9723 15.1096V14.9288L83.1428 15.0344C83.2365 15.0926 83.3132 15.1737 83.3132 15.2153C83.3132 15.2564 83.2365 15.2905 83.1428 15.2905C83.049 15.2905 82.9723 15.2089 82.9723 15.1096ZM84.9972 15.1625C84.9869 15.0675 84.9901 14.9716 85.0067 14.8776L85.0366 14.7207L84.7921 14.9234L84.5477 15.1267L84.4571 14.781L84.3671 14.4353L84.0955 14.5398L83.8245 14.6439L83.8111 14.4123C83.7979 14.2384 83.7751 14.0652 83.743 13.8938L83.6876 13.6067L83.8974 13.6873L84.1067 13.7679L84.2675 13.4072L84.4284 13.046L84.8954 13.4141L85.362 13.7817L85.0057 14.0704L84.6494 14.3595L85.0041 14.6807C85.199 14.8573 85.3582 15.067 85.3582 15.1465C85.3582 15.3246 85.0249 15.3396 84.9972 15.1625ZM44.0387 14.9608L43.9408 14.8018L44.1298 14.6844L44.3194 14.5671L44.5953 14.8434L44.8712 15.1198H44.5037C44.3018 15.1198 44.0925 15.0483 44.0387 14.9608ZM64.8513 15.0061C64.7815 14.9252 64.7413 14.8228 64.7374 14.7159V14.5393L64.9392 14.7415C65.05 14.8525 65.1011 14.9832 65.0526 15.0317C65.0047 15.0798 64.9142 15.0686 64.8513 15.0061ZM62.948 14.7783L62.8425 14.6076H63.0236C63.1221 14.6076 63.2036 14.6844 63.2036 14.7783C63.2036 14.8722 63.1695 14.9491 63.1285 14.9491C63.087 14.9491 63.006 14.8722 62.948 14.7783ZM73.9401 14.6828V14.4166L74.1105 14.5222C74.2042 14.5804 74.2809 14.6999 74.2809 14.7885C74.2809 14.877 74.2042 14.9491 74.1105 14.9491C74.0168 14.9491 73.9401 14.8295 73.9401 14.6828ZM81.609 14.7783C81.609 14.6844 81.6899 14.6076 81.7895 14.6076H81.9701L81.8646 14.7783C81.8066 14.8722 81.7256 14.9491 81.6841 14.9491C81.6431 14.9491 81.609 14.8722 81.609 14.7783ZM13.1 14.6076C13.1 14.5137 13.1809 14.4369 13.2805 14.4369H13.4611L13.3556 14.6076C13.2976 14.7015 13.2166 14.7783 13.1751 14.7783C13.1341 14.7783 13.1 14.7015 13.1 14.6076ZM28.2674 14.5222C28.2674 14.3814 28.3441 14.2662 28.4378 14.2662C28.5316 14.2662 28.6083 14.3814 28.6083 14.5222C28.6083 14.6631 28.5316 14.7783 28.4378 14.7783C28.3441 14.7783 28.2674 14.6631 28.2674 14.5222ZM85.5287 14.4369V14.0954H85.8695V14.7783H85.5287V14.4369ZM88.0882 14.6129L87.8363 14.4534L88.4269 14.2048L89.0175 13.9557L89.3184 14.1168C89.6369 14.2875 89.7285 14.6076 89.4584 14.6076C89.37 14.6076 89.2444 14.5212 89.1794 14.415L89.0601 14.2224L88.9051 14.4998C88.7304 14.8125 88.462 14.8493 88.0882 14.6129ZM29.0769 14.4902L28.7787 14.4118V13.754H29.0077C29.1339 13.754 29.3645 13.8948 29.5195 14.0666L29.8017 14.3793L29.6878 14.4934C29.5679 14.614 29.5493 14.6135 29.0769 14.4897V14.4902ZM15.243 14.152L15.1339 13.8676L15.3096 13.6916L15.4859 13.515V13.9759C15.4859 14.5025 15.4007 14.5644 15.243 14.152ZM20.7689 14.2662C20.7689 14.2209 20.7869 14.1775 20.8188 14.1454C20.8508 14.1134 20.8941 14.0954 20.9393 14.0954C20.9845 14.0954 21.0279 14.1134 21.0598 14.1454C21.0918 14.1775 21.1098 14.2209 21.1098 14.2662C21.1098 14.3114 21.0918 14.3549 21.0598 14.3869C21.0279 14.4189 20.9845 14.4369 20.9393 14.4369C20.8941 14.4369 20.8508 14.4189 20.8188 14.3869C20.7869 14.3549 20.7689 14.3114 20.7689 14.2662ZM25.9742 14.2779L25.8762 14.1189L26.0493 14.0122L26.2224 13.9044L26.3928 14.0101C26.4865 14.0682 26.5632 14.1877 26.5632 14.2763C26.5632 14.4844 26.102 14.4854 25.9742 14.2779ZM47.5249 14.2662C47.5249 14.2209 47.5429 14.1775 47.5748 14.1454C47.6068 14.1134 47.6501 14.0954 47.6953 14.0954C47.7405 14.0954 47.7839 14.1134 47.8158 14.1454C47.8478 14.1775 47.8658 14.2209 47.8658 14.2662C47.8658 14.3114 47.8478 14.3549 47.8158 14.3869C47.7839 14.4189 47.7405 14.4369 47.6953 14.4369C47.6501 14.4369 47.6068 14.4189 47.5748 14.3869C47.5429 14.3549 47.5249 14.3114 47.5249 14.2662ZM68.5186 14.1381L68.5766 13.8393H69.0783L69.1358 14.1381L69.1933 14.4369H68.4616L68.5186 14.1381ZM86.0399 14.136C85.8993 13.9775 85.7843 13.7945 85.7843 13.73C85.7843 13.6649 85.7268 13.5539 85.6565 13.4835C85.5821 13.4038 85.537 13.301 85.5287 13.1922V13.0295L85.763 13.2237L85.9968 13.4184L86.2737 13.3117L86.5512 13.205V13.5833H86.9431C87.1588 13.5833 87.4198 13.4979 87.5236 13.3944L87.7127 13.205L87.9066 13.5683L88.1009 13.9316L87.9976 14.0992C87.9406 14.1909 87.7351 14.2662 87.5396 14.2662H87.1855L86.9447 13.9674L86.704 13.6686L86.8095 14.0528L86.9149 14.4369L86.6055 14.4305C86.4351 14.4267 86.1805 14.2944 86.0399 14.136ZM18.4757 14.1072L18.3777 13.9482L18.5268 13.8559C18.6919 13.754 18.8943 13.9018 18.8943 14.1237C18.8943 14.3163 18.5971 14.3046 18.4757 14.1072ZM19.4918 14.0976L19.388 13.9284L19.6521 14.0298C19.9477 14.144 20.0015 14.2662 19.7565 14.2662C19.6681 14.2662 19.5488 14.1904 19.4918 14.0976ZM31.1646 14.0853V13.9044L31.335 14.0101C31.4287 14.0682 31.5054 14.1493 31.5054 14.1909C31.5054 14.232 31.4287 14.2662 31.335 14.2662C31.2412 14.2662 31.1646 14.1851 31.1646 14.0853ZM34.573 13.9247C34.573 13.9023 34.5774 13.8801 34.5859 13.8594C34.5945 13.8387 34.6071 13.8198 34.6229 13.804C34.6387 13.7881 34.6575 13.7756 34.6782 13.767C34.6988 13.7584 34.721 13.754 34.7434 13.754C34.7658 13.754 34.7879 13.7584 34.8086 13.767C34.8293 13.7756 34.8481 13.7881 34.8639 13.804C34.8797 13.8198 34.8923 13.8387 34.9008 13.8594C34.9094 13.8801 34.9138 13.9023 34.9138 13.9247C34.9138 13.97 34.8959 14.0134 34.8639 14.0454C34.8319 14.0774 34.7886 14.0954 34.7434 14.0954C34.6982 14.0954 34.6548 14.0774 34.6229 14.0454C34.5909 14.0134 34.573 13.97 34.573 13.9247ZM38.3478 13.9332C38.3851 13.8207 38.4713 13.7342 38.5395 13.7412C38.7435 13.7625 38.7041 13.9962 38.4841 14.0698L38.2796 14.1381L38.3478 13.9332ZM52.8079 13.9146V13.7337L52.9784 13.8393C53.0721 13.8975 53.1488 13.9786 53.1488 14.0202C53.1488 14.0613 53.0721 14.0954 52.9784 14.0954C52.8846 14.0954 52.8079 14.0138 52.8079 13.9146ZM66.1007 13.9247C66.1007 13.8794 66.1187 13.836 66.1506 13.804C66.1826 13.772 66.226 13.754 66.2712 13.754C66.3163 13.754 66.3597 13.772 66.3917 13.804C66.4236 13.836 66.4416 13.8794 66.4416 13.9247C66.4416 13.97 66.4236 14.0134 66.3917 14.0454C66.3597 14.0774 66.3163 14.0954 66.2712 14.0954C66.226 14.0954 66.1826 14.0774 66.1506 14.0454C66.1187 14.0134 66.1007 13.97 66.1007 13.9247ZM70.7948 13.9364L70.6968 13.7775L70.8459 13.6852C71.011 13.5833 71.2133 13.731 71.2133 13.953C71.2133 14.1456 70.9162 14.1338 70.7948 13.9364ZM56.6216 13.7855C56.5258 13.7214 56.4022 13.5459 56.3474 13.3965L56.2472 13.1244L56.6578 13.2029L57.0685 13.2818V13.5075C57.0685 13.7972 56.8464 13.9359 56.6216 13.7855ZM80.0219 13.8143C79.9575 13.7502 79.9048 13.5945 79.9048 13.4696V13.2418H80.6115L80.5561 13.5262C80.4954 13.8409 80.2046 13.9973 80.0219 13.8143ZM82.6443 13.762L82.4174 13.6217L82.5346 13.4317C82.5985 13.3272 82.762 13.2418 82.8967 13.2418H83.1428V13.4878C83.1428 13.8148 82.9239 13.9348 82.6443 13.762ZM11.5662 13.5833C11.5662 13.4894 11.6472 13.4125 11.7468 13.4125H11.9273L11.8218 13.5833C11.7638 13.6772 11.6828 13.754 11.6413 13.754C11.6003 13.754 11.5662 13.6772 11.5662 13.5833ZM12.8603 13.6099L12.7538 13.436L12.9381 13.3218L13.1229 13.2077L13.2278 13.3128L13.3327 13.4184L13.1506 13.6009L12.9679 13.7839L12.8603 13.6099ZM19.3203 13.5833C19.3784 13.4894 19.4593 13.4125 19.5009 13.4125C19.5419 13.4125 19.576 13.4894 19.576 13.5833C19.576 13.6772 19.495 13.754 19.3954 13.754H19.2149L19.3203 13.5833ZM37.673 13.5705C37.7066 13.4691 37.8072 13.3869 37.8962 13.3869C37.9851 13.3869 38.0858 13.4696 38.1193 13.5705L38.18 13.754H37.6123L37.673 13.5705ZM17.7866 13.4125L17.6811 13.2418H17.8515C17.9453 13.2418 18.0699 13.3186 18.1274 13.4125L18.2328 13.5833H18.0624C17.9687 13.5833 17.8441 13.5064 17.7866 13.4125ZM33.38 13.3272V13.0711H33.8913V13.5833H33.38V13.3272ZM87.6765 12.9633L87.2004 12.3658L87.5124 12.0201L87.8245 11.6749L87.2046 11.7912L86.5842 11.908L86.4654 11.5335L86.3467 11.159L86.1592 11.3468C86.0559 11.4503 85.8418 11.5346 85.6831 11.5346H85.3945L85.3018 11.2918L85.2086 11.0491L84.8145 10.993L84.4209 10.937L84.4667 10.4873L84.5131 10.037L84.2537 9.93776C84.1115 9.8828 83.9949 9.77343 83.9949 9.69447V9.55096L84.8321 9.53869L85.6698 9.52588L85.7694 9.88974L85.8695 10.2541L86.0309 10.0023L86.1922 9.75103L85.9883 9.62085L85.7843 9.4912L86.1533 9.48854L86.5229 9.48587L86.5901 9.2842L86.6566 9.08307L86.9628 9.20044L87.2691 9.31835L87.169 9.71848L87.0688 10.1181L87.1775 10.2275L87.2866 10.3363L87.5157 10.1464L87.7441 9.95643L87.9976 10.1672L88.2517 10.3784L88.1467 10.5481L88.0424 10.7178L87.3969 10.6143C87.0417 10.5577 86.6289 10.4638 86.4787 10.4062L86.2066 10.3016L86.3121 10.5764L86.417 10.8517H86.6545C86.9463 10.8517 86.9602 11.0565 86.6875 11.3297L86.483 11.5346H86.6263C86.7051 11.5346 86.8601 11.4103 86.9708 11.2582L87.1727 10.9818L87.7255 11.1035L88.2783 11.2251L88.3704 11.4652C88.421 11.5975 88.5691 11.7053 88.6995 11.7053H88.9371V11.9475C88.9371 12.0809 88.9813 12.305 89.0356 12.4463L89.1341 12.7035L88.8226 12.6443C88.6786 12.616 88.5338 12.5918 88.3885 12.5717L88.266 12.5589L88.3784 12.2655L88.4902 11.9726L88.2202 12.2233L87.9497 12.4735L88.1877 12.6101L88.4258 12.7467V13.0695C88.4258 13.2471 88.3646 13.4307 88.2895 13.4771L88.1526 13.5614L87.6765 12.9633ZM35.7659 13.1564C35.7659 13.0156 35.8426 12.9004 35.9363 12.9004C36.0301 12.9004 36.1068 13.0156 36.1068 13.1564C36.1068 13.2973 36.0301 13.4125 35.9363 13.4125C35.8426 13.4125 35.7659 13.2973 35.7659 13.1564ZM50.3645 13.0391C50.3113 12.8363 50.3081 12.6059 50.3571 12.5269L50.4455 12.3829L50.6042 12.481C50.806 12.6059 50.8114 13.1917 50.6117 13.3154L50.4609 13.4088L50.3645 13.0391ZM62.1198 13.2941C62.0596 13.2338 62.0106 13.0823 62.0106 12.9574V12.7296H62.5219V12.9756C62.5219 13.261 62.2785 13.4536 62.1198 13.2941ZM64.4871 13.2509L64.3763 13.0711L64.4817 12.9004C64.5398 12.8065 64.7033 12.7296 64.8449 12.7296H65.1032L65.0479 13.014C64.9818 13.357 64.6415 13.5006 64.4871 13.2509ZM87.2329 13.2418C87.2329 13.1479 87.3138 13.0711 87.4134 13.0711H87.5939L87.4885 13.2418C87.4304 13.3357 87.3495 13.4125 87.3079 13.4125C87.2669 13.4125 87.2329 13.3357 87.2329 13.2418ZM18.383 13.0711C18.383 13.0258 18.401 12.9824 18.4329 12.9504C18.4649 12.9183 18.5083 12.9004 18.5534 12.9004C18.5986 12.9004 18.642 12.9183 18.674 12.9504C18.7059 12.9824 18.7239 13.0258 18.7239 13.0711C18.7239 13.1164 18.7059 13.1598 18.674 13.1918C18.642 13.2238 18.5986 13.2418 18.5534 13.2418C18.5083 13.2418 18.4649 13.2238 18.4329 13.1918C18.401 13.1598 18.383 13.1164 18.383 13.0711ZM61.0733 13.0711C61.1314 12.9772 61.2507 12.9004 61.3391 12.9004C61.427 12.9004 61.4994 12.9772 61.4994 13.0711C61.4994 13.165 61.3796 13.2418 61.2336 13.2418H60.9679L61.0733 13.0711ZM26.0519 12.8902V12.7094L26.2224 12.815C26.3161 12.8731 26.3928 12.9542 26.3928 12.9959C26.3928 13.0369 26.3161 13.0711 26.2224 13.0711C26.1286 13.0711 26.0519 12.9895 26.0519 12.8902ZM44.6278 12.9004C44.6278 12.8551 44.6457 12.8117 44.6777 12.7796C44.7096 12.7476 44.753 12.7296 44.7982 12.7296C44.8434 12.7296 44.8867 12.7476 44.9187 12.7796C44.9507 12.8117 44.9686 12.8551 44.9686 12.9004C44.9686 12.9456 44.9507 12.9891 44.9187 13.0211C44.8867 13.0531 44.8434 13.0711 44.7982 13.0711C44.753 13.0711 44.7096 13.0531 44.6777 13.0211C44.6457 12.9891 44.6278 12.9456 44.6278 12.9004ZM74.4641 12.8299L74.2644 12.5893L74.4545 12.4719L74.6452 12.3535L74.56 12.1316L74.4748 11.9096L75.1021 11.7981C75.4472 11.7373 75.8637 11.6477 76.0267 11.5997L76.3238 11.5122L76.213 11.8003L76.1028 12.0894L76.547 11.7976L76.9911 11.5063L77.2973 11.565L77.6041 11.6247V12.1321L77.0076 12.147C76.6796 12.155 76.237 12.1742 76.024 12.1897L75.6368 12.2175L75.443 12.6443L75.2486 13.0711H74.9557C74.7954 13.0711 74.5738 12.9628 74.4641 12.8299ZM76.6668 12.9004C76.6668 12.8551 76.6847 12.8117 76.7167 12.7796C76.7487 12.7476 76.792 12.7296 76.8372 12.7296C76.8824 12.7296 76.9258 12.7476 76.9577 12.7796C76.9897 12.8117 77.0076 12.8551 77.0076 12.9004C77.0076 12.9456 76.9897 12.9891 76.9577 13.0211C76.9258 13.0531 76.8824 13.0711 76.8372 13.0711C76.792 13.0711 76.7487 13.0531 76.7167 13.0211C76.6847 12.9891 76.6668 12.9456 76.6668 12.9004ZM83.0868 12.7051L83.0118 12.417L83.1966 12.2319L83.3814 12.0467H84.6483L84.7341 11.8333L84.8198 11.6199L84.8337 11.8232C84.8346 11.8836 84.8208 11.9433 84.7934 11.9972C84.766 12.051 84.7259 12.0973 84.6765 12.1321C84.5828 12.1903 84.5061 12.3786 84.5061 12.5509V12.8646L83.834 12.9286L83.1619 12.9927L83.0868 12.7051ZM39.0039 12.7296C39.0039 12.6844 39.0219 12.6409 39.0538 12.6089C39.0858 12.5769 39.1291 12.5589 39.1743 12.5589C39.2195 12.5589 39.2629 12.5769 39.2948 12.6089C39.3268 12.6409 39.3447 12.6844 39.3447 12.7296C39.3447 12.7749 39.3268 12.8183 39.2948 12.8504C39.2629 12.8824 39.2195 12.9004 39.1743 12.9004C39.1291 12.9004 39.0858 12.8824 39.0538 12.8504C39.0219 12.8183 39.0039 12.7749 39.0039 12.7296ZM79.7344 12.7296C79.7344 12.6844 79.7523 12.6409 79.7843 12.6089C79.8162 12.5769 79.8596 12.5589 79.9048 12.5589C79.95 12.5589 79.9933 12.5769 80.0253 12.6089C80.0572 12.6409 80.0752 12.6844 80.0752 12.7296C80.0752 12.7749 80.0572 12.8183 80.0253 12.8504C79.9933 12.8824 79.95 12.9004 79.9048 12.9004C79.8596 12.9004 79.8162 12.8824 79.7843 12.8504C79.7523 12.8183 79.7344 12.7749 79.7344 12.7296ZM49.0811 12.5002L48.8915 12.2713L49.0156 12.147C49.0837 12.0787 49.1407 11.8936 49.1418 11.7362L49.1439 11.4492L49.4421 11.4994L49.7404 11.5495V11.1931L50.0386 11.1985C50.3619 11.2043 50.9333 11.5788 50.9333 11.7853V11.9123L50.6793 11.8147L50.4247 11.717L50.1638 12.2233L49.9023 12.7296H49.5865C49.4128 12.7296 49.1854 12.6267 49.0811 12.5002ZM57.1632 12.5744C57.11 12.489 57.11 12.3071 57.1627 12.1705L57.258 11.9219L56.865 11.9523L56.472 11.9827L56.0928 11.6477L55.7141 11.3126L55.606 11.5943L55.4985 11.876H55.0234V11.6039C55.0234 11.2774 54.428 10.4803 54.2885 10.6201C54.2347 10.6745 54.0046 10.5188 53.7777 10.2733C53.5509 10.0279 53.2755 9.82732 53.1658 9.82732H52.9661L53.1429 9.49707C53.3783 9.05586 53.3661 8.9737 53.0636 8.9737C52.923 8.9737 52.8079 8.90167 52.8079 8.81311C52.8079 8.55329 53.1999 8.38523 53.6856 8.43645L54.1378 8.48393L54.2512 8.29933L54.3652 8.11474L54.5239 8.2129C54.6112 8.26626 54.6826 8.41937 54.6826 8.55169V8.79177L54.3843 8.6872L54.0861 8.5821L54.2991 8.81151C54.4163 8.93848 54.5121 9.13695 54.5121 9.25219V9.46293L54.1543 9.57657L53.7958 9.69074L54.3492 10.0274L54.902 10.364L55.3078 10.2621L55.7136 10.1602L55.6055 10.5913L55.4979 11.0224H56.0459V11.1931C56.0459 11.287 56.161 11.3638 56.3016 11.3638C56.4422 11.3638 56.5572 11.287 56.5572 11.1931C56.5572 11.0992 56.6435 11.0224 56.7489 11.0224H56.9396L56.7404 11.2635L56.5407 11.5042L56.7228 11.6167L56.905 11.7298L57.4977 11.5335L58.091 11.3372V11.1142C58.091 10.9914 57.8993 10.7652 57.6649 10.6111L57.2389 10.3315V10.0044C57.2389 9.82412 57.3188 9.62725 57.4168 9.56696L57.5946 9.45653L57.8156 9.64059L58.0372 9.82412L58.1559 9.70514L58.2747 9.58617L58.3706 9.95109L58.4654 10.316L58.6869 10.2307L58.9085 10.1453L59.0134 10.316L59.1183 10.4857L58.7753 10.595L58.4318 10.7039V11.1195C58.4318 11.6039 58.5676 11.6471 58.8557 11.2529L59.0613 10.9706L59.1827 11.1675L59.3042 11.3638H59.1231C58.8339 11.3638 58.9149 11.6839 59.2839 12.0009C59.4714 12.162 59.6248 12.3546 59.6248 12.4293V12.5658L58.8579 12.4938L58.091 12.4223V12.7296H57.675C57.446 12.7296 57.216 12.6597 57.1632 12.5744ZM82.0643 12.489L81.9615 12.2196L81.5909 12.2612L81.2207 12.3028L81.1451 12.0894L81.0695 11.876H81.609L81.6095 11.6626L81.6101 11.4492L82.1959 11.4193L82.7812 11.3894L82.688 11.6327L82.5948 11.876L82.2294 11.8813L81.8641 11.8867L82.1501 12.1049L82.4361 12.3226L82.3019 12.5402L82.1676 12.7584L82.0643 12.489ZM84.7697 12.5162C84.8156 12.3989 85.0435 12.2143 85.2757 12.1054L85.6991 11.908V12.2068L85.9547 12.1086L86.2103 12.0105L86.2087 12.1566C86.2071 12.3434 85.3843 12.7296 84.9886 12.7296H84.6872L84.7697 12.5162ZM86.5831 12.5482C86.6099 12.4807 86.6502 12.4194 86.7015 12.368C86.7528 12.3166 86.814 12.2763 86.8814 12.2495L87.105 12.1748L87.0305 12.3989C87.0037 12.4664 86.9634 12.5277 86.9121 12.5791C86.8609 12.6305 86.7996 12.6708 86.7323 12.6976L86.5086 12.7723L86.5831 12.5482ZM54.6826 12.3882C54.6826 12.3429 54.7005 12.2995 54.7325 12.2675C54.7644 12.2354 54.8078 12.2175 54.853 12.2175C54.8982 12.2175 54.9415 12.2354 54.9735 12.2675C55.0055 12.2995 55.0234 12.3429 55.0234 12.3882C55.0234 12.4335 55.0055 12.4769 54.9735 12.5089C54.9415 12.5409 54.8982 12.5589 54.853 12.5589C54.8078 12.5589 54.7644 12.5409 54.7325 12.5089C54.7005 12.4769 54.6826 12.4335 54.6826 12.3882ZM60.2212 12.3882C60.2793 12.2943 60.3602 12.2175 60.4018 12.2175C60.4428 12.2175 60.4769 12.2943 60.4769 12.3882C60.4769 12.4821 60.3959 12.5589 60.2963 12.5589H60.1158L60.2212 12.3882ZM62.4367 12.3882C62.4947 12.2943 62.5757 12.2175 62.6172 12.2175C62.6582 12.2175 62.6923 12.2943 62.6923 12.3882C62.6923 12.4821 62.6114 12.5589 62.5118 12.5589H62.3312L62.4367 12.3882ZM65.6124 12.2649L65.4601 11.9923L64.6442 11.9763L63.8283 11.9614L63.7495 11.724L63.6701 11.486L64.1611 11.5858L64.6522 11.685L65.1847 11.4983L65.7173 11.3105L66.1114 11.6786L66.5055 12.0467H67.1232V12.5189L66.4442 12.528L65.7647 12.5376L65.6124 12.2649ZM18.1274 12.2175L18.022 12.0467H18.203C18.3021 12.0467 18.383 12.1236 18.383 12.2175C18.383 12.3114 18.3489 12.3882 18.3079 12.3882C18.2664 12.3882 18.1854 12.3114 18.1274 12.2175ZM19.5147 12.2697C19.323 12.0777 19.3976 11.876 19.6612 11.876C19.8018 11.876 19.9168 11.948 19.9168 12.0366C19.9168 12.2521 19.6505 12.4063 19.5147 12.2697ZM25.9103 12.2553L25.513 12.1903L25.8251 11.9534C25.9966 11.8227 26.233 11.7133 26.3502 11.7106L26.5632 11.7053V11.9512C26.5632 12.2644 26.4077 12.3364 25.9103 12.2553ZM78.4818 12.138L78.3859 11.8872L78.5638 11.7768L78.7417 11.6669L78.9163 11.8419L79.091 12.0169L78.9765 12.2025C78.8162 12.4629 78.5952 12.4341 78.4818 12.138ZM12.1467 12.0201C12.0977 11.9406 12.1068 11.796 12.1669 11.6978L12.2767 11.5202L12.5887 11.6194L12.9008 11.7186L13.0105 11.541C13.0707 11.4433 13.2688 11.3633 13.451 11.3633H13.7817V11.7048C13.7817 11.8926 13.7242 12.0505 13.6539 12.0563L12.8811 12.1156L12.2362 12.1652L12.1467 12.0201ZM20.2007 12.1033C20.0382 11.94 20.0606 11.7048 20.2395 11.7048C20.3232 11.7048 20.4355 11.82 20.4899 11.9608L20.5878 12.2169H20.451C20.3764 12.2169 20.2635 12.1657 20.2007 12.1033ZM89.3562 12.035C89.2944 11.9347 89.287 11.8093 89.3402 11.7565C89.3935 11.7032 89.362 11.5212 89.271 11.351L89.1064 11.0427L89.2848 10.9322L89.4632 10.8218L89.6848 11.0059L89.9058 11.1894L90.0176 11.0773L90.13 10.9653V11.2609C90.13 11.931 89.6118 12.4495 89.3562 12.035ZM46.758 11.876L46.6526 11.7053H46.8336C46.9327 11.7053 47.0136 11.7821 47.0136 11.876C47.0136 11.9699 46.9796 12.0467 46.9386 12.0467C46.897 12.0467 46.8161 11.9699 46.758 11.876ZM53.3192 11.7053V11.3638H53.8305V12.0467H53.3192V11.7053ZM61.272 11.9331C61.2097 11.8701 61.1585 11.7165 61.1585 11.5917V11.3638H61.6698V11.7053C61.6698 12.0457 61.4882 12.1492 61.272 11.9331ZM72.0654 11.876C72.0654 11.8307 72.0834 11.7873 72.1154 11.7553C72.1473 11.7233 72.1907 11.7053 72.2359 11.7053C72.2811 11.7053 72.3244 11.7233 72.3564 11.7553C72.3883 11.7873 72.4063 11.8307 72.4063 11.876C72.4063 11.9213 72.3883 11.9647 72.3564 11.9967C72.3244 12.0287 72.2811 12.0467 72.2359 12.0467C72.1907 12.0467 72.1473 12.0287 72.1154 11.9967C72.0834 11.9647 72.0654 11.9213 72.0654 11.876ZM41.3344 11.764L41.2226 11.6514L41.4121 11.422C41.6864 11.0912 41.901 11.1408 41.901 11.5346V11.876H41.6736C41.549 11.876 41.3962 11.8253 41.3344 11.764ZM48.377 11.7053C48.377 11.6114 48.458 11.5346 48.5576 11.5346H48.7381L48.6326 11.7053C48.5746 11.7992 48.4936 11.876 48.4521 11.876C48.4111 11.876 48.377 11.7992 48.377 11.7053ZM67.4641 11.7213L67.7197 11.5399L67.2085 11.5319L66.6972 11.5244L66.9992 11.3484L67.3006 11.1723L67.1941 10.9994L67.0876 10.8266L67.4497 11.0523L67.8129 11.2785L67.7661 11.5202C67.7405 11.6535 67.6047 11.7939 67.4641 11.8323L67.2085 11.9016L67.4641 11.7213ZM19.4673 11.5863C19.5323 11.5212 19.699 11.4513 19.8375 11.4305L20.0888 11.3937L19.993 11.5495C19.9397 11.6349 19.7736 11.7053 19.6228 11.7053H19.3486L19.4673 11.5863ZM32.0167 11.4492C32.0167 11.3084 32.0933 11.1931 32.1871 11.1931C32.2808 11.1931 32.3575 11.3084 32.3575 11.4492C32.3575 11.59 32.2808 11.7053 32.1871 11.7053C32.0933 11.7053 32.0167 11.59 32.0167 11.4492ZM59.7952 11.5447C59.7952 11.4561 59.8719 11.3366 59.9656 11.2785L60.1355 11.1734L60.5147 11.4391L60.8933 11.7053H59.7952V11.5447ZM61.9254 11.5346L61.82 11.3638H62.0011C62.0996 11.3638 62.1811 11.4407 62.1811 11.5346C62.1811 11.6285 62.147 11.7053 62.106 11.7053C62.0644 11.7053 61.9835 11.6285 61.9254 11.5346ZM79.6199 11.2502L79.4297 10.7663L79.4116 11.1504C79.3893 11.6253 79.2167 11.6375 78.8349 11.191C78.4541 10.746 78.4562 10.7407 79.0303 10.6255L79.5192 10.5278L80.0102 10.6591L80.5013 10.7908L80.5561 11.0773L80.6115 11.3638H79.933L79.8718 11.549L79.81 11.7336L79.6199 11.2502ZM83.1428 11.4348V11.2321L82.5463 10.9482L81.9498 10.6649L81.9525 10.3742C81.9541 10.2141 82.0217 9.97724 82.1043 9.84759L82.2534 9.61125L82.369 9.97564L82.484 10.3395H83.1428V11.0288L83.5443 10.928L83.9459 10.8266L84.2276 11.1094C84.3826 11.2641 84.4704 11.4545 84.4231 11.5314L84.3362 11.6717L83.7398 11.6546L83.1433 11.6375L83.1428 11.4348ZM22.814 11.3638C22.814 11.3186 22.8319 11.2751 22.8639 11.2431C22.8958 11.2111 22.9392 11.1931 22.9844 11.1931C23.0296 11.1931 23.0729 11.2111 23.1049 11.2431C23.1368 11.2751 23.1548 11.3186 23.1548 11.3638C23.1548 11.4091 23.1368 11.4525 23.1049 11.4846C23.0729 11.5166 23.0296 11.5346 22.9844 11.5346C22.9392 11.5346 22.8958 11.5166 22.8639 11.4846C22.8319 11.4525 22.814 11.4091 22.814 11.3638ZM69.2535 11.3638C69.225 11.3119 69.21 11.2536 69.2098 11.1943C69.2096 11.135 69.2243 11.0767 69.2524 11.0245L69.3568 10.8554L69.0799 10.9621L68.8024 11.0688L68.1633 10.8575L67.5243 10.6463L67.316 10.3112L67.1073 9.9767L67.2111 9.64859L67.315 9.32048L67.8502 9.37917L68.3854 9.43785L68.4472 9.62298L68.509 9.80811L68.7811 9.70354L69.0538 9.59844L68.9308 9.79851L68.8072 9.99804H68.9776C69.0714 9.99804 69.1997 9.91428 69.2626 9.81238L69.3771 9.62672L69.196 9.44532L69.0139 9.26286L69.1821 8.94755L69.351 8.63225H70.1972L70.095 9.04039L69.9927 9.44852L70.177 9.5627C70.2782 9.62565 70.3612 9.74836 70.3612 9.83532V9.99377L69.6796 10.1031L68.9979 10.2125V10.6809H69.3286C69.5107 10.6809 69.7025 10.6116 69.7547 10.5262L69.8505 10.3715L70.1913 10.4606C70.6163 10.5726 70.6163 10.5716 70.129 11.0992C69.7019 11.5607 69.4261 11.6434 69.2535 11.3638ZM18.383 11.1222V10.8517H18.9225L18.8554 11.0544C18.8312 11.1155 18.7947 11.1711 18.7483 11.2176C18.7019 11.2641 18.6464 11.3006 18.5854 11.3249L18.383 11.3921V11.1222ZM27.8414 11.1931C27.8994 11.0992 27.9804 11.0224 28.0219 11.0224C28.0629 11.0224 28.097 11.0992 28.097 11.1931C28.097 11.287 28.016 11.3638 27.9165 11.3638H27.7359L27.8414 11.1931ZM57.2389 11.1931C57.2389 11.1478 57.2568 11.1044 57.2888 11.0724C57.3208 11.0404 57.3641 11.0224 57.4093 11.0224C57.4545 11.0224 57.4978 11.0404 57.5298 11.0724C57.5618 11.1044 57.5797 11.1478 57.5797 11.1931C57.5797 11.2384 57.5618 11.2818 57.5298 11.3138C57.4978 11.3459 57.4545 11.3638 57.4093 11.3638C57.3641 11.3638 57.3208 11.3459 57.2888 11.3138C57.2568 11.2818 57.2389 11.2384 57.2389 11.1931ZM64.1409 11.1931L64.0354 11.0224H64.2165C64.3156 11.0224 64.3965 11.0992 64.3965 11.1931C64.3965 11.287 64.363 11.3638 64.3214 11.3638C64.2799 11.3638 64.1989 11.287 64.1409 11.1931ZM74.2809 11.1707C74.2809 11.0891 74.3603 11.0224 74.4567 11.0224C74.5536 11.0224 74.6974 10.8495 74.7762 10.6383L74.92 10.2541L74.7293 10.133L74.5392 10.0124L74.7309 9.82038L74.9226 9.62832L75.2848 9.85559C75.485 9.98044 75.6906 10.2173 75.7428 10.3816C75.795 10.5465 75.893 10.6809 75.9601 10.6809C76.0277 10.6809 76.0943 10.8282 76.1076 11.0085L76.1321 11.3356L75.2065 11.327L74.2809 11.319V11.1707ZM17.4452 11.0213L17.3387 10.849L17.6129 10.7439C17.9389 10.6185 18.121 10.7567 17.9644 11.0107C17.8222 11.2401 17.5831 11.2454 17.4452 11.0213ZM20.3519 11.0373L20.2523 10.8751L20.4137 10.7754L20.5751 10.6756L20.6747 10.8373L20.7742 10.9989L20.6129 11.0987L20.4515 11.1985L20.3519 11.0373ZM29.0519 10.9216C28.9203 10.5774 29.0641 10.3395 29.4034 10.3395H29.667L29.5637 10.6095C29.5067 10.7583 29.4604 10.9504 29.4604 11.0363C29.4604 11.2961 29.1637 11.2123 29.0519 10.9216ZM60.4769 11.0224C60.4769 10.9771 60.4948 10.9337 60.5268 10.9017C60.5587 10.8697 60.6021 10.8517 60.6473 10.8517C60.6925 10.8517 60.7358 10.8697 60.7678 10.9017C60.7997 10.9337 60.8177 10.9771 60.8177 11.0224C60.8177 11.0677 60.7997 11.1111 60.7678 11.1431C60.7358 11.1751 60.6925 11.1931 60.6473 11.1931C60.6021 11.1931 60.5587 11.1751 60.5268 11.1431C60.4948 11.1111 60.4769 11.0677 60.4769 11.0224ZM12.9296 10.8517C12.9296 10.8064 12.9475 10.763 12.9795 10.7309C13.0115 10.6989 13.0548 10.6809 13.1 10.6809C13.1452 10.6809 13.1885 10.6989 13.2205 10.7309C13.2525 10.763 13.2704 10.8064 13.2704 10.8517C13.2704 10.8741 13.266 10.8963 13.2574 10.917C13.2489 10.9377 13.2363 10.9565 13.2205 10.9724C13.2047 10.9882 13.1859 11.0008 13.1652 11.0094C13.1445 11.018 13.1224 11.0224 13.1 11.0224C13.0776 11.0224 13.0555 11.018 13.0348 11.0094C13.0141 11.0008 12.9953 10.9882 12.9795 10.9724C12.9637 10.9565 12.9511 10.9377 12.9425 10.917C12.934 10.8963 12.9296 10.8741 12.9296 10.8517ZM13.6113 10.7663V10.5102H14.1225V11.0224H13.6113V10.7663ZM21.2802 10.8287C21.2802 10.7594 21.3547 10.5075 21.4453 10.2685L21.6104 9.83372L21.8884 9.94042L22.1669 10.0477L22.308 9.81825L22.4497 9.58884L22.6574 10.0445L22.864 10.5001L22.6616 10.7439L22.4593 10.9882L21.8697 10.9717C21.5454 10.9621 21.2802 10.8981 21.2802 10.8287ZM26.0519 10.8517C26.0519 10.8064 26.0699 10.763 26.1019 10.7309C26.1338 10.6989 26.1772 10.6809 26.2224 10.6809C26.2676 10.6809 26.3109 10.6989 26.3429 10.7309C26.3748 10.763 26.3928 10.8064 26.3928 10.8517C26.3928 10.8741 26.3884 10.8963 26.3798 10.917C26.3713 10.9377 26.3587 10.9565 26.3429 10.9724C26.327 10.9882 26.3083 11.0008 26.2876 11.0094C26.2669 11.018 26.2447 11.0224 26.2224 11.0224C26.2 11.0224 26.1778 11.018 26.1571 11.0094C26.1365 11.0008 26.1177 10.9882 26.1019 10.9724C26.086 10.9565 26.0735 10.9377 26.0649 10.917C26.0564 10.8963 26.0519 10.8741 26.0519 10.8517ZM34.9138 10.8517C34.9138 10.7578 34.9948 10.6809 35.0943 10.6809H35.2749L35.1694 10.8517C35.1114 10.9456 35.0304 11.0224 34.9889 11.0224C34.9479 11.0224 34.9138 10.9456 34.9138 10.8517ZM65.2556 10.7743L65.05 10.5268L65.1608 10.1768C65.3594 9.54989 65.7599 9.89614 65.7599 10.6948C65.7599 11.0843 65.5405 11.1179 65.2556 10.7743ZM77.0928 10.8517C77.1509 10.7578 77.2318 10.6809 77.2734 10.6809C77.3144 10.6809 77.3485 10.7578 77.3485 10.8517C77.3485 10.9456 77.2675 11.0224 77.1679 11.0224H76.9874L77.0928 10.8517ZM23.3252 10.6809C23.3252 10.587 23.4062 10.5102 23.5058 10.5102H23.6863L23.5809 10.6809C23.5228 10.7748 23.4419 10.8517 23.4003 10.8517C23.3593 10.8517 23.3252 10.7748 23.3252 10.6809ZM80.5865 10.4499V10.0087L80.8421 10.1069L81.0977 10.205V9.82732H81.3534C81.4939 9.82732 81.6148 9.88494 81.6218 9.95536C81.6292 10.0258 81.6606 10.2179 81.6921 10.3822L81.7491 10.6809L81.5515 10.6831C81.4423 10.6847 81.1808 10.7322 80.9699 10.7887L80.5865 10.8917V10.4499ZM63.317 10.5673C63.2547 10.5043 63.2036 10.2381 63.2036 9.9751V9.49654L63.4321 9.58457L63.66 9.67207L63.8783 9.40851C63.9992 9.26339 64.1942 9.14442 64.3124 9.14442H64.527L64.6223 9.50828L64.7171 9.87213L64.4413 10.1485C64.2895 10.3005 64.1084 10.4249 64.0397 10.4249C63.9705 10.4249 63.856 10.4825 63.7857 10.5529C63.628 10.7114 63.4661 10.7162 63.317 10.5673ZM76.0543 10.3166L75.7295 9.95269L76.1129 10.0722L76.4964 10.1917V10.0829C76.4964 10.0226 76.3883 9.8652 76.2557 9.73289L76.0155 9.49174L76.1012 9.16309L76.187 8.83445L76.5299 8.74482L76.8729 8.65465L77.2702 9.11348L77.6675 9.57123L77.4449 9.91268C77.3224 10.1005 77.161 10.228 77.0875 10.196C77.0135 10.164 76.8851 10.26 76.8015 10.4094C76.5992 10.7711 76.4421 10.7519 76.0543 10.3166ZM88.4897 10.4307L88.2032 10.2205L88.3262 10.021L88.4492 9.82198L88.6505 9.94789C88.7613 10.0173 89.0052 10.0957 89.1927 10.1229C89.3802 10.1506 89.64 10.212 89.7711 10.26L90.0086 10.3475L89.8871 10.4691C89.82 10.5358 89.5431 10.602 89.271 10.6153L88.7768 10.6404L88.4897 10.4307ZM17.6199 10.3454L17.5128 10.172L17.8201 9.74889C18.2131 9.20791 18.383 9.20578 18.383 9.74196V10.1688H18.7809L18.6605 10.2888C18.5945 10.355 18.3569 10.4339 18.1333 10.4638L17.7264 10.5188L17.6199 10.3454ZM24.2061 10.3774L23.8088 10.3123L24.1209 10.0754C24.2924 9.94469 24.5288 9.83532 24.646 9.83265L24.859 9.82732V10.0733C24.859 10.3864 24.7035 10.4585 24.2061 10.3774ZM65.9623 10.2136L66.0193 9.91642L66.3159 9.85933L66.612 9.80224V10.5102H65.9053L65.9623 10.2136ZM83.3132 10.3576C83.3132 10.1586 83.8111 9.96977 84.0103 10.093C84.0955 10.1458 84.1653 10.2611 84.1653 10.3491V10.5102H83.3132V10.3576ZM26.7762 10.2168C26.1462 10.1384 26.1153 10.0818 26.4934 9.70248L26.7645 9.43145L27.2161 9.59044L27.6677 9.74943L27.7242 10.045L27.7812 10.34L27.5554 10.3128L26.7762 10.2168ZM42.2845 10.2195L41.901 10.1458V9.14442H42.449L42.3351 9.60111L42.2206 10.0578L42.4869 9.83639C42.6333 9.71421 42.7585 9.4896 42.7638 9.33702L42.7744 9.05906L42.9406 9.4752C43.111 9.90308 43.0365 10.3571 42.8011 10.316C42.6287 10.2847 42.4565 10.2528 42.2845 10.2195ZM46.9428 10.1922C46.8693 10.0733 46.8549 9.92975 46.9114 9.8732C47.0637 9.72062 47.2304 9.94522 47.1479 10.1933L47.076 10.4088L46.9428 10.1922ZM70.6334 10.196L70.5263 10.0221L70.7106 9.90788L70.8954 9.79371L71.0003 9.89881L71.1052 10.0044L70.9231 10.1869L70.7404 10.3699L70.6334 10.196ZM78.2624 10.0839L78.3603 9.82785H78.11C77.6467 9.82785 77.8549 9.4928 78.4828 9.23032C78.8247 9.0868 79.115 8.99023 79.1272 9.01478C79.139 9.03932 79.2471 9.18817 79.3664 9.34502L79.5836 9.63045L79.3621 9.98524L79.1411 10.34H78.1644L78.2624 10.0839ZM19.9679 9.94309L19.8731 9.78944L20.0926 9.65393C20.3668 9.48374 20.7689 9.62725 20.7689 9.89507V10.0962H20.4158C20.2214 10.0962 20.0196 10.0269 19.9679 9.94309ZM55.8185 10.0551L55.7046 9.94096L55.9783 9.63792L56.252 9.33489L56.5577 9.52695L56.8639 9.71795L56.7777 9.94362L56.6914 10.1693H56.3117C56.1029 10.1693 55.8808 10.1181 55.8185 10.0551ZM89.2779 9.82785C89.2779 9.78257 89.2959 9.73915 89.3278 9.70713C89.3598 9.67511 89.4031 9.65713 89.4483 9.65713C89.4935 9.65713 89.5369 9.67511 89.5688 9.70713C89.6008 9.73915 89.6187 9.78257 89.6187 9.82785C89.6187 9.87313 89.6008 9.91656 89.5688 9.94857C89.5369 9.98059 89.4935 9.99858 89.4483 9.99858C89.4031 9.99858 89.3598 9.98059 89.3278 9.94857C89.2959 9.91656 89.2779 9.87313 89.2779 9.82785ZM19.0647 9.65713C19.0647 9.56323 19.1371 9.4864 19.225 9.4864C19.3134 9.4864 19.4327 9.56323 19.4908 9.65713L19.5962 9.82785H19.3299C19.184 9.82785 19.0647 9.75103 19.0647 9.65713ZM75.0478 9.31568C75.1058 9.22178 75.2299 9.14495 75.3237 9.14495H75.4941L75.3886 9.31568C75.3306 9.40958 75.2065 9.4864 75.1128 9.4864H74.9424L75.0478 9.31568ZM75.6443 9.14495C75.6443 9.09967 75.6622 9.05625 75.6942 9.02423C75.7261 8.99222 75.7695 8.97423 75.8147 8.97423C75.8599 8.97423 75.9032 8.99222 75.9352 9.02423C75.9672 9.05625 75.9851 9.09967 75.9851 9.14495C75.9851 9.19023 75.9672 9.23366 75.9352 9.26567C75.9032 9.29769 75.8599 9.31568 75.8147 9.31568C75.7695 9.31568 75.7261 9.29769 75.6942 9.26567C75.6622 9.23366 75.6443 9.19023 75.6443 9.14495ZM83.5805 9.16416L83.4873 9.01318L83.8559 8.91661C84.0582 8.86326 84.2888 8.86006 84.3682 8.90914L84.512 8.9977L84.4135 9.15669C84.2888 9.35889 83.7041 9.36423 83.5805 9.16416ZM67.9754 8.88887V8.63278H68.4866V9.14495H67.9754V8.88887ZM62.8654 8.84619C62.867 8.77576 62.9421 8.6029 63.0332 8.46206L63.1983 8.20597L63.2009 8.5901L63.2036 8.97423H63.0332C62.9394 8.97423 62.8638 8.91661 62.8654 8.84619ZM84.2505 8.63278L84.1451 8.46206H84.6968L84.5913 8.63278C84.5333 8.72668 84.4566 8.8035 84.4209 8.8035C84.3852 8.8035 84.3085 8.72668 84.2505 8.63278ZM81.609 86.8246C81.609 86.7307 81.528 86.6539 81.4284 86.6539H81.2479L81.3534 86.8246C81.4114 86.9185 81.4924 86.9953 81.5339 86.9953C81.5749 86.9953 81.609 86.9185 81.609 86.8246ZM84.7618 86.3124L84.8672 86.1417H84.6861C84.5871 86.1417 84.5061 86.2185 84.5061 86.3124C84.5061 86.4063 84.5402 86.4832 84.5812 86.4832C84.6228 86.4832 84.7037 86.4063 84.7618 86.3124ZM70.5317 85.7048V85.4385L70.3586 85.5458L70.1855 85.653L70.2835 85.812C70.4294 86.0489 70.5317 86.0046 70.5317 85.7053V85.7048ZM62.7775 85.6295L62.883 85.4588H62.6167C62.4708 85.4588 62.3515 85.5356 62.3515 85.6295C62.3515 85.7234 62.4234 85.8003 62.5118 85.8003C62.6002 85.8003 62.7195 85.7234 62.7775 85.6295ZM81.1733 85.4743C81.2266 85.3889 81.2229 85.1969 81.1654 85.0485L81.062 84.7781L80.9065 84.8741L80.751 84.9701L80.8719 85.1718L80.9928 85.3735L80.6999 85.1355C80.3559 84.8559 80.194 84.9536 80.3452 85.3489L80.4523 85.6295H80.7649C80.9369 85.6295 81.1206 85.5597 81.1733 85.4743ZM63.374 85.2881C63.374 85.1942 63.2931 85.1174 63.1935 85.1174H63.0129L63.1184 85.2881C63.1764 85.382 63.2574 85.4588 63.2989 85.4588C63.3399 85.4588 63.374 85.382 63.374 85.2881ZM86.4569 85.127L86.7567 84.7957L86.2705 84.8597C86.0032 84.8944 85.7555 84.9285 85.7209 84.9344C85.6575 84.9466 86.0474 85.4588 86.1198 85.4588C86.1406 85.4588 86.2923 85.3094 86.4569 85.127ZM96.32 84.6452C96.3519 84.3518 96.4787 83.9911 96.6012 83.8423C96.843 83.551 96.7854 83.3536 96.516 83.5472C96.4249 83.6129 96.1842 83.9047 95.9807 84.1955L95.6111 84.7247L95.8955 84.9787C96.2486 85.294 96.2486 85.2934 96.3195 84.6452H96.32ZM85.3582 84.7812V84.6159L85.1026 84.714C84.962 84.7685 84.847 84.8426 84.847 84.8794C84.847 84.9168 84.962 84.9466 85.1026 84.9466C85.2432 84.9466 85.3582 84.8719 85.3582 84.7812ZM87.4347 83.7169L87.3522 83.1546L87.1679 83.568L86.9841 83.9815L87.1945 84.0519L87.4054 84.1224L87.293 84.3048L87.1801 84.4873L87.3484 84.3833L87.5167 84.2787L87.4347 83.7169ZM96.0569 82.0737L96.0095 81.7882L96.2225 81.8309C96.3397 81.8544 96.4356 81.8096 96.4356 81.7312C96.4356 81.4153 96.2193 81.4073 95.9136 81.713L95.5914 82.0369L95.6905 82.2956L95.7896 82.5544L95.9467 82.4573C96.0329 82.4039 96.0825 82.2316 96.0564 82.0742L96.0569 82.0737ZM6.68261 81.0979C6.62722 80.9533 6.54521 80.8711 6.50047 80.9159C6.45627 80.9608 6.47011 81.0792 6.53189 81.1795C6.69965 81.4516 6.79817 81.3988 6.68261 81.0979ZM96.7764 80.678C96.7764 80.5841 96.7423 80.5073 96.7013 80.5073C96.6598 80.5073 96.5788 80.5841 96.5208 80.678L96.4153 80.8487H96.5964C96.6954 80.8487 96.7764 80.7719 96.7764 80.678ZM5.43108 78.1171C5.43108 78.0232 5.35013 77.9464 5.25054 77.9464H5.07L5.17545 78.1171C5.2335 78.211 5.31445 78.2879 5.35599 78.2879C5.397 78.2879 5.43108 78.211 5.43108 78.1171ZM5.98388 76.2866L5.76979 76.2098L5.86565 76.054L5.96258 75.8977H5.78151C5.68245 75.8977 5.6015 75.9591 5.6015 76.0343C5.6015 76.2466 5.99347 76.5875 6.10158 76.4691C6.15484 76.4104 6.10158 76.3288 5.98388 76.2866ZM5.85713 75.5563C5.82208 75.5064 5.77602 75.4653 5.72255 75.4362C5.66907 75.407 5.60961 75.3906 5.54878 75.3882L5.34587 75.3909L5.6015 75.5563C5.92903 75.7681 5.98814 75.7681 5.85713 75.5563ZM5.43108 74.8531V74.6824L5.26066 74.788C5.16693 74.8462 5.09024 74.9705 5.09024 75.0644V75.2351L5.26066 75.1295C5.35439 75.0713 5.43108 74.947 5.43108 74.8531ZM6.11276 73.3368C6.11276 73.243 6.07868 73.1661 6.03767 73.1661C5.99613 73.1661 5.91518 73.243 5.85713 73.3368L5.75169 73.5076H5.93276C6.03181 73.5076 6.11276 73.4307 6.11276 73.3368ZM5.72932 72.0063C5.56529 71.9732 5.43108 71.8702 5.43108 71.7779V71.6093L5.25214 71.7203L5.07373 71.8307L5.26492 72.0612L5.45611 72.2922L5.74157 72.1791L6.02755 72.0665L5.72932 72.0063ZM10.9873 68.4317C10.8142 68.2583 10.6715 68.5197 10.8137 68.7502L10.9468 68.9663L11.0187 68.7508C11.0581 68.6323 11.0443 68.4883 10.9873 68.4317ZM6.11276 60.5325C6.11276 60.4386 6.07868 60.3618 6.03767 60.3618C5.99613 60.3618 5.91518 60.4386 5.85713 60.5325L5.75169 60.7032H5.93276C6.03181 60.7032 6.11276 60.6264 6.11276 60.5325ZM96.2651 60.1911C96.2651 60.1458 96.2472 60.1024 96.2152 60.0703C96.1833 60.0383 96.1399 60.0203 96.0947 60.0203C96.0495 60.0203 96.0062 60.0383 95.9742 60.0703C95.9422 60.1024 95.9243 60.1458 95.9243 60.1911C95.9243 60.285 96.001 60.3618 96.0947 60.3618C96.1399 60.3618 96.1833 60.3438 96.2152 60.3118C96.2472 60.2798 96.2651 60.2363 96.2651 60.1911ZM96.1405 58.9816L96.0473 58.6257L95.912 58.8455C95.7651 59.0829 95.8567 59.3374 96.0889 59.3374H96.2332L96.1405 58.9816ZM6.45361 56.5023V56.2281L6.2001 56.3252L5.9466 56.4228L5.98708 56.2414L6.02755 56.0606L5.63719 55.9096L5.24735 55.7581L5.29634 56.0542C5.35865 56.425 5.765 56.7638 6.15537 56.7712L6.45361 56.7766V56.5023ZM6.62403 54.3864V54.2157L6.32579 54.2184L6.02755 54.221L6.28319 54.3864C6.60485 54.5945 6.62403 54.5945 6.62403 54.3864ZM96.0947 54.3757C96.0947 54.1815 95.6367 54.1618 95.5201 54.3512L95.4365 54.4862L95.7656 54.5113L96.0947 54.5358V54.3757ZM4.57898 52.1723V52.007L4.85432 52.1126L5.12965 52.2188L5.01568 51.8085L4.90171 51.3987L5.23616 51.7829C5.62281 52.2268 5.80494 52.2806 5.66222 51.9088L5.56369 51.6511L5.83796 51.7567L6.11276 51.8618V51.4441L5.77192 51.5337L5.43108 51.6228V51.1363L4.96243 51.2483C4.34838 51.3966 4.28181 51.4697 4.58431 51.6644L4.83461 51.8256L4.45117 51.9307C4.02085 52.0491 3.92979 52.3377 4.32335 52.3377C4.46395 52.3377 4.57898 52.263 4.57898 52.1723ZM6.47278 51.7765L6.28319 51.5865V51.848C6.28319 51.992 6.3391 52.1659 6.40727 52.2348L6.53189 52.3591L6.59686 52.1627C6.63308 52.055 6.57716 51.881 6.47278 51.7765ZM6.45361 51.1427C6.45361 51.0488 6.33431 50.9719 6.18786 50.9719H5.92211L6.02755 51.1427C6.0856 51.2366 6.2049 51.3134 6.2933 51.3134C6.38118 51.3134 6.45361 51.2366 6.45361 51.1427ZM4.57898 50.7911C4.57898 50.7025 4.50229 50.6305 4.40856 50.6305C4.31483 50.6305 4.23814 50.75 4.23814 50.8967V51.1629L4.40856 51.0573C4.50229 50.9991 4.57898 50.8796 4.57898 50.7911ZM5.26066 48.0696C5.26066 47.9757 5.22658 47.8989 5.18557 47.8989C5.14403 47.8989 5.06308 47.9757 5.00503 48.0696L4.89958 48.2403H5.08066C5.17971 48.2403 5.26066 48.1635 5.26066 48.0696ZM95.5036 47.566L95.3896 47.3814L95.2128 47.4907L95.036 47.6001L95.2623 47.7404C95.5355 47.9096 95.6601 47.8199 95.5036 47.566ZM95.9243 46.4477C95.9243 46.4211 95.8093 46.3549 95.6687 46.3005L95.413 46.2023V46.6931L95.6687 46.595C95.8093 46.5406 95.9243 46.4744 95.9243 46.4477ZM5.80601 45.3039L5.60736 45.1049L5.48168 45.2308L5.35599 45.3567L5.6015 45.5087C5.91998 45.7061 6.06324 45.5621 5.80601 45.3039ZM95.4982 43.8015L95.6037 43.6308H95.4226C95.3236 43.6308 95.2426 43.7076 95.2426 43.8015C95.2426 43.8954 95.2767 43.9722 95.3177 43.9722C95.3592 43.9722 95.4402 43.8954 95.4982 43.8015ZM5.66541 43.6649L5.75009 43.5283L5.42789 43.3272L5.10622 43.1255L4.99119 43.3123L4.87615 43.4985L5.11101 43.6473C5.40552 43.834 5.55837 43.8394 5.66541 43.6649ZM96.0617 43.3704C96.0095 43.3176 95.9142 43.4126 95.8503 43.5806L95.7336 43.8869L95.9456 43.6761C96.0617 43.5603 96.1144 43.4227 96.0617 43.3704ZM4.95497 38.9359L4.85059 38.4237L4.74674 38.9359C4.68975 39.2175 4.67804 39.5526 4.72118 39.6801L4.79999 39.9122L4.92994 39.6801L5.05935 39.448L4.95497 38.9359ZM4.40856 38.4418C4.40856 38.405 4.29353 38.3308 4.15293 38.2764L3.8973 38.1783V38.3437C3.8973 38.4343 4.01233 38.509 4.15293 38.509C4.29353 38.509 4.40856 38.4786 4.40856 38.4418ZM92.175 37.7306V37.4644L92.002 37.5717L91.8289 37.6789L91.9269 37.8379C92.0728 38.0748 92.175 38.0299 92.175 37.7306ZM4.46501 34.3402L4.55768 34.0985L4.3127 34.0046L4.06772 33.9101V34.2463C4.06772 34.6347 4.32868 34.6965 4.46501 34.3402ZM5.77192 34.2463V33.9101L5.51629 34.0083C5.3757 34.0627 5.26066 34.2137 5.26066 34.3444V34.5824H5.77192V34.2463ZM4.13536 33.4572C4.19234 33.3078 4.19607 33.1157 4.14334 33.0304L4.04748 32.8751H4.1721C4.24027 32.8751 4.43732 33.0032 4.6088 33.1584C5.0061 33.5185 5.22658 33.3292 4.85006 32.9514L4.56886 32.6697L4.16571 32.7711L3.76256 32.8725L3.78759 33.3003C3.81529 33.7858 3.98091 33.8605 4.13536 33.4572ZM95.2767 32.4995L95.0781 32.3005L94.9524 32.4264L94.8267 32.5524L95.0722 32.7044C95.3907 32.9018 95.5339 32.7578 95.2767 32.4995ZM4.4959 31.8812C4.46022 31.8454 4.34838 31.8679 4.24666 31.9308L4.06239 32.045L4.17157 32.2221L4.28075 32.3992L4.42081 32.1725C4.4975 32.0482 4.53158 31.9164 4.49537 31.8812H4.4959ZM5.77192 32.0215C5.77192 31.9762 5.75397 31.9328 5.72201 31.9008C5.69005 31.8688 5.6467 31.8508 5.6015 31.8508C5.57912 31.8508 5.55696 31.8552 5.53629 31.8638C5.51561 31.8724 5.49682 31.8849 5.481 31.9008C5.46517 31.9166 5.45262 31.9355 5.44406 31.9562C5.43549 31.9769 5.43108 31.9991 5.43108 32.0215C5.43108 32.1154 5.50777 32.1922 5.6015 32.1922C5.6467 32.1922 5.69005 32.1742 5.72201 32.1422C5.75397 32.1102 5.77192 32.0668 5.77192 32.0215ZM4.83461 30.3143L4.94006 30.1435H4.76964C4.67591 30.1435 4.55129 30.2204 4.49377 30.3143L4.38832 30.485H4.55874C4.65247 30.485 4.77709 30.4082 4.83461 30.3143ZM91.3229 28.8732C91.3229 28.8316 91.2463 28.7505 91.1525 28.6924L90.9821 28.5867V28.7681C90.9821 28.8668 91.0588 28.9485 91.1525 28.9485C91.2463 28.9485 91.3229 28.9143 91.3229 28.8732ZM90.5017 28.1802C90.4352 27.5512 90.2802 27.3815 89.7157 27.3196L89.2779 27.2716V27.4167C89.2779 27.4968 89.3487 27.6061 89.435 27.66C89.5218 27.7134 89.6438 27.9913 89.7066 28.2773L89.8206 28.7975L90.1881 28.7447L90.5561 28.6924L90.5017 28.1802ZM91.1525 27.3906C91.1525 27.094 90.849 27.2492 90.7595 27.5923L90.6679 27.9439L90.9102 27.7422C91.0433 27.6312 91.1525 27.4728 91.1525 27.3906ZM5.77192 26.4057V26.0579L5.38848 26.1993L5.00503 26.3412L4.94645 26.641L4.8868 26.9409L5.07373 26.8251L5.26066 26.7093V27.2663L5.51629 27.0102C5.65689 26.8694 5.77192 26.5973 5.77192 26.4057ZM3.95269 26.8315C4.00275 26.6997 4.00381 26.5514 3.95428 26.5018C3.79771 26.3449 3.38604 26.585 3.38604 26.8331V27.071H3.62356C3.75404 27.071 3.90209 26.9633 3.95269 26.8315ZM4.52519 26.5268L4.43572 26.3028L4.42188 26.6298C4.41442 26.8101 4.45489 26.911 4.51135 26.8539C4.56833 26.7973 4.57419 26.6501 4.52519 26.5268ZM94.7314 26.3881C94.7314 26.3429 94.7134 26.2994 94.6814 26.2674C94.6495 26.2354 94.6061 26.2174 94.5609 26.2174C94.5157 26.2174 94.4724 26.2354 94.4404 26.2674C94.4085 26.2994 94.3905 26.3429 94.3905 26.3881C94.3905 26.482 94.4672 26.5589 94.5609 26.5589C94.6061 26.5589 94.6495 26.5409 94.6814 26.5089C94.7134 26.4768 94.7314 26.4334 94.7314 26.3881ZM4.7494 22.8877L4.96136 22.6317H4.40856V22.8877C4.40856 23.0286 4.43732 23.1438 4.47247 23.1438C4.50815 23.1438 4.63224 23.0286 4.7494 22.8877ZM95.143 22.7597C95.0791 22.1851 95.0754 22.1814 94.8874 22.5052L94.7127 22.8051L94.8176 22.9747C94.8746 23.0675 94.9811 23.1438 95.0536 23.1438H95.1856L95.143 22.7597ZM5.6015 22.2902C5.6015 22.1963 5.52055 22.1195 5.42096 22.1195H5.24043L5.34587 22.2902C5.40392 22.3841 5.48487 22.4609 5.52641 22.4609C5.56742 22.4609 5.6015 22.3841 5.6015 22.2902ZM3.67309 21.746L3.58362 21.5219L3.56977 21.849C3.56232 22.0293 3.60279 22.1302 3.65924 22.0731C3.71623 22.0165 3.72209 21.8693 3.67309 21.746ZM95.7086 21.165L95.9797 20.8929L95.739 20.7425L95.4982 20.592L95.4429 20.8455L95.3875 21.0994L95.2314 21.0034L95.0759 20.9068L95.1771 21.1714C95.3049 21.5038 95.3715 21.5027 95.7086 21.165ZM5.6015 20.5157C5.6015 20.4789 5.48274 20.4032 5.33682 20.3472L5.07267 20.2458L5.17652 20.4144C5.27664 20.5766 5.6015 20.6545 5.6015 20.5157ZM95.413 19.3879C95.413 19.3426 95.3951 19.2992 95.3631 19.2672C95.3312 19.2352 95.2878 19.2172 95.2426 19.2172C95.1974 19.2172 95.1541 19.2352 95.1221 19.2672C95.0901 19.2992 95.0722 19.3426 95.0722 19.3879C95.0722 19.4818 95.1489 19.5586 95.2426 19.5586C95.2878 19.5586 95.3312 19.5406 95.3631 19.5086C95.3951 19.4766 95.413 19.4332 95.413 19.3879ZM96.0095 18.8757C95.9515 18.7818 95.7938 18.705 95.6586 18.705C95.5233 18.705 95.413 18.7818 95.413 18.8757V19.0464H96.1149L96.0095 18.8757ZM10.2029 18.6196L10.4148 18.3635H10.2417C10.1469 18.3635 10.025 18.4788 9.97065 18.6196C9.91687 18.7605 9.89929 18.8757 9.93178 18.8757C9.96373 18.8757 10.0862 18.7605 10.2029 18.6196ZM95.0722 17.6604V17.4896L94.9018 17.5953C94.808 17.6534 94.7314 17.7777 94.7314 17.8716V18.0424L94.9018 17.9367C94.9955 17.8786 95.0722 17.7543 95.0722 17.6604ZM5.59884 16.2722C5.60523 15.9499 5.3299 16.1873 5.30433 16.5261L5.27557 16.9081L5.43588 16.6542C5.52428 16.5144 5.59724 16.3426 5.59884 16.2722ZM90.6194 14.4796C90.5704 13.826 90.3207 13.2418 90.0901 13.2418C89.9356 13.2418 90.008 13.6686 90.2743 14.3195C90.3824 14.5841 90.4708 14.8722 90.4708 14.9597C90.4708 15.0478 90.515 15.1198 90.5694 15.1198C90.6232 15.1198 90.6455 14.8317 90.6194 14.4796ZM5.17545 14.7783L5.2809 14.6076H5.09983C5.00077 14.6076 4.91982 14.6844 4.91982 14.7783C4.91982 14.8722 4.95391 14.9491 4.99491 14.9491C5.03645 14.9491 5.1174 14.8722 5.17545 14.7783ZM5.43108 13.8292V13.563L5.258 13.6702L5.08492 13.7775L5.18291 13.9364C5.32883 14.1733 5.43108 14.1285 5.43108 13.8292ZM4.98746 13.6115L5.07533 13.4696H4.82716C4.69082 13.4696 4.57898 13.5336 4.57898 13.6115C4.57898 13.69 4.65141 13.754 4.73928 13.754C4.82769 13.754 4.93899 13.69 4.98746 13.6115ZM72.8286 10.578C72.2929 10.117 72.2108 10.1208 72.3365 10.603L72.4239 10.937L72.8654 10.9632L73.3063 10.9893L72.8286 10.578ZM11.2254 9.89401V9.65659L11.5236 9.62992C11.6876 9.61498 11.9118 9.60538 12.0216 9.60858L12.2207 9.61391L12.1307 9.37917C12.0817 9.25006 11.9438 9.14442 11.8245 9.14442C11.7052 9.14442 11.5124 9.02918 11.3958 8.88833C11.1652 8.60984 10.7141 8.53995 10.7141 8.78323C10.7141 8.86593 10.8867 8.99184 11.0976 9.06333L11.481 9.19244L11.0219 9.26446L10.5623 9.33595L10.6566 9.58137L10.7503 9.82732H10.4947C10.3541 9.82732 10.2018 9.92602 10.1555 10.0471L10.0713 10.2664L10.6481 10.1986L11.2254 10.1314V9.89401ZM31.761 9.82732L31.8665 9.65659H31.6854C31.5863 9.65659 31.5054 9.73342 31.5054 9.82732C31.5054 9.92122 31.5395 9.99804 31.5805 9.99804C31.622 9.99804 31.703 9.92122 31.761 9.82732ZM39.6845 8.93102C39.6861 8.74108 39.4683 8.7843 39.1317 9.04039C38.6987 9.3701 38.7664 9.4848 39.2585 9.25646C39.4917 9.14762 39.6834 9.00144 39.6845 8.93102ZM16.7214 8.86059C16.5833 8.81324 16.4335 8.81324 16.2954 8.86059L16.0824 8.94649H16.9345L16.7214 8.86059ZM51.7854 7.94935C51.7854 7.85545 51.7045 7.77862 51.6049 7.77862H51.4243L51.5298 7.94935C51.5878 8.04325 51.6688 8.12007 51.7103 8.12007C51.7513 8.12007 51.7854 8.04325 51.7854 7.94935ZM64.8615 8.0171C64.805 7.96002 64.658 7.95415 64.535 8.00323L64.3113 8.09286L64.6378 8.10674C64.8178 8.1142 64.9184 8.07366 64.8615 8.0171ZM62.0106 3.51051C62.0106 3.41661 61.9766 3.33979 61.9356 3.33979C61.894 3.33979 61.8131 3.41661 61.755 3.51051L61.6496 3.68124H61.8306C61.9292 3.68124 62.0106 3.60441 62.0106 3.51051ZM75.8147 94.8481C75.8147 94.7542 75.8956 94.6774 75.9952 94.6774H76.1758L76.0703 94.8481C76.0123 94.942 75.9313 95.0189 75.8898 95.0189C75.8488 95.0189 75.8147 94.942 75.8147 94.8481ZM11.7366 94.592V94.336H11.3388L11.4485 94.2261L11.5582 94.1167L11.8176 94.3328C12.1137 94.5782 12.16 94.8481 11.9071 94.8481C11.8133 94.8481 11.7366 94.7329 11.7366 94.592ZM15.422 94.5856L15.3208 94.3232L15.5817 94.2229C15.7245 94.1679 15.889 94.1711 15.9476 94.2293L16.0541 94.336H15.667L15.7649 94.592L15.8629 94.8481H15.6925C15.5988 94.8481 15.4768 94.7302 15.422 94.5856ZM18.383 94.6721C18.383 94.5131 19.0833 94.1466 19.1968 94.2458C19.2223 94.2687 19.1947 94.4133 19.1355 94.5675L19.0285 94.8481H18.383V94.6721ZM57.5089 94.7004C57.4354 94.5814 57.421 94.4379 57.4769 94.3813C57.6298 94.2287 57.7965 94.4533 57.7139 94.7014L57.642 94.917L57.5089 94.7004ZM58.3748 94.5638C58.3052 94.4827 58.2652 94.3804 58.2614 94.2735V94.0969L58.4632 94.2991C58.574 94.4101 58.6251 94.5408 58.5767 94.5894C58.5287 94.6374 58.4377 94.6262 58.3748 94.5638ZM72.2359 94.4213V94.1652H72.7471V94.6774H72.2359V94.4213ZM8.04064 94.2298C7.91176 93.8921 8.01668 93.819 8.4635 93.9358C8.93588 94.0596 8.94707 94.2677 8.488 94.3882L8.13651 94.48L8.04064 94.2298ZM14.4634 94.336C14.7967 94.1199 15.145 94.1199 15.145 94.336V94.5067L14.6764 94.504L14.2077 94.5014L14.4634 94.336ZM27.5857 94.336C27.5857 94.2421 27.6965 94.1652 27.8312 94.1652C27.9665 94.1652 28.1242 94.2421 28.1822 94.336L28.2876 94.5067H27.5857V94.336ZM59.6365 94.1919L59.6248 93.7918L59.2839 93.7027L58.9431 93.613V93.3772C58.9431 93.0609 59.2695 93.0753 59.3926 93.397C59.4469 93.5378 59.5976 93.6531 59.7281 93.6531C59.9944 93.6531 60.0066 93.7576 59.7952 94.2506L59.6487 94.592L59.6365 94.1919ZM71.0429 94.2506V93.9694L71.3412 94.0271L71.6394 94.0847L71.6058 94.2527C71.5872 94.3456 71.453 94.4464 71.3076 94.4768L71.0429 94.5318V94.2506ZM77.6893 94.336C77.6893 94.2907 77.7073 94.2473 77.7392 94.2152C77.7712 94.1832 77.8145 94.1652 77.8597 94.1652C77.9049 94.1652 77.9483 94.1832 77.9802 94.2152C78.0122 94.2473 78.0302 94.2907 78.0302 94.336C78.0302 94.3812 78.0122 94.4247 77.9802 94.4567C77.9483 94.4887 77.9049 94.5067 77.8597 94.5067C77.8145 94.5067 77.7712 94.4887 77.7392 94.4567C77.7073 94.4247 77.6893 94.3812 77.6893 94.336ZM13.7039 94.0062L13.6059 93.8473L13.7609 93.7512L13.9164 93.6552L14.0139 93.9102L14.1119 94.1652H13.9569C13.8717 94.1652 13.7577 94.0937 13.7039 94.0062ZM16.4232 93.9945L16.3177 93.8238L16.4285 93.6445L16.5388 93.4658L16.7789 93.6659C16.9116 93.7758 17.0197 93.9326 17.0197 94.0153C17.0197 94.2213 16.5531 94.2047 16.4232 93.9945ZM24.9229 93.9145C24.7828 93.549 24.8803 93.4754 25.342 93.596L25.7255 93.6963L25.6616 93.8883C25.6264 93.9934 25.4699 94.1049 25.3133 94.1354L25.0284 94.1903L24.9229 93.9145ZM63.0385 94.0014L62.7877 93.8425L62.9027 93.7267L63.0183 93.6109L63.2813 93.7123C63.4262 93.7678 63.5444 93.8921 63.5444 93.9892C63.5444 94.2058 63.3682 94.2101 63.0385 94.0009V94.0014ZM66.1007 93.9091V93.628L66.399 93.6856L66.6972 93.7432L66.6637 93.9113C66.645 94.0041 66.5108 94.1049 66.3654 94.1354L66.1007 94.1903V93.9091ZM11.4091 93.724L11.423 93.397L11.5124 93.621C11.5614 93.7443 11.555 93.8915 11.4986 93.9481C11.4421 94.0052 11.4017 93.9044 11.4091 93.724ZM28.8713 93.8361L28.7733 93.6765L28.9464 93.5698L29.1195 93.4621V93.7288C29.1195 94.0281 29.0173 94.0729 28.8713 93.8361ZM30.0142 93.8814C29.8971 93.8339 29.8012 93.6819 29.8012 93.5432V93.2913L29.9572 93.3879C30.0424 93.4413 30.1452 93.4263 30.1846 93.3559C30.224 93.2844 30.2368 93.3132 30.2129 93.4188C30.1884 93.525 30.2549 93.6979 30.3599 93.803L30.551 93.995L30.3891 93.9812C30.2606 93.9633 30.1347 93.9298 30.0142 93.8814ZM60.4316 93.8025C60.5472 93.6861 60.6846 93.6333 60.7368 93.6861C60.7895 93.7384 60.6947 93.8339 60.5269 93.8979L60.2212 94.0148L60.4316 93.8025ZM74.2809 93.8238C74.2809 93.7785 74.2989 93.7351 74.3308 93.7031C74.3628 93.6711 74.4061 93.6531 74.4513 93.6531C74.4965 93.6531 74.5399 93.6711 74.5718 93.7031C74.6038 93.7351 74.6217 93.7785 74.6217 93.8238C74.6217 93.8691 74.6038 93.9125 74.5718 93.9445C74.5399 93.9765 74.4965 93.9945 74.4513 93.9945C74.4061 93.9945 74.3628 93.9765 74.3308 93.9445C74.2989 93.9125 74.2809 93.8691 74.2809 93.8238ZM36.2798 93.4397L36.2772 92.9702H36.4476C36.6633 92.9702 36.6633 93.3191 36.4476 93.6531L36.2825 93.9091L36.2798 93.4397ZM79.1453 93.6648L79.0474 93.5058L79.2204 93.3991L79.3935 93.2913L79.5639 93.397C79.6577 93.4551 79.7344 93.5746 79.7344 93.6632C79.7344 93.8713 79.2732 93.8723 79.1453 93.6648ZM87.824 93.6445L87.71 93.4594L87.815 93.3543L87.9204 93.2492L88.1025 93.4317L88.2852 93.6146L88.1116 93.7219L87.938 93.8291L87.824 93.6445ZM29.2899 93.4823C29.2899 93.3884 29.3709 93.3116 29.4705 93.3116H29.651L29.5456 93.4823C29.4875 93.5762 29.4066 93.6531 29.365 93.6531C29.324 93.6531 29.2899 93.5762 29.2899 93.4823ZM8.58386 93.3116C8.64191 93.2177 8.766 93.1409 8.85973 93.1409H9.03015L8.9247 93.3116C8.86665 93.4055 8.74256 93.4823 8.64883 93.4823H8.47841L8.58386 93.3116ZM32.5279 93.1302C32.5279 93.0422 32.5982 92.9702 32.6845 92.9702C32.7702 92.9702 32.963 92.9232 33.1121 92.8656L33.3837 92.7616L33.2921 93.0006L33.2006 93.2396L32.8645 93.2652L32.5279 93.2903V93.1302ZM37.5761 93.063L37.6783 92.7962L38.1278 92.6895C38.3755 92.6298 38.6673 92.5113 38.7765 92.4254L38.9751 92.2691L39.0902 92.6324L39.2052 92.9958L39.0955 93.1062L38.9853 93.2161L38.8351 92.9734L38.6854 92.7301L38.2056 92.9702C37.9414 93.1019 37.6693 93.2369 37.6001 93.27L37.4738 93.3292L37.5761 93.063ZM39.9838 93.023C39.5066 92.8981 39.6392 92.6858 40.1942 92.6858H40.7028L40.5142 92.9131C40.4104 93.0385 40.3156 93.1318 40.3039 93.1211C40.2916 93.1105 40.1478 93.0662 39.9838 93.023ZM51.1463 93.0161C50.8998 92.9302 50.855 92.458 51.0936 92.458C51.182 92.458 51.3024 92.5359 51.361 92.6314L51.468 92.8048L51.6267 92.7066L51.7854 92.6084V92.7712C51.7854 92.976 51.4265 93.1132 51.1463 93.0161ZM36.9589 92.6287C36.9589 92.5834 36.9768 92.54 37.0088 92.508C37.0407 92.476 37.0841 92.458 37.1293 92.458C37.1745 92.458 37.2178 92.476 37.2498 92.508C37.2817 92.54 37.2997 92.5834 37.2997 92.6287C37.2997 92.674 37.2817 92.7174 37.2498 92.7494C37.2178 92.7815 37.1745 92.7994 37.1293 92.7994C37.0841 92.7994 37.0407 92.7815 37.0088 92.7494C36.9768 92.7174 36.9589 92.674 36.9589 92.6287ZM42.9662 92.6863C42.7223 92.5876 42.6765 92.2873 42.9055 92.2873C42.9891 92.2873 43.1014 92.4025 43.1558 92.5434C43.2096 92.6842 43.2367 92.7936 43.2165 92.7861C43.1957 92.7786 43.0833 92.7338 42.9662 92.6863ZM61.0733 92.6287L60.9679 92.458H61.149C61.2475 92.458 61.329 92.5348 61.329 92.6287C61.329 92.7226 61.2949 92.7994 61.2539 92.7994C61.2123 92.7994 61.1314 92.7226 61.0733 92.6287ZM66.5598 92.6901C66.4235 92.554 66.5774 92.2873 66.7925 92.2873C66.8804 92.2873 66.9528 92.4025 66.9528 92.5434C66.9528 92.8074 66.7515 92.8827 66.5598 92.6901ZM67.4023 92.5434L67.5003 92.2873L68.0361 92.1416C68.3306 92.0616 68.6368 92.0322 68.7156 92.0765L68.8594 92.1566L68.1431 92.4783C67.2804 92.8651 67.2793 92.8651 67.4029 92.5434H67.4023ZM68.4866 92.6287C68.4866 92.5834 68.5046 92.54 68.5365 92.508C68.5685 92.476 68.6118 92.458 68.657 92.458C68.7022 92.458 68.7456 92.476 68.7775 92.508C68.8095 92.54 68.8275 92.5834 68.8275 92.6287C68.8275 92.674 68.8095 92.7174 68.7775 92.7494C68.7456 92.7815 68.7022 92.7994 68.657 92.7994C68.6118 92.7994 68.5685 92.7815 68.5365 92.7494C68.5046 92.7174 68.4866 92.674 68.4866 92.6287ZM62.0959 92.458L61.9904 92.2873H62.1715C62.2705 92.2873 62.3515 92.3641 62.3515 92.458C62.3515 92.5519 62.3179 92.6287 62.2764 92.6287C62.2349 92.6287 62.1539 92.5519 62.0959 92.458ZM64.6404 92.2446C64.6799 92.0333 64.7177 91.8178 64.7246 91.7666C64.7315 91.7153 65.0095 91.5745 65.3424 91.4539L65.9468 91.2352L66.1939 91.4406C66.5417 91.7292 66.5018 91.9458 66.1007 91.9458H65.7599V91.7751C65.7599 91.7298 65.7419 91.6864 65.71 91.6544C65.678 91.6224 65.6347 91.6044 65.5895 91.6044C65.4957 91.6044 65.4191 91.7025 65.4191 91.8226C65.4191 92.0232 64.8423 92.6287 64.6511 92.6287C64.6058 92.6287 64.601 92.4558 64.6404 92.2446ZM69.3387 92.3358C69.3387 92.0867 69.376 92.076 69.7509 92.22C70.1274 92.3652 70.087 92.5556 69.6796 92.5556H69.3387V92.3358ZM37.9814 92.1918V91.9255L38.1545 92.0328L38.3275 92.14L38.2295 92.299C38.0836 92.5359 37.9814 92.4916 37.9814 92.1923V92.1918ZM41.901 92.2873C41.901 92.242 41.919 92.1986 41.951 92.1665C41.9829 92.1345 42.0263 92.1165 42.0715 92.1165C42.1167 92.1165 42.16 92.1345 42.192 92.1665C42.2239 92.1986 42.2419 92.242 42.2419 92.2873C42.2419 92.3325 42.2239 92.376 42.192 92.408C42.16 92.44 42.1167 92.458 42.0715 92.458C42.0263 92.458 41.9829 92.44 41.951 92.408C41.919 92.376 41.901 92.3325 41.901 92.2873ZM48.2641 92.2126L48.3584 91.9672L48.1166 91.9138L47.8748 91.8605L48.0314 91.6097C48.2231 91.3019 48.3147 91.3814 48.467 91.9885L48.5842 92.458H48.1704L48.2641 92.2126ZM53.9455 92.2184C53.8496 91.9677 53.9593 91.7751 54.1995 91.7751C54.2778 91.7751 54.3417 91.9287 54.3417 92.1165V92.458H54.1894C54.1058 92.458 53.9961 92.3502 53.9455 92.2184ZM60.3917 92.2873L60.2862 92.1165H60.5525C60.6979 92.1165 60.8177 92.1934 60.8177 92.2873C60.8177 92.3812 60.7453 92.458 60.6574 92.458C60.569 92.458 60.4497 92.3812 60.3917 92.2873ZM46.6164 92.0445C46.4257 91.5462 47.076 91.4246 47.3353 91.9095L47.4983 92.2152L47.1026 92.2478L46.7069 92.2809L46.6164 92.0445ZM50.4679 91.9576L50.4929 91.6278L50.6276 91.7116C50.8167 91.829 50.797 92.2873 50.6031 92.2873H50.4434L50.4679 91.9576ZM51.3588 92.052L51.0521 91.8274L51.2363 91.7132L51.4211 91.599L51.5298 91.7751L51.6384 91.9512L51.7971 91.853L51.9558 91.7548V91.9255C51.9558 92.2243 51.6752 92.2835 51.3588 92.052ZM59.0427 92.0066C58.9079 91.655 59.0214 91.5323 59.3622 91.6631L59.6248 91.7644V92.2873H59.1497L59.0427 92.0066ZM52.4671 91.9666C52.4671 91.8615 52.5481 91.7751 52.6476 91.7751H52.8282L52.7345 91.6236L52.6413 91.4726L52.8601 91.2901C52.9805 91.1904 53.2484 91.121 53.455 91.1365L53.8305 91.1648V91.6241L53.659 91.5185L53.487 91.4118L53.3858 91.678L53.2835 91.9437L53.1238 91.845L52.9635 91.7457L52.7153 91.9522L52.4671 92.1582V91.9666ZM54.779 91.9538L54.4493 91.8338L54.6661 91.6999L54.8828 91.566L55.0692 91.7527C55.3211 92.005 55.1826 92.1005 54.779 91.9538ZM41.9863 91.7751C42.0443 91.6812 42.1253 91.6044 42.1668 91.6044C42.2078 91.6044 42.2419 91.6812 42.2419 91.7751C42.2419 91.869 42.1609 91.9458 42.0613 91.9458H41.8808L41.9863 91.7751ZM39.0891 91.6044C39.1472 91.5105 39.2281 91.4336 39.2696 91.4336C39.3106 91.4336 39.3447 91.5105 39.3447 91.6044C39.3447 91.6983 39.2638 91.7751 39.1642 91.7751H38.9837L39.0891 91.6044ZM39.5152 91.5942V91.4134L39.6856 91.519C39.7793 91.5772 39.856 91.6582 39.856 91.6999C39.856 91.7409 39.7793 91.7751 39.6856 91.7751C39.5918 91.7751 39.5152 91.6935 39.5152 91.5942ZM61.2438 91.6044L61.1383 91.4336L61.2768 91.431C61.3524 91.4294 61.2991 91.3541 61.1585 91.2629L60.9029 91.0975L61.1814 91.0949L61.4594 91.0922L61.5489 91.4336L61.6379 91.7751H61.4935C61.4136 91.7751 61.3018 91.6983 61.2438 91.6044ZM51.5245 91.4251L51.4105 91.24L51.5154 91.1349L51.6209 91.0298L51.803 91.2122L51.9857 91.3952L51.812 91.5025L51.6384 91.6097L51.5245 91.4251ZM98.0892 91.4966L97.9816 91.3888L98.1616 91.0516L98.3416 90.7139L98.5189 90.8916L98.6963 91.0693L98.594 91.3365C98.4875 91.615 98.2745 91.6823 98.0892 91.4966ZM97.407 91.034L97.3201 90.8078H97.5598C97.8277 90.8078 97.8793 91.0218 97.6466 91.1664L97.4938 91.2608L97.407 91.034ZM54.2565 90.9215L54.1511 90.7507H54.4174C54.5627 90.7507 54.6826 90.8276 54.6826 90.9215C54.6826 91.0154 54.6101 91.0922 54.5223 91.0922C54.4339 91.0922 54.3146 91.0154 54.2565 90.9215ZM96.9468 90.3565V89.8971H97.2024C97.5204 89.8971 97.5188 90.0582 97.1971 90.4845L96.9468 90.8158V90.3565ZM97.6285 90.0678C97.6285 90.0226 97.6465 89.9791 97.6784 89.9471C97.7104 89.9151 97.7537 89.8971 97.7989 89.8971C97.8441 89.8971 97.8875 89.9151 97.9194 89.9471C97.9514 89.9791 97.9693 90.0226 97.9693 90.0678C97.9693 90.1131 97.9514 90.1566 97.9194 90.1886C97.8875 90.2206 97.8441 90.2386 97.7989 90.2386C97.7537 90.2386 97.7104 90.2206 97.6784 90.1886C97.6465 90.1566 97.6285 90.1131 97.6285 90.0678ZM97.6285 89.3849V89.0435H98.0109L97.8005 88.7895L97.5896 88.5351L97.4389 88.6284L97.2877 88.7223V88.4108L97.9693 88.4284C98.7192 88.4476 98.831 88.5938 98.3102 88.8728L97.9693 89.0552V89.7264H97.6285V89.3849ZM97.948 88.3521C97.9206 88.2008 97.8999 88.0484 97.8857 87.8954L97.8458 87.5161L98.012 87.6185L98.1781 87.7215L98.3299 87.4862L98.4817 87.2509L98.4279 87.6372C98.3794 87.9829 98.0024 88.5447 97.948 88.3521ZM5.00503 86.9948C5.06308 86.9009 5.14403 86.8241 5.18557 86.8241C5.22658 86.8241 5.26066 86.9009 5.26066 86.9948C5.26066 87.0887 5.17971 87.1655 5.08012 87.1655H4.89958L5.00503 86.9948ZM3.55646 84.0925C3.55646 83.7596 3.73753 83.6475 3.94257 83.8529C4.0789 83.9901 3.89996 84.4339 3.70824 84.4339H3.55646V84.0925ZM4.23814 82.8825C4.23814 82.7384 4.34146 82.4797 4.46768 82.3063L4.69721 81.992L4.82929 82.2055L4.96136 82.4199L4.59922 82.7816L4.23814 83.1444V82.8825ZM97.2024 82.2145C97.2605 82.1206 97.3414 82.0438 97.383 82.0438C97.424 82.0438 97.4581 82.1206 97.4581 82.2145C97.4581 82.3084 97.3771 82.3852 97.2775 82.3852H97.097L97.2024 82.2145ZM4.62798 80.3707L4.42134 80.2389L4.522 79.8537L4.62212 79.469L4.80053 79.5283C4.89852 79.5614 5.00663 79.795 5.04018 80.0479L5.10196 80.5073L4.96829 80.5046C4.89479 80.503 4.74141 80.4427 4.62798 80.3707ZM97.3675 79.8158L97.2536 79.6307L97.3585 79.5256L97.4639 79.4205L97.6461 79.603L97.8287 79.786L97.6551 79.8932L97.4815 80.0004L97.3675 79.8158ZM3.83605 79.2765C3.77854 79.0614 3.73061 78.8278 3.72954 78.7573C3.72581 78.5679 4.20086 78.6021 4.32335 78.8L4.42827 78.9702L4.18435 79.3186L3.94044 79.6675L3.83605 79.2765ZM97.8841 78.6293C97.9422 78.5354 98.0231 78.4586 98.0647 78.4586C98.1057 78.4586 98.1398 78.5354 98.1398 78.6293C98.1398 78.7232 98.0588 78.8 97.9592 78.8H97.7787L97.8841 78.6293ZM3.21562 76.8367C3.21562 76.6958 3.24757 76.5806 3.28698 76.5806C3.32586 76.5806 3.47924 76.5342 3.62782 76.4771L3.8973 76.3736V76.8858L3.62782 76.9893C3.24704 77.1355 3.21562 77.1243 3.21562 76.8367ZM4.06772 75.8305C4.06772 75.7937 4.18648 75.7179 4.3324 75.6619L4.59656 75.5605L4.49271 75.7291C4.39258 75.8913 4.06772 75.9692 4.06772 75.8305ZM3.11869 75.5371L3.00153 75.3471L3.23639 75.1983C3.3658 75.1161 3.56977 75.0484 3.69013 75.0468L3.90955 75.0441L3.72688 75.3855C3.52344 75.7665 3.2955 75.823 3.11869 75.5371ZM96.4851 75.0275C96.5969 74.8488 96.7514 74.7026 96.8297 74.7026H96.9719L96.9165 74.9854L96.8616 75.2682L96.5719 75.3103L96.2827 75.353L96.4851 75.0275ZM97.8415 74.7608C97.7244 74.7128 97.6285 74.6039 97.6285 74.5175C97.6285 74.27 98.0769 74.3356 98.3102 74.6173L98.5221 74.8734L98.2883 74.86C98.1356 74.8472 97.9853 74.8141 97.8415 74.7608ZM3.48563 74.3841C3.41213 74.2652 3.39775 74.1216 3.45421 74.0651C3.60652 73.9125 3.77321 74.1371 3.69067 74.3852L3.61877 74.6002L3.48563 74.3841ZM96.3503 74.3612L96.2449 74.1905H96.426C96.5245 74.1905 96.606 74.2673 96.606 74.3612C96.606 74.4551 96.5719 74.5319 96.5309 74.5319C96.4893 74.5319 96.4084 74.4551 96.3503 74.3612ZM97.1172 74.2758C97.1172 74.135 97.1939 74.0197 97.2877 74.0197C97.3814 74.0197 97.4581 73.9045 97.4581 73.7636C97.4581 73.6228 97.5348 73.5076 97.6285 73.5076C97.7222 73.5076 97.7989 73.6228 97.7989 73.7636C97.7989 73.9045 97.7222 74.0197 97.6285 74.0197C97.5348 74.0197 97.4581 74.135 97.4581 74.2758C97.4581 74.4167 97.3814 74.5319 97.2877 74.5319C97.1939 74.5319 97.1172 74.4167 97.1172 74.2758ZM3.8973 74.1798V73.9989L4.06772 74.1046C4.16145 74.1627 4.23814 74.2438 4.23814 74.2854C4.23814 74.3265 4.16145 74.3607 4.06772 74.3607C3.97399 74.3607 3.8973 74.279 3.8973 74.1798ZM3.98251 73.3363L3.87706 73.1656H4.04375C4.13536 73.1656 4.35051 73.1122 4.52253 73.0471L4.83461 72.9287L4.54862 73.2179C4.21737 73.5524 4.1279 73.5711 3.98251 73.3363ZM3.42545 72.4037L3.39083 71.9833L3.62516 72.073L3.85949 72.1636L3.77321 72.4939C3.65339 72.9543 3.46699 72.9068 3.42545 72.4037ZM98.2271 72.1439L98.0961 71.9321L98.3262 71.7902C98.6366 71.5981 98.7171 71.7123 98.52 72.0649L98.3576 72.3557L98.2271 72.1439ZM5.01568 70.2137C5.07959 70.0456 5.17492 69.9506 5.22711 70.0034C5.27984 70.0557 5.22711 70.1934 5.11101 70.3092L4.89905 70.5199L5.01568 70.2137ZM3.89677 70.0931C3.89677 69.9992 3.97772 69.9223 4.07731 69.9223H4.25784L4.1524 70.0931C4.09435 70.187 4.0134 70.2638 3.97186 70.2638C3.93085 70.2638 3.89677 70.187 3.89677 70.0931ZM97.0437 69.9789L96.9346 69.6935L97.1476 69.5617L97.3606 69.4299L97.5694 69.6033L97.7781 69.7767L97.6849 70.02C97.5571 70.3524 97.1774 70.3278 97.0437 69.9789ZM96.6694 68.3058C96.5437 67.9788 96.6944 67.7643 97.1274 67.6507L97.4842 67.5573L97.3856 67.815C97.3313 67.9564 97.2871 68.1351 97.2871 68.2108C97.2871 68.2871 97.1694 68.3949 97.0251 68.4499L96.7631 68.5512L96.6694 68.3058ZM3.66457 67.959L3.56658 67.7029H4.06719V67.959C4.06719 68.0999 3.99849 68.2151 3.91487 68.2151C3.83126 68.2151 3.71889 68.0999 3.66457 67.959ZM97.0315 66.8493L96.9261 66.6786H97.1923C97.3383 66.6786 97.4575 66.7554 97.4575 66.8493C97.4575 66.9432 97.3856 67.02 97.2972 67.02C97.2088 67.02 97.0896 66.9432 97.0315 66.8493ZM4.91929 66.4796C4.91929 66.4012 5.03432 66.3371 5.17492 66.3371C5.31552 66.3371 5.43055 66.4012 5.43055 66.4796C5.43055 66.5575 5.31552 66.6215 5.17492 66.6215C5.03432 66.6215 4.91929 66.5575 4.91929 66.4796ZM4.0102 65.882C3.81422 65.6852 3.88612 65.4835 4.1524 65.4835H4.40803V65.7396C4.40803 66.0064 4.20672 66.0784 4.0102 65.882ZM4.18222 63.6637L4.07038 63.5517L4.25997 63.3223C4.47939 63.0576 4.91929 63.0149 4.91929 63.2588V63.4242L4.66153 63.3249L4.4043 63.2262L4.50975 63.501L4.61466 63.7763H4.45489C4.35391 63.7711 4.25771 63.7311 4.18222 63.6637ZM98.2622 63.6722C98.1946 63.6039 98.1392 63.4076 98.1392 63.2358V62.9226H98.3847C98.7469 62.9226 98.839 63.1739 98.5978 63.5042L98.3853 63.7955L98.2622 63.6722ZM3.72954 61.9778C3.73114 61.8871 3.80357 61.7004 3.89091 61.5617L4.04908 61.3109L4.17636 61.4379L4.30311 61.5649L4.015 61.8535L3.72688 62.1421L3.72954 61.9778ZM4.56034 61.6849C4.54969 61.6614 4.5204 61.384 4.4943 61.0687L4.44637 60.4946L4.77496 60.8238L5.10356 61.153L4.99332 61.44C4.90118 61.6801 4.62585 61.8359 4.56034 61.6849ZM96.0947 61.3792C96.0947 61.3194 96.2731 61.1887 96.4904 61.0895L96.8866 60.9086L97.0677 61.1989L97.2477 61.4886H96.6715C96.3541 61.4886 96.0947 61.4395 96.0947 61.3792ZM3.8973 60.7032C3.8973 60.6579 3.91525 60.6145 3.94721 60.5825C3.97917 60.5505 4.02252 60.5325 4.06772 60.5325C4.11292 60.5325 4.15627 60.5505 4.18823 60.5825C4.22019 60.6145 4.23814 60.6579 4.23814 60.7032C4.23814 60.7485 4.22019 60.7919 4.18823 60.824C4.15627 60.856 4.11292 60.874 4.06772 60.874C4.02252 60.874 3.97917 60.856 3.94721 60.824C3.91525 60.7919 3.8973 60.7485 3.8973 60.7032ZM97.1215 60.5389L96.8696 60.3789L97.2919 60.2199C97.5236 60.1324 97.775 60.0972 97.85 60.1409L97.9858 60.2215L97.7861 60.4621C97.5534 60.7438 97.4613 60.7539 97.1215 60.5389ZM4.2408 59.7216L4.24347 59.2521L4.40856 59.5082C4.62425 59.8421 4.62425 60.1911 4.40856 60.1911H4.23814L4.2408 59.7216ZM3.33598 59.506L3.24757 59.1667H3.72688V59.4127C3.72688 59.5482 3.65871 59.7008 3.57563 59.7525L3.42492 59.8459L3.33598 59.506ZM97.7132 59.5066L97.6067 59.3348L97.8809 59.2297C98.2069 59.1043 98.389 59.2425 98.2324 59.4964C98.0902 59.7258 97.8511 59.7306 97.7132 59.5066ZM3.91487 58.9106C3.91807 58.8167 3.97931 58.5916 4.05015 58.4097L4.17956 58.0794L4.28873 58.2565L4.39738 58.4337L4.1524 58.7575C4.01819 58.9357 3.91115 59.0045 3.91487 58.9106ZM98.5892 56.6912C98.6436 56.5504 98.7437 56.4351 98.8113 56.4351C98.8795 56.4351 98.9349 56.5504 98.9349 56.6912V56.9473H98.4913L98.5892 56.6912ZM3.0452 55.5815C3.0452 55.5362 3.06315 55.4928 3.09511 55.4608C3.12707 55.4288 3.17042 55.4108 3.21562 55.4108C3.26082 55.4108 3.30416 55.4288 3.33612 55.4608C3.36808 55.4928 3.38604 55.5362 3.38604 55.5815C3.38604 55.6268 3.36808 55.6702 3.33612 55.7022C3.30416 55.7342 3.26082 55.7522 3.21562 55.7522C3.17042 55.7522 3.12707 55.7342 3.09511 55.7022C3.06315 55.6702 3.0452 55.6268 3.0452 55.5815ZM97.8836 55.239L97.7771 55.0667L98.0513 54.9615C98.3773 54.8362 98.5594 54.9743 98.4028 55.2283C98.2607 55.4577 98.0215 55.4631 97.8836 55.239ZM2.83217 54.5945C2.41997 54.5075 2.45405 54.3875 3.08354 53.7142L3.63208 53.1284L3.73753 53.544L3.84298 53.9591L3.69812 54.149L3.55326 54.3389L4.02352 54.2536L4.49377 54.1682L4.39471 54.2765C4.34039 54.3363 4.07198 54.4008 3.79824 54.4206C3.52451 54.4408 3.26248 54.5017 3.21562 54.5571C3.16875 54.6121 2.9962 54.6292 2.83217 54.5945ZM97.4581 53.0201C97.4581 52.9748 97.476 52.9314 97.508 52.8994C97.54 52.8674 97.5833 52.8494 97.6285 52.8494C97.6737 52.8494 97.717 52.8674 97.749 52.8994C97.781 52.9314 97.7989 52.9748 97.7989 53.0201C97.7989 53.0654 97.781 53.1088 97.749 53.1408C97.717 53.1728 97.6737 53.1908 97.6285 53.1908C97.5833 53.1908 97.54 53.1728 97.508 53.1408C97.476 53.1088 97.4581 53.0654 97.4581 53.0201ZM96.9468 52.1665C96.9468 52.0726 97.0666 51.9957 97.2126 51.9957H97.4783L97.3729 52.1665C97.3148 52.2604 97.1955 52.3372 97.1071 52.3372C97.0192 52.3372 96.9468 52.2604 96.9468 52.1665ZM97.8841 52.1665C97.8261 52.0726 97.8234 51.9237 97.8777 51.8357L97.9763 51.6756L97.6908 51.5156L97.4054 51.3555L97.5119 51.0781C97.5704 50.9255 97.6967 50.8007 97.7936 50.8007H97.9693V51.132C97.9693 51.3144 98.046 51.5108 98.1398 51.5689C98.2335 51.6271 98.3102 51.8234 98.3102 52.0059V52.3372H98.1499C98.0615 52.3372 97.9422 52.2604 97.8841 52.1665ZM2.36352 51.6548C2.36352 51.6324 2.36792 51.6102 2.37649 51.5895C2.38505 51.5688 2.39761 51.55 2.41343 51.5341C2.42926 51.5183 2.44804 51.5057 2.46872 51.4971C2.4894 51.4885 2.51156 51.4841 2.53394 51.4841C2.62767 51.4841 2.70436 51.3625 2.70436 51.2136V50.9437L2.90141 51.0093C3.00952 51.0456 3.16023 51.244 3.23692 51.45L3.37539 51.8256H2.36352V51.6548ZM96.4009 51.156L96.1357 50.845L96.7173 50.567C97.3931 50.2442 97.4581 50.2341 97.4581 50.448C97.4581 50.536 97.2994 50.6582 97.105 50.7201L96.7519 50.8321L96.8419 51.0669L96.9324 51.3022L96.7993 51.3843C96.7263 51.4297 96.5474 51.3267 96.4009 51.156ZM3.13041 50.289C2.99567 50.0703 3.21881 49.2642 3.4148 49.2642H3.5767L3.45421 49.4616L3.33278 49.659L3.688 49.5661L4.04269 49.4733L3.86162 49.8713C3.76203 50.09 3.57829 50.3088 3.45367 50.3568L3.22627 50.4443L3.13041 50.289ZM97.4581 47.7378C97.4581 47.5553 97.5433 47.3536 97.6477 47.2891L97.8373 47.1717L97.9784 47.4011L98.1201 47.6305L97.939 47.8498C97.6743 48.1688 97.4581 48.1182 97.4581 47.7378ZM96.3717 47.4657L96.0665 47.2427L96.443 47.0405L96.8195 46.8388L96.966 47.0698C97.1684 47.3894 97.1529 47.5068 96.8968 47.6049L96.6768 47.6898L96.3717 47.4657ZM2.10789 46.874L2.00137 46.7017L2.27564 46.5966C2.60157 46.4712 2.78371 46.6094 2.62714 46.8633C2.48494 47.0928 2.24582 47.0981 2.10789 46.874ZM96.7902 45.0681L96.8036 44.741L96.8936 44.9651C96.9426 45.0883 96.9362 45.2356 96.8797 45.2921C96.8233 45.3492 96.7828 45.2484 96.7902 45.0681ZM3.41267 44.7512C3.44515 44.5943 3.54847 44.4705 3.6422 44.4753C3.89517 44.4887 3.84884 44.8707 3.58362 44.9592L3.35408 45.0361L3.41267 44.7512ZM2.70755 44.5111C2.70915 44.4497 2.77679 44.2934 2.8588 44.1638L3.00792 43.9285L3.19698 44.0458C3.48776 44.2256 3.42279 44.4353 3.04573 44.534L2.70436 44.6231L2.70755 44.5111ZM96.1991 42.6779C96.1366 42.4994 96.1025 42.3122 96.0979 42.1231L96.1006 41.8382L96.247 42.0697L96.3935 42.3013L96.5 42.1284L96.6065 41.9555L96.9474 42.0446L97.2882 42.1343V42.3359C97.2882 42.6294 96.925 42.9479 96.5905 42.9479H96.3024L96.1991 42.6779ZM96.6065 41.2588C96.6065 41.175 96.7178 41.0635 96.8536 41.0118L97.1002 40.9168L97.0054 41.1638C96.9021 41.4338 96.6065 41.5042 96.6065 41.2588ZM96.95 38.9785L96.9527 38.5944L97.1178 38.8505C97.3313 39.1813 97.3313 39.3627 97.1178 39.3627H96.9474L96.95 38.9785ZM95.9248 36.6209V36.4401L96.0952 36.5457C96.189 36.6039 96.2657 36.685 96.2657 36.7266C96.2657 36.7677 96.189 36.8018 96.0952 36.8018C96.0015 36.8018 95.9248 36.7202 95.9248 36.6209ZM2.30653 36.3873L2.21333 36.144L2.46311 35.9359C2.78424 35.6691 2.93655 35.8255 2.7933 36.2768C2.66335 36.6876 2.44074 36.7378 2.30653 36.3873ZM96.0095 34.5824L96.1149 34.4117H95.8487C95.5339 34.4117 95.5318 34.3983 95.7635 33.7885L95.944 33.3137L96.1016 33.5639C96.189 33.7015 96.2614 33.9912 96.2625 34.2084L96.2651 34.6026L96.4238 34.5045L96.5825 34.4063L96.6891 34.5797L96.7966 34.7531H95.9041L96.0095 34.5824ZM2.3976 33.6946L2.1931 33.4897V32.5337H2.70436V33.3452L3.0878 33.6135L3.47125 33.8813L3.03668 33.8904L2.6021 33.8995L2.3976 33.6946ZM96.0095 28.7777C96.0676 28.6838 96.1869 28.607 96.2753 28.607C96.3631 28.607 96.4356 28.6838 96.4356 28.7777C96.4356 28.8716 96.3157 28.9485 96.1698 28.9485H95.9041L96.0095 28.7777ZM95.5835 28.0948C95.724 28.0041 95.9158 27.9295 96.0095 27.9295H96.1799L95.9243 28.0948C95.7837 28.1855 95.592 28.2602 95.4982 28.2602H95.3278L95.5835 28.0948ZM96.9468 26.729V26.3625L97.2451 26.4201L97.5433 26.4778V26.9803L97.2451 27.038L96.9468 27.0956V26.729ZM2.87478 25.534V25.1925H3.35408L3.26515 25.534C3.21615 25.7218 3.10804 25.8754 3.02549 25.8754C2.94241 25.8754 2.87478 25.7218 2.87478 25.534ZM2.53394 24.4995V24.3186L2.70436 24.4243C2.79809 24.4824 2.87478 24.5635 2.87478 24.6051C2.87478 24.6462 2.79809 24.6804 2.70436 24.6804C2.61063 24.6804 2.53394 24.5987 2.53394 24.4995ZM2.96638 24.3496L2.87691 24.2039L3.12615 24.1079L3.37539 24.0119L3.46486 24.1575L3.55433 24.3032L3.30509 24.3992L3.05585 24.4947L2.96638 24.3496ZM97.4581 23.7515C97.4581 23.616 97.5348 23.4581 97.6285 23.3999L97.7989 23.2943V23.9975H97.6285C97.5348 23.9975 97.4581 23.8865 97.4581 23.7515ZM2.09777 22.1029L1.9822 21.9162L2.25381 21.6441C2.58719 21.3101 2.77466 21.4579 2.62341 21.936C2.50039 22.3244 2.27777 22.3948 2.09777 22.1029ZM97.8378 20.551C97.8621 20.4898 97.8985 20.4343 97.945 20.3878C97.9914 20.3413 98.0468 20.3048 98.1078 20.2805L98.3102 20.2132L98.2069 20.4832C98.1499 20.632 98.0285 20.7537 97.9369 20.7537H97.7707L97.8378 20.551ZM96.2651 20.337C96.2651 20.1903 96.3418 20.0708 96.4356 20.0708C96.5293 20.0708 96.606 20.1428 96.606 20.2314C96.606 20.3199 96.5293 20.4394 96.4356 20.4976L96.2651 20.6032V20.337ZM2.95999 17.6806C3.01804 17.5867 3.18047 17.5099 3.32107 17.5099H3.5767L3.47125 17.6806C3.4132 17.7745 3.25077 17.8514 3.11017 17.8514H2.85454L2.95999 17.6806ZM96.1735 17.3189L96.0532 16.9385L96.3269 16.7379L96.6007 16.5373L96.4755 16.3986L96.3503 16.2599L96.5485 16.3735L96.7466 16.4872L96.7189 17.0276L96.6912 17.5675L96.4925 17.6332L96.2939 17.6993L96.1735 17.3189ZM2.61915 16.3149L2.5137 16.1441H3.06544L2.95999 16.3149C2.90194 16.4087 2.82525 16.4856 2.78957 16.4856C2.75389 16.4856 2.6772 16.4087 2.61915 16.3149ZM95.5057 16.3266L95.4077 16.1676L95.8167 15.7253L96.2257 15.283L96.3306 15.5567C96.4861 15.9627 96.4622 16.0198 96.1799 15.9115L95.9243 15.8133L95.9041 16.0214C95.8934 16.1361 95.8934 16.2871 95.9041 16.3575C95.9328 16.5405 95.6223 16.516 95.5057 16.3266ZM2.98875 15.8598C2.9259 15.7968 2.87478 15.689 2.87478 15.6197V15.4932L3.21828 15.5834C3.40734 15.6325 3.60332 15.7408 3.65445 15.8235L3.74712 15.9734H3.42438C3.24704 15.9734 3.05159 15.9222 2.98875 15.8598ZM1.51141 15.4612C1.51141 15.3673 1.62645 15.2905 1.76705 15.2905C1.90764 15.2905 2.02268 15.3673 2.02268 15.4612C2.02268 15.5551 1.90764 15.632 1.76705 15.632C1.62645 15.632 1.51141 15.5551 1.51141 15.4612ZM-0.959681 11.7053L-1.06513 11.5346H-0.884057C-0.785 11.5346 -0.70405 11.6114 -0.70405 11.7053C-0.70405 11.7992 -0.738134 11.876 -0.779142 11.876C-0.820682 11.876 -0.901631 11.7992 -0.959681 11.7053ZM3.42545 11.5346C3.62516 11.2145 3.8973 11.0736 3.8973 11.2907C3.8973 11.4183 3.43929 11.876 3.31148 11.876C3.25716 11.876 3.30828 11.7224 3.42545 11.5346ZM95.8503 11.5522L95.5206 11.4225L95.7033 11.31L95.8854 11.1968L96.0963 11.4513C96.3296 11.733 96.3205 11.7368 95.8503 11.5522ZM3.44782 10.4249L3.54581 10.1688H3.0452V9.63365L3.39296 9.74409L3.74019 9.85453L3.63688 9.44265L3.53356 9.03078H3.98251L4.00647 9.41811L4.03044 9.80491L3.80676 9.89134L3.58309 9.9767L3.67469 10.3288L3.76682 10.6809H3.34982L3.44782 10.4249ZM3.98251 10.3395C4.04056 10.2456 4.12151 10.1688 4.16305 10.1688C4.20406 10.1688 4.23814 10.2456 4.23814 10.3395C4.23814 10.4334 4.15719 10.5102 4.0576 10.5102H3.87706L3.98251 10.3395ZM4.34146 9.72808C4.20672 9.37543 4.21098 9.31514 4.37235 9.31514C4.44584 9.31514 4.51827 9.4688 4.53212 9.65659C4.563 10.0674 4.48312 10.0967 4.34146 9.72808ZM1.7745 9.66833L1.67651 9.50934L1.84959 9.40264L2.02268 9.29487L2.19576 9.40211L2.36884 9.50934L2.27085 9.66833C2.21759 9.75583 2.10576 9.82732 2.02268 9.82732C1.94013 9.82732 1.82829 9.75583 1.7745 9.66833ZM94.9018 9.65659C94.9018 9.63417 94.9062 9.61197 94.9147 9.59126C94.9233 9.57055 94.9359 9.55173 94.9517 9.53587C94.9675 9.52002 94.9863 9.50744 95.007 9.49887C95.0277 9.49028 95.0498 9.48587 95.0722 9.48587C95.0946 9.48587 95.1167 9.49028 95.1374 9.49887C95.1581 9.50744 95.1769 9.52002 95.1927 9.53587C95.2085 9.55173 95.2211 9.57055 95.2296 9.59126C95.2382 9.61197 95.2426 9.63417 95.2426 9.65659C95.2426 9.70187 95.2247 9.7453 95.1927 9.77731C95.1607 9.80933 95.1174 9.82732 95.0722 9.82732C95.027 9.82732 94.9837 9.80933 94.9517 9.77731C94.9197 9.7453 94.9018 9.70187 94.9018 9.65659ZM3.72688 8.2033C3.72688 8.15529 3.82274 7.96055 3.9399 7.77116L4.15293 7.42651L3.94896 7.29953L3.74499 7.17202L3.89197 6.93407L4.03843 6.69612L4.48951 6.99222L4.94059 7.28779L4.88734 7.66125L4.83461 8.03471L4.54862 8.03684C4.39099 8.03791 4.20565 8.09553 4.13642 8.16489C3.99263 8.30894 3.72688 8.33401 3.72688 8.2033ZM4.86124 6.95435C4.70573 6.78255 4.57898 6.50406 4.57898 6.33547V6.02977L4.81597 6.22663C5.00556 6.38455 5.31339 7.26645 5.17812 7.26645C5.15894 7.26645 5.01622 7.12614 4.86124 6.95435ZM4.16731 6.26504C4.09382 6.14607 4.07944 6.00256 4.13589 5.946C4.2882 5.79342 4.45489 6.01803 4.37235 6.26611L4.30045 6.48112L4.16731 6.26504ZM95.6687 6.2421L95.5632 6.07138L95.8721 6.07405C96.0415 6.07565 96.295 6.15087 96.4356 6.2421L96.6912 6.40749L96.2327 6.41016L95.7741 6.41283L95.6687 6.2421ZM95.0722 5.55921C95.0722 5.51393 95.0901 5.4705 95.1221 5.43849C95.1541 5.40647 95.1974 5.38848 95.2426 5.38848C95.2878 5.38848 95.3312 5.40647 95.3631 5.43849C95.3951 5.4705 95.413 5.51393 95.413 5.55921C95.413 5.60448 95.3951 5.64791 95.3631 5.67993C95.3312 5.71194 95.2878 5.72993 95.2426 5.72993C95.1974 5.72993 95.1541 5.71194 95.1221 5.67993C95.0901 5.64791 95.0722 5.60448 95.0722 5.55921ZM95.2426 4.27877V4.02268H95.4881C95.6234 4.02268 95.7757 4.09151 95.8279 4.17527L95.9222 4.32839L95.6538 4.43136C95.274 4.57754 95.2426 4.5658 95.2426 4.27877ZM94.5039 3.73832C94.4416 3.67537 94.3905 3.48597 94.3905 3.31685V3.00901L94.6461 3.10717L94.9018 3.20534V3.52865C94.9018 3.85303 94.7164 3.95066 94.5039 3.73832ZM20.6107 3.19147L20.4403 2.87243L20.5479 2.76466C20.6158 2.70158 20.7032 2.66357 20.7955 2.65689H20.9356L20.9005 3.0837C20.8579 3.59481 20.8312 3.60494 20.6107 3.19147ZM19.4817 3.0965L19.1499 2.85215L19.4599 2.73158L19.7693 2.61154L19.9626 2.80521L20.1554 2.99834L19.9844 3.1696L19.8135 3.34085L19.4817 3.0965ZM23.7007 2.68837L23.755 2.40454L24.0516 2.34745L24.3477 2.29036V2.7876L23.9968 2.8799L23.6464 2.97166L23.7007 2.68837ZM44.2885 2.74438L44.0782 2.49043L44.3641 2.37999L44.6507 2.27009L44.8291 2.44882L45.007 2.62701L44.8925 2.81267C44.7353 3.06769 44.5378 3.04529 44.2885 2.74438ZM58.091 2.82761C58.091 2.73371 58.206 2.65689 58.3466 2.65689C58.4872 2.65689 58.6022 2.73371 58.6022 2.82761C58.6022 2.92151 58.4872 2.99834 58.3466 2.99834C58.206 2.99834 58.091 2.92151 58.091 2.82761ZM67.504 2.79293C67.5413 2.6809 67.7772 2.53525 68.0281 2.46749L68.485 2.34532L68.5883 2.51231C68.7225 2.72998 68.6789 2.75772 68.0041 2.88683L67.4369 2.99514L67.504 2.79293ZM86.8169 2.84362L86.703 2.65956L86.8574 2.38373L87.0118 2.10737L87.1279 2.41041L87.244 2.71397L87.0875 2.87083L86.9304 3.02821L86.8169 2.84362ZM48.4031 2.37999L48.0037 1.99373L48.1155 1.8134C48.295 1.52157 48.5203 1.60266 48.8244 2.06789L49.1093 2.50377L48.9564 2.63501L48.8031 2.76626L48.4031 2.37999ZM55.2732 2.5043L55.376 2.18046L55.091 1.89556L54.8067 1.61067L54.9888 1.42821L55.1709 1.24574L55.442 1.34978L55.7136 1.45435L55.6359 1.88223L55.5581 2.3101L55.7168 2.40827C55.8041 2.46162 55.8755 2.579 55.8755 2.66703V2.82761H55.1709L55.2732 2.5043ZM88.5291 2.55765C88.3694 2.13991 88.404 2.09883 88.6814 2.37626C88.9711 2.66649 89.0079 2.82761 88.7847 2.82761C88.7011 2.82761 88.5861 2.70597 88.5291 2.55765ZM83.9214 2.50537L83.8282 2.35439L84.0668 2.15592L84.3054 1.95745L84.4156 2.13618L84.5264 2.31544L84.4209 2.48616C84.2904 2.69744 84.046 2.70704 83.9214 2.50537ZM49.7404 2.26262V2.014L50.0913 1.92171L50.4418 1.82994L50.3874 2.11324L50.3331 2.39707L50.0365 2.45415L49.7404 2.51124V2.26262ZM56.0885 2.27276C56.1274 2.15539 56.3042 2.03108 56.4805 1.99693L56.8022 1.93451L56.5732 2.21034C56.448 2.36186 56.2712 2.48616 56.1812 2.48616H56.0177L56.0885 2.27276ZM59.9656 2.31544C59.9656 2.22154 60.0466 2.14472 60.1461 2.14472H60.3267L60.2212 2.31544C60.1632 2.40934 60.0822 2.48616 60.0407 2.48616C59.9997 2.48616 59.9656 2.40934 59.9656 2.31544ZM62.0085 2.05722L61.6059 1.62827L61.7891 1.44474L61.9723 1.26122L62.3323 1.57065L62.6923 1.87903V2.18313C62.6923 2.6014 62.4825 2.56246 62.0085 2.05722ZM64.8226 2.31544C64.8806 2.22154 64.9616 2.14472 65.0031 2.14472C65.0441 2.14472 65.0782 2.22154 65.0782 2.31544C65.0782 2.40934 64.9973 2.48616 64.8977 2.48616H64.7171L64.8226 2.31544ZM70.9593 2.31811L70.8528 2.14472L70.9577 1.97399C71.0158 1.88009 71.1351 1.80327 71.2235 1.80327C71.4312 1.80327 71.4322 2.26529 71.2251 2.39333L71.0664 2.4915L70.9593 2.31811ZM74.0349 2.33091C73.9816 2.24555 73.988 2.04708 74.0487 1.8897L74.1579 1.60373L74.3017 1.83154C74.3816 1.95692 74.4471 2.15539 74.4487 2.27276C74.4519 2.52031 74.1755 2.55872 74.0349 2.33091ZM54.1713 2.14472L53.9157 1.97933L54.2991 1.97666L54.6826 1.97399V2.14472C54.6826 2.35812 54.5015 2.35812 54.1713 2.14472ZM58.9788 2.05295L58.7593 1.80327H58.9154C59.0017 1.80327 59.1673 1.91851 59.2839 2.05935L59.4959 2.31544L59.3473 2.30904C59.2658 2.3053 59.0997 2.19006 58.9788 2.05295ZM75.9138 2.03374C75.7726 1.66562 75.8498 1.61227 76.1108 1.89663L76.3228 2.12658L76.1715 2.21994L76.0208 2.31331L75.9138 2.03374ZM78.1686 2.19913C78.2916 2.14952 78.4386 2.15539 78.4951 2.21247C78.5521 2.26902 78.4514 2.30957 78.2714 2.3021L77.945 2.28823L78.1686 2.19913ZM82.8035 2.06149L82.5932 1.80753L82.885 1.6955L83.1774 1.58292L83.3276 1.82087C83.6562 2.34051 83.2056 2.54698 82.8035 2.06149ZM80.2456 1.82994C80.2456 1.74991 80.399 1.54665 80.5865 1.37645L80.9273 1.06702V1.25268C80.9273 1.43034 80.4693 1.97399 80.3186 1.97399C80.2786 1.97399 80.2456 1.9089 80.2456 1.82994ZM62.8627 1.55732C62.8627 1.4218 62.9394 1.26388 63.0332 1.20573L63.2036 1.10009V1.80327H63.0332C62.9394 1.80327 62.8627 1.6923 62.8627 1.55732ZM57.7927 1.50983C57.6756 1.46769 57.5797 1.36312 57.5797 1.27669V1.12037H58.2614V1.28096C58.2614 1.4997 58.0505 1.60213 57.7927 1.50983Z\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_31_8\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 100,\n    height: 96,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrowStampSvg);\nexport default __webpack_public_path__ + \"static/media/crow_stamp_svg.bd022077a2d09e970ce91fb536bc1518.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBarsSolid(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 7.5H25M5 15H25M5 22.5H25\",\n    stroke: \"#F0E6C3\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBarsSolid);\nexport default __webpack_public_path__ + \"static/media/bars-solid.fd73f775f0335897379ac27c2e130737.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgXBarsSolid(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 5L25 25M25 5L5 25\",\n    stroke: \"#F0E6C3\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgXBarsSolid);\nexport default __webpack_public_path__ + \"static/media/x-bars-solid.573dcfe0d11ebb6990a692e6ad2b4835.svg\";\nexport { ForwardRef as ReactComponent };","function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from\"react\";function SvgTomStampBwVector(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({xmlns:\"http://www.w3.org/2000/svg\",width:352,height:480,ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,/*#__PURE__*/React.createElement(\"path\",{style:{fill:\"#535043\",strokeWidth:0.32},d:\"M80.282 480.742c-.621-.123-.645-.258-.398-2.276.144-1.18.317-3.442.385-5.026.203-4.766.555-7.2 1.04-7.2.24 0 .435-.144.435-.32 0-.176-.155-.32-.345-.32-.205 0-.31-.554-.26-1.373.1-1.605-.157-2.147-1.014-2.147-.342 0-.621-.216-.621-.48 0-.597-.602-.632-.826-.048-.15.391-.493.427-2.489.258-.373-.03-.529-.22-.419-.506.216-.561-.583-1.282-1.08-.975-.2.123-.294.484-.211.802.143.546-.197.572-6.037.467-3.403-.06-6.59-.003-7.082.129-.728.194-1.007.095-1.5-.53-.466-.593-.666-.673-.868-.346-.208.338-.343.343-.66.027-.611-.612-1.617-.502-1.482.162.07.342.39.55.823.535.391-.014.71.094.71.24s-.035.275-.08.287c-.043.011-1.375.204-2.96.428-1.583.224-3.155.527-3.492.673-.435.19-.546.158-.381-.108.14-.227.027-.375-.286-.375-.285 0-.44.126-.345.28.095.154-.509.45-1.341.66-.833.208-2.035.514-2.672.68-1.608.418-1.785.387-1.975-.34-.31-1.187-2.147-.585-2.147.704 0 .401-.243.576-.8.576-.44 0-.764-.108-.72-.24.044-.132-.064-.24-.24-.24s-.284.108-.24.24c.044.132-.048.24-.203.24-.156 0-.374-.324-.485-.72-.195-.69-.222-.695-.656-.128-.403.526-.59.549-1.675.2-2.355-.754-5.301-3.408-7.416-6.68-.722-1.117-1.235-2.16-1.14-2.314.097-.155-.043-.366-.31-.468-.266-.103-.654-.714-.86-1.358-.207-.644-.552-1.388-.766-1.652-.501-.618-2.73-5.257-2.73-5.682 0-.179-.215-.737-.478-1.241-.608-1.167-.609-1.717-.002-1.717.264 0 .48-.159.48-.354 0-.195-.21-.273-.47-.174-.557.214-.661.068-.966-1.352-.163-.757-.126-1.014.122-.86.195.12.354.066.354-.12 0-.187-.216-.34-.48-.34s-.48-.152-.48-.339c0-.186.118-.266.263-.176.144.089.2-.261.124-.778-.076-.517-.266-.861-.422-.765-.157.097-.294-.444-.306-1.203-.012-.758-.095-2.603-.186-4.099-.205-3.389.133-7.092.576-6.302.382.683 1.508.707 1.765.038.107-.278-.035-.734-.314-1.013-.425-.425-.59-.439-1.017-.085-.765.635-1.208-.015-.95-1.393.138-.732.352-1.084.583-.955.216.121.202.03-.036-.227-.403-.435-.562-2.914-.209-3.267.105-.105.236-1.029.291-2.053.055-1.025.194-2.727.308-3.783.114-1.056.228-3.967.252-6.468.037-3.723.13-4.566.515-4.64.259-.05.494-.416.524-.812.062-.85-.368-.968-.581-.16-.083.312-.135.195-.119-.265.034-.925.86-1.98.86-1.097 0 .276.215.585.478.686.263.1.398.312.3.47-.097.157-.047.286.111.286s.46-.377.67-.838c.314-.69.304-.808-.058-.67-.95.365-2.1-1.393-1.945-2.974.258-2.639.467-3.266 1.038-3.117.399.104.571-.066.616-.608.041-.496-.108-.753-.438-.753-.394 0-.474-.288-.38-1.36.095-1.066.239-1.34.664-1.266.3.052.543-.056.543-.24 0-.183-.18-.298-.4-.254-.262.053-.42-.386-.46-1.28-.034-.748.046-1.36.177-1.36s.253-.612.27-1.36c.054-2.246.042-2.216.813-2.024.396.098.54.096.32-.005-.452-.208-.555-2.37-.113-2.37.16 0 .178-.479.04-1.088-.134-.598-.121-1.282.03-1.52.172-.272.275-.296.279-.063.003.212.278.299.644.203.352-.092.64-.303.64-.469 0-.166-.144-.212-.32-.104-.61.378-.861-.143-.651-1.348.119-.683.377-1.177.591-1.132.21.044.38-.144.38-.418 0-.275-.118-.426-.263-.336-.566.35-.18-1.277.423-1.783.514-.43.561-.618.24-.944-.463-.47-.545-1.366-.1-1.091.183.113.192-.189.022-.781-.175-.613-.16-.967.04-.967.176 0 .289-.252.253-.56-.036-.308.043-1.161.177-1.897.178-.98.389-1.326.79-1.296.372.028.505.253.418.707-.097.51.047.68.612.722.528.04.614-.022.298-.217-.253-.156-.368-.553-.27-.928.137-.524.002-.674-.674-.753l-.846-.098.672-.671c.495-.495.636-.959.537-1.76-.102-.83-.054-.974.204-.609.296.422.477.256.397-.366-.015-.113.384-.376.886-.583.67-.278.87-.541.75-.994-.22-.846-.97-.777-1.14.103-.127.662-.142.654-.182-.098-.024-.45.156-1.093.4-1.427.245-.334.374-.794.287-1.021-.088-.228 0-.414.195-.414s.327-.108.293-.24c-.033-.132.05-.708.186-1.28.245-1.034 1.155-1.475 1.155-.56 0 .264.16.48.355.48.194 0 .266-.227.16-.506-.107-.278-.195-.647-.195-.819 0-.172-.144-.223-.32-.115-.504.312-.373-.701.16-1.234.264-.264.48-.621.48-.794 0-.173.252-.267.56-.208.308.06.664.118.79.132.127.013.153.226.059.472-.095.246-.018.543.17.659.188.116.341-.013.341-.288 0-.274.144-.499.32-.499.42 0 .414-.864-.008-1.125-.18-.111-.288-.084-.24.062.092.273-.16.423-.712.423-.484 0-.383-1.047.178-1.848.526-.75.22-.981-.434-.328-.298.299-.383.281-.379-.08.003-.255.14-.678.307-.94.354-.56-.874-2.01-2.358-2.785-.735-.383-.834-.547-.48-.792.333-.23.283-.263-.197-.13-.665.184-1.925-.884-2.648-2.245-.495-.93-.141-2.052.648-2.052.518 0 .57-.087.264-.454-.297-.358-.21-.784.407-2 .43-.85 1.087-1.82 1.458-2.155.846-.765.858-1.525.034-2.27-.863-.782-.839-2.271.044-2.744.513-.275.58-.43.268-.621-.338-.21-.338-.439-.003-1.25.227-.548.574-.976.772-.952.85.1 1.159-.072 1.159-.647 0-.337-.174-.671-.387-.742-.254-.085-.138-.394.34-.907.766-.82 1.967-3.274 1.967-4.018 0-.242.108-.44.24-.441.132 0 .264-1.358.293-3.016.056-3.2 1.259-8.092 2.267-9.223.274-.308.399-.56.276-.56-.27 0 1.289-2.782 2.06-3.68 1.152-1.338 1.826-3.189 1.839-5.051.02-2.833.35-4.382.89-4.175.25.096.455.015.455-.18a.356.356 0 0 0-.356-.354c-.571 0-.068-2.437 1.331-6.443.696-1.992 1.265-3.67 1.265-3.728 0-.059.129-.027.286.07.389.24.701-.654.454-1.298-.118-.308.007-.636.309-.804.286-.16.497-.673.483-1.174-.014-.489.2-1.387.475-1.996l1.52-3.347c.56-1.232 1.144-2.564 1.298-2.96.302-.78 1.098-.965 1.37-.32.12.287.268.241.522-.16.195-.308.555-.56.8-.56.56 0 .906-.533.633-.975-.141-.23-.35-.217-.659.039-.347.288-.451.284-.451-.019 0-.218-.214-.311-.48-.209-.33.126-.48-.02-.48-.465 0-.409.136-.564.37-.42.226.14.282.088.144-.135-.124-.2.055-1.339.398-2.53.342-1.191.714-2.572.827-3.068.24-1.063 1.031-.984.875.087-.072.493.03.68.32.583a.732.732 0 0 0 .457-.595c.017-.25.138-.698.268-.997.322-.74-.082-1.305-.8-1.118-.526.138-.485-.119.387-2.452a111.484 111.484 0 0 0 1.534-4.376c.9-2.848 2.691-6.41 3.14-6.24.22.082.4.01.4-.16s-.148-.31-.328-.31c-.187 0-.115-.413.168-.96.571-1.105.704-1.145 1.475-.448.98.887 1.394.16.462-.814l-.836-.872 1.162-2.533c.639-1.393 1.31-2.846 1.49-3.23.267-.563.437-.63.886-.349a1.32 1.32 0 0 0 1.158.085c.332-.145.733-.276.891-.291.158-.015.338-.352.398-.748.083-.542-.047-.72-.528-.72-.351 0-.638-.149-.638-.33 0-.225-.206-.222-.64.01-.352.189-.64.276-.64.195 0-.255 3.234-5.446 3.76-6.035.274-.308.675-.56.89-.56.214 0 .478-.396.586-.88.242-1.085 1.279-2.342 2.037-2.47.312-.052.523-.28.469-.506-.078-.326.009-.323.416.015.434.36.599.34 1.058-.126.512-.52.512-.576-.003-.958-.496-.369-.412-.538.904-1.82.798-.778 2.24-2.457 3.203-3.732 1.569-2.075 3-3.387 3-2.75 0 .13.173.063.384-.149.211-.21.68-.379 1.04-.373.623.01.627.032.08.447-.439.332-.477.484-.16.63.328.152.331.232.016.379-.632.295-.465.78.232.673.99-.151 1.183-.551.506-1.046-.529-.387-.542-.454-.089-.454.34 0 .465-.172.347-.48-.13-.34.028-.48.542-.48.802 0 3.978-.862 4.87-1.322.442-.228.632-.132.86.435.285.712.292.713.312.044.023-.792 1.453-1.85 2.143-1.585.259.1.391.053.294-.104-.097-.157.256-.436.784-.62.527-.184.96-.266.96-.183 0 .084.412-.062.916-.322.504-.261 1.26-.54 1.68-.62.42-.079 1.14-.29 1.602-.47 1.67-.649 6.731-1.406 8.02-1.2.71.113 1.457.072 1.657-.091.2-.164 1.228-.342 2.284-.396 1.056-.054 2.072-.207 2.257-.339.299-.213 2.143-.394 7.33-.719 1.081-.067 1.738.051 2.059.372.415.415.521.402.893-.105.382-.523.421-.526.421-.036 0 .298.216.541.48.541s.48-.216.48-.48c0-.561.436-.611 1.301-.148.412.22.817.225 1.21.015.396-.212.701-.206.924.016.23.23.4.226.548-.016.152-.244.401-.25.837-.016.388.207.62.215.62.02 0-.17.288-.29.64-.263.352.027.64.152.64.278 0 .126.828-.191 1.84-.704 1.012-.513 2.032-.935 2.266-.937.497-.005 3.655-2.05 4.224-2.736.214-.258.597-.469.852-.469s.69-.226.967-.503c.323-.323.782-.433 1.284-.307.45.113.703.07.596-.103-.208-.337 1.267-.827 2.15-.714.319.04.783-.095 1.031-.3.603-.501 2.672-.953 2.873-.628.21.34 1.11.2 1.383-.215.118-.18.527-.405.91-.501.539-.136.66-.057.534.348-.14.45-.097.444.3-.037.504-.612 1.365-.782 1.005-.198-.136.22-.05.303.22.212.263-.088.405-.482.348-.96-.116-.961 1.413-5.83 2.19-6.974.299-.44.644-1.124.767-1.52.123-.396.466-.73.762-.745.296-.014.38-.09.185-.171-.195-.08-.29-.476-.214-.879.077-.403-.023-1.586-.222-2.628-.83-4.337-1.29-7.56-1.117-7.839.101-.164.036-.298-.145-.298-.18 0-.246-.216-.145-.48.102-.264.027-.48-.166-.48s-.44-.564-.55-1.254c-.156-.971-.374-1.298-.965-1.446-.42-.106-.763-.326-.763-.49 0-.163-.36-.685-.8-1.16-.44-.475-.8-.972-.8-1.104 0-.133-.515-.756-1.144-1.386-.883-.882-1.097-1.31-.939-1.872.129-.457.101-.579-.075-.327-.394.563-2.05-1.21-2.114-2.26-.026-.44-.157-.732-.29-.65-.319.197-.922-.46-1.518-1.65-.264-.529-.684-1.12-.933-1.315-.25-.196-.465-.946-.48-1.68-.017-.864-.172-1.325-.446-1.325-.242 0-.323.168-.193.4.17.299.128.31-.163.041-.508-.467-.66-1.465-.292-1.928.196-.248.109-.351-.27-.32-.322.027-.613-.221-.688-.586-.071-.347-.365-.81-.652-1.03-.472-.358-.46-.399.117-.412.515-.012.549-.073.175-.31-.255-.161-.58-.222-.72-.136-.14.087-.255.005-.255-.18a.35.35 0 0 1 .358-.34c.197 0-.033-.513-.512-1.14-.479-.628-.789-1.223-.69-1.323.1-.1.038-.45-.138-.779-.227-.423-.212-.598.05-.598.273 0 .269-.122-.016-.466-.213-.256-.292-.62-.175-.809.117-.188.267-.774.333-1.302.11-.861.072-.91-.367-.471-.743.743-.9.584-.31-.315.372-.568.406-.779.117-.72-.233.047-.37-.157-.317-.471.062-.371-.06-.497-.368-.379-.253.098-.555.023-.671-.165-.117-.188-.06-.342.127-.342s.34-.224.34-.498c0-.275-.135-.416-.299-.315-.164.101-.29-.214-.28-.701.033-1.574-.053-1.951-.562-2.46-.526-.526-.334-1.303.234-.952.21.129.201-.037-.022-.454-.193-.362-.352-.955-.352-1.319 0-.363-.204-.66-.454-.66-.362 0-.393-.221-.155-1.086.191-.692.185-1.387-.018-1.92-.309-.813-.7-.966-2.166-.848-.635.051-2.047-.56-3.222-1.395-.34-.242-.34-.349 0-.594.293-.21.24-.24-.184-.103-1.564.51-3.526-3.828-2.196-4.855.301-.232.358-.4.136-.4-.21 0-.38-.144-.38-.32 0-.176.224-.32.498-.32s.417-.132.317-.294c-.1-.162.014-.49.253-.729.352-.352.357-.507.026-.816-.323-.303-.451-.185-.617.569-.246 1.12-.772 1.261-.857.23-.144-1.76-.187-2.03-.4-2.527-.123-.29-.185-.721-.138-.96.047-.238-.104-1.619-.337-3.068-.232-1.45-.343-2.94-.246-3.312.097-.372.09-.588-.018-.481-.287.287-.962-1.858-1.502-4.772l-.622-3.36c-.082-.44-.317-1.561-.522-2.492-.206-.932-.291-1.911-.189-2.177.118-.307.054-.402-.175-.261-.261.162-.313-.6-.187-2.784.166-2.885.807-5.02 1.358-4.52.142.129.169-.018.058-.326-.11-.308-.061-.56.11-.56.274 0 .452.695.347 1.36-.054.343.529.298.748-.057.102-.164.023-.398-.175-.52-.257-.16-.242-.295.054-.478.335-.207.329-.359-.033-.795-.39-.469-.368-.597.163-.986.61-.446 1.323-.378 2.606.25.488.238.631.528.505 1.02-.15.583-.104.627.31.288.4-.328.595-.28 1.089.266.565.625.568.684.048.975-.304.17-.548.554-.542.853.009.468.088.451.566-.12.306-.366.72-.61.92-.543.744.248 1.026-4.03.327-4.953-.199-.263-.177-.4.064-.4.239 0 .192-.266-.132-.76-.459-.7-.453-.78.064-.978.417-.16.459-.28.161-.464-.317-.196-.326-1.043-.046-4.058.195-2.095.275-4.208.178-4.695-.097-.487-.036-.885.135-.885.172 0 .312-.216.312-.48s-.122-.48-.272-.48c-.15 0-.244-.396-.21-.88.101-1.434.155-1.543.517-1.04.287.4.314.382.155-.106-.104-.322-.19-.718-.19-.88 0-.161-.202-.294-.45-.294-.337 0-.407-.31-.283-1.238.1-.74.023-1.327-.19-1.46-.386-.238-.4-.202-.48 1.32-.03.563-.16 1.127-.287 1.255-.127.127.007.495.3.817.498.552.487.586-.194.586-.49 0-.668-.145-.552-.448.095-.247.082-.54-.028-.65-.373-.373-.362-1.277.022-1.752.3-.37.296-.42-.018-.232-.22.132-.4.088-.4-.099 0-.186.216-.339.48-.339.656 0 .606-.946-.08-1.508-.308-.253-.409-.386-.225-.297.185.09.545.03.8-.13.256-.163.319-.297.14-.3-.18-.003-.34-.58-.36-1.285-.027-1.05.075-1.28.566-1.28.33 0 .6-.144.6-.32 0-.176-.228-.32-.506-.32-.383 0-.46-.213-.32-.88.287-1.371-.24-1.895-.899-.89-.298.456-.456.968-.35 1.14.105.17.04.31-.147.31-.406 0-.452-1.026-.065-1.456.15-.167.524-1.096.83-2.064.656-2.07 1.002-2.56 1.815-2.56.33 0 .601-.153.601-.341 0-.204-.277-.254-.687-.124-.65.207-.675.146-.464-1.169.121-.762.395-1.497.606-1.631.212-.135.26-.247.106-.25-.154-.003-.082-.248.16-.546.298-.368.311-.465.04-.301-.22.132-.4.103-.4-.065 0-.167.214-.387.477-.488.36-.137.406-.365.186-.914-.656-1.642-.756-2.046-.697-2.81.045-.578-.02-.68-.233-.366-.197.29-.363.321-.505.092-.204-.33 1.243-3.567 1.595-3.567.096 0 .085.144-.024.32-.109.176-.037.32.16.32s.275.134.174.298c-.101.164-.038.389.141.5.425.262.413-.254-.028-1.224-.28-.614-.237-1.022.21-1.964.31-.654.757-1.263.994-1.353.236-.091.43-.422.43-.737 0-.314.222-.657.494-.761.272-.105.452-.443.4-.752-.07-.418.19-.613 1.025-.762.692-.124.845-.217.4-.243-.983-.057-.908-.374.388-1.63.609-.59 1.056-1.158.993-1.262-.062-.104.115-.4.394-.66.449-.415.483-.407.302.065-.145.379-.07.481.26.355.254-.098.463-.374.463-.613 0-.519 1.1-1.171 1.425-.845.126.125.18.012.122-.252-.06-.272.082-.44.331-.387.32.068.383-.128.232-.727-.154-.615-.063-.872.362-1.03.724-.267 1.037-.728 1.043-1.539.006-.765 1.056-1.504 1.756-1.236.533.205.555-.608.04-1.435-.207-.33-.116-.385.382-.227.375.119.754.044.89-.175.149-.242.1-.298-.133-.154-.218.134-.37.027-.37-.26 0-.304.183-.42.48-.305.264.1.48.336.48.523 0 .186.076.264.168.171.405-.405-.307-1.22-1.082-1.239l-.846-.02.8-.347c.44-.19 1.124-.315 1.52-.277.471.046.72-.104.72-.433 0-.447.6-.673 1.397-.528.153.028.592-.156.976-.407.384-.252 1.195-.527 1.803-.61 1.486-.206 3.504-1.081 3.504-1.52 0-.196.15-.263.334-.149.184.114.567.014.852-.221.423-.35.544-.351.659-.01.105.312.238.282.533-.121.322-.44.519-.47 1.087-.166.518.277.695.278.695.006 0-.201.212-.284.47-.185.258.099.549.052.645-.104.097-.156.57-.201 1.05-.1.983.204 4.65.194 6.717-.02.749-.078 1.441-.012 1.539.145.097.158.016.287-.18.287-.198 0-.268.146-.158.325.286.463.875.019.673-.507-.223-.582.406-.945.856-.494.44.44 1.62.475 1.35.04-.112-.182.017-.235.302-.126.273.105.51.427.528.716.018.29.133.166.256-.274.148-.53.452-.8.9-.8.37 0 .782-.107.914-.237s.46-.059.73.16c.408.33.443.315.208-.083-.251-.427-.216-.427.32 0 .352.28.503.313.363.08-.152-.252-.056-.4.258-.4.275 0 .5.185.5.41 0 .226.367.44.817.478.482.04.735-.065.618-.255-.11-.178-.318-.25-.462-.162-.337.209-1.133-.739-.854-1.017.116-.116.381-.04.59.167.555.556 1.038.463.564-.109-.223-.268-.32-.573-.215-.678.325-.325 1.316.897 1.432 1.768.144 1.076.207 1.117.973.639.356-.223.627-.665.604-.983-.062-.822-.548-.72-.548.115 0 .816-.4.533-.54-.381-.087-.571.231-.79.964-.662.145.025.173-.102.061-.282-.111-.18-.41-.328-.664-.328-.253 0-.46-.124-.46-.276 0-.717 1.376-.127 1.765.756.27.616.432.76.448.4.015-.308.227-.56.472-.56.245 0 .54-.244.654-.543.175-.455.303-.39.787.4.487.794.507.985.126 1.21-.248.147-.641.194-.873.105-.43-.165-1.14.344-1.14.818 0 .145.36.197.8.117.44-.08.8-.01.8.154 0 .305-.554.413-1.84.36-.396-.017-.72.106-.72.274 0 .168.432.305.96.305.737 0 .96.144.96.621 0 .342.144.71.32.819.188.116.32-.228.32-.834 0-1.445.56-.75.712.884.02.203.224.296.456.208.316-.122.336-.32.082-.794-.306-.572-.275-.598.326-.277.709.38.841.149.356-.619-.196-.31-.168-.554.085-.715.292-.186.288-.244-.017-.248-.22-.003-.4-.164-.4-.36 0-.194.202-.276.449-.181.29.11.418-.018.363-.366a.52.52 0 0 0-.608-.444c-.288.052-.522-.02-.519-.16.007-.364.582-1.224.698-1.045.053.083.338.58.632 1.103s.678 1 .854 1.058c.461.153.244-.893-.248-1.197-.334-.206-.33-.289.023-.429.32-.127.295-.18-.09-.199-.763-.036-.997-.915-.303-1.136.319-.1.8-.098 1.072.005.27.104.587.035.704-.153.283-.459 2.317-.437 2.604.029.16.258-.004.312-.54.176-.737-.186-.744-.174-.15.27.787.587 1.02.584 1.086-.016l.106-.943c.04-.347.2-.384.64-.149.323.173.587.436.587.586 0 .15.374.517.83.816.807.529.825.525.62-.121-.174-.546-.108-.626.37-.447.53.199.539.164.1-.402-.443-.573-.438-.587.076-.185.306.24.762.357 1.014.26.251-.096.54.041.641.305.107.278.354.382.587.249.221-.128.29-.109.153.042-.351.386-1.19.47-1.19.12 0-.16-.145-.291-.32-.291-.487 0-.383.83.16 1.28.386.32.481.313.49-.041.007-.279.229-.178.607.276.544.652.619.666.84.16.134-.305.219-.7.188-.875-.03-.176.127-.098.35.173.222.271.947.748 1.612 1.059.664.31 1.141.671 1.06.801-.08.13-.013.446.148.702.192.303.296.329.3.075.002-.216.22-.307.487-.205.352.135.456.003.382-.482-.056-.367-.225-.779-.375-.915-.15-.137-.169-.068-.042.152.126.22.105.4-.048.4-.878 0-2.103-2.215-1.25-2.26.204-.01-.35-.373-1.23-.804-.88-.432-1.312-.699-.96-.593.352.105.892.251 1.2.324.308.073.884.21 1.28.306s1.584.335 2.64.531 1.74.418 1.52.493c-.22.075-.4.276-.4.448s.148.221.328.11c.18-.112.307-.084.282.06-.164.948.55 1.42 2.83 1.87 1.1.217 1.428.777.48.82-.308.014-.388.095-.178.18.21.086.296.38.192.653-.16.417-.082.438.498.128.378-.203.688-.274.688-.158 0 .115.182.06.404-.125.433-.36 2.796.194 2.796.655 0 .133.26.242.58.242.317 0 .857.211 1.2.47.542.41.552.47.08.48-.299.006-.645.176-.77.38-.126.202-.094.285.071.183.436-.269 3.32.401 3.32.771 0 .173.133.23.297.13a.348.348 0 0 1 .478.107c.46.743-1.948.651-2.45-.093-.147-.217-.238-.15-.24.176-.004.35.377.596 1.147.74.634.12 1.218.152 1.297.072.293-.293 2.841 1.295 3.189 1.987.325.646.38.66.577.144.186-.485.263-.5.516-.098.164.259.298.83.298 1.27 0 .51-.09.657-.25.405-.15-.234-.252.058-.252.72 0 1.535.301 1.397.7-.32.225-.97.228-1.54.009-1.76-.22-.22-.2-.324.06-.324.21 0 .383.108.384.24 0 .132.347.643.77 1.136.764.888 1.332.753.956-.227-.215-.561.353-.708.681-.176.113.183.482.245.82.138.425-.135.612-.041.612.307 0 .276.18.504.4.507.267.003.24.108-.08.315-.426.275-.426.311 0 .32.427.009.427.044 0 .32-.336.217-.357.311-.07.315.226.003.526-.308.668-.69.157-.426.341-.558.475-.342.12.194.069.444-.113.557-.182.112-.254.328-.16.48.094.151.024.366-.155.476-.427.265-.418.804.014.804.187 0 .26-.13.162-.287-.097-.157.038-.369.301-.47.618-.237.642.716.031 1.201-.316.251-.361.544-.153.996.272.592.283.586.157-.08-.157-.826.273-.937.961-.248.362.361.392.624.129 1.116-.319.594-.282.619.485.327 1.042-.396 1.195-.395.95.003-.11.175.17.487.62.692.45.205.835.53.855.72.02.193.057.565.08.828.024.264.26.494.523.512 1.001.067 1.066.141.493.56-.46.337-.498.488-.172.69.277.17.34.133.19-.111-.381-.617.277-.412.74.23.272.377.67.537 1.071.432.396-.104.752.034.935.36.162.29.512.529.778.529s.4.133.3.296c-.307.497.54 1.961 1.407 2.433l.818.445-.933.013c-.987.013-.971.322.024.465.324.047.636.398.692.781.057.383.228.619.382.524.153-.095.522.342.82.97.654 1.378 1.559 1.4 1.608.04.036-1.01-.718-1.516-1.21-.814-.225.32-.262.204-.13-.407.118-.537.038-.908-.213-1-.32-.117-.32-.232 0-.57.331-.351.401-.344.406.04.003.255.363.803.8 1.217.437.415.794 1.09.794 1.501 0 .411.128.827.284.923.228.141.686 1.719.812 2.796.013.117.132.321.264.453s.24.583.24 1.002c0 .42.259 1.297.574 1.95.316.654.557 1.72.535 2.37-.021.65.085 1.105.237 1.01.152-.093.21.2.127.651-.082.451.076 1.271.35 1.821.42.84.43 1.045.06 1.272-.294.183-.506.089-.645-.287-.113-.307-.441-.753-.73-.992-.457-.38-.495-.359-.306.171.118.333.407.83.641 1.104.234.274.497 1.056.584 1.737.087.68.27 1.32.406 1.421.373.277 1.047 1.563 1.047 1.999 0 .21-.313.717-.695 1.124-.383.407-.542.74-.354.74.188 0 .32.348.295.773-.031.53-.158.68-.403.476-.23-.19-.502-.123-.76.188-.275.332-.289.484-.042.484.198 0 .36-.167.36-.37 0-.237.2-.197.56.111.307.265.809.57 1.114.678.366.13.483.382.344.745-.192.5-.234.494-.474-.068-.16-.377-.19-.09-.076.743.145 1.05.075 1.402-.306 1.548-.409.157-.476.756-.397 3.52.08 2.762.023 3.268-.335 2.972-.237-.197-.43-.228-.43-.07 0 .159.287.535.64.836.677.581.944 2.7.287 2.295-.23-.142-.216.035.038.51.346.647.325.702-.19.504-.532-.203-.539-.174-.082.352.274.315.593 1.073.708 1.683.195 1.032.177 1.065-.266.48-.332-.44-.478-.492-.486-.176-.006.25-.102.36-.215.248-.113-.113-.044-.401.155-.64.276-.333.249-.435-.115-.435-.261 0-.486.228-.5.507-.017.35-.076.379-.191.093-.127-.317-.27-.327-.615-.04-.67.555-.543.893.271.725.621-.128.6-.078-.16.36-.484.28-.88.73-.88 1.002 0 .438-.056.436-.506-.013-.278-.279-.667-.407-.864-.285-.245.152-.211.27.106.375.255.084.64.382.854.662.214.279.397.364.405.188.016-.335.632.483.64.85.003.115-.319.15-.715.076-.396-.073-.548-.05-.338.05.21.102.302.393.205.648-.13.337-.024.404.39.245.373-.143.493-.097.35.134-.12.194-.07.443.108.553.193.12.325-.19.325-.759 0-.528.166-1.062.37-1.188.229-.141.282-.088.14.141-.125.203-.088.37.083.37.17 0 .262.252.203.56-.059.308-.129.56-.156.56-.026 0-.081.54-.121 1.2-.04.66.042 1.2.184 1.2.141 0 .24.108.22.24a.916.916 0 0 0 .026.4c.271.677.292 1.92.032 1.92-.176 0-.229.24-.116.532.137.358.081.457-.17.301-.227-.14-.375-.027-.375.287 0 .284-.118.444-.263.355-.25-.154-1.563 1.129-1.381 1.349.12.144-1.279 1.336-1.567 1.336-.129 0-.333-.324-.453-.72-.133-.437-.284-.563-.384-.32-.09.22-.306.4-.477.4-.172 0-.224-.144-.115-.32.109-.176.034-.32-.168-.32-.2 0-.302.18-.224.4.078.22.378.38.667.355.614-.052.636.04.2.854-.189.353-.523.53-.8.424-.261-.1-.475-.022-.475.172 0 .195.144.355.32.355.176 0 .32.152.32.338 0 .187-.12.265-.268.174-.147-.091-.243.247-.213.75.035.584-.081.865-.319.773-.253-.097-.325.183-.223.876.105.715.04.952-.219.792-.203-.125-.286-.36-.186-.522.1-.162-.01-.22-.244-.13-.3.114-.394.66-.32 1.836.16 2.531.134 2.877-.243 3.11-.19.117-.254.454-.141.748.117.307.05.535-.16.535-.27 0-.265.19.017.72.345.646.33.676-.134.292-.467-.385-.488-.324-.218.62.366 1.275.11 1.63-.55.767-.52-.678-.517-.558.043 2.317.077.394-.043.899-.267 1.123-.223.223-.342.621-.264.883.084.28-.067.212-.362-.162-.5-.636-.504-.635-.382.043.067.376.314.996.548 1.378.37.603.35.737-.149 1.02-.378.215-.507.536-.378.942.241.761-.256.805-.849.075-.298-.368-.31-.464-.039-.301.22.132.4.1.4-.072s.087-.54.194-.817c.154-.403-.001-.481-.775-.391-.848.099-.925.044-.623-.44.19-.303.587-.488.883-.41.395.103.524-.05.485-.577-.076-1.028-1.087-1.07-1.47-.06-.172.45-.391.739-.489.641-.097-.097-.014-.48.184-.85.394-.737.165-1.434-.364-1.107-.182.112-.09-.165.206-.616.315-.48.726-.747.993-.645.251.096.456.247.456.335 0 .088-.216.077-.48-.024-.652-.25-.606.11.08.63.739.56 1.04.55 1.04-.035 0-.264.16-.48.354-.48.195 0 .272-.216.17-.48-.1-.264-.02-.48.182-.48.201 0 .051-.334-.333-.743-.384-.41-.59-.864-.456-1.012.134-.147.063-.164-.157-.037-.455.262-.546 1.152-.117 1.152.155 0 .358.288.45.64.212.813-.304.847-.561.038-.105-.332-.439-.584-.742-.56-.302.023-.513-.14-.467-.365.045-.223-.28-.544-.72-.712-.963-.366-1.037-.64-.173-.64.35 0 .855.39 1.138.88.439.758.489.78.36.16-.081-.397-.008-.72.161-.72.17 0 .22-.145.111-.32-.109-.177-.462-.32-.784-.32-.926 0-1.325-1.178-.917-2.704.172-.642.126-1.024-.143-1.195-.304-.193-.295-.253.038-.257.26-.003.358-.204.244-.501-.11-.285-.056-.413.126-.301.174.107.316.055.316-.118 0-.171.088-.542.196-.822.143-.373.057-.457-.32-.312-.284.109-.516.039-.516-.156s.226-.355.502-.355c.368 0 .446-.191.294-.72-.113-.396-.277-.972-.363-1.28-.086-.308-.003-.56.186-.56.187 0 .341.12.341.265 0 .146.432.201.96.124.528-.078.96-.268.96-.423 0-.155-.322-.232-.717-.172-.47.072-1.009-.203-1.564-.797-1.224-1.311-1.642-2.554-.462-1.374.457.457.503.425.503-.354 0-.63.127-.808.48-.673.533.205.664-.284.16-.596-.55-.34-.352-.88.24-.655.45.171.48.133.16-.19-.22-.221-.4-.722-.4-1.112 0-.95-.328-1.755-.637-1.564-.138.085-.447-.088-.687-.384-.369-.455-.368-.497.004-.272.35.21.406.043.274-.819a20.269 20.269 0 0 0-.388-1.883c-.171-.619-.143-.691.122-.32.275.384.343.392.347.036.003-.244.373-.784.823-1.201.45-.417.73-.902.621-1.077-.32-.52-.746-.363-.655.242.047.308.022.38-.053.16-.076-.22-.28-.4-.453-.4-.174 0-.213.166-.087.369.146.237.087.282-.165.126-.291-.18-.214-.434.294-.975.515-.549.581-.774.264-.9-.332-.133-.335-.175-.013-.195.312-.02.329-.18.07-.665-.233-.434-.24-.834-.023-1.238.176-.33.249-.67.162-.756-.087-.087-.013-.538.163-1.002.244-.64.222-.844-.09-.844-.226 0-.69-.214-1.032-.475-.608-.465-.606-.48.1-.677.753-.213.834-.467.52-1.64-.149-.553-.313-.648-.733-.423-.698.373-1.119.058-1.26-.942l-.114-.796.622.768c.423.523.696.65.852.397.126-.205.122-.372-.01-.372s.034-.2.369-.446c.517-.378.545-.523.182-.96-.39-.469-.266-.653.371-.552.132.02.24-.187.24-.461 0-.275-.144-.41-.32-.301-.176.108-.32-.027-.32-.302 0-.274-.134-.498-.298-.498-.357 0-.77 1.165-.544 1.532.088.142.028.467-.134.723-.237.375-.295.38-.299.025-.004-.344-.104-.357-.461-.06-.385.32-.448.15-.4-1.081.03-.803.088-1.46.127-1.46.04 0 .219.469.399 1.04l.328 1.04-.158-1.073c-.126-.86-.062-1.037.321-.89.264.1.48.035.48-.145 0-.182.179-.219.4-.083.22.136.155-.126-.144-.584-.521-.797-.474-1.224.135-1.224.158 0 .197.144.088.32-.109.176.018.32.282.32.264 0 .584-.18.71-.4.127-.22.113-.294-.031-.163-.144.13-.446.084-.67-.102-.29-.24-.604-.236-1.07.014-.725.387-.812.251-.37-.575.198-.37.136-.747-.193-1.179-.473-.621-.48-.62-.27.085.13.43.078.72-.126.72-.188 0-.346-.18-.352-.4-.006-.225-.216-.128-.481.222-.338.448-.569.525-.818.276-.249-.248-.248-.407.001-.561.191-.118.348-.124.348-.013 0 .11.216-.015.48-.279.544-.543.634-1.165.17-1.165-.17 0-.22-.252-.11-.56.14-.392-.005-.332-.483.2-.376.42-.594.924-.483 1.12.132.238.063.233-.206-.015-.223-.207-.604-.3-.847-.206-.499.191-.606 1.06-.131 1.06.17 0 .225.223.12.494-.104.272-.28.404-.39.294-.19-.19-.224-.312-.32-1.126-.022-.187-.162-.263-.312-.17-.436.269-2.2-1.206-2.034-1.7.11-.323-.039-.399-.531-.27-.405.106-.685.028-.688-.191-.003-.211-.146-.164-.334.11-.263.383-.32.32-.28-.32.126-2.03-.01-2.633-.546-2.427-.44.168-.46.121-.121-.286.333-.401.316-.487-.096-.487-.761 0-1.023.688-.427 1.123.662.484.689.838.045.59-.346-.132-.427-.038-.285.331.115.3.035.516-.191.516-.25 0-.321-.272-.2-.756.166-.659.086-.744-.622-.666-.706.077-.758.023-.395-.414.591-.712.56-2.002-.048-2.015-.418-.009-.408-.076.06-.431.305-.232.461-.515.347-.63-.115-.115-.024-.208.202-.208.253 0 .346-.246.243-.64-.113-.432-.01-.64.317-.64.292 0 .414.184.307.463-.122.316-.025.405.304.279.265-.102.406-.382.313-.624-.242-.631.123-1.398.665-1.398.256 0 .374-.147.264-.326-.11-.178-.335-.242-.5-.14-.163.1-.297.013-.297-.195 0-.28-.111-.285-.43-.021-.236.196-.49.321-.563.279-.074-.043.061.093.301.301.476.414.242 1.077-.367 1.036-.278-.018-.273-.068.016-.185.301-.122.282-.276-.08-.638-.57-.57-.63-1.176-.097-.998.345.115 1.54-.81 1.54-1.193 0-.088-.233-.16-.517-.16-.377 0-.468-.196-.336-.72.165-.655.143-.67-.238-.16-.873 1.166-2.453.142-1.683-1.092.273-.437.254-.669-.081-.98-.363-.338-.403-.307-.231.18.298.845-.072 1.285-.666.792-.272-.226-.725-.413-1.006-.416-.796-.007-.797-1.01-.002-1.805.514-.514.6-.76.303-.858a.594.594 0 0 0-.656.247c-.132.212-.367.338-.523.279-.157-.06-.33.36-.385.933-.055.572-.241 1.04-.414 1.04-.172 0-.29-.18-.262-.4.135-1.036-.066-1.734-.498-1.734-.292 0-.372.134-.208.347.147.19.239 1.024.204 1.851-.066 1.577.586 2.388.964 1.2.152-.48.47-.616 1.376-.587.648.02.927.103.619.183-.308.08-.56.297-.56.48 0 .184-.294.257-.654.163-.525-.137-.615-.053-.462.43.16.506.049.582-.707.481-.494-.066-1.15-.22-1.457-.341-.34-.135-.56-.075-.56.151 0 .205.144.284.32.176.176-.11.32-.046.32.14 0 .187.388.34.864.34.672 0 .778.085.48.384-.212.21-.384.643-.384.96 0 .362-.237.576-.64.576-.352 0-.64-.144-.64-.32 0-.176.211-.32.47-.32.286 0 .397-.188.285-.48-.101-.264-.321-.48-.489-.48-.167 0-.203.18-.08.4.123.22-.022.169-.323-.113-.3-.282-.585-.778-.633-1.103-.093-.633-.83-1.069-.83-.491 0 .19-.146.347-.323.347-.195 0-.17-.244.063-.618.302-.484.517-.547.99-.294.332.178.688.24.79.137.103-.102.019-.185-.186-.185-.206 0-.374-.212-.374-.47 0-.267-.19-.398-.438-.302-.242.093-.533-.077-.648-.376-.286-.745.006-.95.623-.439.417.347.56.349.768.012.339-.55.722.068.462.746-.107.28-.036.508.159.508s.366-.108.38-.24c.185-1.709.124-2-.425-2-.32 0-.665.22-.768.489-.145.376-.289.404-.63.12-.606-.502-.558-.953.074-.71.422.162.46.086.204-.41a21.35 21.35 0 0 1-.521-1.089c-.114-.264-.144-.144-.067.266.103.547.02.699-.316.57-.326-.125-.458.074-.462.695-.004.653-.078.754-.299.405-.161-.256-.227-.573-.146-.704.082-.132-.144-.396-.5-.587-.495-.264-.656-.25-.675.064-.014.226-.17.016-.347-.468-.214-.586-.55-.88-1.006-.88-.677 0-.676.006.055.517.475.333.682.732.58 1.12-.086.33-.026.683.133.781.404.25.363.782-.06.782-.192 0-.427-.297-.522-.659-.11-.424-.343-.592-.655-.472-.396.152-.412.1-.086-.293.32-.387.294-.581-.14-1.015-.502-.503-.53-.499-.432.06.065.365-.11.64-.454.71-.417.086-.505-.026-.346-.439.183-.476.07-.525-.801-.351-1.047.21-1.281-.026-.652-.655.27-.27.208-.333-.24-.249a15.52 15.52 0 0 1-.832.138c-.126.014-.146.242-.044.508.13.338.038.427-.301.297-.552-.212-1.05.9-.676 1.506.143.232.09.286-.14.144-.203-.125-.376-.544-.386-.93-.029-1.227-1.784-5.115-2.74-6.071-.508-.508-.923-1.043-.923-1.19 0-.146-.108-.374-.24-.506s-.24.057-.24.419c0 .363.216.742.48.843.264.102.48.343.48.537 0 .367.79 1.286 1.007 1.172.068-.035.013.072-.121.24-.43.533-.264 1.167.281 1.07.29-.052.596.106.682.35.094.271.013.357-.207.221-.225-.139-.362.03-.362.446 0 .395.295.788.72.959.515.207.567.295.183.31-.295.01-.753-.196-1.016-.46-.29-.29-.709-.39-1.062-.255-.556.214-.558.186-.036-.611.461-.704.478-.893.107-1.201-.333-.277-.718-.25-1.585.113l-1.145.478.05-1.262c.036-.914.19-1.265.557-1.273.414-.008.393-.096-.114-.48-.342-.258-.486-.472-.32-.474.166-.003.085-.144-.179-.314-.702-.452-1.183.363-1.023 1.733.073.627.237 1.076.365.997.127-.079.232.066.232.323 0 .256-.192.466-.427.466s-.427-.144-.427-.32c0-.176-.168-.284-.374-.24-.205.044-.507-.46-.671-1.12-.164-.66-.418-1.2-.564-1.2-.146 0-.142.432.009.96s.177.963.058.967c-.12.004.142.288.582.633.44.344.611.629.381.632-.23.004-.348.122-.261.263.087.14.025.464-.136.72-.22.347-.296.359-.3.046-.002-.23-.148-.33-.324-.221-.315.194-.377-.108-.439-2.16-.017-.572-.177-1.146-.356-1.276-.426-.308-1.144-.311-1.057-.005.037.132-.128.543-.368.913l-.435.673-.672-.673c-.4-.4-.65-1.025-.616-1.54.051-.784-.004-.831-.563-.482-.341.213-.475.436-.297.495.483.161.39.6-.174.817-.285.109-.413.055-.3-.126.297-.481-1.517-.361-2.184.144-.32.243-.56.538-.534.657.027.119-.059.312-.19.43-.13.116-.14.042-.021-.165a.454.454 0 0 0-.152-.606c-.243-.15-.121-.36.358-.617.885-.473.442-.831-.56-.452-.491.185-.72.535-.72 1.101 0 .456-.139.744-.308.639-.19-.117-.197-.48-.02-.946.345-.908.078-1.278-.547-.76-.35.292-.512.283-.71-.036-.18-.294-.319-.31-.475-.057-.248.4-1.14-.308-1.14-.906a.342.342 0 0 0-.339-.343c-.186 0-.248.18-.136.4.111.22-.024.12-.301-.22-.467-.576-.66-.404-.558.493.012.106-.33.125-.762.043-.431-.083-.784-.358-.784-.612s.144-.372.32-.264c.176.11.319.082.317-.06 0-.143-.36-.426-.8-.63-.75-.347-1.068-.167-.574.326.327.328.406 1.196.09 1-.147-.09-.36-.02-.47.16-.11.178-.012.334.218.345.23.011.08.156-.335.322-.467.187-.686.477-.576.763.118.307.023.403-.285.285-.254-.098-.39-.294-.302-.435.287-.465-.167-1.14-.8-1.187-.521-.04-.594.114-.462.972.14.912.121.94-.17.276-.228-.515-.548-.714-1.05-.65-.396.052-.901-.018-1.121-.155-.244-.152-.398-.085-.395.17.006.51.623 1.52.63 1.032.003-.19.226-.347.496-.347.311 0 .379.112.185.306-.348.348-.144 1.108.5 1.862.375.437.368.573-.044.916-.267.221-.392.552-.28.735.123.198.05.237-.178.095-.282-.174-.29-.351-.034-.66.243-.293.248-.487.015-.63-.184-.115-.335-.456-.335-.758 0-.758-1.201-1.72-1.879-1.506-.32.102-.855-.101-1.258-.477-.387-.36-.703-.56-.703-.443 0 .117-.216.033-.48-.186-.264-.22-.49-.273-.504-.12-.014.154-.07.512-.126.797-.055.284.041.716.215.96.25.35.28.332.146-.091-.094-.293.027-.61.269-.702.722-.277.74.54.025 1.143-.573.482-.598.604-.185.88.46.307 1.066-.146 1.355-1.013.125-.373 1.722.217 2.388.883.446.446.412.474-.344.284-.542-.136-.839-.08-.839.158 0 .203-.18.345-.4.317-1.148-.15-1.703.061-1.703.646 0 .512.087.554.492.24.27-.21.597-.526.726-.702.135-.184.238-.099.24.2.003.287-.417.697-.933.91-.593.246-.875.554-.767.838.095.246.337.356.539.243.26-.146.258-.088-.01.2-.205.224-.289.629-.185.9.13.337.063.416-.207.249-.218-.135-.316-.452-.22-.705.098-.253-.015-.533-.249-.623-.279-.107-.407-.66-.371-1.604.05-1.338-.434-2.323-.72-1.465-.07.207-.28.377-.468.377-.19 0-.105-.264.186-.586.771-.852.702-1.45-.117-1.01-.355.19-.787.258-.96.151-.172-.106-.313-.04-.313.146s.163.339.362.339c.234 0 .298.392.18 1.114-.099.612-.046 1.197.119 1.299.164.101.299-.14.299-.536 0-.702.012-.704.47-.099.629.832.605 1.022-.155 1.263-.354.113-.568.328-.475.48.094.15.024.365-.155.475-.179.11-.325-.032-.325-.316 0-.296-.152-.425-.352-.3-.208.127-.272.62-.157 1.195.107.538.105.887-.006.776-.111-.111-.327-.869-.479-1.684-.217-1.16-.174-1.585.198-1.957.369-.369.396-.622.121-1.136-.195-.363-.446-.52-.56-.35-.112.171-.7.308-1.306.305-.605-.003-1.157.164-1.226.372-.07.208.086.379.346.379s.566.377.682.837c.285 1.134-.03 1.358-.489.349-.29-.638-.46-.735-.778-.442-.323.3-.274.425.237.619.487.184.558.345.293.663-.254.306-.243.527.041.81.537.537-.234.995-1.422.844-.965-.122-1.512.3-.762.588.252.097.503.044.558-.116.227-.658.93.3 1.028 1.403.059.651.221 1.288.361 1.415.14.126.138.014-.004-.25-.192-.358-.162-.392.12-.134.4.367.164 1.414-.319 1.414-.157 0-.305.396-.329.88-.043.864-.046.865-.19.08-.081-.44-.295-.98-.476-1.2-.227-.276-.216-.536.035-.839.39-.47.328-1.628-.111-2.033-.148-.137-.19.075-.092.472.185.747-.24 1.023-.492.32-.195-.548-.589-.129-.566.603.042 1.376.216 2.237.584 2.896.53.944.493 1.223-.096.734-.268-.222-.58-.313-.69-.202-.113.112.536.529 1.44.926.903.397 1.646.84 1.65.981.004.143-.172.168-.392.057-.22-.112-.114.029.236.312.376.304.681.38.747.184a.506.506 0 0 1 .443-.331c.203 0 .18.183-.06.471-.344.415-.503.414-1.329-.013-.516-.267-.853-.624-.749-.792.104-.169.037-.306-.15-.306-.186 0-.34.252-.343.56-.004.464-.055.48-.3.095-.16-.256-.222-.58-.135-.72.086-.14-.004-.255-.203-.255-.222 0-.278.261-.145.68.162.51.108.624-.218.456-.239-.123-.155.003.187.28.341.277.737.504.88.504.142 0 .259.152.259.339 0 .186-.144.25-.32.14-.306-.189-.469.281-.332.96.036.177-.043.212-.176.08-.132-.132-.504-.002-.826.29-.382.345-.586.394-.586.141 0-.213-.128-.31-.284-.213-.156.097-.358-.11-.45-.46-.091-.35-.036-.717.124-.816.16-.099.29.045.29.32 0 .584.501.662.83.13.142-.23.088-.283-.14-.142-.233.144-.37-.009-.37-.412 0-.774-.482-1.108-1.683-1.164-.672-.031-.857.078-.723.428.14.362.082.388-.25.112-.32-.266-.541-.257-.855.034-.335.31-.376.31-.197-.008.124-.22.1-.4-.052-.4s-.245-.466-.205-1.036c.04-.57-.056-1.254-.212-1.52-.203-.345-.287-.364-.294-.065-.005.23-.167.322-.36.203-.192-.12-.282-.57-.2-1.004.096-.499.04-.675-.154-.481-.435.435-.18 2.16.305 2.063.22-.044.4.136.4.4s-.167.48-.37.48c-.208 0-.114.283.216.648.43.475.492.742.231 1.003-.486.486.43 1.87 1.24 1.87.331 0 .603.143.603.32 0 .175.252.308.56.294.334-.015.399-.09.16-.187-.22-.088-.4-.302-.4-.473 0-.172.144-.224.32-.115.176.109.32.03.32-.175s-.212-.292-.47-.193c-.258.1-.561.033-.673-.148-.112-.18-.512-.46-.89-.622-.573-.245-.518-.273.33-.17.713.088 1.076-.025 1.21-.377.384-.998.972.242.998 2.102.013 1.003.148 2.111.3 2.463.239.557.208.586-.234.227-.416-.338-.534-.338-.647 0-.076.227-.138-.055-.138-.627s-.09-1.13-.2-1.24c-.291-.291-1.186.119-1.186.544 0 .215.23.277.56.152.437-.167.475-.129.175.174-.274.276-.292.583-.063 1.06.32.665.319.665-.203.03l-.527-.64.113.64c.083.469.379.649 1.102.672 1.245.04 1.733.338 1.686 1.027-.034.488-.052.486-.184-.019-.167-.64-.737-.762-.744-.16-.003.267-.109.24-.315-.08-.262-.404-.311-.386-.315.115-.003.414-.162.534-.521.396-.369-.142-.463-.06-.33.286.116.301.001.483-.303.483-.27 0-.4.144-.291.32.3.485 1.527.407 1.247-.08-.126-.22-.112-.293.032-.163.144.131.479.059.744-.16.422-.347.432-.303.08.358-.436.816.004 1.737.47.984.157-.255.114-.316-.12-.172-.24.15-.297.048-.165-.297.334-.87.74.152.608 1.527-.064.666.014 1.124.174 1.024.16-.098.29-.016.29.182 0 .215-.259.278-.64.157-.696-.22-.848.145-.292.7.25.25.25.408 0 .563-.192.118-.348.639-.348 1.156 0 .518-.16.941-.355.941-.194 0-.273.212-.174.47.1.258.043.555-.125.659-.285.176-.449-.283-.331-.928.028-.154-.15-.202-.396-.108-.344.132-.442-.157-.424-1.248.017-1.017.14-1.375.434-1.262.377.144.554-.378.443-1.306-.024-.2.182-.45.459-.557.286-.11.419-.058.309.12-.11.178.022.23.303.122.635-.243.646-.762.017-.762-.264 0-.482-.18-.485-.4-.003-.268-.11-.242-.326.08-.278.416-.385.397-.795-.14-.413-.543-.474-.553-.474-.08 0 .297.14.54.31.54.17 0 .228.214.128.474-.138.361-.328.396-.796.146-.647-.346-1.242-.164-1.242.38 0 .178.288.232.64.12.688-.218.907.32.24.588-.32.13-.32.167 0 .187.572.036.497.559-.08.559-.264 0-.48-.192-.48-.427s-.152-.427-.339-.427c-.186 0-.241.18-.122.4.119.22-.125.023-.543-.44-.685-.755-.807-.789-1.227-.338-.414.442-.403.475.094.285.38-.146.617-.037.733.339.094.305.305.804.468 1.11.386.723.376 1.186-.012.572-.244-.385-.354-.326-.597.32-.172.454-.181 1.018-.022 1.32.222.425.15.497-.358.364-.44-.115-.635-.007-.635.35 0 .285.153.518.34.518.186 0 .23-.18.098-.4-.156-.258-.044-.24.315.052.306.248.482.644.392.88-.09.235.032.428.271.428.24 0 .523.228.63.506.278.724.269.733-.526.537-.396-.097-.607-.056-.47.093.4.434 1.314.461 1.578.047.152-.24.244-.114.247.337.003.396.158.72.344.72.187 0 .258-.132.158-.293-.1-.16.216-.143.702.04.677.256.887.55.896 1.254.007.505-.117.92-.275.92-.159 0-.206-.215-.106-.476.15-.39-.607-1.125-1.16-1.125-.264 0-.134 1.137.176 1.528.177.224.221.508.099.63-.123.123-.369.012-.547-.247-.246-.357-.275-.297-.121.25.12.423.062.72-.14.72a.341.341 0 0 0-.34.338c0 .187.143.25.32.141.175-.108.32.022.32.291 0 .316-.181.42-.51.294-.364-.14-.474-.5-.386-1.258.108-.927.04-1.047-.53-.938-.36.068-.727.151-.815.185a.947.947 0 0 1-.32.055c-.088-.004-.347.196-.576.446-.343.374-.33.486.078.643.765.293.292.695-.615.522-.574-.11-.881-.438-1.062-1.135-.14-.54-.463-1.045-.72-1.123-.355-.108-.378-.05-.096.251.584.622-.474 1.722-1.15 1.196-.441-.344-.447-.323-.048.185.312.398.552.471.784.24.517-.517.792-.4.903.386.08.56.281.7.902.626.56-.066.672-.007.373.196-.331.224-.282.327.22.459.4.104.716-.014.83-.312.143-.372.286-.397.63-.111.309.256.496.265.612.028.092-.188.127-.158.078.066-.049.225-.31.37-.58.323-.27-.048-.577.142-.684.42-.11.288-.356.406-.57.273-.259-.16-.31-.057-.163.326.118.307.214.667.214.799s.223.24.494.24c.28 0 .423-.184.33-.426-.232-.605.351-.53 1.031.133.689.67 1.723.82 2.056.297.182-.287.24-.285.244.007.003.211-.226.514-.51.672-.473.265-.473.305 0 .486.284.11.515.075.515-.075 0-.45 1.197-.62 1.62-.23.298.274.339.265.168-.037-.124-.22-.073-.4.113-.4.187 0 .34.22.34.49s.215.573.478.674c.263.1.396.348.296.55-.1.201.03.105.29-.213.588-.719.788-.409.736 1.14-.041 1.216.406 1.737.48.56.021-.353.075-.785.12-.96.043-.177.1-.573.124-.88.036-.442.104-.468.321-.125.152.239.205.707.118 1.04-.186.708.315.8.85.155.287-.344.277-.487-.04-.615-.228-.09-.085-.177.316-.19.402-.015.813-.241.914-.504.1-.263.283-.417.405-.341.122.075.431.005.687-.157.697-.441-.844-.397-1.675.048-.382.204-.575.218-.461.033.108-.175-.01-.397-.262-.494-.45-.173-.504-1.647-.07-1.971.117-.088.142-.065.055.05-.086.116.003.404.2.64.268.324.248.431-.083.435-.345.004-.337.071.04.315.264.17.951.312 1.527.315.812.004 1.131.19 1.422.828.302.663.287.877-.078 1.103-.624.386-.806.111-.317-.478.277-.334.291-.488.046-.488-.198 0-.36.153-.36.339 0 .186-.166.236-.37.11-.22-.136-.282-.088-.154.12a.4.4 0 0 1-.116.551c-.181.112-.247.338-.146.502.101.164-.027.298-.285.298-.323 0-.412.215-.288.69.134.514.073.624-.24.43-.28-.173-.343-.134-.188.116.3.484.818.161.86-.535.02-.337.128-.239.287.26.171.532.267.612.288.24.018-.309.257-.56.531-.56.275 0 .42.128.322.286-.097.157.038.369.301.47.263.1.478.403.478.673s.144.49.32.49c.176 0 .32-.216.32-.48s-.172-.48-.384-.48c-.298 0-.298-.085 0-.384.458-.457.5-.896.088-.896-.163 0-.363.252-.443.56-.08.308-.163.105-.183-.452-.037-.992-.019-1.005.908-.655.68.256.856.464.628.739-.224.27-.065.581.538 1.055.47.37.707.673.526.673-.181 0-.41.209-.507.464-.122.318-.024.404.312.275.27-.103.6-.485.735-.847.226-.61.255-.596.407.195.09.47.04.778-.11.684-.451-.278-.31.199.212.721.267.268.735.523 1.04.568.304.044.602.33.662.636.102.522.055.521-.767-.017-.991-.65-2.062-.895-2.062-.473 0 .156.495.376 1.1.489.808.152 1.127.394 1.207.916.06.39.262.68.45.646.187-.034.36.45.384 1.077.023.627.215 1.348.425 1.601.3.362.294.44-.031.363-.228-.054-.487.102-.576.347-.092.254-.019.356.172.238.183-.113.302.006.264.266-.112.763-.464.932-1.005.482-.421-.35-.49-.343-.408.035.054.25.36.56.679.691.32.13.5.368.402.527-.099.159.016.364.255.455.238.092.517.488.62.88.14.535.095.622-.18.347-.506-.506-.878-.458-.878.114 0 .267.285.48.64.48.352 0 .64.153.64.339 0 .186-.15.246-.334.132-.183-.113-.542-.033-.796.177-.254.211-.68.3-.946.198-.363-.14-.484.045-.484.737 0 .718.214 1.018.96 1.348.528.234.96.534.96.667 0 .21-.713.369-1.322.293-.257-.032-.12 1.814.156 2.089.19.19.335-.368.244-.94-.02-.132.122-.24.317-.24.211 0 .261.225.123.56-.127.308-.303.812-.391 1.12-.089.308-.325.562-.524.565-.2.003-.147.144.117.315.32.207.347.312.08.315-.22.003-.4.155-.4.34 0 .183.237.29.527.24.825-.148.866.597.046.846-.72.218-.716.228.184.56.678.25.803.406.482.604-.345.214-.352.35-.036.666.59.59.489.89-.422 1.236-.45.172-.726.463-.611.648.145.235.33.234.615-.002.316-.263.373-.16.255.46-.086.448-.3.71-.486.594-.188-.116-.237-.051-.113.15.12.195.467.278.77.183.482-.151.49-.12.07.255-.551.49-.823 1.375-.329 1.07.18-.111.328-.041.328.155 0 .197.167.255.37.13.23-.142.282-.088.14.143-.127.205-.583.309-1.014.23-.693-.125-.775-.036-.713.776.039.504.178.85.31.769.131-.082.158-.36.06-.618-.114-.295.014-.47.344-.47.396 0 .455.139.241.56-.347.684.131 2.64.645 2.64.2 0 .29.075.198.166-.09.091-.583-.052-1.093-.318-1.078-.562-2.23-.7-1.408-.168.41.265.399.311-.08.315-.308.003-.56-.21-.56-.475 0-.264-.191-.48-.425-.48-.236 0-.414.322-.4.72.015.432-.142.686-.392.634-.23-.047-.734.151-1.12.44-.41.306-.485.452-.182.35.287-.095.704-.005.927.201.318.294.351.271.152-.105-.171-.324-.148-.376.072-.16.18.176.41 1.184.511 2.24.118 1.224.083 1.688-.096 1.28-.253-.575-.284-.553-.304.217-.013.472-.256 1.09-.54 1.376-.286.285-.45.586-.366.67.084.084.334-.067.557-.335.567-.683.938-.607.739.152-.092.352-.295.64-.45.64-.155 0-.283.143-.283.317 0 .173.324.281.72.24.518-.055.695.074.632.46-.049.294.06.626.24.738.18.112.328.055.328-.126 0-.18.216-.246.48-.144.264.1.483.42.485.71.004.456.046.462.315.045.241-.372.312-.279.315.42.003.54.138.816.338.692.183-.113.24-.5.126-.858a8.644 8.644 0 0 1-.267-1.06c-.033-.225-.246-.633-.473-.907-.228-.274-.326-.64-.22-.813.107-.173-.06-.463-.372-.644-.62-.361-.129-.468.695-.152.392.15.43.3.155.63-.273.33-.2.635.312 1.286.37.469.672 1.085.673 1.37.001.337.211.2.603-.394.33-.5.69-.765.8-.587.11.177.035.377-.165.444-.647.216 0 1.504.688 1.372.34-.066.704.018.808.186.104.168.293.241.42.163.127-.079.266.315.308.874.042.56.216 1.066.386 1.125.17.059.31.463.31.899s-.113.722-.251.637c-.138-.086-.252.121-.252.46 0 .337.15.592.332.565.627-.092 1.447.44 1.243.806-.152.27-.104.273.181.01.474-.435.714-2.617.316-2.863-.159-.098-.293.298-.298.88-.01.961-.045 1-.384.42-.205-.353-.395-.921-.421-1.264-.027-.343-.214-.68-.417-.747-.203-.068-.369-.351-.369-.63 0-.278.085-.422.187-.32.281.282 1.411-.79 1.426-1.35.007-.27.209-.039.448.512.44 1.01 1.14 1.7 1.14 1.124 0-.172-.154-.363-.34-.426-.529-.176-.59-1.845-.086-2.348.297-.298.788-.383 1.447-.251.677.135.929.088.784-.147-.139-.224.436-.434 1.63-.594 1.014-.136 1.952-.272 2.084-.303.132-.031.384-.075.56-.097.176-.022.32-.268.32-.546 0-.704.778-.38.897.373.081.511.042.533-.235.133-.2-.289-.334-.33-.337-.101-.003.208-.293.47-.645.581-.352.112-.642.446-.645.742-.004.465-.047.473-.315.058-.275-.426-.315-.426-.353 0a6.276 6.276 0 0 0-.031.64c.006.088-.323.16-.732.16-.408 0-.682-.098-.608-.218.074-.12-.021-.314-.212-.432-.196-.12-.426.09-.53.484-.131.505-.357.652-.813.533-.348-.091-.818.006-1.046.214-.339.31-.331.474.043.893 1.016 1.14-.438 1.922-1.67.9-.324-.27-.448-.273-.448-.013 0 .198.134.36.297.36.163 0 .519.445.79.99.417.835.423.963.034.814-.253-.097-.535-.055-.627.093-.092.148.134.348.502.444.425.112.58.318.427.566-.146.236-.109.309.094.184.39-.241.818.656.533 1.117-.106.172.052.581.35.911.304.336.437.772.302.99-.168.271-.105.307.209.118.37-.223.379-.183.045.228-.329.407-.314.574.08.901.266.22.482.564.48.762-.004.199-.145.145-.316-.119-.17-.264-.317-.336-.326-.16-.01.176-.207-.023-.44-.443-.277-.501-.5-.637-.65-.395-.125.203-.384.272-.575.154-.21-.13-.255-.065-.116.16.127.206.382.282.565.169.48-.297.956.6.485.914-.508.34 1.083.15 1.633-.195.263-.165.308-.397.123-.632a1.642 1.642 0 0 1-.297-.852c-.003-.264-.11-.732-.238-1.04-.14-.336-.09-.56.122-.56.195 0 .354-.24.354-.533 0-.702.416-.273.543.561.062.409-.032.57-.253.434-.22-.136-.305.007-.229.38.073.356.345.56.67.504.302-.051.55.057.55.24 0 .184-.109.317-.24.296-.639-.1-1.059.07-.88.358.108.176.552.32.986.32.767 0 .774.022.264.8-.288.44-.74.8-1.002.8-.288 0-.406.186-.297.47.264.688-.152.806-1.235.35-.526-.22-1.085-.411-1.241-.423-.156-.012-.406-.214-.555-.45-.208-.327-.272-.296-.276.133-.003.308-.153.56-.335.56-.182 0-.46.324-.62.72-.289.72-.29.72-.335-.08-.026-.466-.12-.612-.223-.35-.123.31-.312.159-.602-.48l-.423-.93.181.88c.138.67.06.88-.333.88-.283 0-.515-.144-.515-.32 0-.176-.152-.32-.339-.32-.186 0-.256.134-.154.298.284.46-.229.616-1.027.315-.396-.15-.718-.457-.715-.683.003-.287.098-.266.315.07.187.288.312.328.315.099.008-.659-.581-.777-.925-.186-.241.415-.333.443-.34.106-.007-.335-.132-.294-.454.147-.457.625-.344 1.415.26 1.83.213.144.146.236-.174.24-.347.002-.58.39-.708 1.174-.234 1.441-.041 1.79.853 1.548.672-.183.674-.177.053.2-.352.213-.745.544-.875.735-.143.211-.237.128-.24-.213-.003-.308-.144-.56-.315-.56-.17 0-.227.216-.125.48.1.264.024.48-.17.48-.195 0-.355-.228-.355-.506 0-.42-.205-.38-1.2.236-.66.407-1.236.707-1.28.666-.232-.22-.73-.033-.577.217.1.16 0 .366-.22.455-.313.127-.305.232.038.472.243.17.342.469.221.664-.12.196-.067.356.12.356.186 0 .338-.36.338-.8 0-.675.15-.8.96-.8.528 0 .96.15.96.334 0 .184-.184.292-.41.24-.224-.052-.44.049-.476.223-.038.174.183.318.489.32.385.002.619.35.755 1.123.126.71.213.853.24.389.037-.644.124-.688.723-.367.529.283.74.27.943-.06.154-.25.105-.537-.12-.698-.269-.191-.24-.232.096-.136.264.075.47.44.457.809-.013.369.095.598.24.508.145-.09.263-.022.263.15 0 .171-.108.372-.24.446-.132.074-.06.09.16.037.22-.054.4.05.4.231 0 .18.12.255.267.164.363-.224.358.836-.006 1.299-.3.382.258.975.599.635.301-.301 1.06.672 1.06 1.36 0 .44-.152.595-.465.475-.942-.362-1.237.284-.303.666.742.303 1.08.284 1.75-.101 1.122-.644 1.908-.296 1.861.823-.028.666-.076.729-.191.25-.085-.352-.304-.784-.486-.96-.228-.219-.28-.098-.163.385.093.387.005.76-.197.828-.26.087-.238.278.073.655.387.469.353.532-.293.532-.403 0-.625.108-.493.24a.94.94 0 0 0 .577.24c.185 0 .464.344.62.764.246.667.219.712-.212.355-.701-.583-.988-.13-.588.929.338.896.334.9-.575.557-.503-.19-.915-.463-.915-.606 0-.144.324-.104.72.087.668.324.678.315.135-.122-.475-.382-.518-.597-.229-1.138.237-.443.246-.666.025-.666-.182 0-.33.16-.33.354 0 .195-.22.27-.488.168-.398-.153-.425-.071-.149.445.241.451.238.633-.012.633-.192 0-.26.144-.152.32.109.176.04.32-.151.32-.192 0-.43-.21-.528-.466-.14-.366-.268-.383-.596-.08-.23.212-.352.494-.272.626.08.132.008.24-.16.24-.167 0-.414-.396-.55-.88-.183-.657-.279-.738-.378-.32-.175.741-.398.71-1.685-.24-1.268-.935-1.932-1.057-1.169-.214.292.322.434.682.316.8-.117.118-.037.214.179.214.215 0 .305.141.198.314-.122.197-.433.167-.84-.08-.485-.296-.617-.654-.53-1.434.065-.572.003-1.04-.138-1.04-.26 0-.373.482-.28 1.2.066.507-.373.515-.872.016-.299-.299-.388-.21-.404.4l-.02.784-.298-.74c-.185-.464-.441-.652-.683-.502-.3.186-.301.268-.003.367.547.183.476.715-.096.715-.264 0-.48-.113-.48-.251 0-.139-.288-.252-.64-.252-.352 0-.64.129-.64.286 0 .157-.207.206-.46.11-.252-.098-.529-.005-.614.205-.109.266-.164.251-.181-.048-.014-.236.27-.507.63-.601.69-.18.735-1.274.046-1.129-.21.044-.381-.064-.381-.24s-.153-.32-.34-.32c-.186 0-.25.144-.14.32.108.176.045.32-.141.32-.187 0-.34.216-.34.48 0 .73-.491.58-1.545-.475l-.955-.955.363.962c.23.61.525.899.806.79.294-.112.381-.008.259.31-.101.265-.082.465.044.446.71-.105 1.242.095 1.242.468 0 .273-.267.374-.747.282-.421-.08-.746.013-.746.215 0 .316.94.525 1.72.381.155-.028.202.251.106.62-.154.59-.11.62.359.254.294-.23.64-.562.77-.738.133-.18.237-.076.24.24.003.308-.14.56-.315.56-.456 0-.396.544.111 1.018.238.222.37.695.292 1.053-.114.534-.078.564.204.17.189-.265.345-1.045.348-1.734.003-.69.099-1.16.213-1.045.115.115.197.652.181 1.193-.017.606.113.938.338.863.2-.067.371-.688.379-1.38.014-1.299.723-2.26 1.27-1.724.181.178.088.522-.24.884-.625.69-.704 2.007-.152 2.558.298.299.298.384 0 .384-.212 0-.384.14-.384.31 0 .17.208.23.462.133.32-.123.446.029.412.49-.028.367-.2.672-.382.678-.183.006-.044.258.308.56.419.36.605.853.538 1.43-.068.595.046.88.356.88.598 0 .344-1.608-.34-2.152-.44-.35-.437-.413.037-.594.29-.112.529-.54.529-.95 0-.411.146-.838.325-.948.179-.11.242-.335.141-.499-.101-.164.036-.298.305-.298.304 0 .419.182.303.484-.133.346-.039.427.33.286 1.128-.433.266-1.09-1.43-1.09-.757 0-.933-.137-.93-.72.005-.595.064-.636.342-.24.265.38.295.336.142-.213-.107-.381-.05-.782.125-.89.175-.109.243-.445.15-.747-.092-.302.046-.19.308.25.328.55.375.92.152 1.188-.178.215-.25.575-.159.801.102.253.175.19.19-.163.014-.316.206-.538.426-.494.682.138 2.196-.375 2.008-.68-.099-.158-.01-.392.196-.52.234-.144.289-.092.146.139-.125.203-.076.37.11.37.187 0 .34.283.34.63 0 .403-.159.568-.441.46-.304-.117-.49.16-.6.89-.088.582-.034 1.107.12 1.166.155.058.272.418.26.8-.02.693-.02.693-.31-.027-.358-.892-.765-.952-.536-.08.112.43.045.568-.203.42-.204-.123-.154.048.11.38s.315.504.113.383c-.201-.12-.447-.009-.546.249-.256.666.146.772 1.073.281.44-.233.681-.426.537-.428-.283-.005.582-.965.87-.965.095 0 .09.214-.01.475-.195.509 1.279 2.502 1.607 2.174.329-.329.217-1.74-.121-1.531-.183.113-.234-.018-.123-.31.324-.842 1.009.038.881 1.132-.07.598.011.895.21.772.415-.256.254.57-.172.883-.195.144-.157.237.1.24.23.003.326.184.211.405-.113.22.076.054.42-.37.429-.526.807-.7 1.194-.552.58.222.4.676-.271.69-.206.003-.327.275-.27.603.075.43-.036.542-.4.403-.375-.144-.504.009-.504.596 0 .435.144.79.32.79.176 0 .32-.16.32-.357 0-.197.265-.288.588-.204.482.126.56.005.44-.683-.201-1.138.45-.509.756.732.167.673.126.864-.147.695-.268-.166-.35.123-.286 1.01.066.916.237 1.254.65 1.285.381.029.572-.205.6-.738.053-1.05.08-1.15.542-1.98.251-.452.277-.72.069-.72a.327.327 0 0 0-.332.32c0 .176-.16.32-.354.32-.195 0-.27-.221-.165-.492a.51.51 0 0 0-.296-.678c-.309-.119-.413-.409-.288-.803.108-.34.044-.8-.141-1.024-.242-.291-.199-.605.152-1.105.534-.762 1.285-.921 1.487-.314.079.236.21.168.343-.177.12-.312.085-.48-.08-.378a.344.344 0 0 1-.472-.107c-.098-.159.18-.357.618-.441.779-.149 1.02.069.572.516-.37.37-.405 4.972-.04 5.197.215.134.181.3-.098.472-.3.185-.213.25.286.212.69-.052 1.05-.558.396-.558-.176 0-.32-.216-.32-.48s.144-.48.32-.48c.176 0 .32.168.32.373 0 .206.08.293.179.195.098-.098-.037-.695-.3-1.326-.494-1.18-.331-1.64.418-1.177.246.153.32.434.175.669-.163.264-.122.325.119.177.255-.158.37.161.37 1.036 0 .829.165 1.328.48 1.449.51.196.673-.278.196-.573-.304-.188-.307-1.94-.004-2.243.298-.297 1.33 1.026 1.096 1.405-.117.19-.347.263-.51.161-.165-.1-.299-.031-.299.155 0 .187.288.339.64.339.352 0 .64.16.64.354 0 .195-.216.272-.48.17-.327-.125-.48.018-.48.452 0 .519.148.6.8.435.733-.184.8-.111.8.863 0 .981.04 1.023.52.544.48-.48.467-.576-.16-1.25-.374-.4-.668-.881-.654-1.068.015-.21.082-.2.175.026.082.201.423.295.757.207.506-.132.545-.258.233-.758-.257-.411-.271-.702-.045-.929.493-.493 1.88.872 1.433 1.411-.183.221-.258.477-.165.57.092.092-.214.126-.68.074l-.847-.093.883.922c.696.726 1.007.856 1.465.611.545-.291.546-.788.005-1.74a2.403 2.403 0 0 1-.237-.64c-.03-.177-.15-.753-.265-1.28l-.21-.96.481 1.04c.436.942.816 1.2 1.575 1.069.145-.025.171.104.058.287-.113.184-.376.232-.584.107-.264-.159-.258-.08.02.264.218.27.302.586.186.702-.116.115-.058.21.128.21.187 0 .434-.378.55-.84.2-.796.233-.808.648-.24.248.34.554.476.704.316.147-.156.086-.348-.134-.426-.22-.079-.4-.343-.4-.587 0-.747.887-.154 1.137.76l.235.857.217-.8c.119-.44.083-.89-.08-1-.178-.12-.169-.28.024-.398.307-.19.864.66.758 1.158-.028.132.165.24.43.24.263 0 .494-.252.511-.56.021-.365.116-.28.273.24.222.738.259.7.474-.48.336-1.84.447-2.055.476-.917.018.721.205 1.05.666 1.17.844.22 2.005-1.205 1.744-2.143-.15-.536-.12-.574.15-.19.294.421.336.417.34-.031.003-.281-.315-.654-.708-.83-.66-.294-.636-.32.32-.347.716-.02 1.033.118 1.033.448 0 .263.144.389.32.28.176-.109.32-.486.32-.838s.144-.55.32-.442c.176.109.32.03.32-.175 0-.206.216-.29.48-.19.322.124.48-.014.48-.418 0-.332-.18-.67-.4-.752-.293-.109-.25-.305.16-.735.541-.567.56-.56.565.201.003.53.09.654.266.378.144-.226.5-.319.795-.206.295.114.534.051.534-.139 0-.189.202-.267.448-.172.246.094.556-.004.69-.22.165-.268.108-.308-.183-.129-.314.194-.366.113-.202-.316.189-.491.148-.516-.273-.167-.416.346-.462.328-.293-.115.111-.289.335-.525.498-.525.382 0 .237-2.226-.161-2.472-.166-.103-.2-.02-.074.183.125.203.064.37-.137.37-.566 0-.187-.735.425-.825.354-.052.542.14.542.555 0 .35.223.858.496 1.13.448.448.477.407.298-.422l-.198-.919.576.88c.317.484.687.88.822.88.136 0 .246.144.246.32 0 .176-.216.32-.48.32s-.48.12-.48.265c0 .145.447.199.993.119.593-.087.84-.24.613-.38-.269-.167-.224-.294.154-.44.293-.112.568-.204.611-.204.043 0 .015.432-.062.96-.11.752-.021.96.414.96.482 0 .497-.072.117-.541-.242-.298-.273-.442-.07-.32.279.167.284-.06.022-.914-.272-.886-.41-1.027-.626-.64-.58 1.035-1.932.068-1.978-1.414-.029-.922.351-.976 1.412-.201.417.304.422.276.043-.208-.241-.307-.363-.847-.27-1.2.092-.353.037-.642-.123-.642a.29.29 0 0 1-.29-.29c0-.16.288-.215.64-.123.538.14.63.021.582-.75-.07-1.098-.526-1.79-.992-1.5-.214.131-.26.003-.124-.35.118-.308.214-.692.214-.853 0-.162.16-.294.355-.294.198 0 .264.233.15.53-.212.554.92 2.034 1.551 2.025.19-.003.128-.144-.136-.315-.264-.17-.336-.315-.16-.32.176-.005.104-.152-.16-.325-.398-.261-.405-.363-.045-.595.307-.198.33-.345.074-.502-.197-.122-.282-.346-.189-.498.094-.152.024-.366-.154-.477-.526-.324-.373-.754.234-.661.394.06.527.313.447.851l-.114.767.707-.64.708-.64-.114.8c-.071.503.03.772.275.724.24-.047.31.126.185.452-.136.356-.08.453.173.297.441-.273.22-2.716-.291-3.223-.23-.228-.262-.14-.1.283.15.395.114.538-.103.405-.184-.115-.411-.498-.504-.853-.093-.355-.074-.589.041-.519.327.197 1-.665.751-.961-.121-.145.019-.081.311.142.432.329.735.32 1.609-.045.713-.298 1.342-.357 1.868-.175.752.26.76.25.17-.207-.341-.264-.729-.48-.86-.48-.322 0 .539-1.634 1.015-1.928.27-.167.276-.293.02-.45-.194-.121-.354-.072-.354.11 0 .18-.216.245-.48.144-.464-.178-.595.117-.518 1.164.053.71-.478 1.394-.886 1.142-.195-.12-.356-.417-.356-.66 0-.241-.288-.53-.64-.642-.728-.231-.867-.8-.195-.8.244 0 .772-.265 1.172-.589.56-.454.63-.649.306-.85-.27-.166-.344-.135-.207.088.118.19.069.437-.11.548-.18.11-.343.084-.365-.058-.121-.79-.172-3.506-.071-3.779.129-.35 1.714-.54 1.706-.206-.01.38-.471.908-.956 1.093-.4.153-.394.187.044.208.563.027 1.706-1.445 1.31-1.69-.13-.08-.767-.246-1.414-.367-1.134-.213-1.946-1.011-1.029-1.011.247 0 .45.13.45.288 0 .158.287.197.64.085.351-.112.64-.073.64.085 0 .159.208.288.462.288.36 0 .389-.139.128-.625-.24-.449-.235-.564.018-.408.198.123.351 0 .351-.281 0-.274-.108-.463-.24-.419-.257.086-.4-.184-.4-.76 0-.263.114-.264.43-.002.236.196.515.27.62.166.104-.104.286.328.405.96.119.633.314 1.09.434 1.015.12-.074.164.329.098.895-.127 1.085.48 1.652 2.097 1.955.625.117.702.024.574-.686-.082-.452-.048-.72.077-.596a.854.854 0 0 1 .226.52c0 .16.085.257.19.213.292-.123 1.26.763 1.107 1.011-.074.12-.023.401.114.623.155.25.26.023.279-.597.015-.55.184-1.19.374-1.419.19-.23.251-.666.134-.97-.125-.326-.029-.667.235-.831.36-.225.306-.378-.273-.786-.396-.28-.71-.68-.695-.89.017-.257.072-.266.17-.028.081.195.485.29.898.21.413-.079.849.014.968.207.119.192.04.35-.176.35s-.297.095-.182.21c.116.116.064.388-.116.605-.233.28-.092.671.491 1.365.45.536.68 1.058.51 1.163-.17.105-.458-.065-.64-.376-.31-.536-.33-.536-.339-.007-.009.502.343.706 1.03.598.133-.021.205.091.16.25-.043.158.065.294.24.302.177.008.289-.373.25-.848-.038-.474.034-.698.16-.498.167.264.345.242.643-.08.343-.369.302-.444-.24-.444-.359 0-.652-.185-.652-.412 0-.544 2.126-.479 2.65.081.315.337.251.384-.33.244-.423-.102-.736-.02-.759.197-.175 1.706-.098 1.973.599 2.072.396.056.72.313.72.571 0 .37-.136.397-.64.127-.592-.317-.775-.21-.678.4.02.132-.123.24-.32.24-.196 0-.288-.264-.204-.587.094-.357-.017-.587-.282-.587-.24 0-.436.173-.436.384 0 .21-.312.779-.692 1.262l-.691.88-.57-.755-.57-.756-.318.8c-.176.44-.328.619-.34.399-.01-.22-.14-.4-.286-.4-.6 0-.12 1.4.568 1.655.605.224.663.354.336.748-.323.389-.3.477.123.477.286 0 .502-.108.482-.24-.093-.587.063-1.04.358-1.04.176 0 .32.521.32 1.159 0 .95-.08 1.093-.443.792-.343-.285-.488-.25-.641.15-.324.844.104 1.126.91.598.92-.602 1.176-.255.607.82-.33.622-.425.672-.429.222-.003-.319-.128-.503-.28-.41-.336.21-1.959-.51-1.962-.87-.001-.143-.145-.171-.319-.064-.181.112-.235-.016-.126-.299.104-.272.333-.406.508-.298.175.108.153-.113-.05-.49-.202-.379-.508-.601-.68-.495-.172.106-.471-.264-.666-.822-.25-.719-.43-.892-.613-.595-.144.232-.11.602.078.827.185.224.25.632.145.908-.115.298.116.811.568 1.263l.76.76-.636.684c-.35.376-.841.605-1.092.509-.374-.144-.388-.051-.077.53.368.688.385.69.625.074.212-.541.25-.552.27-.073.012.308.239.56.503.56s.48.132.48.293c0 .162.096.546.214.853.146.38.095.485-.16.327-.221-.137-.39-.027-.414.268-.094 1.171-.163 1.296-.688 1.254-.304-.024-.552.171-.552.434 0 .3-.185.408-.494.29-.406-.156-.458 0-.294.872.155.828.09 1.062-.293 1.062-.27 0-.423-.111-.338-.247.084-.136-.123-.227-.46-.202-.361.028-.546.217-.45.465.11.29-.014.351-.408.2-.434-.166-.504-.11-.295.236.225.373.186.383-.214.06-.395-.32-.488-.305-.488.08 0 .26.192.475.427.475s.427.144.427.32c0 .444-.41.4-1.126-.125-.71-.519-1.326-.357-1.765.464-.333.623.054.651 1.45.106.493-.193.439-.063-.234.564-.481.448-.805.884-.72.97.085.084-.061.154-.325.154s-.486-.228-.493-.507c-.008-.299-.215-.133-.507.405-.305.564-.414 1.236-.285 1.76.159.643.12.76-.162.483-.205-.2-.404-.828-.444-1.394-.04-.578-.31-1.162-.617-1.334-.3-.168-.461-.443-.357-.611.104-.168.308-.232.453-.142.146.09.345-.048.444-.305.218-.568-.1-.8-.93-.679-.805.118-.825.809-.05 1.687.353.4.511.864.372 1.09-.156.251-.11.31.126.164.448-.277.473.114.05.77-.27.416-.311.418-.316.009-.003-.31-.18-.221-.516.258-.428.612-.447.884-.117 1.682.217.523.306 1.04.198 1.148-.107.107-.334-.15-.502-.57-.169-.422-.316-.579-.327-.348-.011.23-.155.336-.318.235a.36.36 0 0 0-.49.127c-.106.17-.398.232-.65.136-.512-.197-.993 1.165-.69 1.956.15.388-.08.45-1.245.341-1.333-.125-1.931.21-1.027.574.22.089.076.173-.32.187-.409.014-.72.228-.72.495 0 .286-.188.398-.48.286-.576-.221-.633.243-.096.78.587.587-.094.457-.76-.146-.321-.291-.584-.375-.584-.186s-.088.571-.195.85c-.127.332-.017.506.32.506.283 0 .515.233.515.519 0 .41-.096.44-.45.147-.344-.286-.487-.277-.614.04-.13.322-.172.316-.191-.025-.022-.373-.108-.373-.567 0-.298.241-.442.272-.32.069.15-.248.011-.315-.418-.203-.837.219-.815.279.304.837.679.339.982.368 1.08.103.102-.276.232-.276.527 0 .302.284.16.42-.622.59-.71.157-.96.364-.836.69.118.305.043.39-.217.243-.31-.175-.309-.13.004.207.549.591.502.806-.177.806-.406 0-.598-.273-.647-.915-.042-.555.059-.835.257-.712.18.11.327-.023.327-.297 0-.286-.274-.5-.64-.5-.352 0-.608.109-.569.24.04.133-.14.715-.4 1.295-.321.72-.641 1.011-1.007.917-.295-.076-.499.025-.453.225.046.2.023.255-.05.122-.232-.415-.721.089-.721.74 0 .66-.47.837-.8.302-.109-.176-.029-.32.178-.32.214 0 .307-.266.215-.616-.105-.402-.024-.564.234-.465.263.101.395-.2.397-.904 0-.58-.057-.817-.129-.525-.072.29-.482.618-.913.726-.569.143-.782.414-.782.997 0 .781-.02.788-.8.277-.528-.346-.8-.396-.8-.148 0 .207-.158.278-.35.159-.22-.136-.303.007-.222.381.071.329.326.554.565.5.356-.08.36-.008.027.393-.298.36-.564.407-.993.178-.76-.407-1.631-.433-.996-.03.238.15.382.534.32.852-.104.542-.145.545-.649.041-.76-.76-2.208-.223-1.96.726.095.362.244.658.332.658.088 0 .085-.288-.007-.64-.092-.352-.036-.64.123-.64.16 0 .29.16.29.354 0 .195.226.268.501.162.392-.15.454-.044.286.486-.145.456-.1.606.139.46.201-.125.354-.004.354.279 0 .712-1.793.663-2.214-.061-.3-.516-.33-.51-.374.08-.026.352-.032.743-.014.868.02.126-.216.135-.522.02-.457-.17-.488-.124-.174.263.478.59.086 1.317-.511.948-.238-.147-.343-.413-.234-.59.11-.177-.023-.407-.295-.512-.272-.104-.416-.062-.32.093.202.327-.624.721-.91.434-.106-.105-.192-.455-.192-.777 0-.323-.139-.587-.309-.587-.362 0-1.02 1.124-.792 1.352.086.086-.09.357-.393.602-.303.246-.447.276-.322.068.125-.208.08-.468-.099-.579-.179-.11-.325-.03-.325.177 0 .29-.105.29-.455 0-.373-.309-.424-.259-.282.282.097.374.018.658-.186.658-.196 0-.32.175-.277.39.05.24-.279.379-.859.36-.872-.026-.896.004-.339.411.585.427.584.44-.02.446-.555.006-.536.073.178.623.541.416.63.59.272.539a2.426 2.426 0 0 1-.96-.413c-1.075-.837-1.293-.748-.352.143 1.108 1.049 1.547 2.472.5 1.62-.47-.382-.514-.37-.342.09.264.704-.682.575-1.087-.148-.227-.405-.186-.488.173-.35.336.128.425.01.313-.417-.085-.328-.419-.597-.74-.597-.333 0-.519.17-.432.396.083.218.035.583-.107.812-.142.228-.277.74-.3 1.14-.041.754-.458 1.436-.458.75 0-.216-.15-.3-.335-.185-.229.14-.213.356.05.672.268.323.284.567.052.8-.233.232-.4.228-.55-.014-.273-.443-1.457-.457-1.457-.018 0 .181.215.413.478.514.65.249.233.847-.43.617-.442-.153-.435-.11.042.26.448.349.476.479.13.611-.562.216-.328 2.038.293 2.276.27.104.447-.035.447-.351 0-.288.085-.439.19-.335.103.105.094.488-.022.854-.172.542-.324.603-.83.332-.34-.182-.618-.542-.618-.8 0-.257-.144-.468-.32-.468-.494 0-.378.958.14 1.156.649.25.25 1.087-.406.853-.294-.105-.445-.092-.337.03.323.363 1.563.508 1.563.182 0-.165.216-.301.48-.301s.48.276.48.614c0 .978.356 1.64.754 1.403.201-.121.171.02-.068.315-.338.417-.356.757-.08 1.549.448 1.283.452 1.256-.17 1.018-.348-.134-.476-.06-.382.222.077.233.367.456.644.497 1.098.161 1.812.51 1.989.97.102.267.058.406-.097.31-.348-.215-.629.469-.429 1.044.105.301.282.231.615-.245.47-.67 1.121-.616 1.035.087-.132 1.066.077 1.816.505 1.816.303 0 .449.262.4.72-.042.404.086.69.294.65.203-.038.445.127.538.368.108.283-.023.402-.37.335a12.267 12.267 0 0 0-.778-.129.227.227 0 0 1-.202-.264c.109-.688-.077-1.36-.377-1.36-.186 0-.259.129-.162.286.098.158-.05.374-.327.48-.691.265-.84.243-.633-.093.098-.157-.044-.37-.314-.475-.387-.148-.425-.07-.18.367.235.416.144.735-.362 1.275-.37.396-.505.72-.299.72a.369.369 0 0 0 .376-.36c0-.233.189-.206.542.08.367.3.464.312.3.04-.15-.252-.055-.4.26-.4.274 0 .503.252.508.56.01.519.043.516.459-.032.247-.326.603-.497.792-.38.23.142.182.375-.145.702-.44.439-.365.588.717 1.447 1.594 1.266 1.653 1.348.807 1.14-.494-.121-.65-.06-.499.193.122.203-.047.154-.375-.11-.551-.444-.583-.426-.415.225.1.387.027.756-.162.818-.38.127-.032.877.408.877.153 0 .341-.324.417-.72.087-.45.155-.274.182.47.035.945.148 1.15.55.995.356-.136.396-.263.136-.424-.418-.258-.324-1.325.147-1.663.17-.122.494-.068.72.12.611.506.497-.162-.149-.878-.593-.656-.792-2.782-.243-2.588.178.063.283.387.235.721-.08.553-.058.559.249.06.185-.3.548-.465.808-.366.3.116.471-.015.471-.362 0-.741 1.174-2.195 1.433-1.776.113.182.044.33-.153.33s-.266.148-.155.329c.111.18.012.288-.221.24-.24-.05-.424.19-.424.552 0 .352-.179.755-.398.895-.31.198-.285.425.108 1.025.278.425.412.922.299 1.106-.308.498.128.403.68-.149.265-.266.651-.389.857-.273.284.16.284.112 0-.196-.416-.45-.206-1.388.248-1.107.344.212.37-.213.041-.661-.43-.586-1.094-.533-.906.072.206.663-.299 1.625-.662 1.261-.137-.136-.083-.35.12-.475.202-.125.342-.508.31-.85-.082-.9.898-.974 1.74-.132.55.55.665.586.499.153-.186-.485-.062-.54.91-.41.884.12 1.226.01 1.591-.512.305-.435.36-.79.158-1.033-.208-.251-.052-.61.486-1.115.696-.654.9-.699 1.676-.367.768.329.81.32.323-.062-.686-.54-.73-.895-.08-.646.264.102.498.025.52-.17.075-.661.15-.833.854-1.954.597-.95.704-1.014.705-.419 0 .386.125.778.277.872.152.093.272-.15.268-.542-.01-1.03.68-2.543 1.056-2.311.176.109.32.04.32-.152 0-.244.22-.234.72.033.626.334.669.321.326-.095-.317-.384-.296-.6.106-1.092.433-.531.477-.538.324-.054-.101.323-.01.56.214.56.228 0 .402-.469.419-1.122.03-1.156.296-1.7.657-1.34.113.114.005.454-.24.756-.295.363-.31.467-.046.308.225-.135.4-.083.4.118 0 .197.138.273.306.169.169-.105.217-.422.108-.706-.114-.297.022-.676.322-.895.285-.21.665-.765.844-1.234.178-.47.517-.854.753-.854s.888-.518 1.448-1.151c.56-.633 1.024-1.029 1.029-.88.005.149.158.016.34-.296.181-.312.487-.47.68-.35.228.14.256.065.08-.22-.148-.24-.307-.783-.352-1.206-.073-.69-.04-.713.319-.222.366.5.468.463 1.182-.44.43-.544.961-.99 1.181-.992.22-.002.4-.195.4-.43 0-.233.36-.618.8-.853.44-.236.8-.522.8-.637 0-.403 1.818-2.239 2.019-2.038.112.112.351-.185.532-.66.18-.475.462-.78.626-.68.163.101.394-.121.513-.495.404-1.273 2.308-3.25 2.839-2.948.193.11.246.084.117-.058-.363-.402 1.11-2.768 1.914-3.074.41-.156.72-.545.72-.903 0-.346.144-.718.32-.827.176-.109.32-.486.32-.838s.129-.56.286-.463c.157.097.62-.244 1.03-.757.408-.514.878-.85 1.044-.748.171.106.223-.112.12-.504-.121-.465-.033-.69.27-.69.248 0 .45-.216.45-.48s.146-.48.324-.48c.179 0 .64-.648 1.024-1.44.385-.792.779-1.44.876-1.44.097 0 .144-2.052.104-4.56-.088-5.586 0-6.12.963-5.801.39.13 1.07.25 1.51.27.471.02.763.204.711.447-.06.283.123.345.583.2.506-.161.712-.055.84.433.092.356.37.724.617.819.246.094.448.6.448 1.123s.127 1.03.281 1.125c.155.096.36.476.457.844.126.481.051.623-.265.501-.283-.108-.378-.007-.267.283.095.248.477.548.849.666 1.178.374 1.952 1.41 1.053 1.41-.248 0-.42.212-.382.47.089.607.514 1.04.514.524 0-.215.151-.299.336-.185.232.144.227.338-.016.63-.243.293-.248.488-.015.631.29.18.49-.453.373-1.19-.086-.541.574-.192.764.405.112.354.332.565.488.469.485-.3 2.822 2.04 2.66 2.663-.109.413.16.672 1.02.983.905.327 1.132.56 1.01 1.031-.144.546.124.757.82.647.132-.021.24.193.24.476 0 .312.178.446.454.34.428-.164.996.6.869 1.17-.032.145.091.17.274.058.393-.243 2.28 1.44 2.044 1.821-.089.144.1.353.419.466.699.246 1.617 1.28 2.034 2.29.168.407.413.673.546.591.132-.081.272.295.312.837.083 1.154.543 1.751.901 1.171.144-.232.115-.316-.07-.202-.174.108-.316-.014-.316-.271 0-.393.09-.386.566.045.312.282.707.426.88.32.17-.107.623.203 1.003.688.572.729.668.769.556.23-.098-.469.03-.65.456-.65.326 0 .592.12.592.27 0 .148.148.178.328.067.18-.111.288-.02.24.202-.048.223.181.463.51.535.352.076.514-.005.395-.2a.385.385 0 0 1 .122-.529c.181-.112.325.1.325.477s.144.589.325.477c.18-.11.262-.305.183-.431-.078-.127.208-.26.635-.295.428-.035.777.07.777.234 0 .454-.564.702-.748.329-.09-.182-.12-.147-.068.078a.418.418 0 0 0 .497.314c.263-.061.34.138.225.579-.144.552-.094.604.28.294.425-.354.597-.189.479.46-.028.154.176.192.454.086.294-.113.581.004.687.278.1.26.297.402.439.314.392-.242 1.296.19 1.091.522-.099.16-.336.195-.527.077-.213-.132-.255-.065-.109.171.131.213.406.326.61.251.203-.074.622.085.93.353.308.269.56.337.56.153 0-.185-.216-.419-.48-.52-.264-.101-.48-.32-.48-.486 0-.177.4-.152.96.06.528.2.96.483.96.63 0 .149-.144.18-.32.072-.5-.309-.375.035.178.495.407.338.48.338.4-.001a.493.493 0 0 1 .302-.561c.27-.1.332.044.19.44-.117.323-.098.484.041.358.14-.126.558-.082.931.098.62.298.63.287.118-.127-.308-.249-.56-.572-.56-.717 0-.146.396.104.88.554.835.777 2 1.09 2 .537 0-.14.22-.172.487-.07.267.103 1.183-.113 2.036-.48 1.7-.73 5.035-.826 5.294-.151.08.206.44.297.804.203.38-.1.66-.019.66.19 0 .214.33.304.8.22.592-.108.8-.007.804.393.004.426.063.448.281.103.234-.369.3-.369.422 0 .09.27.683.452 1.56.48 3.278.102 6.332.513 8.09 1.09 1.034.339 2.006.538 2.16.442.155-.096.282-.021.282.165s.288.339.64.339c.356 0 .64.213.64.48 0 .264.153.48.34.48.186 0 .249-.144.14-.32-.109-.176-.045-.32.141-.32.187 0 .34.225.34.501 0 .35.186.443.615.307.42-.134 2.066.628 5.2 2.408 2.521 1.432 4.632 2.735 4.69 2.894.06.16.324.29.589.29.514 0 4.948 2.732 6.043 3.724.362.328 1.046.8 1.52 1.05s.795.52.713.602c-.081.081-.01.405.158.72.213.399.186.622-.091.738-.219.091.159.091.839 0 1.454-.195 2.87.095 2.6.531-.105.17.006.232.245.14.239-.091.838.181 1.332.606.606.52.762.817.479.911-.297.1-.256.203.14.355.335.129.482.088.365-.1-.381-.618.991-.305 2.164.492 1.072.728 1.41 1.295 1.627 2.73.038.253.186.647.328.875.145.233.094.611-.117.866-.206.249-.261.636-.122.861.14.226.29 1.037.334 1.803.074 1.27.033 1.355-.465.97-.5-.387-.5-.368.009.232.41.483.461.748.197 1.013-.206.206-.254.605-.112.94.135.32.287 1.013.338 1.54.051.529.247 1.665.436 2.525.324 1.48.298 1.606-.478 2.326-.452.418-.97.668-1.153.555-.381-.235-.046 1.089.425 1.68.328.41 1.937.801 1.696.41-.085-.138-.009-.341.17-.452.418-.258.42.66.004 1.438-.225.42-.21.669.05.829.242.15.282.087.116-.182-.17-.274-.106-.362.19-.263.765.255.516 1.33-.355 1.533-.506.119-.838.448-.903.895-.057.394-.34.718-.64.732-.435.02-.447.06-.063.211.724.285 1.282.939 1.03 1.209-.123.133.08.083.454-.11.373-.194.78-.25.906-.124s.2.085.164-.091c-.035-.176-.034-.68.003-1.12.082-.976.954 1.937.964 3.216.004.449.145.955.315 1.125.17.17.392 1.307.492 2.526.1 1.219.318 2.379.483 2.578.189.227.18.483-.026.688-.22.221-.167.457.168.735.597.496.637 1.329.094 1.915-.32.344-.32.385 0 .205.253-.144.407-.015.42.353.043 1.229.224 2.557.441 3.241.125.393.108.693-.037.668-1.17-.204-1.52.796-.382 1.094.501.13.637.353.51.837-.095.362-.04.74.123.84.162.1.21.32.108.486a.352.352 0 0 1-.482.121c-.162-.1-.209.041-.104.313.104.272.319.415.476.318.158-.097.287.395.287 1.095 0 .705-.179 1.356-.4 1.46-.32.148-.32.223 0 .372.262.123.4.935.4 2.363 0 1.907-.08 2.197-.64 2.343-.397.104-.64.437-.64.875 0 .55.142.67.64.54.517-.135.645-.005.666.683.014.467.083 1.829.154 3.025.07 1.196.022 2.11-.106 2.03-.13-.08-.185.634-.125 1.586.094 1.478.035 1.703-.4 1.536-.68-.262-.649.179.05.698.53.392.525.442-.08.892-.592.442-.598.493-.08.694.427.165.56.587.56 1.764 0 .85-.15 1.64-.335 1.754-.193.12-.22.365-.064.58.352.48.503 3.625.198 4.118-.129.208-.266 1.25-.306 2.316-.105 2.835-.508 5.94-.751 5.79-.116-.072-.223.256-.237.728-.047 1.555-.097 1.7-.504 1.47-.283-.159-.303-.12-.071.135.393.43.207 3.007-.2 2.755-.155-.096-.196.049-.092.322.112.292.02.497-.224.497-.257 0-.193.163.168.426.562.412.561.427-.02.432-.33.003-.691-.133-.801-.3-.122-.187-.286-.168-.42.048-.12.194-.057.354.14.354.196 0 .264.15.15.334-.113.183-.026.55.194.815.32.387.453.4.676.066.34-.511.018 5.473-.392 7.265-.161.704-.296 1.736-.3 2.293-.005.557-.174 1.069-.376 1.136-.233.077-.36.938-.345 2.347.07 6.955.033 7.658-.445 8.185-.345.381-.374.568-.102.659.552.184.053 2.18-.545 2.18-.26 0-.383.146-.272.325.11.179.35.233.53.121.21-.129.202.037-.022.454-.193.362-.351.964-.351 1.338 0 .386-.143.591-.33.475-.212-.13-.286.208-.205.94.07.63-.054 1.392-.274 1.693-.22.3-.328.735-.24.964.088.23-.031.649-.265.93-.234.282-.442.749-.461 1.036-.102 1.488-.166 1.669-.515 1.453-.232-.143-.282-.087-.136.15.128.207.14.804.024 1.326-.18.819-.293.905-.823.621-.75-.4-.79-.207-.104.48.392.391.426.615.147.952-.2.242-.237.49-.082.55.156.062.219.65.14 1.31-.08.658-.253 1.13-.385 1.049-.131-.081-.167.23-.079.69.11.577.046.767-.206.611-.201-.124-.366-.074-.366.113 0 .186.148.339.33.339.835 0-.056 4.235-1.494 7.108-.766 1.53-2.41 3.452-2.95 3.452-.164 0-.387.36-.498.8-.11.44-.414.8-.674.8-.576 0-.631.534-.074.72.288.096.177.564-.4 1.68-.872 1.688-1.782 2.479-2.17 1.888-.398-.608-1.175-.685-1.584-.156-.348.448-.432.452-.715.028-.224-.334-.323-.356-.326-.072-.006.53 1.509 1.102 2.277.858 1.036-.328.65.374-.694 1.264-1.614 1.067-2.868 1.567-2.868 1.142 0-.172-.294-.019-.652.34-.63.63-1.268.606-1.268-.05 0-.176.129-.24.286-.143.345.214.635-.46.44-1.021a.344.344 0 0 0-.514-.19c-.205.116.054-.247.575-.807.948-1.017.948-1.018.174-.93-.542.062-.812-.09-.899-.509-.078-.378.007-.517.232-.378.196.121.26.376.141.567-.128.208-.065.256.155.12.203-.126.379-.544.39-.93l.02-.701.29.72c.159.396.438.72.62.72.414 0 .415-.203.005-.968-.258-.483-.188-.678.351-.966l.675-.361-.67-.625c-.687-.64-.94-1.444-.337-1.071.216.133.307-.256.257-1.101-.042-.72-.188-1.308-.324-1.308-.364 0 .067-1.06.61-1.499.27-.219.362-.548.217-.782-.137-.221-.26-1.179-.272-2.127-.017-1.337-.166-1.83-.663-2.193-.354-.26-.595-.749-.54-1.094.056-.344-.052-.625-.24-.625-.187 0-.34-.2-.34-.446 0-.245-.216-.529-.48-.63-.58-.222-.643-1.16-.08-1.174.221-.005.149-.156-.162-.337-.31-.18-.706-.24-.88-.132-.175.108-.318.036-.318-.161s-.118-.285-.263-.195c-.263.162-1.326-.885-1.348-1.329-.014-.286-2.257-1.704-3.909-2.472-.66-.306-1.2-.649-1.2-.76 0-.113-.379-.226-.842-.253-.462-.027-.93-.194-1.04-.37-.11-.178-.811-.568-1.559-.867-.747-.299-1.359-.69-1.359-.868 0-.188-.2-.158-.476.07-.382.318-.51.306-.65-.058-.105-.274-.55-.427-1.123-.388-.522.036-.869-.064-.77-.222.097-.159-.11-.288-.463-.288-.352 0-.73-.146-.84-.324-.11-.178-.586-.317-1.059-.31-1.414.021-2.939-.374-2.939-.762 0-.2-.324-.385-.72-.41-1.024-.066-2.749-.374-3.553-.635-.773-.25-1.231-.306-4.847-.586-1.408-.109-2.74-.26-2.96-.335-.22-.076-.4.073-.4.332 0 .542-.82.635-1.133.128-.116-.188-.395-.271-.62-.185-.225.086-.588-.012-.808-.218-.306-.288-.434-.279-.55.038-.116.318-.255.327-.6.04-.31-.256-.449-.264-.449-.022 0 .194-.236.258-.532.144-.317-.121-.452-.074-.334.117.109.177-.005.321-.254.321-.248 0-.377-.12-.287-.267.091-.146.013-.266-.174-.266-.508 0-.407 1.144.141 1.6.394.326.48.304.48-.121 0-.286.144-.52.32-.52.469 0 .392.865-.093 1.05-.227.088-.687-.04-1.021-.285-.48-.351-.661-.36-.862-.044-.183.289-.266.244-.299-.16a6.919 6.919 0 0 0-.125-.88 20.746 20.746 0 0 1-.13-.56c-.03-.132-.259.12-.511.56l-.46.8.11-1.053c.071-.678-.018-1.01-.249-.932-.198.067-.343.43-.322.806.02.376-.087.607-.24.513-.153-.095-.278-.01-.278.19 0 .5-.953-.486-.986-1.021-.014-.233-.223.009-.465.537-.242.528-.446.764-.454.525-.008-.247-.216-.356-.484-.253-.259.099-.54.066-.626-.073-.086-.14-.747-.276-1.469-.305-.916-.036-1.243.06-1.084.317.133.216.087.28-.112.158-.187-.115-.274-.462-.193-.77.132-.505-.166-.56-3.082-.56-3.234 0-3.824.201-3.84 1.307-.003.191-.213.347-.467.347-.344 0-.385-.146-.16-.567.243-.453.183-.557-.302-.521-.387.03-.551.224-.456.54.106.351.044.332-.211-.065-.471-.732-1.02-.708-1.936.087-.432.374-.828.514-.94.332-.107-.172-.37-.032-.586.314-.258.413-.275.627-.05.627.187 0 .242.16.121.356-.12.195-.021.497.221.67.342.243.315.273-.119.134-.974-.313-.663.982.359 1.49.853.427.907.417.762-.136-.107-.41.016-.594.401-.594.442 0 .48.093.184.449-.286.344-.276.487.041.614.316.127.32.172.013.192-.22.013-.4.193-.4.398 0 .205.094.28.209.165.114-.115.398.041.63.347.389.513.422.502.431-.146.006-.386.157-.792.336-.902.178-.111.24-.372.136-.58-.104-.207.016-.127.266.178s.557.453.68.33c.125-.124.131.022.015.325-.116.302-.32.55-.453.55-.132 0-.17.37-.084.822.19.99.667.63.905-.683.231-1.272.353-1.306.603-.166.214.972.806 1.686.806.971 0-.205.209-.293.464-.195.329.126.408.02.273-.366-.157-.448-.114-.471.248-.135.344.32.358.538.065 1.007-.317.508-.269.627.317.78.38.1.78.035.89-.142.123-.2.353-.139.6.158.219.264.297.645.173.845-.145.235-.012.324.372.25.328-.063.611-.329.629-.59.064-.95.138-1.028.61-.636.39.325.48.307.48-.094 0-.271-.18-.559-.4-.64-.305-.111-.312-.24-.029-.542.504-.536 1.162-.078.966.672-.087.332-.024.604.138.604.163 0 .232.36.152.8-.104.572-.004.8.353.8.387 0 .416.098.13.442-.284.343-.25.488.15.641.284.11.633.127.775.04.141-.088.34.056.44.319.102.263.341.478.533.478s.26-.144.151-.32c-.348-.564.113-.343.835.4.385.396.583.515.44.265-.191-.334-.123-.402.256-.256.38.146.464.062.319-.318-.134-.349-.075-.44.184-.28.21.13.35.118.31-.027-.038-.146.042-.594.179-.998.27-.797.946-.746 2.357.177.816.533.957.876.25.604-.62-.237-2.46.412-2.229.787.1.16.097.556-.006.879-.208.656-1.056.685-2.575.086a56.763 56.763 0 0 0-1.38-.527c-.231-.081-.317-.315-.19-.52.159-.257.091-.282-.22-.082-.59.38-2.95.373-3.225-.01-.129-.179-.403-.144-.682.087-.384.32-.493.241-.624-.445-.138-.72-.068-.809.524-.66.375.094.898.02 1.16-.166.402-.283.39-.309-.072-.16-.303.096-.637.036-.742-.136-.106-.17-.35-.214-.541-.096-.23.142-.284-.03-.16-.506.155-.59.08-.693-.414-.564-.332.087-.651.013-.71-.163-.059-.177-.318-.062-.575.255-.258.317-.31.481-.116.365.194-.116.598-.032.898.187.725.53.356 1.434-.548 1.338-.386-.041-.703-.099-.703-.128 0-.044-2.171-.278-3.92-.422-.22-.018-.4-.117-.4-.22-.001-.102-.604-.194-1.34-.204-.738-.01-1.395-.189-1.465-.4-.07-.21-.268-.382-.44-.382s-.214.158-.095.352c.406.656-1.078-.318-1.637-1.075l-.53-.717.15.886c.147.861.118.88-1.006.681-.636-.113-1.293-.332-1.46-.486-.432-.4-1.217-.35-.963.06.116.188-.09.42-.458.517-.367.096-.576.324-.463.508.114.183.053.238-.134.122-.188-.116-.59-.115-.895.003-.521.2-.522.236-.007.612.597.436.683.255-1.176 2.454-.62.731-.753 1.36-.219 1.03.376-.232 1.292.821 1.051 1.21-.082.134.11.246.429.249.497.004.511.053.099.35-.415.298-.41.323.04.18.65-.206 1.247.353 1.017.952-.133.348-.273.365-.622.076-.367-.305-.409-.262-.226.231.299.807.84 1.138 1.12.685.143-.231.372-.048.62.497.41.9 1.052 1.124 1.438.5.149-.242.434-.107.848.4.524.64.59.662.417.131-.183-.555-.102-.536.662.16.478.436.765.613.638.393-.257-.447.31-.562.584-.119.096.155.438.35.761.435.497.13.599-.062.66-1.241.042-.804-.07-1.395-.263-1.395-.184 0-.334-.177-.334-.394 0-.216.339-.036.753.4.414.437.618.881.453.989-.164.107.058.58.494 1.05.584.63.78.715.746.322-.026-.293.206-.572.514-.621.308-.05.56.05.56.22 0 .172.129.232.286.134.158-.097.367.034.466.291.099.258.042.553-.126.657-.169.104-.306.325-.306.49 0 .407 1.19.385 1.445-.026.111-.18.03-.289-.182-.24-.216.049-.438-.335-.505-.872l-.12-.96.494.8c.423.685.468.701.311.116-.163-.61-.07-.672.867-.58.577.056 1.122.114 1.21.128.088.014-.013.135-.223.269-.253.16-.282.404-.085.715.25.396.299.382.303-.089.003-.308.164-.56.359-.56.195 0 .271-.216.17-.48-.256-.667.2-.599 1.076.16.406.352.868.64 1.028.64.159 0 .2.144.092.32-.109.176-.1.48.02.675.16.256.283.251.449-.016.125-.204.53-.393.897-.42.368-.029.599-.165.513-.305-.243-.393.348-.299.77.123.288.289.344.214.241-.321-.18-.94-.479-1.38-.799-1.183-.145.09-.348-.055-.45-.322-.145-.377-.064-.42.366-.19.304.163.686.275.85.248.163-.027.412.383.553.911.142.528.503 1.14.805 1.36.51.374.51.4.006.4-1.156 0-.468.52.786.594.73.043 1.414.096 1.52.118.106.022.57-.144 1.032-.369.983-.478 2.29.01 2.007.75-.094.244-.023.534.158.645.18.112.234.446.12.742-.182.477-.148.485.294.072.276-.258.436-.685.357-.95-.092-.307-.012-.277.22.085.2.312.499.483.664.381.165-.102.3.111.3.474 0 .362-.152.658-.338.658-.187 0-.25-.144-.142-.32.11-.176.046-.32-.14-.32-.456 0-.429.416.06.943.322.346.319.385-.014.196-.386-.218-.4.04-.092 1.725.015.08.2-.028.41-.24.43-.428 1.022-.526.776-.128-.087.141.13.436.48.655.576.36.607.34.313-.209-.286-.535-.228-.589.49-.452.521.1.677.242.433.393-.275.17-.284.3-.03.456.195.12.502.128.682.017.18-.112.289-.012.24.22-.048.234.128.425.392.425s.67.18.903.4c.233.22.557.4.72.4.164 0 .261-.18.217-.4-.083-.419.182-.435 1.124-.069.415.162.516.095.382-.255-.104-.27.04-.56.333-.671.283-.11.434-.067.335.092-.099.16.013.484.25.72.458.459.366 1.223-.15 1.223-.17 0-.223-.143-.116-.317.113-.182-.018-.234-.31-.122-.303.116-.437.415-.332.743.112.354.002.549-.31.549-.305 0-.486-.299-.486-.8 0-1.143-.355-.638-.389.554-.028.983-.57 1.453-.57.494 0-.275-.131-.419-.29-.32-.39.24-5.12-.678-5.617-1.09-.216-.18-.484-.235-.595-.123-.112.112-.387.057-.61-.12-.441-.35-4.951-1.793-5.609-1.794-.22 0-.4-.145-.4-.321 0-.176-.083-.236-.185-.134-.103.102-1.147-.074-2.32-.39-1.174-.317-4.007-.75-6.295-.964-2.288-.213-4.88-.528-5.76-.7-.88-.173-2.968-.383-4.64-.468-1.672-.084-3.432-.28-3.913-.436-.48-.156-.948-.161-1.04-.012-.092.149-.455.195-.807.103-.357-.093-.64-.01-.64.19 0 .197-.231.358-.514.358-.333 0-.447.174-.323.496.104.273.06.416-.1.317-.16-.098-.545.074-.855.384-.31.31-.753.564-.983.566-.84.007-.558.636.375.836.528.112.816.224.64.248-.176.023-.108.176.151.34.259.164.37.398.248.52-.123.123-.434.049-.692-.165-.405-.336-.417-.278-.087.432.209.451.56.822.78.823.22 0 .4.135.4.296 0 .161-.18.375-.4.474-.22.1-.112.142.24.095.378-.051.622-.31.597-.631-.025-.3.083-.466.24-.37.156.097.283.456.283.797 0 .342.14.622.31.622.17 0 .23-.252.13-.56-.146-.456-.118-.474.148-.097.23.325.195.782-.12 1.534-.391.938-.386 1.094.041 1.258.269.103.422.36.34.572-.081.212.047.386.285.386.314 0 .35-.155.13-.566-.378-.705-.395-1.342-.03-1.116.15.093.211-.16.134-.56-.164-.861.669-1.76 1.053-1.138.143.231.103.302-.098.177-.353-.217-.351 3.148.002 3.5.1.1.471.026.825-.163.523-.28.672-.24.79.214.11.419.156.378.184-.162.02-.396.196-.72.391-.72s.272-.216.17-.48c-.101-.264-.045-.48.126-.48.17 0 .31.297.31.66 0 .4.139.572.354.44.239-.148.307.081.21.7-.08.506-.085.74-.011.52.074-.22.411-.4.75-.4.34 0 .617-.127.617-.282 0-.156.288-.358.64-.45.352-.092.64-.037.64.122 0 .16-.225.29-.499.29s-.408.148-.296.328c.111.18.026.289-.189.24-.24-.053-.404.305-.424.926-.041 1.3-.292 1.53-1.113 1.017-.535-.335-.741-.336-1.068-.01-.328.328-.314.464.072.708.262.166.381.304.264.306-.116.003.056.738.383 1.633.473 1.294.502 1.592.143 1.454-.479-.184-.91.216-.584.54.106.106.606-.021 1.111-.283.506-.261.932-.435.947-.387.014.049.083.808.151 1.688.09 1.132.041 1.413-.164.96-.159-.352-.3-.996-.312-1.43l-.024-.793-.512.732c-.476.68-.47.764.08 1.18.326.248.432.454.237.46-.507.014-.19 1.321.547 2.257.343.436.585.595.536.353-.048-.242.092-.506.312-.587.22-.08.401.046.402.28.001.235.22.845.486 1.355s.41 1.002.318 1.093c-.09.091-.166-.003-.166-.208s-.152-.373-.338-.373c-.187 0-.237.166-.111.37.143.232.088.282-.15.135-.521-.322-2.28-.522-2.28-.259 0 .118.383.543.85.945.467.401.683.73.48.73-.203 0-.37.144-.37.32 0 .176.108.284.24.24.132-.044.24.064.24.24s-.108.284-.24.24c-.656-.219-.128.298.58.567.518.198.732.453.581.697-.174.281-.27.286-.36.018-.067-.201-.365-.28-.661-.173-.297.106-.433.075-.302-.068.13-.144.08-.451-.112-.682-.484-.584-1.316.25-1.055 1.057.158.487.132.504-.156.104-.543-.756-.419-1.297.457-1.987.642-.505.735-.732.441-1.086-.204-.246-.677-.437-1.052-.424-.642.02-.646.036-.062.264.425.167.5.316.24.477-.208.129-.523.145-.699.036-.176-.109-.32-.057-.32.115 0 .171.18.384.4.473.283.114.29.169.023.187-.273.018-.296.313-.08 1.063.163.57.297 1.044.297 1.052 0 .008-.322.038-.716.068-.566.042-.616-.01-.24-.252.421-.27.42-.342-.004-.621-.377-.248-.386-.316-.04-.32.307-.004.343-.125.12-.405-.174-.22-.277-.65-.228-.956.072-.44-.027-.493-.479-.25-.313.167-.66.213-.77.101-.339-.338-.226.542.164 1.286l.366.7-.76-.64c-.528-.444-.633-.474-.34-.096.234.304.328.834.212 1.2-.125.395-.065.655.153.655.198 0 .277-.134.176-.298-.101-.164-.002-.403.221-.531.223-.129.302-.12.177.02-.126.139-.104.486.048.771.22.41.118.518-.491.518-.62 0-.769-.166-.769-.854 0-1.052-.294-1.866-.674-1.866-.3 0-1.566 1.164-1.566 1.44v.544c0 .265-.102.281-.332.052-.229-.23-.228-.604.002-1.21.358-.943.194-1.512-.414-1.437-.788.098-1.207-.04-1.023-.338.105-.17-.545-.681-1.445-1.137-1.597-.81-1.632-.857-1.464-2.012.094-.65.177-1.246.184-1.323.007-.078.215.137.464.476.248.34.37.75.27.91-.1.162-.028.2.158.084.328-.203-.17-1.808-.56-1.802-.59.01-1.026.716-1.054 1.71-.019.656-.196 1.163-.407 1.163-.235 0-.347-.475-.302-1.28.076-1.347-.02-1.463-.797-.96-.314.203-.343.312-.084.315.226.003.368.348.33.805-.07.858-.566 1.128-.566.309 0-.386-.132-.42-.617-.162-.91.488-1.629.08-1.586-.901.024-.542.09-.645.183-.286.081.308.267.56.413.56.147 0 .191-.29.098-.645-.137-.524-.056-.602.43-.42.526.197.546.16.165-.308-.329-.405-.58-.456-1.04-.21-.503.27-.606.214-.606-.326 0-.687-.464-.875-.803-.326-.296.478-.75.084-.653-.565.046-.308.022-.38-.053-.16-.166.482-.282.492-1.04.085-.494-.263-.562-.212-.423.317.09.347.292.552.448.455.156-.096.284.05.284.324s.152.499.339.499c.186 0 .257-.132.158-.293-.1-.161.251-.13.78.07.683.258.963.576.963 1.093 0 .401-.144.73-.32.73-.176 0-.32-.2-.32-.446 0-.245-.228-.533-.506-.64-.707-.271-.842-.244-.614.126.204.33-.37.437-1.76.328-.924-.073-1.645-.652-1.074-.863.406-.15.198-1.385-.233-1.385-.15 0-.196.252-.1.56.094.308-.05.2-.32-.24-.372-.607-.493-.667-.502-.25-.008.37-.178.486-.523.353-.691-.265-1.117.508-.728 1.32.308.643.304.643-.182.036-.274-.342-.503-.486-.508-.32-.006.165-.186.085-.4-.18-.517-.635-1.446-.77-2.021-.293-.378.314-.427.288-.262-.14.147-.385.02-.526-.473-.526-.42 0-.682-.21-.696-.56-.017-.44-.097-.404-.374.173-.197.409-.577.685-.859.625-.278-.059-.675.187-.882.547-.375.651-.378.651-.59.015-.528-1.58-.564-1.632-.707-1.036-.074.31-.263.484-.42.387-.375-.231-.752 1.285-.5 2.008.163.469.116.459-.285-.06-.265-.342-.481-.82-.481-1.062 0-.295-.212-.373-.64-.237-.479.152-.641.057-.645-.378-.004-.478-.057-.499-.299-.117-.162.255-.223.58-.136.72s.005.255-.181.255c-.187 0-.34-.144-.34-.32 0-.408-1.607-.408-2.24 0-.32.207-.346.312-.08.315.22.003.4.158.4.344 0 .186-.13.257-.292.158-.16-.1-.365 0-.454.221-.09.221-.174.078-.188-.318-.014-.396-.179-.72-.367-.72-.196 0-.255.273-.138.64.236.744-.403.893-.684.16-.102-.264-.3-.48-.442-.48-.302 0-.242.63.114 1.2.142.227.1.4-.096.4-.19 0-.509-.357-.708-.794-.378-.83-1.307-1.31-1.866-.965-.18.112-.251.328-.157.481.095.153-.205.21-.665.126-.591-.107-.793-.03-.687.26a.512.512 0 0 0 .59.305c.243-.058.329.005.192.143-.48.48-1.355.418-1.764-.125-.36-.478-.45-.487-.715-.07-.426.675-.385.951.176 1.166.377.145.404.289.12.63-.277.335-.27.56.032.923.23.277.26.48.073.48-.424 0-.785-.846-.954-2.24-.15-1.232-.408-1.66-.63-1.04-.173.486-1.05.537-1.05.061 0-.186.145-.25.32-.141.177.109.32-.027.32-.301 0-.286.275-.499.64-.499.353 0 .605-.18.56-.4-.043-.22.112-.36.345-.312.233.048.332-.06.22-.241-.123-.2-.64.003-1.313.516-.61.466-1.208.746-1.33.624-.123-.122-.035-.338.195-.48.307-.19.233-.307-.278-.44-.605-.158-.67-.081-.503.587.158.63.09.737-.371.593-.534-.166-.535-.156-.005.184.45.29.48.443.16.79-.22.238-.507.366-.639.287-.132-.08-.24.142-.24.494 0 .736-.5 1.164-.796.683-.111-.179-.06-.325.114-.325.173 0 .073-.575-.221-1.277-.295-.702-.624-1.278-.732-1.28-.107-.003-.168.64-.135 1.424.04.961-.085 1.482-.382 1.596-.242.093-.361.04-.264-.117.098-.158.042-.624-.123-1.036-.165-.413-.31-.57-.32-.35-.012.22-.245.4-.52.4-.314 0-.41.148-.258.4.163.272.067.26-.301-.04-.476-.385-.542-.358-.542.222 0 .363.167.763.37.889.221.136.283.088.153-.122-.132-.214.035-.331.429-.302.386.03.614.247.567.54-.052.327.146.47.588.426.373-.037.667.12.667.356 0 .232-.225.406-.5.387-.376-.027-.486.257-.452 1.161.059 1.515-.377 1.816-.814.563-.39-1.12-.708-1.29-.452-.24.286 1.165.737 1.587 1.247 1.165.354-.294.437-.173.437.636 0 .675.156.999.48.999.264 0 .48-.144.48-.32a.32.32 0 0 0-.32-.32c-.176 0-.32-.24-.32-.533 0-.294.095-.439.21-.323.117.116.432.032.702-.187.35-.283.426-.288.263-.016-.126.209-.14.935-.031 1.612.167 1.048.324 1.242 1.046 1.297.656.049.74-.007.37-.248-.4-.26-.377-.313.141-.317.615-.005.615-.01 0-.509-.341-.277-.44-.412-.22-.3.22.11.4.065.4-.103 0-.167-.214-.386-.475-.487-.277-.106-.394-.393-.28-.688.106-.278.27-.429.364-.335.094.094.355.02.579-.166.3-.249.494-.175.738.28.182.34.24.71.129.82-.111.112.094.203.455.203.638 0 .873-.892.341-1.291-.29-.219.057-1.589.402-1.589.143 0 .547.365.898.81.35.447.723.673.828.503.105-.17.042-.4-.14-.513-.181-.112-.229-.368-.105-.569.4-.647.406-1.948.01-2.456-.338-.435-.316-.441.175-.056.397.31.56.329.56.061 0-.208.144-.289.32-.18.467.288.393.875-.08.635-.22-.111-.14.01.177.269.318.26.425.522.24.584-.232.077-.239.458-.021 1.216.38 1.328-.003 1.711-1.462 1.458-.733-.127-.987-.05-.987.3 0 .258.107.404.238.323.453-.28 1.292.258 1.116.717-.129.335-.01.407.434.266.336-.107.704-.044.817.139.208.336-.227.468-1.11.339-.389-.057-.374.046.08.547.307.34.558.858.558 1.152 0 .294.144.535.32.535.176 0 .304.324.283.72-.028.542-.073.581-.183.16-.151-.577-.74-.79-.74-.266 0 .161-.085.516-.19.787-.14.368-.017.46.482.364.369-.07.802-.21.963-.31.317-.196-.158-2.325-.656-2.938-.192-.236-.122-.429.203-.554.57-.218 1.162.98.972 1.965-.067.347.064.605.306.605.668 0 .077-2.37-.74-2.967-.664-.485-.87-1.86-.244-1.62.255.098.533.006.62-.204.112-.276.245-.253.479.083.178.255.253.578.168.716-.086.138.068.166.34.061.327-.125.497-.008.497.343 0 .325-.145.443-.374.301-.254-.157-.307-.054-.164.318.142.37.09.475-.16.32-.25-.155-.301-.049-.156.33.118.307.214.764.214 1.015 0 .252.28.698.624.991.631.54.585 1.252-.055.856-.208-.129-.256-.066-.119.155.167.27.404.277.871.027.49-.262.824-.224 1.41.16 1.019.667 1.202.633.784-.147-.19-.357-.474-.57-.629-.475-.155.096-.386.005-.513-.2-.145-.234-.093-.29.138-.147.22.137.37.022.37-.285 0-.455.088-.448.776.06.427.317.751.848.72 1.18-.031.333.16.675.423.76.344.112.385.054.144-.204-.184-.198-.275-.88-.2-1.515.087-.75.225-1.01.391-.741.193.311.365.325.692.054.3-.25.58-.26.904-.036.355.247.372.366.07.489-.22.089-.4.6-.4 1.135 0 .831.07.914.483.57.396-.328.41-.496.08-.919-.35-.448-.336-.464.106-.12.69.538.954.188.588-.777-.316-.83-.164-1.38.38-1.38.177 0 .254.422.173.938-.1.637.004.996.327 1.12.72.276.827.225.627-.298-.102-.264-.045-.48.125-.48h.55c.132 0 .244.18.248.4.004.22.234.383.511.363.348-.025.478.2.42.722-.045.417.051.675.214.574a.35.35 0 0 0 .114-.481c-.102-.164-.032-.298.154-.298.466 0 .427.547-.06.852-.626.39-1.179.402-1.409.03-.124-.201-.059-.248.159-.113.214.133.37.034.37-.236 0-.256-.229-.552-.507-.66-.72-.275-.842-.242-.593.161.146.236.001.285-.434.147-.359-.114-.747-.055-.862.13-.115.187-.343.256-.507.155-.164-.101-.298.12-.298.494 0 .437.142.605.4.475.22-.112.127.02-.207.29-.334.272-.752.405-.93.295-.182-.113-.223-.04-.093.17.332.538 1.37.453 1.594-.13.105-.276.327-.417.492-.315.165.102.39.039.501-.14.356-.577.64-.352 1.207.955.305.704.61 1.28.678 1.28.068 0 .192-.356.275-.79.083-.435.043-.724-.09-.642-.132.081-.328-.083-.437-.366-.16-.418-.043-.475.633-.305.457.115.773.095.703-.044-.07-.14.206-.572.614-.962.76-.728.86-.683.75.344-.039.376.095.538.364.44.234-.085.388-.323.342-.528-.047-.205.06-.644.237-.974.217-.405.216-.655-.004-.764-.179-.089-.142-.125.083-.08.799.158.645 1.514-.285 2.515-.499.536-.727.872-.507.746.391-.223.54.147.416 1.042-.032.237.095.337.283.22.187-.115.34-.058.34.129 0 .186.217.339.48.339.602 0 .609.237.024.822-.524.524-.958.614-.663.138.109-.176.037-.32-.16-.32s-.255-.167-.13-.37c.142-.229.088-.282-.142-.14-.465.287.03 1.308.772 1.593.604.232 1.187-.043.94-.443a.33.33 0 0 1 .112-.45c.155-.097.213-.539.128-.983-.199-1.037.609-1.098 1.273-.097.446.672.502.68 1.022.16.706-.705.802-.693.6.08-.222.848-.932 1.428-1.206.984-.145-.235-.397-.235-.838 0-.346.186-.542.478-.436.649.106.172.002.272-.231.224-.26-.054-.39.159-.335.552.048.352.12.952.16 1.333.073.71.526.838.946.267.139-.189.242-.123.251.16.01.29.197.164.474-.32.389-.68.459-.708.469-.187.006.338.1.524.21.414.11-.11.108-.438-.004-.73-.165-.429-.293-.454-.68-.134-.377.314-.574.313-.955-.003-.614-.509-.609-.842.016-1.082.273-.105.415-.058.315.104a.352.352 0 0 0 .121.481c.167.103.395.039.508-.143.112-.182.374-.228.582-.104.208.125.162-.04-.102-.366-.427-.528-.427-.576 0-.435.264.087.495.45.514.808.019.358.133.81.253 1.005.38.614.525 2.612.19 2.612-.174 0-.317.216-.317.48 0 .581-.529.639-.734.08-.105-.286-.25-.302-.514-.056-.273.255-.202.493.28.93.365.33.648.424.648.216 0-.203.216-.37.48-.37.311 0 .478.31.475.88-.003.498-.107.72-.24.51-.13-.202-.235.264-.235 1.037 0 .891.16 1.467.435 1.573.307.118.373 0 .221-.396-.173-.454-.135-.486.192-.16.328.325.297.587-.16 1.36-.31.526-.448.958-.306.961.141.003.042.145-.222.315-.32.207-.347.312-.08.315.22.003.4.154.4.337 0 .228-.194.227-.62 0-.55-.294-.614-.23-.56.548.049.725-.068.876-.66.856-.75-.027-.956.321-.395.668.179.11.248.325.155.477-.094.152-.032.362.138.466.173.107.252-.101.18-.474-.108-.561-.017-.629.577-.433a5.68 5.68 0 0 0 1.426.24c.538.007.676.15.544.565-.117.37.071.684.56.936.585.301.658.297.36-.02-.416-.442-.205-1.38.248-1.1.158.098.287-.053.287-.335 0-.282-.18-.49-.4-.461-.874.113-1.52-.041-1.52-.363 0-.186.134-.256.298-.155.163.102.39.036.502-.146a.4.4 0 0 1 .552-.115c.228.14.285-.027.165-.488-.156-.596-.084-.671.478-.493.548.174.622.108.433-.387-.168-.436.018-.359.693.288.508.486 1 .806 1.095.712.095-.095.344.034.554.287.252.304.27.527.054.661-.18.111-.577-.089-.881-.445-.387-.451-.624-.534-.784-.274-.173.279-.358.267-.735-.046-.433-.36-.504-.32-.504.28 0 .384.13.617.29.518.16-.098.215.11.122.461-.199.761.091.823.753.16.763-.761 1.123-.562 1.015.56-.06.624-.261 1.009-.5.96-.22-.043-.4.065-.4.24 0 .177.2.32.445.32.246 0 .529.217.63.48.102.265.455.48.785.48s.866.294 1.19.652c.324.358.787.576 1.03.483.28-.108.414.032.37.388-.038.307.048.829.19 1.16.15.347.118.832-.076 1.141-.222.356-.23.749-.025 1.158.198.395.069.33-.359-.181l-.668-.8.164 1.018c.163 1.007.155 1.015-.84.73-1.096-.315-1.57-.628-.95-.628.215 0 .31-.132.21-.293-.099-.16-.04-.34.131-.4.195-.067.2-.286.015-.585-.255-.411-.362-.39-.754.146-.252.344-.39.798-.31 1.01.11.283-.15.318-.975.132-1.372-.31-1.559.015-1.067 1.857.391 1.467.818 1.672 1.432.688.311-.498.602-.596 1.277-.43.481.117.955.336 1.054.485.098.149.479-.008.846-.35.366-.342.754-.534.86-.427.107.106.195-.046.195-.34 0-.293-.18-.537-.4-.543-.222-.005-.15-.156.161-.337.411-.239.506-.55.354-1.158-.152-.605-.104-.766.178-.591.216.133.661-.01 1.007-.322.34-.309.62-.404.62-.212 0 .191.167.754.371 1.25.205.495.349 1.008.32 1.14-.028.132.093.24.269.24.176 0 .332-.108.346-.24l.105-.937c.052-.465-.143-.77-.587-.914-.547-.179-.572-.242-.139-.36.36-.098.471-.364.353-.846-.095-.387-.057-.596.085-.466.142.13.45.077.687-.119.316-.262.43-.261.43.003 0 .198-.144.36-.32.36-.176 0-.32.23-.32.513 0 .35.171.449.534.31.712-.274 1.077.385.725 1.31-.167.44-.165.746.005.746.159 0 .355-.252.435-.56.083-.318.165-.145.189.4.029.66.127.826.314.53.198-.313.315-.204.431.404.136.712.09.774-.323.431-.412-.342-.45-.296-.255.318.273.86.114.887-1.026.174-.478-.299-.768-.426-.644-.282.123.144-.01.495-.295.78-.38.38-.554.413-.651.122-.207-.621-.685-.465-.634.208.027.353.218.539.46.446.483-.185.566.418.098.707-.194.12-.121.492.189.966.484.739.47.778-.324.978-.455.114-.828.344-.828.512 0 .167.166.201.37.076.252-.157.28-.087.088.22-.402.646-.446 1.22-.11 1.428.16.099.292-.053.292-.338 0-.285.137-.433.304-.33.365.226 1.081-1 .825-1.414-.331-.537.37-.64.984-.145.419.338.487.54.218.652-.297.125-.301.302-.017.758.26.414.526.512.88.322.383-.205.509-.12.509.343 0 .338-.221.616-.492.62-.434.003-.435.04-.011.313.658.424 1.199-.36 1.463-2.122.115-.768.333-1.397.483-1.397.15 0 .197.202.102.448-.094.246-.018.543.17.659.384.237.475 1.178.102 1.053-.132-.044-.288.064-.347.24-.06.176-.257.5-.44.72-.313.378-.12.54.506.425.154-.028.19.183.08.468-.11.286-.2.58-.2.653 0 .074-.143.134-.32.134-.175 0-.32-.216-.32-.48 0-.704-.537-.585-.732.161-.141.54.03.673 1.077.84.684.11 1.176.309 1.094.443-.083.134.05.41.294.613.284.236.486.253.557.047.228-.664.883.195.997 1.31.065.636.36 1.399.656 1.694.296.296.556.672.578.835.022.163.076.441.12.617s.098.68.12 1.12c.023.472.233.8.51.8.307 0 .399-.185.265-.532-.137-.358-.081-.457.17-.301.553.341.459.863-.304 1.674l-.678.722.998-.126c.8-.101.999-.01.999.46 0 .321.287.783.637 1.024.539.371.817 1.046.94 2.28.012.131.162.24.333.24.17 0 .239-.186.152-.412-.094-.245.085-.412.442-.412.437 0 .556.17.438.622-.11.416-.04.546.207.392.22-.136.37-.026.37.27a.51.51 0 0 0 .52.5c.425 0 .447-.088.12-.48-.323-.391-.308-.48.082-.48.264 0 .66.215.879.48.45.541 1.28.645 1.28.16 0-.177.157-.32.35-.32.192 0 .728-.3 1.192-.664.498-.392.89-.522.958-.318.063.19.282.245.487.122.205-.123.175.02-.066.318-.379.466-.368.541.08.541.285 0 .519.153.519.339 0 .186-.108.275-.24.198-.376-.222-1.68.363-1.68.753 0 .203.438.308 1.04.25.96-.092 1.054-.204 1.22-1.454.19-1.42.607-2.127.851-1.444.079.221.268.325.42.232.151-.094.22.12.15.478-.076.398.046.648.316.648.307 0 .423-.365.382-1.2-.053-1.072.023-1.2.714-1.2.426 0 .84.2.922.445.084.252.003.355-.186.238-.184-.114-.407-.026-.497.195-.128.32-.167.32-.187.003-.014-.22-.156-.4-.315-.4-.263 0-.202.704.162 1.876.104.336.238.351.583.065.517-.43.733-.185.828.94.112 1.326-.003 1.479-.483.64-.401-.703-.456-.722-.446-.16.006.351.12.919.254 1.26.222.567.31.529 1.017-.435.426-.58 1.113-1.186 1.526-1.345.413-.159.825-.573.916-.921.091-.348.316-.54.499-.427.184.114.238.053.12-.138-.116-.189.035-.59.336-.891.517-.518.51-.536-.13-.333-.373.118-.76.083-.86-.078-.099-.161.181-.293.624-.293.448 0 .941.256 1.114.58.412.769.391 1.028-.06.75-.218-.135-.283-.089-.158.113.117.189.03.415-.19.505-.221.089-.078.173.318.187.396.014.695-.083.665-.215-.03-.132.064-.96.208-1.839.205-1.245.318-1.457.513-.96.137.352.259.46.271.24.013-.22.247-.4.522-.4.274 0 .41.142.302.317-.107.174-.064.553.097.84.2.358.364.41.516.163.123-.198.071-.36-.115-.36a.34.34 0 0 1-.34-.34c0-.186.17-.235.375-.107.266.164.298.053.111-.381-.442-1.031-.603-2.803-.233-2.575.183.114.41.025.504-.196.093-.221.084.232-.022 1.007-.14 1.026-.09 1.347.18 1.18.206-.128.455-.01.562.269.264.69.74.321.546-.422-.087-.332-.001-.7.19-.819.191-.118.348-.062.348.124 0 .187.288.34.64.34.352 0 .604-.18.56-.4-.046-.229.313-.446.834-.505.592-.068.839.017.701.24-.117.19-.06.344.126.344.384 0 .43-.352.141-1.102-.155-.406-.293-.434-.653-.136-.352.292-.545.29-.843-.01-.302-.305-.274-.347.133-.193.318.122.595-.003.717-.32.11-.286.344-.43.522-.32.44.272.408-.265-.044-.717-.275-.275-.175-.327.4-.209.612.126.575.07-.182-.276-.66-.302-.826-.51-.546-.683.227-.14.752-.02 1.206.278.596.39.79.418.748.108a4.903 4.903 0 0 1-.013-.9c.035-.394.092-.402.319-.044.21.331.416.197.864-.56.323-.548.773-.996.999-.996.363 0 .568-.635.444-1.375-.024-.14.194-.213.484-.16.353.063.567-.17.646-.705.165-1.117.774-2.295 1.544-2.988.359-.323.473-.494.253-.38-.237.122-.4.003-.4-.293 0-.274.149-.499.331-.499.228 0 .228-.192.003-.614-.239-.446-.22-.665.069-.8.316-.148.315-.224-.003-.373-.22-.102-.395-.426-.39-.72.01-.425.138-.38.64.222.347.416.63.578.63.361 0-.295.134-.283.532.045.484.399.497.372.144-.29-.213-.4-.525-.644-.692-.541-.723.447-.213-.397.653-1.081.827-.654.904-.842.585-1.44-.331-.622-.315-.646.165-.25s.533.324.533-.72c0-.817.141-1.159.48-1.159.264 0 .48-.173.48-.384 0-.745 1.105-4.096 1.35-4.096.138 0 .25-.422.25-.937 0-.516.2-1.138.445-1.382.305-.305.35-.613.147-.978-.232-.414-.188-.49.195-.344.31.12.493.593.493 1.275 0 .597.113 1.086.251 1.086.139 0 .235-.512.214-1.137-.027-.808.135-1.23.558-1.457.72-.385.46-.975-.313-.709-.44.152-.423.08.09-.358.352-.3.46-.455.24-.344-.639.324-.463-.28.263-.9.635-.544.66-.544.603.009a8.753 8.753 0 0 0-.018 1.216c.032.5.104.542.324.194.166-.262.51-.36.831-.237.433.166.496.092.3-.353-.389-.882-.39-4.24-.003-4.27.187-.013-.057-.17-.543-.346-.485-.178-.805-.447-.71-.6.093-.151.67.02 1.281.38 1.154.68 1.463 1.027.631.708-.264-.101-.48-.026-.48.166 0 .193.364.32.808.284.514-.042.746-.216.64-.476-.61-1.491-.609-1.485-.018-1.258.49.188.518.147.18-.261-.221-.266-.52-.411-.664-.322-.144.089-.352.015-.462-.164-.11-.179-.036-.325.166-.325s.65-.324.995-.72l.626-.72-.126.96c-.069.528-.065.78.008.56.161-.48.614-.522.887-.08.11.176.361.32.56.32.2 0 .083-.227-.258-.504-.605-.49-.601-.499.117-.345.609.131.672.08.36-.296-.3-.363-.267-.455.169-.455.301 0 .48-.179.399-.4-.08-.22-.295-.368-.476-.33-.182.038-.411-.142-.51-.4-.108-.282.008-.47.29-.47.258 0 .47-.14.47-.31 0-.17.251-.22.56-.109.307.11.457.088.333-.05-.125-.138.091-.51.48-.828l.706-.577-.773-.29c-.534-.2-.785-.553-.81-1.143-.02-.469.106-.853.281-.853.176 0 .083-.236-.206-.526-.488-.487-.564-.487-1.052 0-.477.478-1.12.709-1.12.403 0-.068.373-.367.827-.665.768-.503.87-.504 1.409-.016.683.618 1.242.084.654-.625-.296-.356-.237-.407.31-.264.38.1.607.357.519.589-.087.226.049.49.302.588.252.097.46.333.46.525s-.143.26-.317.153c-.186-.115-.232.024-.112.336.184.481.236.475.544-.063.473-.828.536-1.44.122-1.184-.223.138-.27.015-.132-.345.118-.307.214-.69.214-.852 0-.443.887-.353 1.042.106.104.31.238.314.593.021.47-.388.555-2.931.133-3.989-.116-.29-.058-.622.13-.739.31-.19.506.483.362 1.241-.03.162.162.114.428-.107.267-.222.67-.29.898-.153.336.202.338.154.01-.252-.345-.425-.264-.559.536-.89.519-.215 1.023-.6 1.122-.858.098-.257.064-.396-.076-.31-.14.087-.264-.589-.273-1.503-.018-1.608-.006-1.629.339-.644.364 1.04.84 1.724.832 1.196-.003-.161-.135-.497-.293-.747-.186-.294-.115-.716.2-1.197.269-.41.41-.948.314-1.196-.095-.25.102-.702.438-1.006.335-.304.514-.713.397-.91-.118-.196.052-.141.377.123.53.43.537.49.061.583-.291.057-.53.318-.53.58 0 .29-.156.385-.4.245-.22-.127-.287-.107-.15.043.388.427 1.19.454 1.198.04.004-.204.288-.731.632-1.171l.626-.8.007.739c.004.41.15.65.327.541.176-.109.32.099.32.461s.12.659.265.659c.145 0 .204-.415.13-.922-.075-.507.022-1.02.215-1.139.23-.142.35.18.35.932 0 1.395-.688 1.775-1.692.933-.434-.364-.364-.215.179.385.87.961.88 1.022.566 3.195-.176 1.219-.325 2.432-.331 2.696-.01.427-.046.427-.322 0-.265-.41-.31-.399-.315.08-.003.308.12.56.272.56.337 0-.213 3.214-.638 3.729-.194.235-.192.41.007.48.193.069.141.84-.138 2.031-.248 1.056-.53 2.424-.627 3.04-.097.616-.4 2.488-.672 4.16a161.29 161.29 0 0 0-.635 4.16c-.144 1.17-.424 2.55-1.244 6.146-.27 1.18-.49 2.575-.49 3.1 0 .526-.154 1.051-.342 1.167-.188.117-.261.421-.163.677.098.256-.035.977-.296 1.602-.261.625-.406 1.248-.321 1.384.142.23-1.837 8.534-2.29 9.604-.112.264-.171.804-.132 1.2.038.396-.1.72-.307.72-.217 0-.292.221-.178.52.11.287.042.712-.152.945-.193.233-.42 1.259-.502 2.28-.084 1.02-.282 2.345-.442 2.945-.16.6-.225 1.196-.145 1.326.08.13-.013 1.008-.208 1.95-.195.943-.405 2.2-.468 2.796-.062.595-.416 2.292-.787 3.77-.37 1.479-.736 3.323-.811 4.098-.076.776-.645 3.255-1.264 5.51s-1.162 4.244-1.208 4.42c-.045.176-.194.5-.332.72-.137.22-.172.526-.076.68.19.309-.593 3.297-1.164 4.44l-.36.72H184.09c-89.907 0-101.385-.055-101.385-.48 0-.265-.149-.48-.33-.48-.182 0-.413.215-.515.48-.184.48-.342.506-1.577.261zm7.702-.906c0-.895-.938-.796-1.066.113-.083.58.025.723.48.635.333-.064.586-.386.586-.748zm9.891-2.169c.426-.675-.47-1.69-1.234-1.398-.824.316-.993 1.211-.322 1.702.7.512 1.09.436 1.556-.304zm-15.491-1.987a.481.481 0 0 0-.48-.48c-.5 0-.635.379-.267.747s.747.233.747-.267zm12.968-3.054c.256-.413-.455-1.324-.845-1.083-.156.096-.283.455-.283.796 0 .656.778.854 1.128.287zm-11.64-1.106c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm3.792-2.72a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm198.298-.38c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-193.418-.806c-.22-.081-.4-.418-.4-.75 0-.405-.158-.543-.48-.42-.264.102-.48.385-.48.63 0 .246.216.446.48.446s.48.245.48.544c0 .448.07.47.4.12.32-.339.32-.453 0-.57zm7.72-.029c.253-.41-.334-1.128-.725-.887-.513.318-.437 1.142.106 1.142.253 0 .532-.114.619-.255zm-1.462-1.049c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm-4.098-.97c0-.465-.573-.603-.736-.177-.09.234.039.425.286.425.247 0 .45-.112.45-.248zm-11.52-.926a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm10.56 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm.32-2.099c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.499zm167.79.005c-.104-.271-.258-.425-.342-.34-.084.083-.058.305.058.493.316.51.5.411.284-.153zM89.152 462.4c.122-.814.09-.96-.208-.964-.176-.003-.337.286-.357.64-.036.642.473.934.565.324zm-8.048-.96a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-42.56-.96c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm3.346-.298c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm12.181-.366c.193-.608-.003-1.225-.288-.909-.339.376-.524 1.573-.243 1.573.176 0 .415-.298.531-.664zm33.433.344c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm159.04 0c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm-199.472-.656c.355-.355.199-1.904-.192-1.904-.125 0-.414.347-.64.77-.59 1.1.027 1.94.832 1.134zm5.055-.331a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm41.825.187c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm-54.128-.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm23.68-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm193.64-.405c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-188.104-.07c.035-.174-.188-.364-.496-.424-.35-.067-.56.09-.56.42 0 .556.945.56 1.056.003zm177.824-.383c0-.407-.09-.426-.477-.105-.262.218-.396.526-.298.685.253.408.775.018.775-.58zm-186.56.218c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm184.284-.437c.279-.336.232-.54-.2-.88-.513-.402-.524-.391-.125.117.404.516.282.706-.383.59-.145-.025-.173.102-.061.282.262.425.334.415.77-.11zm.996-.504c0-1.33-.476-1.47-.51-.149-.015.6.093 1.09.241 1.09s.269-.423.269-.94zm7.404.385c.194-.194.588-.266.875-.159.45.169.462.123.084-.341-.24-.295-.564-.458-.72-.361-.156.096-.284-.05-.284-.324 0-.63.283-.632.976-.005.484.439.566.44.731.01.102-.266.061-.56-.09-.654-.152-.094-.197-.494-.1-.89.104-.417.057-.608-.11-.453a1.043 1.043 0 0 0-.295.64c-.005.205-.337.338-.739.294-.406-.044-.645.058-.538.23.105.171-.171.402-.615.513-.675.17-.754.301-.482.81.222.414.22.606-.006.606-.182 0-.331.12-.331.267 0 .377 1.22.242 1.644-.183zM40.464 457.6a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm40.9-.404c.123-.64-.79-1.114-1.252-.652-.448.448.021 1.425.628 1.308.284-.054.564-.35.623-.656zm-29.38-.236a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm19.2-.16a.481.481 0 0 0-.48-.48c-.5 0-.635.379-.267.747s.747.233.747-.267zm18.706.182c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm156.974.157c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm.192-1.598c0-.429-.103-.716-.228-.639-.181.112-.176.727.011 1.338.1.325.216-.053.216-.699zm-207.733-.214c-.28-.452-.78-.334-.78.183 0 .286.188.398.479.287.263-.101.398-.313.3-.47zm3.7.353a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm18.88 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm181.98-.38c-.103-.255-.179-.18-.194.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-184.86.007c0-.146-.296-.266-.658-.266-.363 0-.585.12-.494.266.09.147.387.267.658.267.272 0 .495-.12.495-.267zm187.2.233c0-.078-.143-.23-.32-.34-.175-.108-.32-.045-.32.142 0 .186.145.339.32.339.177 0 .32-.064.32-.141zm-204.349-1.506c-.198-.321-1.73-.373-1.73-.058 0 .118.246.487.548.82.515.57.574.573.95.059.22-.302.325-.671.232-.821zm11.07 1.007c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm9.92 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm17.09-1.007c-.092-.15-.448-.273-.79-.273-.7 0-.881 1.129-.22 1.376.462.174 1.26-.698 1.01-1.103zm16.51.847a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm-39.36-.16c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm186.28-.24c.398-.508.387-.52-.12-.121-.308.241-.56.493-.56.56 0 .263.262.094.68-.44zm-184.13-.12c.44-.44.178-1.24-.406-1.24-.562 0-.886.554-.663 1.135.214.557.582.593 1.07.106zm193.37-.654c0-1.165-.14-1.123-.442.134-.125.522-.078.88.115.88.18 0 .327-.456.327-1.014zm-206.4.393c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.499.32.499.176 0 .32-.136.32-.301zm9.6-.02a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm-27.328-.831c-.114-.297-.28-.468-.368-.38-.088.088-.066.403.048.7.113.296.279.467.367.38.088-.089.066-.404-.047-.7zm33.408.512c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm7.16-.492a.512.512 0 0 0-.307-.683c-.598-.23-1.252.34-.95.827.313.508 1.038.425 1.257-.144zm126.178-.208c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm-127.898-.44c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.499.273.444.466.36.466-.201zm6.4.02a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm-18.24-.441c0-.155-.205-.45-.455-.658-.367-.304-.433-.266-.344.2.06.319.12.615.134.659.068.221.665.04.665-.201zm9.008-.2c0-.166-.155-.355-.344-.418-.19-.063-.344.125-.344.419 0 .293.154.481.344.418.189-.063.344-.251.344-.418zm173.514-.016c.109-.285.055-.413-.126-.301-.174.108-.316.331-.316.497 0 .46.229.358.442-.196zm-204.922-.623c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm14.033.056c.256-.309.251-.523-.017-.792-.476-.476-1.252.111-1.003.76.219.57.565.58 1.02.032zm34.607.104c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm1.858-.024c-.063-.19-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.189.126.344.42.344.293 0 .481-.155.418-.344zm158.577-.136c.112-.293 0-.48-.286-.48a.476.476 0 0 0-.47.48c0 .264.13.48.286.48.157 0 .369-.216.47-.48zm-180.275-.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm12.8 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-17.44-.32c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm183.84 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-180.64-.32c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-30.68-1.449c-.203-.53-1.023-.633-1.312-.164-.105.169-.016.586.197.926.334.536.449.558.842.165.25-.25.373-.667.274-.927zm206.84.806c0-.55-.905-.563-1.048-.016-.115.438-.006.54.448.42.33-.085.6-.268.6-.404zm-209.6.003a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm30.568-.259c-.099-.098-.357 0-.574.219-.314.316-.277.353.18.18.315-.121.493-.3.394-.399zm16.411-.146c.128-.661-.796-1.107-1.283-.62-.488.488-.042 1.412.619 1.285a.907.907 0 0 0 .664-.665zm24.592-.315c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm136.224.56c.102-.264.06-.48-.091-.48-.152 0-.359.216-.46.48-.101.264-.06.48.091.48.152 0 .359-.216.46-.48zm-197.875-.32c0-.264-.136-.48-.302-.48-.403 0-.692.5-.436.755.36.36.738.22.738-.275zm54.02-.241a.708.708 0 0 0-.422-.764c-.635-.244-1.61.63-1.286 1.152.337.545 1.584.261 1.708-.388zm-40.34-.746c-.305-.305-.917.189-.69.557.135.218.314.213.544-.017.189-.188.254-.431.145-.54zm54.698.127c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm133.935-.975c-.099-.376-.43-.55-.99-.522-.755.04-.768.058-.123.183.56.107.725.364.742 1.156.018.825.07.897.27.383.137-.35.182-.89.1-1.2zm-206.153.677c0-.176-.144-.231-.32-.122-.176.108-.32.341-.32.517s.144.231.32.123c.176-.11.32-.342.32-.518zm19.143-.389c.057-.293-.092-.533-.332-.533-.24 0-.458.297-.485.66-.059.78.663.667.817-.127zm4.68.08a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm13.025.187c0-.168-.155-.356-.344-.419-.19-.063-.344.125-.344.419 0 .293.154.481.344.418.189-.063.344-.251.344-.418zm8.272.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-49.38-.785c-.622-.622-1.5-.644-1.5-.037 0 .261.38.506.88.567 1.137.14 1.22.07.62-.53zm209.7.518c0-.147-.216-.267-.48-.267s-.48.12-.48.267c0 .147.216.267.48.267s.48-.12.48-.267zm-157.44-.712c0-.166-.216-.301-.48-.301-.495 0-.636.377-.276.738.256.255.756-.034.756-.437zm155.615.126c-.15-.39-.082-.469.25-.296.25.13.175.01-.167-.268-.341-.277-.917-.492-1.28-.478-.362.014-.478.098-.256.187.22.09.321.292.223.451-.098.16.068.195.37.079.353-.136.473-.087.335.136-.179.289-.028.448.66.696.038.014-.023-.214-.135-.507zm33.083-.167c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm-200.926-.304c.117-.607-.61-.968-1.208-.599-.581.359-.132 1.354.55 1.223.307-.06.603-.34.658-.624zm-33.532.044c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm20.8-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm178.036-.159c-.101-.263-.315-.397-.475-.298-.336.208-.066.776.367.776.16 0 .209-.215.108-.478zm38.604.158a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-34.483-1.407c-.138-.22-.266-.132-.338.23-.112.564-.13.564-.557 0-.364-.48-.444-.495-.452-.087-.006.273.168.674.385.892.315.314.477.285.79-.143.217-.296.294-.698.172-.892zm40.881.22c-.349-.544-.358-.544-.183.014.102.322.196.754.21.96.018.27.069.265.182-.015.087-.213-.008-.645-.209-.96zm-46.32.316a.347.347 0 0 1-.19-.516c.118-.205.095-.264-.051-.132s-.565-.009-.931-.315c-.367-.306-.245-.091.27.476s1.02.941 1.12.831c.101-.11.003-.265-.218-.344zM84.304 445.6c0-.264-.234-.48-.52-.48-.425 0-.447.087-.12.48.219.264.452.48.519.48.066 0 .12-.216.12-.48zm5.44-.357c0-.243-.281-.443-.625-.443-.343 0-.77-.252-.95-.56-.31-.533-.326-.533-.336 0-.005.308.143.56.33.56.186 0 .236.167.11.37-.152.246-.087.282.195.107.302-.186.37-.118.234.235-.142.369-.032.455.425.335.34-.089.617-.36.617-.604zm-51.582.173c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm19.828-.236c.07-.209-.101-.38-.38-.38a.508.508 0 0 0-.506.507c0 .565.688.467.886-.127zm179.037-.62c.563-1.281.56-2.372-.007-2.56-.21-.07-.283.173-.184.622.112.508.07.61-.133.323-.237-.332-.382-.311-.728.105-.312.376-.331.58-.068.743.236.146.258.389.064.696-.427.676-.376 1.271.11 1.271.23 0 .656-.54.946-1.2zm-208.85.374c-.106-.278-.193-.566-.193-.64 0-.073-.131-.134-.29-.134-.16 0-.215.288-.123.64.092.352.31.64.484.64s.23-.227.123-.506zm50.28.313c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-49.193-.447a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm35.84-.14c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm168-.17c0-.17-.202-.232-.448-.138-.246.095-.543.018-.659-.17-.116-.188-.374-.342-.574-.342-.489 0 .774.937 1.28.95.22.005.4-.13.4-.3zm-155.309-1.05c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm156.637-.24c.15 0 .272.216.272.48s.144.48.32.48c.527 0 .36-.964-.205-1.181-.474-.182-.467-.244.067-.634.57-.417.565-.456-.114-1.07-.388-.351-.562-.465-.387-.252.416.504.41.992-.01.732-.18-.111-.288-.011-.24.222.049.233-.056.4-.232.37-.176-.029-.348.476-.381 1.12-.056 1.058-.028 1.103.289.453.192-.396.472-.72.621-.72zm-198.768.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm32.32-.645c0-.135-.214-.328-.476-.429-.348-.133-.458.024-.412.589.05.589.161.69.476.429.226-.188.412-.453.412-.589zm154.781-.229c-.08-.31-.153-.134-.16.394-.006.528.06.783.148.566.088-.216.093-.648.012-.96zm-174.941.733c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm10.235-.758c-.004-.466-.048-.474-.315-.06-.405.626-.405 1.05 0 .8.176-.11.317-.442.315-.74zm4.92.42c-.2-.524-.755-.66-.755-.187 0 .243.224.408.87.641.038.014-.013-.19-.115-.455zm170.125-.015c0-.058-.279-.085-.618-.06-.34.026-.552.155-.47.287.135.219 1.088.02 1.088-.227zm-204.48-.111c0-.158-.216-.369-.48-.47-.488-.187-.656.153-.267.542.306.306.747.263.747-.072zm35.92-1.362c-.177-.177-.224.121-.119.757.148.889.193.934.294.293.065-.416-.013-.888-.174-1.05zm153.626.367c.193-1.082.185-1.094-.24-.336-.24.431-.363.978-.272 1.214.215.562.275.46.512-.878zm-163.946.302c0-.166-.216-.302-.48-.302-.495 0-.636.378-.276.738.256.256.756-.033.756-.436zm175.04-.142c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm1.6.17c0-.17-.216-.227-.48-.125-.264.101-.48.24-.48.31 0 .069.216.125.48.125s.48-.14.48-.31zm-167.68-.508c0-.275-.144-.41-.32-.302-.176.11-.32.334-.32.5 0 .165.144.3.32.3.176 0 .32-.224.32-.498zm17.6.178c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm138.72 0a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.398.725.398.48 0zm12.04-.405c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-201.32-.235a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm194.24 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-197.44-.32c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm198.24 0c-.11-.176.09-.32.442-.32.681 0 1.2-.543.852-.892-.115-.115-.33-.015-.476.223-.147.237-.427.332-.623.212-.195-.121-.355-.152-.355-.068 0 .084-.088.38-.195.66-.108.282-.03.505.18.505.204 0 .283-.144.175-.32zm-166.56-.14c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm37.978-.56c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm124.341-.31c-.124-.472-.064-.618.19-.46.204.125.37.088.37-.084s-.174-.37-.387-.442c-.287-.095-.247-.415.152-1.226.397-.805.544-.927.553-.458.01.46.086.523.276.225.357-.563.904.152.831 1.087-.029.37.215.839.542 1.043.715.446.777.184.114-.48-.371-.371-.4-.627-.128-1.135.255-.478.255-.597 0-.44-.532.33-.422-.344.15-.916.332-.332.424-.744.273-1.22-.202-.637-.168-.67.295-.285.287.239.462.532.387.653-.195.315.235.92.743 1.043.317.077.436-.285.44-1.335.003-1.138-.105-1.43-.518-1.395-.643.055-.66-.216-.064-1.023.364-.494.54-.54.859-.227.22.217.294.5.164.63-.13.13-.383.025-.563-.234-.26-.374-.302-.378-.206-.021.066.247.439.567.828.711.642.238.69.182.521-.61l-.186-.87.67.765c.752.858.748.89-.146 1.044-.64.11-1.105.529-1.115 1.002-.003.138.265.107.593-.069.33-.176.712-.217.852-.091s.15.048.023-.171c-.129-.224-.065-.4.146-.4.219 0 .306.268.209.64-.092.352-.037.56.122.461.16-.099.29-.018.29.179 0 .196.18.257.4.133.22-.123.155.037-.145.355-.524.557-.568.55-1.147-.164-.534-.66-.624-.682-.81-.197-.116.301-.078.464.084.364.162-.1.375-.05.474.11.1.16-.05.38-.33.488-.311.119-.435.397-.315.709.144.374.06.46-.313.317-.62-.238-1.945.599-1.441.91.189.117.343.051.343-.145 0-.207.17-.252.4-.108.643.4 1.2.4 1.213 0 .007-.205.245.132.53.748.285.616.491 1.239.46 1.384-.032.145.091.17.275.058.183-.114.258-.328.166-.477-.092-.149.013-.343.234-.432.243-.098.18-.172-.158-.188-.64-.029-.738-.679-.183-1.233.45-.451 1.223.055 1.223.801 0 .303.185.405.51.28.344-.132.567.022.684.473.126.48.246.554.426.262.202-.327.352-.323.764.018.281.234.581.356.666.271.085-.085-.48-.48-1.255-.88-1.336-.686-1.42-.812-1.622-2.424-.117-.938-.4-1.772-.633-1.861-.261-.1-.36-.477-.261-.994.117-.615-.06-1.035-.674-1.605-.458-.424-.9-.66-.984-.525-.084.135-.59.181-1.126.102-.638-.093-.975-.006-.975.253 0 .267-.129.296-.4.087-.22-.17-.76-.202-1.2-.071-.44.13-.692.27-.56.31.622.185 1.057.148 1.236-.105.108-.153.271.011.364.365.12.458.04.594-.276.473-.244-.094-.444-.003-.444.203 0 .205-.134.29-.297.189-.164-.102-.403-.016-.53.19-.135.22-.093.29.102.169.183-.113.408.08.499.43.092.35.045.712-.104.803-.149.092-.217.444-.152.782.082.423-.022.561-.33.443-.246-.094-.435-.266-.42-.381.165-1.241-.137-1.336-.67-.21-.333.704-.62 1.136-.637.96-.016-.176-.157-.12-.311.123-.223.353-.358.299-.66-.265-.208-.39-.305-.9-.214-1.137a.462.462 0 0 0-.267-.594c-.342-.13-.371.046-.14.852.361 1.26.361 1.262-.029 1.021-.49-.303-.38.081.226.79.403.47.61.534.795.243.275-.432.372.227.265 1.803-.036.538.07.835.257.72.174-.108.236-.507.137-.886zm7.524-2.179c-.34-.396-.417-.704-.21-.832.398-.246.465-.18.748.741.272.885.158.904-.538.092zm-1.041-.007c-.112-.18.016-.235.3-.125.555.212.657.442.196.442-.165 0-.389-.143-.496-.317zm-135.464 2.167c-.23-.23-.378-.248-.378-.048 0 .428.378.806.592.592.09-.09-.005-.335-.214-.544zm125.32-.099c-.099-.098-.278.08-.398.395-.174.456-.137.493.18.18.218-.218.316-.476.218-.575zm-175.717-1.025c-.08-.312-.153-.135-.16.393-.006.528.06.783.148.567.088-.217.093-.65.012-.96zm143.779.873c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm29.28 0c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm18.868-.978c-.139-.225-.353-.21-.66.045-.357.296-.373.479-.076.836.327.395.418.389.66-.045.156-.276.19-.653.076-.836zm-205.406.623c.24-.39-.478-.978-.887-.725-.14.087-.255.366-.255.62 0 .542.824.618 1.142.105zm37.746-.223c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm26.646-.417c-.07-.212-.306-.123-.586.222-.282.347-.31.48-.068.336.236-.142.41-.07.425.179.02.322.062.326.186.018.09-.22.109-.56.043-.755zm-59.134.355a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm14.568-.294c-.129-.404-.028-.65.294-.72.344-.074.253-.215-.308-.476-.741-.345-.787-.317-.658.395.15.825.443 1.415.704 1.415.09 0 .075-.276-.032-.614zm2.61-.086c-.102-.255-.178-.179-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm12.365.187c-.086-.223-.36-.328-.608-.233-.547.21-.345.64.3.64.255 0 .393-.183.308-.407zm25.817.255c0-.143-.212-.539-.47-.88-.48-.635-.646-.28-.296.632.2.523.766.706.766.248zm142.622-.552c-1.035-.91-1.502-1-1.502-.29 0 .274.134.415.297.314.164-.101.39-.035.503.146.112.182.328.254.48.16.151-.093.366-.024.476.155.11.18.3.32.422.315.122-.005-.183-.365-.676-.8zm-202.142.17c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm45.242-.176c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm2.33-.032c0-.315-.107-.332-.426-.067-.234.194-.426.384-.426.421 0 .037.192.068.426.068.235 0 .427-.19.427-.422zm-52.964-.272c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.42.189-.064.344-.252.344-.42zm15.53-.22c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm177.382.042c0-.166-.144-.302-.32-.302-.176 0-.32.225-.32.5 0 .274.144.41.32.3.176-.108.32-.333.32-.499zm-179.68.018c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm66.319-.274c-.086-.327-.023-.831.138-1.12.35-.624-.14-.723-.621-.126-.195.241-.214.687-.05 1.12.328.867.753.967.533.126zm108.452-.446c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm20.695.64c-.138-.22-.21-.652-.158-.96.083-.506-.149-.65-.828-.51-.132.026-.193.33-.134.674.073.436-.024.56-.32.408-.235-.12-.147.008.195.285.75.609 1.607.68 1.245.103zm-158.302-.337c.122-.122.059-.223-.141-.223-.2 0-.286-.201-.192-.447.095-.246 0-.554-.211-.685-.245-.151-.326-.076-.225.208.087.244.035.683-.114.975-.197.384-.143.512.193.463.257-.038.567-.169.69-.291zm143.79-2.1c-.003-.392-.07-.42-.265-.112-.143.226-.495.321-.78.211-.41-.157-.44-.288-.135-.617.212-.23.484-.358.603-.286.12.073.33-.05.467-.27.172-.28.324-.159.495.395.173.558.196.437.08-.404-.103-.728-.037-1.2.166-1.2.608 0 .36-1.564-.305-1.92-.352-.188-.63-.589-.618-.89.019-.457.069-.442.298.09.245.572.277.578.297.062.014-.354.167-.49.392-.351.229.141.283.088.141-.141-.125-.203-.597-.37-1.049-.37-.632 0-.741-.094-.478-.411.257-.31.196-.411-.245-.411-.322 0-.522.166-.444.37.078.203-.113.626-.426.938-.544.544-.585.53-.964-.359-.218-.51-.402-.753-.41-.542-.022.595.694 2.015 1.016 2.015.158 0 .198-.144.09-.32-.11-.176-.046-.32.14-.32.43 0 .445.858.02 1.12-.554.343-.349.8.359.8.567 0 .613.08.28.48-.219.264-.624.48-.9.48-.421 0-.41.067.068.417.313.23.534.625.49.88-.044.255.087.869.291 1.364.204.496.377 1.144.384 1.44.007.297.223.055.48-.537.257-.593.465-1.313.463-1.6zm-1.452-1.35c-.118-.192-.054-.509.141-.704.262-.262.357-.17.357.347 0 .773-.167.892-.498.357zm.818-.647c0-.568.1-.933.221-.81.37.368.43 1.44.094 1.647-.182.113-.315-.24-.315-.837zm-.472-1.9c.114-.183.058-.512-.123-.73-.182-.22-.212-.586-.067-.82.299-.484.484-.247.783 1.004.162.677.094.88-.294.88-.278 0-.412-.15-.299-.334zm7.795 5.752c-.514-.318-.747-.15-.453.326a.4.4 0 0 0 .546.142c.215-.133.182-.298-.093-.468zm-161.345-.358c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm18.337-.198c-.004-.467-.048-.475-.315-.062-.405.627-.405 1.05 0 .8.176-.108.317-.44.315-.738zm30.885.258c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm103.754-.284c-.045-.602-.874-.585-.874.017 0 .168.144.216.32.107.176-.108.32-.045.32.141 0 .187.063.34.14.34.077 0 .12-.273.094-.605zm-178.576-.416c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-8.422-.098c-.101-.263-.312-.398-.47-.3-.452.278-.334.778.183.778.286 0 .398-.187.287-.478zm29.542-.222c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm10.88-.32c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm139.797-.791c-.303-1.208-.598-.662-.318.589.131.584.303.876.382.649.079-.228.05-.785-.064-1.238zm-126.982.978c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm132.945-.516c-.23-.23-.378-.248-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm-178.364-.236c-.214-.344-.452-.564-.528-.488-.137.137.56 1.113.795 1.113.068 0-.052-.281-.267-.625zm9.986.305c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm40.215-.602c-.222-1.11.035-1.453.687-.915.42.346.433.305.105-.31-.599-1.125-1.363-.581-1.276.906.04.683.207 1.241.371 1.241s.215-.415.113-.922zm18.34-.278c.01-.794-.477-.378-.525.45-.035.607.032.72.235.4.157-.248.287-.63.29-.85zm107.525 1.06c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm-157.062-.889c-.23-.23-.378-.248-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm15.942.07c0-.353-.131-.64-.29-.64-.16 0-.215.287-.123.64.092.351.222.64.29.64.067 0 .123-.289.123-.64zm140.792-1.038c.004-.13-.28.01-.632.312-.352.301-.637.768-.633 1.036.005.336.203.239.633-.31.344-.44.628-.907.632-1.038zm-1.592 1.216c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm10.338-.918c-.098-.159-.295-.1-.437.13-.143.23-.179.549-.08.708.098.16.295.101.437-.13.143-.23.179-.548.08-.708zm62.782.74c.108-.177.053-.32-.123-.32s-.409.143-.517.32c-.11.175-.054.32.122.32s.409-.145.518-.32zm-186.502-.7c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-66.714-.005c-.3-.298-.47-.298-.768 0-.3.299-.214.384.384.384.597 0 .682-.085.384-.384zm62.016.064c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm114.468-.708c.14-.917.387-1.129.709-.608.144.233.34.3.433.149.094-.152-.094-.602-.417-1.001-.323-.399-.664-.6-.759-.448-.303.49-.613 3.105-.337 2.848.146-.136.313-.56.371-.94zm-182.09.009c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm2.582.3a.63.63 0 0 0-.56-.4.63.63 0 0 0-.56.4c-.08.237.147.4.56.4.412 0 .639-.163.56-.4zm76.137-.553c.051-.338-.048-.703-.222-.81-.182-.113-.315.24-.315.837 0 1.07.372 1.052.537-.027zm109.318.42c-.131-.342-.079-.455.147-.315.474.292.664-1.04.279-1.953-.167-.396-.43-.72-.584-.72-.154 0-.131.278.05.617.351.657.141 1.623-.353 1.623-.168 0-.148.28.046.64.414.775.7.849.415.108zm-117.375-.108c-.11-.176-.442-.31-.74-.297-.44.018-.422.073.1.297.856.368.867.368.64 0zm115.84-1.553a.687.687 0 0 1 .229-.765c.316-.223.302-.26-.06-.162-.544.147-.924 1.396-.7 2.297.14.56.18.548.434-.14.154-.415.198-.969.097-1.23zM76.761 433.68a3.92 3.92 0 0 1-.529-.56c-.136-.182-.24-.08-.244.24a.539.539 0 0 0 .529.56c.293 0 .403-.108.244-.24zm144.902-.567c.085-.444.03-.885-.122-.98-.153-.093-.277-.45-.277-.792 0-.341-.136-.62-.302-.62-.166 0-.225.323-.13.72.094.395.156 1.115.136 1.6-.044 1.103.488 1.158.695.072zm7.776-.577c-.766-1.886-.82-1.978-.651-1.096.111.584.03.884-.238.89-.24.006-.183.14.14.329.304.177.466.53.365.793-.127.33-.033.418.306.288.42-.161.431-.333.078-1.204zm-198.48.531c-.09-.235-.205-.427-.255-.427-.05 0-.166.192-.256.427s.025.427.256.427c.23 0 .345-.192.255-.427zm64.023.281c.085-.138-.23-.273-.702-.299-.748-.04-.775-.012-.216.23.352.152.667.287.7.299.034.012.132-.091.218-.23zm2.18-.457c-.23-.23-.378-.249-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm1.542.21c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm3.458-.31c-.099-.098-.278.08-.398.396-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm72.382.49c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm26.138-.7c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-171.738.238c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm175.36 0c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm6.88-.179c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-155.68-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm31.974-1.1c-.014-.187-.098-.16-.186.06-.09.22-.366.4-.615.4-.487 0-.6.388-.222.765.26.26 1.062-.702 1.023-1.226zm3.457.46c.177 0 .3-.324.275-.72-.025-.396.085-.811.243-.923.159-.111.225-.394.147-.628-.083-.247-.334.007-.597.603-.25.566-.573 1.028-.716 1.028-.144 0-.178.134-.077.298.101.164.038.389-.141.5-.18.11-.326.024-.326-.192s-.09-.303-.2-.193c-.109.11-.099.458.024.774.211.545.243.545.635.013.226-.308.557-.56.733-.56zm5.296-.115c.381-.1 1.042-.094 1.469.013.697.175.76.11.617-.637-.14-.73-.086-.794.434-.515.326.174.59.204.588.066-.008-.421-.449-.945-.955-1.138-.388-.148-.374-.188.07-.208.354-.017.484-.197.364-.51-.138-.359-.04-.427.382-.265.431.165.505.108.305-.236-.145-.25-.145-.347 0-.215.145.132.305.62.355 1.087.12 1.121.764 1.795.764.798 0-.473.138-.652.4-.52.22.112.184.012-.08-.22-.264-.234-.48-.713-.48-1.065 0-.512-.208-.636-1.04-.622-1.067.018-1.265-.295-.72-1.138.292-.453.342-.42.44.294.022.161.143.397.27.523.126.126.163-.113.083-.532-.081-.42-.293-.811-.472-.87-.18-.06-.23-.264-.113-.452.142-.23-.042-.266-.558-.11-.424.129-.943.247-1.153.264-.266.02-.29.203-.08.596.46.86.37.985-.417.572-.7-.367-.704-.36-.16.255.309.348.46.733.338.856-.288.287-.42 1.164-.175 1.164.102 0 .435-.225.74-.5.367-.333.624-.387.764-.16.12.193-.18.48-.688.66-.495.176-1.115.444-1.38.595-.304.175-.771.093-1.28-.223-.44-.274-.703-.385-.586-.248.118.138-.018.522-.303.854-.363.425-.758.546-1.333.411-.683-.16-.75-.119-.405.246.227.241.656.44.955.442.298.003.594.272.658.601.08.413-.008.522-.284.35-.259-.16-.32-.116-.172.123.488.789.912.354.733-.75-.143-.878-.075-1.12.315-1.12.336 0 .444.202.334.625-.154.59-.12.596.602.123.422-.276.767-.654.767-.839 0-.185.105-.231.233-.103s-.262.665-.866 1.193c-.891.778-1.012 1.016-.634 1.252.318.199.497.152.564-.147.053-.242.409-.52.79-.62zm.895-1.405c.02-.78.054-.807.298-.24.375.874.375 1.12 0 1.12-.176 0-.31-.396-.298-.88zm11.659 1.836c.113-.355.328-.569.48-.475.15.093.379 0 .506-.206.16-.259.022-.32-.446-.198-.49.128-.735 0-.88-.454-.11-.347-.12-.711-.022-.809.098-.098.034-.447-.142-.776-.375-.7.28-.852.919-.214.21.212.383.248.381.08 0-.167-.424-.544-.94-.837-.834-.475-.916-.478-.743-.028.142.37.072.437-.26.247-.368-.21-.378-.178-.055.171.22.237.391.727.38 1.087-.019.62-.036.618-.309-.061-.205-.511-.521-.698-1.1-.65-.75.062-1.207.887-.49.887.175 0 .32-.14.32-.31 0-.632.826.033.877.706.03.385.351.924.716 1.2.524.394.58.582.27.892-.274.275-.283.392-.03.392.2 0 .455-.29.568-.644zm-25.761-.156c0-.264-.14-.48-.31-.48-.17 0-.228.216-.126.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm18.486-.515c-.145-.989-.137-.994 1.084-.83 1.46.195 1.66-.27.248-.58-.712-.156-1.151-.061-1.6.345-.66.596-.857 1.286-.264.92.238-.148.283.003.138.46-.137.432-.077.68.162.68.241 0 .325-.36.232-.995zm107.343-.343c-.2-.2-.245.01-.126.594.137.67.217.75.31.31.07-.326-.013-.733-.184-.904zm11.77 1.018a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm59.64-2.374c-.056-.69-.27-1.41-.477-1.6-.276-.254-.313-.234-.138.075.138.243-.01.692-.349 1.068-.57.63-.57.662 0 1.079.324.236.49.59.368.786-.121.197-.118.602.007.902.191.456.265.415.458-.256.126-.44.185-1.364.13-2.054zm-.92.134c.11-.176.262-.32.34-.32.077 0 .14.144.14.32 0 .176-.152.32-.338.32-.187 0-.25-.144-.141-.32zm-174.56 1.78c0-.254-.113-.532-.25-.617-.14-.086-.252.122-.252.46 0 .34.113.617.251.617s.252-.207.252-.46zm10.6-.265c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm30.36.405c0-.176-.063-.32-.14-.32-.078 0-.23.144-.34.32-.108.176-.045.32.142.32.186 0 .339-.144.339-.32zm74.795-.996c.025-.332-.098-.604-.273-.604-.176 0-.237.133-.137.295.1.161-.036.511-.302.777-.659.659-.608.932.092.495.316-.197.595-.63.62-.963zm72.574.738c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm-217.018-.235c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm3.028-.315c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm5.997.463a.355.355 0 0 1 .487-.121c.163.101.298.023.298-.174 0-.196.166-.255.369-.13.229.142.283.089.141-.14-.126-.203-.508-.37-.85-.37-.341 0-.62-.144-.62-.32 0-.176-.14-.32-.313-.32-.2 0-.199.297.006.837.262.69.235.804-.157.654-.262-.1-.543-.075-.624.057-.081.132.127.26.463.286.337.025.697-.091.8-.26zm122.385-.314c0-.165-.216-.3-.48-.3-.495 0-.636.377-.276.737.256.256.756-.033.756-.437zm3.36.34c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm-186.681-.857c-.378-.648-.469-.44-.16.364.11.286.267.453.35.37.082-.082-.004-.412-.19-.734zm6.862.296c-.098-.671-1.141-.96-1.141-.316 0 .556.301.876.825.876.219 0 .361-.252.316-.56zm75.659-.07c0-.433-.153-.571-.489-.442-.376.144-.404.288-.12.63.493.594.609.558.609-.188zm3.56-.095c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-80.68.264c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm14.202-.355c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm44.838.176c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm1.38-.111c.464.148.472.122.06-.184-.422-.314-.413-.408.074-.782.306-.234.471-.51.368-.613-.102-.103-.09-.343.028-.534.142-.23.532-.12 1.157.324l.942.67-.376-.825c-.207-.453-.641-.825-.965-.825h-.748c-.088 0-.18.108-.204.24-.069.386-1.26 1.124-1.47.913-.106-.106-.02-.193.191-.193.282 0 .296-.166.054-.619-.466-.87-.424-.962.373-.808.388.075.802-.02.92-.212.151-.245.437-.23.975.053.727.382.738.373.243-.207-.522-.612-.723-2.8-.23-2.494.147.091.267-.011.267-.227s.07-.323.155-.238c.085.085.022.616-.14 1.18-.166.58-.17.949-.01.85.383-.237.933.854 1.082 2.146.067.581.138 1.164.158 1.296.02.132.188.24.374.24.187 0 .256-.134.155-.297-.101-.164-.03-.393.157-.509.236-.146.224-.351-.04-.67-.21-.252-.27-.564-.132-.691.137-.128.313-.053.392.167.198.556.623.502.623-.08 0-.264-.256-.48-.568-.48-.312 0-.653-.137-.757-.306-.312-.504 1.558-.215 1.981.306.272.335.393.359.4.08.006-.22.142-.4.302-.4.325 0 .277.819-.069 1.164-.401.402-.233.74.271.547.272-.104.417-.267.323-.36-.094-.095-.026-.346.15-.559.222-.267.171-.511-.167-.792-.368-.306-.4-.51-.128-.838.198-.238.276-.651.174-.918-.102-.266-.046-.484.124-.484.171 0 .31-.159.31-.354 0-.195-.221-.27-.492-.165a.509.509 0 0 1-.677-.294c-.143-.372-.287-.399-.628-.116-.346.288-.443.254-.443-.151 0-.286.132-.52.292-.52.16 0 .26-.22.22-.488-.085-.58-.692-.494-.627.088.024.22-.228.4-.56.4-.641 0-.836.51-.267.7.185.061.38.325.432.586.051.261.209.741.349 1.067.276.641-.36 1.278-.928.928-.198-.123-.173-.246.065-.326.545-.181.477-.608-.096-.608-.264 0-.482.156-.485.347-.01.677-.625-.626-.63-1.334-.003-.396-.155-.72-.339-.72-.183 0-.31-.18-.282-.4.135-1.035-.01-1.289-.504-.88-.39.325-.48.308-.48-.094 0-.27-.108-.553-.24-.626-.132-.074-.06-.09.16-.037.475.116.542-.718.08-1.003-.176-.108-.32-.477-.32-.818 0-.342-.152-.622-.339-.622-.186 0-.272-.108-.191-.24.081-.132-.27-.255-.781-.274-.604-.022-.929.125-.929.42 0 .269.162.36.4.226.32-.18.32-.14 0 .206-.22.237-.4.754-.4 1.15 0 .397-.228.849-.508 1.005-.462.259-.46.333.023.816.337.337.39.531.144.531-.4 0-1.23-.918-1.248-1.378-.006-.143.133-.17.31-.062.178.11.317-.129.315-.54-.004-.603-.065-.651-.33-.26-.245.361-.304.203-.236-.64.069-.849.228-1.108.662-1.073.44.035.49-.052.219-.378-.194-.233-.63-.37-.971-.305-.34.066-.62-.003-.62-.15 0-.15-.4-.41-.888-.58-.939-.328-.93-.35-.733 1.686.017.176.164.111.325-.144.162-.256.23-.57.15-.698-.08-.128.002-.324.181-.434.18-.11.325-.06.325.115 0 .174.227.542.503.819.322.322.366.502.121.502-.286 0-.28.123.023.488.5.604.168 1.016-.424.525-.335-.279-.426-.235-.407.194.013.305-.116.59-.287.633-.17.044-.307-.244-.302-.64.005-.396-.138-.82-.318-.94-.179-.123-.34-.562-.359-.977-.018-.415-.14-.928-.27-1.139-.375-.606.05-.983 1.075-.954.519.015.881.128.805.25-.245.398 1.37 1.049 2.206.889.447-.086.855-.027.907.13.052.156.381.072.731-.186.542-.4.57-.532.19-.891-.262-.247-.36-.265-.235-.044.403.72-.538.85-1.102.153-.654-.807-1.089-.908-.812-.188.145.378.016.476-.523.4-.406-.058-.737-.347-.766-.669-.035-.397-.006-.42.1-.08.083.268.29.487.46.487.188 0 .178-.242-.026-.623-.48-.895-.966-1.109-.992-.436-.02.513-.051.506-.276-.061-.14-.352-.195-.796-.124-.987.072-.19-.092-.347-.364-.347-.271 0-.494.273-.494.606 0 .333.144.516.32.408.176-.11.32-.01.32.22 0 .231-.359.44-.797.466-.679.039-.77-.063-.614-.686.101-.404.017-.833-.189-.96-.237-.147-.349-.015-.309.365.035.327.046.946.026 1.376-.036.756-.051.761-.507.16-.567-.75-.647-.205-.199 1.357.238.83.18 1.116-.32 1.568-.336.304-.61.398-.61.21 0-.189.17-.4.377-.469.22-.074.286-.364.157-.7-.124-.323-.417-.498-.67-.4-.249.094-.536-.047-.638-.314-.295-.768-.221-1.073.26-1.073.244 0 .532-.228.64-.507.296-.775.233-1.101-.2-1.013-.215.044-.421-.28-.458-.72-.038-.449.005-.554.096-.24.223.77 1.075.708 1.075-.078 0-.481-.177-.611-.72-.529-.795.121-1.136 1.038-.59 1.585.193.192.346.573.34.846-.007.404-.07.391-.339-.071-.182-.312-.466-.483-.633-.38-.166.103-.399-.074-.517-.393-.117-.32-.368-.686-.557-.816-.237-.162-.229-.236.028-.24.204-.003.339-.184.298-.404-.323-1.76-.624-2.48-1.034-2.48-.26 0-.384-.144-.276-.32.11-.176-.08-.32-.422-.32-.822 0-1.52-.81-.985-1.14.222-.138.586.02.859.37.407.523.447.53.281.05-.177-.515.12-.72.857-.588.149.026.209-.137.134-.362-.075-.226-.519-.417-.986-.425-.467-.008-1.16-.35-1.541-.759-.664-.712-.708-.718-1.045-.144-.323.55-2.112 1.062-2.112.605 0-.11.206-.597.457-1.082.265-.512.346-1.061.194-1.308-.203-.328-.34-.28-.605.217-.189.353-.24.755-.114.895.125.14.055.153-.158.032-.212-.122-.324-.397-.249-.612.347-.984-1.464-2.116-3.205-2.003-.788.052-.945.19-.88.777.045.41-.057.63-.24.516-.176-.108-.32-.045-.32.142 0 .186.113.339.252.339.138 0 .251.288.251.64 0 .352-.102.64-.226.64-.26 0-.674-1.67-.532-2.152.052-.178-.265-.642-.705-1.032l-.8-.708.792.506c.926.592 1.288.638 1.288.163 0-.558-.925-1.316-1.313-1.077-.197.122-.484.023-.638-.22-.21-.33-.29-.26-.324.28a79.544 79.544 0 0 1-.105 1.44c-.095 1.116.144 1.292.892.66l.688-.58-.62.73c-.34.403-.824.653-1.075.557-.351-.135-.408.016-.247.656.145.578.098.762-.155.606-.2-.124-.297-.571-.216-.995.081-.423.023-.847-.13-.941-.152-.094-.277-.433-.277-.753s-.216-.761-.48-.98c-.647-.538-.606-.814.24-1.628.689-.661.69-.676.042-.343-.372.191-.773.253-.889.137-.333-.334-2.14-.391-1.937-.062.1.162-.049.295-.33.295-.283 0-.49-.18-.462-.4.145-1.118-.053-2.18-.37-1.983-.19.117-.113-.238.173-.79.286-.553.45-1.12.363-1.258-.328-.531-.46-1.976-.164-1.793.167.104.231.308.141.453-.09.145.062.35.336.456.385.148.452.042.292-.462-.114-.36-.04-.856.166-1.104.206-.248.278-.607.16-.799-.253-.407.642-1.89 1.515-2.513.334-.238.528-.64.431-.892-.107-.279.092-.558.505-.711.6-.222.624-.305.203-.698-.263-.246-.411-.701-.33-1.013.19-.726.715-.414.715.425 0 .352.134.557.298.456.376-.232.645.194.732 1.158.038.412.347 1.022.688 1.357.611.6.617.591.441-.72-.12-.892-.056-1.332.192-1.338.203-.005.116-.158-.193-.338-.31-.18-.696-.245-.858-.145-.484.3-.746-.458-.332-.957.232-.28.296-.812.162-1.346-.122-.486-.123-.784-.002-.663.318.318 1.592-.963 1.592-1.601.001-1.046.955-.574 1.166.576.236 1.285.139 1.515-.438 1.036-.316-.262-.406-.11-.4.675.009 1.138.377 1.909.792 1.652.152-.093.366-.024.477.155.11.179.364.325.563.325.2 0 .084-.203-.255-.451-.34-.249-.712-.393-.828-.322-.357.22-.554-.699-.252-1.176.202-.319.287-.334.29-.05.003.22.149.4.325.4.176 0 .32-.205.32-.454 0-.25.156-.505.347-.57.25-.082.25-.429.003-1.226-.262-.845-.318-.902-.233-.24.173 1.36-.328.736-.557-.693-.166-1.037-.308-1.238-.762-1.076-.307.11-.486.14-.398.066l.862-.724.701-.59.541 1.874c.298 1.03.684 1.964.859 2.076.174.112.317.583.317 1.046 0 .98.478 1.418.756.693.105-.275.342-.406.527-.291.198.122.241.053.105-.167-.128-.206-.372-.289-.543-.183-.187.116-.231-.122-.112-.6.11-.435.057-.88-.117-.987-.185-.115-.26.103-.18.525.116.61.097.629-.128.12-.145-.33-.226-1.087-.18-1.68.047-.594-.061-1.08-.24-1.08-.18 0-.255.115-.168.256.087.14.044.44-.096.667-.187.3-.301.235-.426-.244-.12-.458.011-.715.435-.849.92-.292.743-.893-.193-.658-.57.143-.8.07-.8-.251 0-.531.869-.935 1.359-.632.193.119.247.06.125-.137-.118-.191-.084-.428.075-.526.37-.23.63.772.565 2.177-.029.606.058 1.034.192.95.134-.082.244-.574.244-1.091 0-.518.144-.942.32-.942.176 0 .32-.159.32-.354 0-.195-.2-.277-.447-.183-.295.114-.502-.117-.61-.677-.119-.626.047-1.042.63-1.583.435-.403.905-.663 1.044-.577.139.086.213-.344.165-.955-.075-.944.028-1.141.685-1.306.425-.107.773-.33.773-.498 0-.168-.144-.215-.32-.107-.176.11-.32.029-.32-.178 0-.216.267-.307.625-.213.344.09.694 0 .78-.203.095-.225.407-.076.815.39.363.415.66.582.66.371 0-.211-.324-.654-.72-.985-.396-.33-.555-.605-.354-.61.2-.007.456-.375.567-.819.173-.688.296-.757.835-.468.348.186.635.225.637.087.003-.139.151-.036.33.228.24.354.273.228.13-.48-.15-.731-.115-.845.145-.48.187.264.338.336.335.16-.003-.176-.216-.6-.475-.94-.5-.661-.66-2.575-.193-2.286.153.094.202.566.11 1.049l-.168.877.834-.546c.464-.304.915-.415 1.017-.25.101.163-.071.446-.383.627-.53.308-.53.33-.013.34.732.012 1.074-1.403.595-2.456-.302-.663-.28-.92.12-1.361.27-.3.49-.749.486-.999-.004-.382-.049-.385-.284-.014-.163.257-.448.337-.684.19-.264-.162-.326-.12-.177.12.125.203.059.37-.148.37-.219 0-.306.267-.209.64.092.352.042.562-.112.467-.425-.262-.25-2.485.235-2.969.355-.355.459-.342.62.078.106.277.317.503.469.503.151 0 .192-.216.091-.48s-.025-.48.17-.48.354.144.354.32c0 .176.128.32.283.32.324 0 .674-1.496.412-1.759-.22-.22-.32-1.44-.117-1.44.084 0 .358.251.61.56.253.307.377.392.275.188-.307-.616.149-1.361.724-1.182.488.152.49.13.017-.264-.346-.287-.467-.758-.369-1.429.081-.55-.025-1.322-.236-1.716-.254-.474-.264-.642-.03-.497.193.12.351.06.351-.132s-.223-.435-.496-.54c-.43-.164-.412-.269.124-.769.663-.617.738-2.769.091-2.623-.231.053-.245-.175-.042-.708.191-.502.185-.857-.017-.981a.64.64 0 0 1-.27-.572c.101-.822-.052-1.176-.51-1.176-.856 0-.507-.554.474-.75.74-.148.906-.315.741-.744-.12-.314-.265-.395-.334-.187-.067.2-.328.286-.58.19-.251-.097-.372-.313-.269-.48.409-.66-.21-1.813-1.15-2.14-.529-.184-.962-.495-.962-.69 0-.196-.145-.267-.322-.157-.177.11-.78-.127-1.338-.524-.558-.398-.895-.529-.748-.291.307.497-.271.225-1.18-.554-.301-.259-.762-.388-1.023-.288-.29.111-.55-.049-.663-.407-.115-.362-.649-.687-1.377-.84-.654-.136-1.26-.264-1.349-.284-.088-.02-.452-.2-.808-.398-.357-.199-1.104-.33-1.66-.292-.556.039-.95-.03-.873-.153.252-.408-.892-.628-1.34-.257-.261.217-.439.236-.439.046 0-.361-1.76-.863-2.697-.769-.34.034-.724-.112-.855-.324-.183-.295-.362-.283-.768.053-.446.371-.57.371-.798.003-.149-.24-.462-.468-.696-.505-.234-.038-.642-.12-.906-.183-.345-.082-.455.112-.391.686l.089.8-.528-.75c-.371-.527-.75-.707-1.278-.606-.412.079-.815-.016-.895-.21-.08-.195-.158-.078-.171.26-.024.584-.462.456-.546-.16-.083-.61-.13-.628-.563-.226-.373.347-.31.5.4.97.464.307.672.56.462.56a.755.755 0 0 1-.579-.318c-.315-.51-.675-.375-1.06.4-.356.717-.357.717-.245-.08.062-.44-.087-.985-.331-1.212-.307-.286-.444-.3-.444-.046 0 .204-.226.28-.509.171-.777-.298-1.138.082-.755.796.185.346.473.545.64.441.168-.103.304-.035.304.151 0 .187-.108.335-.24.33-.383-.017-1.516-.949-1.56-1.284l-.09-.707c-.03-.243-.177-.18-.377.163-.18.31-.239.705-.131.88.108.174.039.317-.154.317-.243 0-.252.184-.03.598.176.33.217.712.091.852-.126.139-.059.155.15.036.207-.119.468-.069.58.111.11.18-.02.413-.292.518-.378.145-.418.333-.17.797.228.425.22.608-.024.608-.193 0-.26.18-.148.4.112.22-.006.145-.261-.167-.442-.539-.473-.535-.634.08-.171.653-.87.916-.87.326a.32.32 0 0 1 .32-.32c.177 0 .32-.216.32-.48s.222-.48.492-.48c.38 0 .419-.135.171-.598-.176-.329-.217-.71-.091-.847s-.095-.17-.491-.072c-.49.12-.72.033-.72-.273a.44.44 0 0 1 .426-.45c.235 0 .427-.216.427-.48s-.12-.48-.267-.48c-.146 0-.23-.162-.186-.36.044-.198-.1-.426-.32-.507-.22-.08-.4.082-.4.36 0 .28-.18.51-.4.512-.272.003-.246.114.08.344.421.299.422.324.003.21-.618-.169-1.12.349-1.393 1.433-.15.6-.366.808-.702.68-.349-.135-.391-.3-.151-.589.184-.22.242-.64.13-.93-.156-.41-.301-.447-.645-.162-.564.469-.555.866.049 2.024.334.64.384 1.038.158 1.264-.226.226-.33.108-.33-.375 0-.387-.143-.704-.32-.704-.394 0-.398.21-.026 1.506.22.767.18 1.114-.158 1.395-.293.243-.39.721-.276 1.367.22 1.246.371 1.397.866.864.217-.234.239-.339.048-.233-.19.106-.352.02-.36-.193a5.036 5.036 0 0 0-.133-.866c-.081-.325.112-.472.6-.455.396.015.724-.13.73-.32.004-.19.163-.08.35.242.325.558.366.553.832-.113.372-.53.551-.6.746-.284.142.229.13.653-.026.944-.17.32-.156.654.036.847.212.211.137.469-.22.766-.486.403-.517.375-.313-.27.139-.437.095-.717-.114-.717-.188 0-.341.216-.341.48s-.153.48-.34.48c-.186 0-.236.18-.112.4.177.314.136.317-.192.013-.34-.314-.34-.478-.008-.88.312-.376.317-.493.02-.493-.213 0-.464.288-.556.64-.172.657-1.186.88-1.524.334-.104-.168-.39-.23-.634-.135-.244.093-.735.015-1.09-.175-.439-.235-.71-.24-.849-.017-.112.18-.018.29.208.24.244-.051.622.562.928 1.505.445 1.374.543 1.489.713.839.131-.5.358-.692.676-.57.263.1.558.011.656-.199.098-.21.09-.036-.016.386-.161.637-.098.732.365.554.487-.187.536-.067.376.919-.1.623-.084 1.073.037 1 .122-.074.407.067.634.313.341.369.316.446-.144.446-.433 0-.471.085-.173.384.212.211.38.535.374.72-.019.582-1.27-1.146-1.27-1.753 0-.976-.35-1.56-.826-1.377-.547.21-.615 1.74-.073 1.626.21-.044.425.208.478.56l.096.64-.295-.64c-.266-.579-.327-.519-.46.453-.097.716-.56.739-.494.025.137-1.475-.023-2.558-.378-2.558-.22 0-.31.536-.237 1.44.063.792.005 1.44-.128 1.44s-.243-.273-.243-.606c0-.552-.576-.994-1.296-.994-.519 0 .076.96.61.985.329.016.377.086.129.186-.287.116-.307.33-.073.767.289.54.244.576-.402.325-.4-.155-.68-.471-.624-.703.062-.25-.188-.166-.615.209-.395.347-.614.452-.486.234.128-.219.11-.617-.041-.886-.225-.403-.393-.325-.962.444-.657.889-.66.924-.064.768.344-.09.625-.003.625.194 0 .196-.216.357-.48.357s-.48.141-.48.313c0 .187.336.16.835-.067.707-.323.898-.294 1.247.184.31.423.454.46.58.147.092-.23.18-.057.197.383.031.831.646 2.107.656 1.36.003-.22.149-.4.325-.4.176 0 .32.29.32.646 0 .543.14.612.88.435 1.067-.256 1.334-.48.8-.671-.22-.079-.4-.284-.4-.456 0-.171.144-.223.32-.114.176.109.32-.035.32-.32 0-.285-.12-.444-.266-.354-.215.133-.25-.477-.081-1.39.1-.54.789.804.848 1.654.04.578.185 1.41.322 1.85.227.733.2.762-.312.34-.476-.39-.601-.392-.835-.015-.15.244-.201.595-.112.78.09.184-.056.065-.325-.264-.468-.576-.496-.566-.697.233-.17.676-.315.776-.773.53-.311-.166-.68-.199-.819-.073-.139.126-.148.047-.02-.176.129-.223.404-.31.612-.193.26.145.254.078-.02-.216-.7-.755-1.383-.658-1.176.167.102.406.03.833-.16.95-.19.118-.363.53-.384.916-.028.541-.07.573-.183.14-.14-.531-.781-.824-.702-.32.089.56-.057 1.04-.313 1.04-.152 0-.207-.36-.123-.8.084-.44.352-.8.596-.8.243 0 .443-.152.443-.338 0-.186.18-.23.4-.099.319.192.32.141.003-.25-.219-.27-.3-.59-.18-.71.121-.12-.532-.192-1.45-.16l-1.669.06.72.767c.56.595.596.719.162.552-.49-.188-.518-.108-.232.643.401 1.056.407 1.224.033.993-.162-.1-.13.251.07.78.411 1.09.777 1.222 1.113.403.138-.337.581-.565 1.11-.573 1.047-.015 1.095.166.24.899-.352.301-.64.832-.64 1.18 0 .43-.154.575-.478.45a.506.506 0 0 0-.656.283c-.115.3-.571.446-1.282.41-1.011-.05-1.104.022-1.104.848 0 .69-.152.903-.64.903-.424 0-.64-.213-.64-.63 0-.429.153-.571.48-.446.264.101.48.016.48-.189 0-.205-.144-.284-.32-.175-.182.112-.337-.19-.358-.701l-.038-.9-.244.96c-.419 1.646-.346 2.092.385 2.363.73.27 1.513-.16 1.387-.76-.037-.177-.007-.213.067-.08.075.133.267.16.427.062.16-.1.14.22-.047.711-.187.49-.51.998-.72 1.129-.23.144.027.319.66.446 1.142.23 1.46.871.354.71-.774-.113-1.157.98-.496 1.415.21.138-.222.18-.961.093-.74-.087-1.421-.035-1.515.117-.093.151.188.296.625.321.436.026 1.004.068 1.261.094.516.051 1.206 1.67.867 2.036-.118.127.121.056.53-.158.41-.213.943-.312 1.184-.22.277.107.377.007.27-.27-.11-.288.034-.41.417-.353.353.051.665.454.787 1.015.111.511.221.786.245.61.075-.567.664.617.636 1.28-.022.527-.072.499-.283-.16-.246-.768-.258-.771-.288-.08-.018.396-.156.72-.308.72-.151 0-.203-.382-.113-.848.122-.639.06-.784-.254-.59-.275.17-.338.13-.188-.113.15-.241-.048-.37-.571-.37-.935 0-1.385.542-.874 1.053.261.261.356.211.356-.188 0-.3.144-.544.32-.544.37 0 .437 1.17.08 1.39-.133.082-.673-.213-1.2-.656-.528-.442-.78-.708-.56-.59.22.117.4.044.4-.163 0-.215-.267-.306-.625-.213-.344.09-.692 0-.775-.202-.082-.202-.161-.114-.175.194-.014.308-.205.571-.425.585-.32.02-.32.058 0 .187.552.223.52 2.028-.036 2.028-.292 0-.385.263-.283.8.09.467.004.8-.204.8-.196 0-.357.15-.357.334 0 .184.252.292.56.24.427-.072.564.134.578.866.01.528.184 1.265.388 1.638.204.373.295.754.201.848-.093.093-.028.257.146.365.514.317 1.106-1.908.706-2.655-.437-.817-.432-1.316.015-1.316.195 0 .28.192.19.426-.09.235.025.427.256.427.232 0 .34-.204.243-.459-.097-.252-.012-.56.189-.684.2-.125.397-.616.436-1.091.078-.943.664-.995.842-.075.063.322-.03.485-.21.373-.192-.118-.252.063-.15.453.093.357.446.798.784.979.558.298.577.269.212-.316-.22-.354-.3-.747-.174-.872.384-.384.612.101.612 1.306 0 1.181-.505 2.1-1.143 2.083-.199-.005-.11-.202.199-.436.308-.233.56-.618.56-.853 0-.334-.086-.344-.384-.045-.556.555-.9.471-.721-.176.085-.308-.057-.128-.316.4-.307.626-.475.765-.485.4-.008-.308-.152-.56-.32-.56-.169 0-.097.592.16 1.32.58 1.644.575 1.89-.024 1.099-.445-.587-.47-.565-.47.419 0 .611.131.958.32.842.176-.109.32-.045.32.141 0 .644.055.82.386 1.219.243.293.188.4-.206.4-.325 0-.448.146-.31.37.145.234.088.282-.156.13-.263-.161-.283-.36-.064-.624.228-.275 0-.747-.785-1.63-.608-.683-1.123-1.36-1.145-1.504a27.57 27.57 0 0 0-.083-.502c-.023-.132-.293-.596-.6-1.031-.434-.617-.557-.67-.557-.24 0 .303.14.55.312.55.171 0 .24.469.154 1.04-.125.823-.095.907.145.4.275-.578.306-.555.326.24.027 1.034-.446 1.146-1.012.24-.47-.753-.949-.857-.676-.146.12.314.03.46-.25.4-.286-.06-.46.242-.499.867-.033.528-.157 1.284-.277 1.68-.163.54-.088.72.3.72.6 0 .698-.526.132-.715-.295-.098-.293-.184.008-.37.26-.161.509.09.736.74.189.542.468.985.622.985.309 0 .053-.895-.435-1.526-.361-.466.55-1.674 1.263-1.674.367 0 .6.84.468 1.68-.02.132.106.24.282.24s.32.36.32.8c0 .637-.16.8-.79.8-.605 0-.742.124-.585.532.15.39.089.461-.225.268-.328-.203-.367-.121-.168.347.144.337.271.842.283 1.121.013.28.208.681.434.893.327.305.417.234.437-.349.014-.402.095-.56.18-.35.086.21.362.303.615.206.66-.254.566.105-.237.908-.675.675-.677.703-.08.937.412.162.457.248.136.26-.264.01-.696-.123-.96-.293-.426-.276-.426-.314 0-.34.264-.017.086-.175-.397-.351-.7-.256-.818-.433-.582-.872.435-.813.017-1.232-1.42-1.425l-1.28-.171.96.445c.61.283.756.45.4.46-.309.007-.56.23-.56.494s-.225.48-.5.48c-.274 0-.416-.134-.314-.298.101-.164.059-.375-.095-.47-.352-.218-1.086 1.349-.827 1.767.12.195.362.171.644-.063.355-.295.451-.27.451.118 0 .272.097.745.215 1.052.145.378.095.485-.157.33-.238-.148-.305-.06-.187.247.1.262.368.405.594.319.226-.087.484.12.573.46.126.482-.005.618-.598.618-.418 0-.76-.136-.76-.303 0-.167-.226-.53-.503-.807-.352-.351-.396-.57-.145-.725.25-.154.208-.347-.136-.633-.48-.397-.655-.178-.544.675.014.114-.257.133-.603.043-.358-.094-.629-.005-.629.207 0 .204.18.348.4.319.843-.11 1.2.04 1.2.504 0 .264.121.48.27.48.147 0 .432.36.632.8.336.736.301.8-.428.8-.446 0-.794.186-.794.424 0 .28-.299.383-.88.3-.484-.069-1.166.087-1.515.347-.606.449-.61.5-.08 1.085.305.338.555.855.555 1.149 0 .294.133.535.294.535.162 0 .511.083.777.185.362.14.44.02.309-.48-.195-.744-.603-.872-.848-.265-.088.22-.17.112-.181-.24-.012-.352.119-.856.29-1.12.262-.407.31-.392.315.099.003.318.15.488.33.378.179-.11.251-.32.161-.466-.09-.145.056-.348.323-.45.395-.152.423-.07.147.446-.272.507-.238.633.171.633.28 0 .421-.144.312-.32-.352-.57.071-.34 1.03.56 1.4 1.313 1.515 2.182.353 2.664-.69.285-.832.464-.524.659.308.195.249.27-.219.277-.454.007-.52.085-.229.27.227.144.32.5.206.795-.113.294-.077.535.079.535s.454-.45.66-.998c.324-.856.494-.97 1.191-.794.466.117.83.065.853-.122.022-.18.076-.47.12-.646.044-.176.098-.473.12-.659.07-.584.68.025.68.678 0 .341.154.62.342.62.194 0 .264-.31.163-.72-.098-.395-.096-.54.005-.32.235.512 1.09.524 1.09.017 0-.292.096-.288.398.013.316.317.303.456-.065.683-.254.157-.577.215-.717.128s-.256.075-.256.36-.144.429-.32.32c-.176-.109-.32.044-.32.34 0 .435.09.464.466.152.257-.213.617-.294.8-.18.184.113.334.048.334-.144 0-.253.181-.254.65-.003.356.19.576.463.488.606-.183.296 1.211.197 1.73-.123.188-.117.258-.349.155-.516-.103-.166-.285-.243-.405-.171-.12.072-.396-.062-.614-.298-.256-.276-.282-.5-.075-.628.177-.11.223-.37.102-.577-.122-.208.111-.09.517.262l.737.64-.226-.728c-.162-.52-.106-.703.197-.64.458.095.892.57.9.987.002.142-.125.179-.282.082-.454-.28-.71.778-.332 1.366.29.452.32.425.192-.182-.133-.627-.074-.673.485-.374.35.187.72.257.822.155.102-.103.049-.186-.12-.186-.167 0-.324-.257-.348-.572-.027-.37.18-.571.59-.571.499 0 .594.154.449.731-.146.581-.051.732.462.732.356 0 .646-.203.646-.452 0-.248.212-.42.471-.382.747.11.896.42.503 1.05-.315.505-.336.476-.155-.216.19-.725.162-.754-.3-.313-.466.445-.45.608.182 1.886.69 1.397.692 1.398 1.247.712.305-.377.668-.685.806-.685.139 0-.244.525-.85 1.168-.607.642-.939 1.075-.737.962.201-.114.449.009.55.272.238.62.843.619.843-.003 0-.264-.235-.48-.523-.48-.382 0-.296-.179.317-.661.462-.364.986-.571 1.163-.461.178.11.323.038.323-.158 0-.197.144-.27.32-.16.176.108.32-.084.32-.427 0-.55.567-1.013 1.238-1.013.124 0 .225.28.225.622 0 .404-.12.523-.341.339-.228-.19-.328 0-.301.578.021.473-.113 1.107-.3 1.408-.312.504-.383.507-.91.03-.535-.485-.57-.46-.548.413.017.726.073.8.255.339.213-.541.27-.547.663-.073a.967.967 0 0 0 1.073.314c.479-.152.597-.085.464.262-.098.256-.05.669.107.917.202.318.287.145.29-.59.003-.666-.151-1.04-.43-1.04-.292 0-.386-.263-.284-.796.084-.438.27-.724.413-.635.143.089.326-.165.405-.564.09-.45.134-.33.115.316-.016.572-.18 1.044-.362 1.05-.46.013.727.678 1.378.771.292.042.578.403.637.803.064.431-.025.645-.218.526-.178-.11-.425-.038-.548.16-.122.199-.048.47.166.601.213.132.376.332.36.444a8.228 8.228 0 0 0-.027.746c0 .477.053.47.443-.065.415-.567.437-.55.348.262-.065.595.098.972.517 1.197.337.18.612.525.612.766 0 .281.23.379.64.271.68-.177.85.36.36 1.134-.218.344-.308.329-.465-.08-.296-.77-.913-.605-.797.214.07.498.285.688.694.618.404-.069.524.033.377.32-.119.232.01.142.288-.2.556-.685.522-.78.644 1.806.023.475.148.97.277 1.1.13.13.21-.043.179-.384-.138-1.476.01-1.781.683-1.42.358.191.64.212.64.046 0-.456 1.076-.264 1.49.268.298.382.338.304.203-.4-.108-.567-.03-.874.224-.874.215 0-.07-.432-.635-.96-.565-.527-1.192-.862-1.394-.744-.202.117-.11-.081.206-.442.484-.553.5-.683.106-.835-.266-.102-.693.122-.989.52-.286.386-.433.52-.327.3.107-.22.022-.4-.188-.4s-.003-.298.461-.662c.749-.59.897-.61 1.322-.184.279.278.39.712.266 1.035-.131.343-.087.479.114.354.18-.111.49.153.688.588.378.83.839 1.011 1.177.464.11-.178.334-.243.496-.142.163.1.266-.185.228-.635-.062-.754-.31-.966-.991-.847-.146.025-.158-.127-.028-.337.161-.26.067-.317-.296-.178-.293.113-.533.07-.533-.093s.42-.266.933-.23c.513.037.928.14.922.228a.737.737 0 0 0 .07.32c.044.088.105.766.136 1.507.044 1.088-.027 1.28-.37.994-.57-.472-.921-.077-.444.498.587.707 1.555.292 1.455-.624-.054-.495.078-.775.367-.775.248 0 .451-.144.451-.32 0-.176-.233-.32-.519-.32-.415 0-.443-.092-.136-.461.437-.528 1.4-.302 1.082.254-.115.202.169.022.632-.4.463-.421.766-.89.673-1.04-.093-.15-.017-.273.17-.273a.34.34 0 0 1 .338.339c0 .186.134.256.298.154.164-.1.394-.028.512.162.143.23.417.163.822-.204.58-.525.608-.518.608.139 0 .38-.161.69-.359.69-.25 0-.238.145.036.476.218.262.546.384.73.27.199-.123.236-.05.092.184-.133.215-.022.633.245.93.672.746 1.038 2.3.541 2.3-.211 0-.46-.288-.552-.64-.092-.352-.282-.64-.422-.64-.296 0-.22.838.107 1.164.122.122.222.469.222.77 0 .3.205.717.455.925.376.311.423.254.27-.331-.122-.465-.066-.635.163-.493.635.393.727-.37.223-1.854-.274-.806-.474-1.645-.446-1.864.105-.81-.035-1.195-.406-1.117-.21.044-.439-.19-.51-.518-.083-.38 0-.518.226-.378.196.12.283.338.194.482-.089.144.078.242.371.218.371-.03.55.232.589.867.03.502.185 1.006.344 1.12.158.115.287.64.287 1.169 0 .528.155.932.344.899.189-.034.333.254.32.64-.019.555.142.688.776.64.44-.032.62.016.398.108-.22.092-.308.318-.194.503.134.217-.147.284-.798.188-.553-.081-1.006-.024-1.006.127 0 .152-.324.405-.72.565-.637.256-.648.291-.098.31.615.02.615.025 0 .517-.606.485-.605.49.047.177.367-.177.963-.244 1.324-.15.36.094.754.011.875-.184.121-.196.101-.336-.044-.31-.758.131-1.397-.069-1.206-.378.152-.246.315-.248.555-.008.24.24.483.225.825-.052.385-.312.436-.31.245.008-.132.22-.101.4.069.4s.234.286.142.636c-.091.35-.33.555-.53.456-.2-.099-.106.031.21.288.53.435.534.507.045.995-.297.298-.778.446-1.106.342-.836-.265-1.232 1.087-.48 1.637.303.222.465.544.358.715-.252.408.107 1.33.518 1.33.176 0 .242-.201.148-.448-.225-.585.108-.906.555-.535.217.18.574.127.936-.137.56-.41.554-.445-.12-.806-.475-.254-.634-.263-.487-.025.281.456-.22.448-1.245-.02-1.091-.497-1.088-1.29.005-1.092 1.15.209 1.726-.086 1.734-.888.004-.379.023-1.048.042-1.488.08-1.845-.263-2.992-.97-3.253-.39-.144-.627-.392-.529-.55.098-.16-.02-.853-.264-1.543l-.442-1.253.97.142c.766.113.912.05.693-.3-.153-.244-.281-.66-.286-.923-.005-.31-.313-.474-.867-.463-.578.011-.91-.178-1.015-.579-.122-.464-.063-.518.268-.243.313.26.466.243.587-.062.108-.274.45-.062 1.014.627.966 1.18 1.464 1.343 1.217.4-.092-.352-.01-.64.18-.64.198 0 .257.241.138.56-.19.508-.154.515.391.08.535-.427.569-.427.305 0-.163.264-.302.624-.31.8-.006.176-.237.304-.512.284-.39-.028-.505.324-.522 1.6-.013.9.104 1.79.26 1.98.155.188.223.653.15 1.033-.073.379.002.773.167.875.365.225.405 2.068.045 2.068-.14 0-.254.468-.254 1.04.001.678-.14 1.01-.408.952-.226-.049-.313.069-.194.26.146.238.392.19.77-.152.304-.276.67-.393.814-.261.143.132.173-.213.068-.767-.14-.739-.024-1.2.434-1.729.676-.78.76-.972.386-.892-.43.09-1.36-.431-1.36-.763 0-.178.283-.249.629-.158.373.097.6.014.56-.203-.038-.202.106-.333.32-.291.22.043.31-.125.209-.39-.099-.256-.273-.442-.389-.413-.57.145-1.646-.5-1.624-.975.016-.333.087-.386.187-.138.196.486 1.068.535 1.068.06 0-.186-.143-.25-.317-.143-.181.113-.235-.016-.125-.3.104-.274.4-.497.658-.497.33 0 .409-.212.27-.72-.174-.638-.156-.655.164-.143.285.456.457.499.816.201.325-.27.454-.275.454-.017 0 .197-.144.359-.32.359-.176 0-.32.303-.32.674 0 .45.15.617.453.5a.488.488 0 0 1 .629.282c.098.256.004.423-.214.38-.213-.042-.369.174-.344.48.024.306-.1.468-.275.36-.195-.12-.235.066-.102.484.14.442.078.68-.179.68-.217 0-.298.096-.18.214.117.118-.002.545-.267.949-.441.673-.429.762.151 1.073.348.186.796.643.995 1.014.338.633.302.662-.552.447-1.112-.279-1.098-.265-1.16-1.097-.028-.37-.166-.557-.307-.416-.141.14-.092.729.11 1.307.277.796.44.946.672.62.22-.312.262-.235.15.278-.085.39-.061.678.053.64.244-.082.367.222.367.91 0 .274-.147.408-.326.298-.178-.11-.228-.358-.11-.549.128-.207.066-.255-.155-.119-.203.126-.37.081-.37-.099s-.306-.492-.68-.692c-.637-.341-.672-.3-.536.625.11.756.007 1.033-.44 1.175-.32.102-.583.316-.583.477 0 .16.36.127.8-.073.44-.2.8-.558.8-.794 0-.235.096-.428.215-.428.393 0 1.385 1.053 1.385 1.47 0 .227.15.505.333.618.215.133.26-.085.125-.621-.25-.992.062-2.427.527-2.427.183 0 .243.144.135.32-.11.176-.046.32.14.32.422 0 .44-.412.036-.816-.192-.192.014-.328.56-.368a35.391 35.391 0 0 0 1.893-.207c.566-.08 1.011-.05.989.064-.022.114.076.473.218.8.162.374.112.68-.136.835-.292.18-.258.295.13.444.305.117.442.07.327-.116-.107-.174-.052-.316.124-.316.175 0 .298.272.273.605-.033.445-.255.581-.845.516-.745-.081-.759-.058-.207.346.326.238.73.347.9.243.189-.118.216.22.07.884-.214.974-.187 1.033.294.634.29-.242.622-.347.735-.234.113.113.013.206-.221.206-.235 0-.352.075-.26.167.093.093.404.078.692-.033.385-.148.467-.425.312-1.047-.185-.746-.15-.797.297-.429.442.364.485.327.327-.276-.16-.61-.089-.666.585-.459.967.298.898.22 1 1.137.095.858.473 1.25 1.207 1.25.338 0 .367-.071.1-.241-.551-.35-1.621-3-1.51-3.74.051-.347.316-.794.587-.992.27-.198.399-.454.284-.569-.31-.31-.806-.252-.606.072.095.154-.19.28-.634.28-1.02 0-1.384.345-.772.732.357.226.258.3-.41.303-.483.003-.88-.148-.88-.334 0-.186.128-.26.284-.164.156.097.359-.11.45-.46.092-.35.392-.637.667-.637.313 0 .43-.18.315-.48-.1-.264-.036-.48.144-.48s.4.18.489.4c.102.252.17.206.186-.126.033-.68.895-1.012 1.217-.467.3.508 2.009.873 2.009.43 0-.174.214-.138.476.08.385.32.514.297.673-.12.109-.282.335-.428.503-.325.168.104.047.379-.27.61-.316.232-.685.353-.819.27-.134-.082-.243.123-.243.456s-.197.605-.436.605c-.266 0-.376-.23-.283-.586.102-.39-.02-.587-.364-.587-.285 0-.52.18-.522.4-.003.267-.109.24-.315-.08-.45-.695-.4.11.073 1.185.217.492.524.987.683 1.1.17.121.145.621-.06 1.211-.245.701-.247.942-.01.795.227-.14.265.032.114.509-.148.465-.112.647.102.515.183-.112.437.122.565.52.128.399.292.553.363.343.072-.21.374-.305.67-.21zm-6.901-2.352c.069-.562.007-.95-.137-.86-.145.088-.262.004-.262-.188 0-.534.852-.742 1.5-.365.54.314.541.338.02.347a.571.571 0 0 0-.565.57c-.003.307-.157.775-.343 1.04-.26.368-.309.243-.213-.544zm-.883-2.022c-.11-.179-.17-.647-.131-1.04.038-.393-.04-.97-.176-1.284-.235-.546-.263-.546-.681 0-.376.49-.479.504-.746.098-.17-.26-.208-.547-.086-.64.123-.093.24-.313.258-.489.088-.806.552-1.76.856-1.76.185 0 .241.095.126.211-.116.116-.05.404.145.64.28.337.205.43-.349.43-.424 0-.651.16-.57.4.076.22.436.356.8.304.432-.062.734.124.863.53.24.754 1.337.69 1.2-.07-.051-.289.057-.525.24-.525a.337.337 0 0 0 .334-.338c0-.187-.18-.236-.4-.11-.22.127-.293.113-.162-.03.13-.145.074-.46-.126-.7-.286-.345-.252-.394.163-.235.29.111.525.339.525.507 0 .167.144.215.32.106.509-.314.371.36-.163.804-.369.305-.397.506-.121.839.335.404-.01.577-1 .5-.09-.006-.329.337-.53.763-.2.426-.235.774-.075.774.16 0 .29.144.29.32 0 .417-.545.413-.804-.005zm7.524-.315a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-12.06-1.735c-.955-1.016-.997-1.156-.664-2.242.255-.83.439-1.043.647-.75.197.275.24.168.13-.33-.136-.618-.087-.676.302-.353.402.334.376.482-.191 1.086-.613.652-.625.774-.184 1.792.283.652.48.858.487.511.007-.32-.125-.838-.294-1.153-.261-.489-.176-.567.589-.539.686.026.86.164.749.593-.08.308-.243.56-.36.56-.119 0-.237.288-.264.64-.026.352.087.64.252.64s.3.144.3.32c0 .57-.457.332-1.499-.775zm1.96-.65c.063-1.168.463-1.361.43-.207-.015.546-.128.992-.25.992s-.203-.353-.18-.784zm8.98-.633c0-.772.67-.983.934-.293.089.232-.085.554-.386.715-.442.236-.548.154-.548-.422zm-2.827-.395c-.298-.298-.266-.747.053-.747.147 0 .267.216.267.48 0 .544-.024.564-.32.267zm2.915-.925c-.253-.253.091-1.422.419-1.422.15 0 .19-.216.088-.48-.101-.264-.041-.48.133-.48.174 0 .392.288.484.64.092.352.027.64-.144.64-.171 0-.22.288-.109.64.193.607-.408.925-.871.462zm-5.947-2.073c.053-1.906.534-2.693.629-1.029.027.484.078 1.27.112 1.745.034.475-.13.938-.366 1.028-.33.127-.415-.27-.375-1.744zm-3.421.651c-.11-.176.018-.32.282-.32.264 0 .569.144.678.32.108.176-.019.32-.283.32-.264 0-.569-.144-.677-.32zm1.333-.213c-.298-.298-.266-.747.053-.747.147 0 .267.216.267.48 0 .544-.024.564-.32.267zm-2.271-.71c-.097-.157.071-.265.373-.24.302.024.553-.137.557-.357.01-.558.228-.584.968-.116.433.274.466.351.103.24-.295-.091-.709.042-.92.295-.436.526-.826.59-1.081.178zm-.636-1.522c-.168-.439-.121-.459.286-.12.555.46.613.645.202.645-.157 0-.377-.236-.488-.525zm-20.058-.313c-.188-.226-.293-.658-.235-.96.14-.722.907-.967.907-.29 0 .301-.151.433-.352.309-.202-.125-.169.107.077.54l.43.76.104-.88c.17-1.453 1.3-.822 1.336.746.01.37-1.933.177-2.267-.225zm16.352.201c0-.177.161-.323.359-.323.248 0 .236-.148-.04-.48-.491-.592-.112-.638.47-.056.352.352.32.488-.183.803-.37.231-.607.253-.607.056zm3.226-1.415c-1.035-1.068-1.035-1.068-.21-.91.539.103.824.015.824-.254 0-.44.453-.124.52.363.022.161.069.33.104.373.035.044.113.332.171.64.186.97-.34.891-1.409-.212zm.934.167c0-.158-.237-.377-.526-.488-.439-.168-.459-.121-.12.286.46.555.646.613.646.202zm1.075.357c.118-.191.069-.438-.11-.548-.18-.11-.325-.42-.325-.685 0-.43.053-.431.48-.004.574.574.613 1.045.11 1.356-.22.136-.283.088-.155-.119zm-18.295-1.052a1 1 0 0 1 .56-.56c.24-.08.36.04.28.28a1 1 0 0 1-.56.56c-.24.08-.36-.04-.28-.28zm2.07-1.476c-.11-.11-.114-.537-.01-.951.113-.451.046-.753-.166-.753-.195 0-.355.216-.355.48s-.15.48-.334.48c-.184 0-.292-.24-.24-.533.056-.318-.304-.77-.891-1.118-.981-.581-.985-.58-.96.134.014.395.145.805.292.913.147.107.058.275-.196.373-.321.123-.452-.034-.427-.515.02-.398-.134-.66-.364-.614-.22.044-.383-.028-.362-.16.133-.844-.088-1.096-.805-.917-.515.13-.825.039-.946-.277-.15-.388.082-.436 1.326-.273.829.108 1.679.33 1.89.496.271.213.366.106.33-.373-.036-.477-.237-.647-.694-.584-.44.06-.67-.114-.725-.552-.046-.352.002-.452.104-.223.142.317.3.279.658-.16.26-.317.39-.412.29-.21-.1.201.05.455.332.564.361.138.472.478.374 1.147-.121.828-.013.992.844 1.275.541.178 1.112.313 1.268.298.157-.014.406.167.555.402.216.34.272.326.276-.069.003-.272-.175-.697-.395-.944-.335-.376-.317-.387.11-.067.28.21.604.287.72.171.115-.116.208.138.205.563-.006.789-1.345 2.357-1.705 1.997zm1.23-.104c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm12.01-.313c-.227-.14-.314-.415-.193-.61.121-.196.044-.357-.172-.357-.216 0-.315-.077-.22-.172.217-.217 1.855.515 1.855.83 0 .382-.826.583-1.27.309zm-21.19-.225c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm1.013-.27c-.223-.268-.312-.58-.2-.693.114-.113.207-.037.207.168 0 .205.144.373.32.373.176 0 .32-.288.32-.64 0-.414-.214-.64-.606-.64-.333 0-.688-.214-.789-.476-.105-.275-.019-.444.206-.4.214.042.367-.185.34-.504-.043-.523.006-.533.49-.095.295.267.57.889.61 1.38.04.493.217.943.391 1.002.175.059.318.247.318.419s-.144.223-.32.114c-.176-.108-.32-.045-.32.141 0 .492-.499.416-.967-.148zm4.857-.472c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm10.99.32c-.11-.176-.054-.32.122-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm2.08.02c0-.166.142-.39.316-.497.181-.112.235.016.126.3-.213.555-.442.657-.442.196zm-15.828-.7c.145-.457.1-.608-.138-.46-.195.12-.354.066-.354-.12 0-.53.445-.4 1.048.304.71.828.694.956-.11.956-.529 0-.618-.136-.446-.68zm7.703.08c-.494-.546-.496-.618-.029-.798.3-.115.42-.365.287-.6-.173-.305-.12-.302.217.012.378.352.373.46-.033.726-.411.27-.391.378.144.786.341.261.472.474.29.474-.183 0-.577-.27-.876-.6zm4.385-.629c-.055-1.087-.027-1.126.4-.55.563.761.572.969.06 1.39-.306.253-.414.055-.46-.84zm2.871.83c-.008-.22-.118-.689-.244-1.04-.175-.492-.152-.533.1-.177.266.375.369.302.54-.382.117-.465.105-1.02-.027-1.233-.154-.249-.105-.304.137-.155.224.139.318.706.232 1.41-.08.647-.154 1.356-.167 1.576-.012.22-.143.4-.29.4-.146 0-.273-.18-.281-.4zm4.789-.133c-.458-.184-.544-.748-.115-.748.157 0 .369.216.47.48.102.264.153.47.114.455-.038-.014-.25-.098-.47-.187zm-6.618-.93c-.65-.65-.633-.748.118-.691.34.026.687.305.77.62.185.708-.218.74-.888.07zm-17.017-.324c.107-.278.195-.638.195-.8 0-.161.124-.294.275-.294.152 0 .207.36.123.8-.084.44-.296.8-.47.8s-.23-.227-.123-.506zm7.577-.374c.04-.995.483-1.836.744-1.413.13.211.336.325.456.252.12-.072.418.086.664.351.392.424.352.454-.32.247-.422-.13-.665-.13-.542.003.124.13.026.437-.217.68-.59.59-.812.557-.785-.118zm12.903.105c-.096-.25-.005-.771.202-1.159l.377-.704.677.678c.641.64.648.708.128 1.228-.451.451-.556.466-.587.081a3.96 3.96 0 0 1 0-.709c.02-.132-.123-.24-.32-.24-.2 0-.283.283-.19.64.191.732-.024.87-.287.185zm-10.365-.166c0-.165.142-.389.316-.496.181-.112.235.016.126.3-.213.555-.442.657-.442.196zm-.272-1.283c.07-.21.232-.373.36-.36.382.04.308.479-.104.616-.212.07-.327-.044-.256-.256zm7.844-.154c-.096-.25.033-.627.287-.837.376-.312.46-.261.46.277 0 .807-.507 1.186-.747.56zm-13.866-.328c0-.256.123-.39.272-.297.15.092.19.302.088.466-.259.418-.36.371-.36-.169zm4.694.176c0-.15.192-.43.426-.625.322-.268.427-.241.427.107a.72.72 0 0 1-.427.625c-.234.09-.426.042-.426-.107zm7.18-.256c.086-.223 0-.372-.192-.33-.192.042-.422-.125-.511-.372-.118-.325.024-.4.52-.27.885.231.862.121-.197-.925-.484-.479-.641-.694-.349-.478.361.267.598.285.739.057.114-.185.45-.319.748-.298.488.033.486.051-.019.183-.664.174-.685.388-.11 1.145.277.365.632.488 1.002.346.394-.151.501-.103.342.154-.127.206-.51.374-.852.374-.342 0-.622.14-.622.31 0 .17.216.227.48.126.265-.101.48-.026.48.167 0 .192-.363.32-.807.283-.503-.041-.748-.22-.651-.472zm-4.104-.152c.092-.15.302-.19.466-.088.418.259.371.36-.168.36-.257 0-.39-.123-.298-.272zm-12.996-.395c0-.25-.086-.718-.19-1.04-.115-.354-.083-.446.08-.232.148.195.516.317.817.27.506-.078.509-.025.043.686-.579.883-.75.956-.75.316zm2.751-.06c-.112-.293-.402-.434-.674-.33-.29.111-.477 0-.477-.285 0-.764 1.368-.364 1.49.436.124.814-.058.91-.339.18zm1.17.302c-.234-.094-.327-.454-.224-.863.268-1.068-.29-2.229-1.1-2.289-.482-.035-.652.089-.535.392.1.26.03.358-.168.236-.186-.115-.26-.41-.166-.657.094-.246.047-.448-.104-.448-.152 0-.362.226-.468.5-.106.276-.347.405-.536.288-.19-.117-.265-.42-.168-.672a.49.49 0 0 0-.276-.634c-.25-.095-.433-.433-.41-.75.036-.466.15-.51.606-.225.4.25.453.419.184.585-.267.165-.221.294.157.44.295.113.687.112.871-.003.185-.114.336-.047.336.15s.166.255.369.13c.203-.126.287-.096.187.067-.1.162.381.31 1.07.328.69.018 1.254-.093 1.254-.246s.159-.279.354-.279c.195 0 .265.233.155.518-.215.561.877 1.722 1.62 1.722.237 0 .43.16.43.354 0 .195-.2.278-.443.184-.32-.122-.395.017-.27.496.119.453.056.593-.196.437-.204-.124-.37-.498-.37-.83 0-.635-.46-1.048-1.318-1.182-.4-.062-.49.14-.403.896.063.537.196 1.11.296 1.272.194.314-.084.345-.735.083zm1.519-.767c0-.187-.144-.25-.32-.142-.176.11-.32-.026-.32-.3 0-.74.815-.607.872.14.026.352-.015.64-.092.64s-.14-.152-.14-.338zm5.44-.48c0-.275.146-.409.325-.298.179.11.242.335.14.499-.273.443-.465.36-.465-.201zm-2.04-.077c-.087-.14-.03-.462.126-.716.215-.347.272-.284.231.255-.058.777-.116.852-.357.461zm9.72-.243c0-.275.144-.41.32-.302.176.11.32.334.32.5 0 .165-.144.3-.32.3-.176 0-.32-.224-.32-.498zm-10.7-.235c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm5.9.288c0-.07.223-.212.496-.317.285-.109.413-.055.301.126-.188.304-.797.45-.797.19zm-17.687-.859c.192-.735.281-.763.512-.162.096.25-.017.527-.25.616-.289.11-.372-.033-.262-.454zm14.187.182c-.011-.353.117-1.121.285-1.707.262-.915.24-1.01-.16-.679-.256.213-.477.261-.492.108a97.051 97.051 0 0 0-.107-1c-.097-.877-.032-.886.75-.104.628.629.635 1.82.018 3.346-.263.653-.275.654-.294.036zm-16.66-.176c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm25.004-.408c-.268-.323-.239-.427.12-.427.262 0 .476.192.476.427 0 .234-.055.426-.121.426-.067 0-.28-.192-.475-.426zm-23.562-.53c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm11.038-.004a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-9.92-.267c0-.146.216-.266.48-.266s.48.12.48.266c0 .147-.216.267-.48.267s-.48-.12-.48-.267zm1.981-.067c.066-.297-.218-.45-.861-.466-.528-.013-.96-.186-.96-.385s-.099-.46-.218-.58c-.12-.12-.133-.44-.03-.71.127-.33.041-.44-.261-.335-.249.086-.41.391-.359.678.061.342-.066.46-.369.344-.267-.102-.426-.508-.376-.962.047-.432-.038-.863-.19-.957-.153-.094-.277-.023-.277.158s-.24.237-.533.125c-.334-.129-.454-.078-.322.136.116.188-.038.436-.341.553-.304.116-.603.059-.666-.129-.062-.187-.254-.253-.427-.146-.173.107-.518-.072-.767-.398-.393-.515-.494-.53-.774-.112-.262.392-.322.348-.326-.24-.006-.825.452-.893 1.596-.24 1.106.632 1.236.596 1.135-.32-.048-.44.03-.8.172-.8.143 0 .21-.513.149-1.14-.061-.628-.017-1.048.096-.934.114.114.226.483.248.82.067 1.031.097 1.086.84 1.542.7.43.705.426.16-.188-.61-.687-.752-1.216-.24-.9.448.277.4-.272-.064-.736-.42-.42-.255-.486.497-.197.267.102.41.387.315.632-.104.27.156.595.66.825.457.208.832.572.832.807 0 .236.315.43.7.43.699 0 .699 0 .06-.598a7.737 7.737 0 0 0-1.337-.97c-.6-.32-.642-.46-.301-1.006.644-1.032 1.366-1.03 3.005.01 1.433.91 1.577.941 1.95.431.221-.302.402-.387.402-.188 0 .2-.15.456-.335.57-.226.14-.2.375.08.72.342.422.34.468-.006.26-.283-.171-.479-.035-.596.414-.097.368-.303.59-.459.494-.156-.097-.284.066-.284.36 0 .364.19.487.59.383.354-.093.738.083.96.438.52.833.46 1.074-.144.573a9.859 9.859 0 0 0-1.08-.76c-.312-.182-.873-.517-1.247-.743-.416-.252-.679-.283-.679-.08 0 .182-.216.331-.48.331-.62 0-.622.606-.002.844.263.1.399.312.302.47-.098.157.119.286.481.286.753 0 .836-.31.26-.967-.22-.25-.09-.198.288.117.379.315.649.815.6 1.111-.049.297.131.791.4 1.1.27.307.336.56.148.56-.189 0-.404-.18-.478-.4-.104-.31-.26-.298-.685.053-.46.38-.534.382-.452.012zm1.382-4.66c.809-.118.832-.27.108-.722-.362-.226-.563-.257-.446-.068.117.19.06.344-.127.344-.186 0-.349-.252-.361-.56-.02-.514-.041-.512-.252.024-.127.32-.333.573-.458.56-.862-.09-.93.079-.255.64.574.479.835.543 1.014.252.133-.215.483-.426.777-.47zm7.867 4.55c-.228-.274-.26-.534-.08-.646.167-.102.393.05.504.338.27.707.044.872-.424.308zm-12.35-.516c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm10.777-.202c-.529-.575-.372-1.153.214-.79a.76.76 0 0 1 .32.759c-.097.425-.168.429-.534.03zm-13.817-.296c0-.372.188-.487.616-.375.432.113.565.028.445-.283-.093-.244-.01-.444.184-.444.195 0 .365.18.377.4.012.22.146.112.298-.24.262-.61.276-.607.297.08.013.42-.177.737-.457.76-.757.063-.934.113-1.36.384-.262.166-.4.069-.4-.282zm-9.76-.142c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm22.03-.42c-.781-.824-1.38-4.06-.752-4.06.199 0 .32.252.268.56-.051.308.1 1.026.337 1.596.396.952.53 1.026 1.664.915 1.43-.139 2.192.442 1.42 1.083-.397.33-.523.285-.724-.258-.134-.362-.387-.638-.563-.615-.552.074-1.047.698-.886 1.117.222.58.02.49-.765-.337zm4.29.295c-.687-.521-.71-.728-.08-.728.264 0 .409.07.322.157-.086.086.003.35.2.587.447.54.281.533-.442-.016zm-5.98-.65c-.31-.373-.259-.424.281-.282.362.094.659.299.659.454 0 .432-.517.337-.94-.172zm-20.1-.077c-.22-.089-.384-.473-.363-.855.033-.622.053-.63.194-.075.148.58.196.569.75-.16.582-.764.59-.765.408-.058-.101.396-.32.72-.486.72-.166 0-.212.144-.103.32.213.346.199.35-.4.108zm7.98-.132c.064-.19.252-.344.42-.344.167 0 .355.155.418.344.063.19-.125.344-.418.344-.294 0-.482-.155-.42-.344zm-5.34-.296c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm16.225-.52c-.34-.364-.288-.44.303-.44.7 0 .701-.01.093-.506-.613-.5-.613-.503.018-.301.514.164.561.125.24-.198-.22-.222-.39-.698-.38-1.059.02-.607.043-.6.318.085.163.407.429.659.59.56.364-.226.058 1.074-.42 1.779-.297.439-.415.451-.762.08zm3.533-.36c-.222-.074-.323-.263-.226-.42.098-.158.029-.564-.152-.902-.284-.53-.238-.591.332-.442.444.116.536.25.28.408-.526.326.123.694.779.443.325-.125.509-.023.509.282 0 .505-.85.858-1.522.632zm-19.141-.778c0-.636.348-.77.666-.257.11.18.353.231.54.116.19-.118.278-.026.2.21-.223.666-1.406.608-1.406-.07zm1.97.173c-.17-.44-.122-.46.285-.121.555.46.613.646.202.646-.157 0-.377-.236-.488-.525zm-6.907-.256c0-.254.144-.55.32-.659.176-.109.32.099.32.461 0 .363-.144.66-.32.66-.176 0-.32-.208-.32-.462zm1.984-.41c-1.312-.85-1.691-1.369-1.003-1.369.203 0 .254-.276.126-.68-.15-.472-.103-.61.154-.452.203.126.346.468.317.76-.098 1 .022 1.23.844 1.604.742.338.804.316.631-.228-.15-.477-.03-.604.573-.604.735 0 .747.035.306.92-.253.506-.492.92-.532.92-.04 0-.677-.392-1.416-.871zm5.385-.569c0-.176.14-.536.31-.8.171-.264.31-.336.31-.16 0 .176-.139.536-.31.8-.17.264-.31.336-.31.16zm-5.45-.48a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm9.348-.192c-.227-.246-.272-.448-.099-.448.332 0 .813.609.624.79-.062.058-.298-.096-.525-.342zm-8.11-.735c.36-.228.342-.333-.1-.58-.296-.166-.571-.723-.61-1.238-.04-.515-.202-1.152-.361-1.416-.246-.407-.211-.415.23-.058.285.231.467.692.403 1.024-.064.332.157.951.491 1.376.597.759.545 1.184-.144 1.174-.19-.003-.15-.13.092-.282zm6.443-.236c0-.346-.15-.778-.331-.96-.228-.227-.178-.33.16-.33.27 0 .49.089.49.198 0 .109.289.198.64.198.353 0 .643-.15.645-.331.003-.219.086-.223.24-.012.361.491 1.356.465 1.356-.036 0-.244.216-.462.48-.484.264-.022.624-.076.8-.12.176-.044.481-.098.679-.12.263-.03.264-.154.005-.467-.268-.323-.239-.426.12-.426.262 0 .475.128.475.285 0 .157.18.178.4.045.238-.142.206.012-.08.382-.638.826-1.035 1.092-1.344.901-.405-.25-.297.67.128 1.096.3.299.274.384-.11.384-.273 0-.652-.324-.843-.72-.27-.56-.352-.597-.369-.17-.015.382-.187.486-.564.342-.87-.334-2.498-.24-2.498.143 0 .193-.108.46-.24.592-.132.132-.24-.044-.24-.39zm8.627-.14c-.3-.563-.254-.69.309-.838.365-.095.664-.31.664-.475 0-.166.144-.213.32-.104.371.23.433.818.08.762-.708-.112-.964.102-.813.678.218.835-.108.821-.56-.024zm-12.147.033c0-.17.216-.227.48-.126.264.102.48.241.48.31 0 .07-.216.126-.48.126s-.48-.14-.48-.31zm14.292-.386c-.1-.382-.073-.89.06-1.126.146-.263.253.01.272.696.037 1.29-.07 1.43-.332.43zm-3.52.163a.882.882 0 0 1-.212-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm-15.248-.827c.004-.582.065-.628.316-.24.4.62.4.96 0 .96-.176 0-.318-.324-.316-.72zm2.236.4a.32.32 0 0 1 .32-.32c.176 0 .32-.14.32-.31 0-.17-.252-.229-.56-.13-.434.14-.46.11-.12-.134.243-.173.343-.474.222-.67-.121-.196-.145-.356-.053-.356.358 0 .818 1.26.635 1.737-.213.556-.765.688-.765.183zm2.152-.194c-.107-.107-.027-.464.178-.792.292-.468.278-.687-.065-1.006-.361-.335-.392-.322-.171.072.227.406.189.416-.246.063-.435-.352-.538-.327-.665.16-.133.514-.153.517-.186.028-.042-.615 1.078-1.35 1.583-1.038.18.111.513.048.74-.14.305-.253.413-.222.413.118 0 .254-.12.387-.267.296-.241-.149-.381.332-.187.64.044.069-.18.414-.5.766-.445.493-.482.68-.16.809.232.092.264.179.074.193-.19.014-.434-.062-.541-.17zm10.993-.953c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm-5.438-.58c-.301-.363-.294-.448.035-.4.442.065.727.484.49.722-.078.077-.314-.067-.525-.321zm-3.08-.214c-.117-.188-.143-.41-.059-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm9.133.002c0-.187.144-.25.32-.141.176.108.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-3.84-.62c0-.177.152-.32.338-.32.187 0 .25.143.142.32-.11.175-.262.32-.34.32-.077 0-.14-.145-.14-.32zm13.44-.333c0-.543.075-.583.446-.24.46.425.384.892-.145.892-.166 0-.301-.294-.301-.652zm-18.996-.468c-.106-.275-.006-.48.232-.48.23 0 .417.216.417.48s-.105.48-.233.48c-.127 0-.315-.216-.416-.48zm1.076.141c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm16.96.02c0-.177.152-.32.338-.32.187 0 .25.143.142.32-.11.175-.262.32-.34.32-.077 0-.14-.145-.14-.32zm-25.28-.71c0-.138.207-.25.46-.25.254 0 .532.112.617.25.086.139-.122.252-.461.252-.34 0-.616-.113-.616-.251zm3.647.016c-.091-.147.131-.267.494-.267.362 0 .659.12.659.267 0 .147-.223.267-.495.267-.271 0-.568-.12-.658-.267zm7.463-.175c.087-.227.197-.412.245-.412.047 0 .24.185.428.412.257.31.196.411-.245.411-.346 0-.521-.168-.428-.411zm-1.29-.876c-.255-.256-.534-.395-.62-.31-.086.086-.08-.237.011-.718l.167-.875.284.767c.156.421.44.954.63 1.183.47.567.106.53-.471-.047zm-3.202-.299c-.105-.273-.063-.575.093-.672.409-.252.652.272.352.757-.199.322-.296.303-.445-.085zm20.607-.063c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.107.106-.182-.083-.168-.42zm-19.225-.793c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm2.7-.159c-.596-.477-.592-.483.1-.148.395.192.72.416.72.497 0 .245-.166.175-.82-.349zm-8.09-.462c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm4.59.32c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm19.826-.021c-.116-.188-.124-.428-.019-.533.106-.106.193-.016.193.2 0 .216.166.29.369.164.229-.142.283-.088.141.14-.283.459-.415.464-.684.03zm-23.506-.299c0-.176.135-.32.3-.32.166 0 .39.144.5.32.108.176-.027.32-.302.32-.274 0-.498-.144-.498-.32zm2.444-.16c-.102-.264-.06-.48.091-.48.152 0 .359.216.46.48.102.264.06.48-.091.48-.152 0-.359-.216-.46-.48zm5.556-1.44a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-2.24-.96c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm-2.876-1.04c-.003-.581-.174-.88-.503-.88-.275 0-.409-.146-.298-.325.245-.396.69-.151 1.092.6.182.34.185.741.007 1.022-.218.346-.294.24-.297-.417zm22.925.226c.098-.254.306-.382.464-.285.397.245.36.362-.177.569-.31.118-.405.024-.287-.284zm-25.949-1.012c-.174-.456-.137-.493.18-.18.218.218.316.476.218.575-.099.098-.278-.08-.398-.395zm8.622.23c-.112-.182.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm12.647-.804c0-.176.14-.536.31-.8.171-.264.31-.336.31-.16 0 .176-.139.536-.31.8-.17.264-.31.336-.31.16zm-21.104-2.907c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.107.107-.182-.082-.168-.42zm8.615.168c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-3.741-.57c-.387-.253-.425-1.33-.046-1.33.147 0 .267-.217.267-.48 0-.265-.173-.48-.384-.48-.296 0-.297-.088-.005-.38.528-.528.812-.131.777 1.088-.016.57.118 1.128.298 1.24.2.124.15.27-.128.377-.251.096-.601.08-.779-.035zm8.647-.517c0-.256.12-.392.267-.3.147.09.267.3.267.465 0 .166-.12.301-.267.301-.147 0-.267-.21-.267-.466zm-14.161-.767c-.196-.365-.223-.725-.063-.824.157-.097.367.14.468.527.246.939.025 1.1-.405.297zm6.535-.047c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm26.72-.586c0-.382.13-.694.291-.694.326 0 .277.818-.069 1.164-.122.123-.223-.09-.223-.47zm-5.84.082c-.132-.134-.24-.535-.24-.893 0-.471.096-.554.35-.3.192.192.3.593.24.892-.061.298-.218.434-.35.3zm-20.72-.959c0-.657.859-1.519 1.11-1.113.104.17.401.227.66.128.3-.116.47.018.47.371 0 .4-.182.504-.66.38-.404-.106-.727.003-.834.282-.235.612-.746.58-.746-.048zm3.907-.009c-.227-.246-.272-.447-.099-.447.332 0 .813.608.624.789-.062.058-.298-.095-.525-.342zm7.933.173c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-17.903-.78a26.928 26.928 0 0 1-.206-1.28c-.113-.795-.077-.863.207-.392.19.313.282.89.206 1.28-.075.391-.169.567-.207.391zm33.903-.18c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-16.48-.3c-.11-.177-.046-.32.14-.32.187 0 .34.143.34.32 0 .175-.064.32-.142.32-.077 0-.23-.145-.338-.32zm1.76-.02c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm1.033-.04c.16-.479.887-.742.887-.322 0 .172-.229.4-.507.507-.312.12-.458.048-.38-.186zm1.367.06c-.11-.177-.054-.32.122-.32s.409.143.518.32c.108.175.053.32-.123.32s-.409-.145-.517-.32zm-1.561-1.773c-.11-.286-.19-.688-.18-.894.012-.205.159-.029.328.393.168.421.249.824.179.894-.07.07-.217-.107-.327-.393zm-19.208-2.228c-.458-1.908-.446-2.092.157-2.415.65-.347.827-1.414.292-1.745-.176-.108-.32-.036-.32.16 0 .197-.154.263-.341.147-.226-.139-.17-.4.167-.772.309-.341.422-.79.287-1.14-.153-.4-.106-.508.152-.348.206.127.385.475.397.772.018.437.072.418.279-.099.14-.352.2-.964.13-1.36-.164-.95.326-.916.972.069.59.9.662 1.259.197.971-.176-.108-.32.035-.32.32 0 .285-.143.43-.317.323-.182-.113-.235.017-.124.304.138.36.05.446-.31.308-.417-.16-.457-.038-.24.722.185.643.133 1.035-.176 1.324-.338.315-.357.564-.084 1.075.23.43.245.736.04.865-.173.11-.381.487-.461.84-.12.522-.188.463-.377-.32zm3.222.587c-.35-.35-.243-.64.236-.64.247 0 .376.192.286.427-.188.488-.23.505-.522.213zm2.493-.448c-.328-.531-.033-.605.426-.106.227.246.272.447.099.447-.173 0-.409-.153-.525-.34zm15.418-.139c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm12.998-.084c.03-.393.167-.716.306-.716.334 0 .31.371-.06.956-.236.374-.289.323-.246-.24zm-32.392-.076c-.035-.088-.124-.592-.2-1.12-.112-.795-.076-.862.209-.39.189.314.279.818.2 1.12-.08.303-.174.478-.209.39zm2.73-.546c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm26.417-.014c-.04-.765.413-.965.793-.35.136.22.088.283-.117.156-.19-.117-.411.04-.492.35-.112.43-.156.392-.184-.156zm-28.517-.22c0-.254.13-.543.29-.641.16-.099.214.109.122.46-.195.748-.412.843-.412.18zm.96 0c0-.275.144-.5.32-.5.176 0 .32.136.32.301 0 .166-.144.39-.32.5-.176.108-.32-.027-.32-.302zm33.653-.483c-.187-.537-.272-.977-.189-.977.216 0 .82 1.663.661 1.821-.072.073-.285-.307-.472-.844zm-28.828.117c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm5.71.106c-.173-.564-.203-1.214-.049-1.06.234.234.397 1.14.205 1.14-.072 0-.143-.036-.156-.08zm19.385-.24c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm1.603-.645c.11-.179.335-.242.499-.141.443.274.36.466-.201.466-.275 0-.409-.146-.298-.325zm-28.323-.315c0-.176.135-.32.3-.32.166 0 .39.144.5.32.108.176-.027.32-.302.32-.274 0-.498-.144-.498-.32zm5.465-.186c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm-10.02-.702c-.092-.352-.048-.833.096-1.067.397-.641.755.489.372 1.172-.27.483-.317.472-.467-.105zm12.235-.004c0-.378.09-.39.48-.067.264.219.48.428.48.466 0 .037-.216.067-.48.067a.474.474 0 0 1-.48-.466zm11.52-.406c0-.363.137-.574.306-.47.168.104.224.4.125.659-.254.661-.431.584-.431-.19zm-19.84.216c0-.067.288-.198.64-.29.352-.092.64-.037.64.123s-.288.29-.64.29c-.352 0-.64-.055-.64-.123zm-.832-.9c0-.49.185-.76.522-.76.288 0 .523.185.523.411 0 .227-.07.342-.155.257-.085-.085-.32.07-.523.348-.315.43-.367.393-.367-.257zm24.518-.09c-.252-.304-.277-.487-.065-.487.387 0 .838.607.616.829-.08.08-.328-.073-.551-.342zm-19.014-.754c-.09-.147.039-.267.288-.267.248 0 .377.12.287.267-.091.147-.22.267-.287.267-.068 0-.197-.12-.288-.267zm29.248-.712c0-.187.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-35.28-.193c.22-.089.58-.089.8 0 .22.089.04.161-.4.161s-.62-.072-.4-.161zm1.36-.908c0-.264.139-.48.31-.48.17 0 .227.216.125.48-.101.264-.24.48-.31.48-.069 0-.125-.216-.125-.48zm-2.86-.026c.03-.162.024-.582-.015-.934-.06-.552-.105-.53-.326.16-.238.744-.258.751-.288.099-.043-.962.417-1.162 1.054-.458.483.534.485.625.024 1.007-.278.231-.48.288-.45.126zm1.49-.854c-.08-.22-.013-.655.148-.967.16-.312.214-.691.12-.844-.094-.152.03-.444.277-.649.282-.234.52-.256.641-.058a.364.364 0 0 1-.11.5c-.166.104-.235.557-.153 1.008.105.584.037.752-.237.583-.264-.163-.321-.07-.18.294.111.293.076.533-.08.533s-.348-.18-.427-.4zm6.814.16c-.003-.22-.166-.364-.364-.32-.198.044-.425-.136-.505-.4-.128-.427-.106-.427.195 0 .323.456.505.211.357-.48-.27-1.266-.255-1.393.143-1.24.234.09.387.406.339.702-.048.296.03.687.173.868.144.182.127.542-.036.8-.202.32-.298.341-.302.07zm25.936-.215c-.31-.373-.26-.424.278-.284.36.094.575.3.479.455-.234.38-.315.361-.757-.171zm-31.035-1.412c-.027-.781.621-.832.876-.069.079.236-.007.333-.193.218-.183-.113-.407-.025-.496.196-.089.22-.173.066-.187-.345zm-2.622.027c-.167-1.088.577-3.06 1.045-2.77.15.092.26.483.246.869-.014.385-.098.52-.186.3-.32-.79-.63-.378-.544.72.049.617-.05 1.12-.218 1.12-.169 0-.323-.107-.343-.24zm-2.818-.587c.015-.373.091-.449.193-.193.093.23.081.507-.025.613-.106.106-.182-.083-.168-.42zm35.545-.133c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm-29.098-.376c.048-.234-.087-.39-.301-.348-.224.044-.311-.125-.206-.4.176-.458-.185-.62-1.107-.495-.328.044-.343-.09-.069-.602.194-.363.5-.66.68-.66.18 0 .24.145.13.32-.108.177-.055.32.118.32.464 0 1.33 1.878.969 2.102-.166.102-.263-.004-.214-.237zm6.527-1.397c-.11-.286-.19-.688-.18-.893.012-.206.159-.03.328.392.168.422.249.824.179.894-.07.07-.217-.107-.327-.393zm15.68-.32c-.309-.804-.218-1.012.16-.363.186.321.272.651.19.734-.083.082-.24-.085-.35-.37zm11.555-.173c.113-.433.258-.578.338-.338.077.23-.013.572-.199.758-.237.237-.279.112-.14-.42zm1.403.106c-.023-.443.147-.72.443-.72.264 0 .48.152.48.339 0 .186-.134.256-.296.156-.163-.1-.362.07-.443.38-.112.43-.156.393-.184-.155zm-34.117-.4c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm35.04-.98c0-.186.144-.249.32-.14.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-33.44-.94c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm15.46.101c.23-.092.507-.08.613.025.106.107-.083.182-.42.169-.373-.016-.449-.092-.193-.194zm17.864-.004c-.355-.355-.221-.786.17-.544.254.157.307.055.164-.318-.126-.326-.083-.47.105-.354.174.108.317.395.317.638 0 .52-.462.872-.756.578zm-19.87-.716c-.102-.164-.063-.373.087-.466.15-.092.272.042.272.298 0 .54-.101.587-.36.168zm-17.894-.603c-.146-.232-.18-.507-.075-.61.104-.105.023-.39-.179-.633-.268-.323-.272-.539-.015-.796s.409-.13.56.469c.273 1.09.076 2.155-.291 1.57zm15.64-.058c-.11-.176-.054-.32.122-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm-16.784-.93c-.4-.745-.422-.99-.093-.99.418 0 1.045 1.237.726 1.434-.164.101-.449-.099-.633-.444zm5.922.063c-.14-.363.038-.734.526-1.103.689-.52.748-.521.935-.013.11.299.127.615.037.703-.09.088-.226-.012-.301-.222-.228-.635-.998-.108-.823.562.2.766-.087.821-.374.073zm-2.26-.095c-.063-.102.161-.206.497-.231.337-.026.676.057.755.185.078.127-.145.23-.497.23s-.692-.083-.755-.184zm10.188-.464c0-.256.12-.392.267-.301.147.09.267.004.267-.193s.145-.268.322-.159c.202.125.15.372-.137.66-.58.578-.719.577-.719-.007zm17.667.168a.348.348 0 0 1 .108-.478c.16-.1.374.035.475.298.199.518-.282.667-.583.18zm-23.853-.982c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm7.68 0a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm22.08-.64a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-27.196-1.37c-.003-.314-.22-.653-.484-.755-.264-.1-.48-.335-.48-.52 0-.184.308-.06.686.275.684.607.686.606.533-.227-.132-.717-.06-.811.505-.663.362.094.483.23.267.303-.215.071-.394.37-.396.663-.003.294-.145.75-.315 1.014-.264.408-.311.395-.316-.09zm-3.005-.402c-.094-.246-.034-.533.134-.637.169-.104.307.044.307.329 0 .285.134.435.297.333.164-.1.37-.067.458.075.088.142-.106.279-.432.304-.325.024-.67-.157-.764-.404zm-2.34-1.31c-.413-.29-.624-.686-.515-.97.15-.393.236-.403.46-.055.23.355.322.355.553-.003.21-.327.45-.186 1.003.59l.727 1.021-1.084-.56c-.968-.5-1.037-.504-.644-.03.535.644.417.646-.5.006zm9.095-.093c-.14-.532-.098-.657.14-.42.185.187.275.528.198.758-.08.24-.225.095-.338-.338zm-1.31-.827c-.102-.263-.053-.478.107-.478.433 0 .703.568.367.776-.16.099-.374-.035-.475-.298zm-5.644-.28c0-.065.252-.318.56-.56.507-.397.518-.386.12.122-.418.533-.68.702-.68.439zm7.786-1.012c0-.257.12-.466.267-.466.147 0 .267.135.267.3 0 .166-.12.376-.267.467-.147.09-.267-.045-.267-.301zm-6.668-.148c-.063-.102.161-.206.497-.231.337-.026.676.057.755.185.078.127-.145.23-.497.23s-.692-.083-.755-.184zm1.467-.825c.015-.373.091-.449.193-.193.093.23.081.507-.025.613-.106.106-.182-.083-.168-.42zm3.134-.373c-.389-.496-.38-.514.07-.163.28.218.627.29.771.16.144-.13.159-.057.032.163-.298.517-.35.507-.873-.16zm-2.292-.16c-.3-.224-.431-.565-.298-.776.16-.25.36-.118.604.4.423.896.41.911-.306.376zm-1.624-.723c-.102-.266-.298-.465-.435-.442-.136.022-.608.01-1.048-.026-.701-.059-.661-.106.32-.383.616-.174 1.256-.45 1.424-.611.167-.163.429-.295.582-.295.154 0 .048.23-.234.513-.3.3-.434.766-.322 1.12.228.718-.019.824-.287.124zm29.76-.317c-.1-.264-.044-.48.127-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm-34.942-1.791c-.283-.456.651-1.39 1.108-1.108.552.341.409.857-.21.753-.312-.053-.524.082-.48.306.1.493-.127.52-.418.049zm7.312-1.246c-.091-.35-.28-.565-.42-.48-.14.087-.178-.13-.086-.483.093-.358.01-.64-.19-.64a.35.35 0 0 0-.357.339c0 .186-.153.244-.34.129-.406-.251.582-1.084 1.3-1.096.35-.006.49.378.52 1.43.041 1.515-.147 1.87-.427.801zm-1.693-.182c0-.275.144-.41.32-.301.176.109.32.333.32.499 0 .165-.144.3-.32.3-.176 0-.32-.224-.32-.498zm4.036.12c.092-.15.302-.189.466-.088.418.26.371.36-.168.36-.257 0-.39-.122-.298-.272zm-8.96-.64c.092-.15.302-.189.466-.088.418.26.371.36-.168.36-.257 0-.39-.122-.298-.272zm1.447-.18c-.417-.779-.51-2.088-.103-1.447.137.217.567.333.955.258.861-.166.893.164.108 1.133l-.596.736zm.917-.401c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm6.08.194c0-.07.216-.209.48-.31s.48-.045.48.126c0 .17-.216.31-.48.31s-.48-.057-.48-.126zm1.14-1.7c-.174-.457-.137-.493.18-.18.218.217.316.476.218.574-.099.099-.278-.079-.398-.394zm-2.88-1.28c-.174-.457-.137-.493.18-.18.218.217.316.476.218.574-.099.099-.278-.079-.398-.394zm3.98.207c0-.187.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm46.874 89.059c-.13-.484-.24-1.065-.248-1.291-.007-.226-.241-.374-.52-.328-.278.045-.709-.044-.956-.199-.308-.193-.378-.165-.221.088.126.204.058.37-.15.37-.28 0-.274.125.023.483.356.428.45.42.816-.08.381-.519.44-.492.758.338.189.495.343 1.035.343 1.2 0 .164.088.299.195.299.107 0 .09-.396-.04-.88zm90.486.668c-.22-.089-.4-.39-.4-.668 0-.279-.09-.417-.2-.307-.312.312.133 1.19.59 1.162.32-.02.323-.06.01-.187zm6-.108a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm2.4 0c-.11-.176-.028-.32.18-.32.28 0 .285-.112.022-.43-.197-.236-.25-.547-.12-.691.13-.144.081-.173-.11-.064-.191.109-.311.528-.267.931.1.907.096.894.313.894.099 0 .09-.144-.018-.32zm-47.48-.726c-.317-.313-.354-.277-.18.18.12.315.3.493.398.394.098-.098 0-.357-.219-.574zm46.04.067c0-.362-.138-.574-.307-.47-.168.104-.224.4-.125.659.254.662.432.584.432-.19zm29.124.259c.003-.22.096-.76.207-1.2.112-.44.082-.688-.067-.551-.148.137-.3.425-.336.64a5.843 5.843 0 0 1-.292.95c-.133.332-.08.56.13.56.194 0 .355-.18.358-.4zm-152.644-.061c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.339.32.339.176 0 .32-.064.32-.141zm32.233-.053c-.106-.106-.382-.117-.613-.025-.256.102-.18.178.193.193.337.014.526-.061.42-.168zm83.287.053c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.339.32.339.176 0 .32-.064.32-.141zm16.873-.477c-.025-.34-.16-.547-.3-.461-.14.086-.253.004-.253-.182 0-.187-.186-.34-.412-.34-.226 0-.411.28-.411.623 0 .468.1.538.407.284.298-.247.461-.2.606.178.266.694.42.65.363-.102zm18.167.298c-.11-.176-.334-.32-.5-.32-.165 0-.3.144-.3.32 0 .176.224.32.498.32.275 0 .41-.144.302-.32zm-196.32-.66c0-.165-.216-.3-.48-.3-.495 0-.636.377-.276.738.256.255.756-.034.756-.437zm47.36-.036c0-.166-.14-.216-.31-.11-.171.105-.531-.336-.8-.98-.633-1.513-.631-1.519.301-1.285.608.153.75.091.614-.265a.529.529 0 0 0-.632-.324l-.914.282c-.387.12-.365.338.134 1.36.328.67.462 1.266.3 1.325-.164.06-.224.226-.135.37.21.34 1.442.021 1.442-.373zm125.276-.33c-.033-.404.075-.822.239-.93.164-.107.1-.271-.142-.364-.288-.11-.555.2-.775.902-.184.59-.214.997-.067.906.148-.091.269-.005.269.192 0 .196.12.283.267.192.147-.09.241-.495.209-.899zm2.201-.448-.238-.926-.206.8c-.252.978-.027 1.761.387 1.348.162-.163.188-.713.057-1.222zm7.787 1.272c-.111-.112-.056-.474.122-.807.178-.332.212-.782.076-.998-.135-.216-.215-.681-.177-1.033.054-.505-.008-.471-.297.16-.27.592-.398.669-.49.297-.194-.791-2.006-.423-1.852.377.211 1.097.512 1.315.974.705.42-.553.44-.55.475.06.02.353.108.46.196.24.09-.22.37-.4.626-.4.36 0 .39.14.134.62-.425.794-.417.98.042.98.205 0 .282-.09.171-.201zm-14.731-1.048c0-.585-.14-.875-.38-.784-.211.082-.312.492-.229.93.207 1.082.609.986.609-.146zm-125.237-.56c-.258-.672-.696-.186-.502.557.123.47.247.549.42.269.136-.22.173-.59.082-.825zm1.722.47c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm119.65.277c.38.488.423.495.267.046-.135-.39-.026-.512.4-.446.321.05.405.03.186-.046-.287-.099-.309-.306-.08-.735.218-.406.211-.665-.02-.808-.218-.135-.151-.348.188-.596.486-.355.487-.42.012-.814-.443-.368-.488-.354-.315.097.136.352.033.525-.312.525-.283 0-.514.06-.514.134 0 .073-.088.361-.195.64-.127.332-.017.506.32.506.283 0 .515.168.515.373s-.095.279-.211.163c-.319-.319-1.075.43-1.032 1.023.03.417.067.405.188-.062.145-.564.165-.564.603 0zm15.217-.413c-.605-.424-.652-.581-.3-1.013.354-.437.334-.48-.145-.301-.381.142-.56.053-.56-.28 0-.268.144-.4.32-.29.176.108.32-.099.32-.461 0-.363-.144-.66-.32-.66-.176 0-.284.172-.24.382.044.21-.19.44-.518.51-.33.072-.524.008-.434-.14.09-.15-.064-.483-.343-.74-.453-.42-.48-.403-.243.16a3.6 3.6 0 0 1 .226 1.333c-.021.387.125.805.326.93.224.138.276.082.136-.145-.135-.219-.025-.37.27-.37.289 0 .5.275.5.651 0 .38.298.763.72.923.994.376 1.147.114.285-.49zm-190.227-.184c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm47.462.574c0-.07-.224-.212-.497-.316-.285-.11-.413-.056-.301.125.188.304.798.45.798.191zm41.099-.16c.097-.158-.034-.368-.291-.467-.257-.099-.567-.02-.688.176-.133.215-.074.266.15.127.203-.125.37-.076.37.11 0 .415.22.44.459.053zm2.26-.034c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm86.378.036c.097-.156-.028-.452-.276-.658-.369-.306-.42-.254-.279.283.19.727.294.797.555.375zm21.216.09c-.106-.105-.077-.501.064-.88.14-.377.142-.974.002-1.326-.21-.528-.258-.462-.277.371-.017.776-.153.992-.583.927-.382-.058-.526-.314-.453-.806.067-.462-.021-.644-.246-.505a.415.415 0 0 0-.133.57c.14.226.028.279-.315.147-.875-.336-.608.021.662.884 1.128.767 1.707 1.047 1.28.619zm2.887-1.969c.22-.072.4.025.4.216 0 .434.854.457 1.117.03.112-.18-.016-.235-.3-.125-.36.138-.497-.011-.497-.54v-.73l.796.748c.525.493.694.87.498 1.107-.185.223-.174.536.028.828.286.41.31.41.197-.004-.07-.26.13-.693.448-.96.55-.464.536-.538-.298-1.607-.901-1.155-1.67-1.568-1.67-.899 0 .21-.226.102-.503-.24-.277-.341-.412-.44-.3-.218.281.554-.13 1.732-.52 1.49-.174-.107-.45-.55-.616-.983-.37-.976-1.057-.648-.855.408.082.43-.01.767-.21.774-.196.006-.051.186.32.4.715.41.77 1.43.1 1.844-.268.165-.2.276.218.358.437.086.696-.143.927-.823.176-.519.5-1.002.72-1.073zm1.68-1.037c-.289-.187-.328-.312-.1-.315.21-.003.47.139.58.315.245.397.134.397-.48 0zm-123.262 2.071c-.099-.098-.278.08-.398.395-.174.456-.137.493.18.18.218-.218.316-.476.218-.575zm89.235.032c-.202-.427-.417-.726-.48-.664-.198.198.3 1.44.578 1.44.148 0 .103-.349-.098-.776zm26.347.297c-.239-.287-.266-.48-.068-.48.367 0 .346-.582-.044-1.206-.355-.568-3.414-2.105-4.313-2.167-.725-.05-.721-.032.16.675.497.399.95.6 1.006.447.157-.43 2.299.71 2.299 1.224 0 .276.191.382.487.268.387-.148.423-.066.175.397-.213.398-.195.701.057.953.534.534.709.453.24-.111zm-3.84-3.38c0-.186.144-.249.32-.14.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-150.4 3.22a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm143.578-.38c-.102-.255-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm1.913-.34c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm15.149.739c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.499.32.499.176 0 .32-.136.32-.301zm-28.537-.766c.061-.316-.102-.533-.4-.533-.297 0-.503.273-.503.666 0 .78.747.67.903-.133zm8.307-.029c.288-.632.253-.851-.188-1.184-.448-.338-.477-.335-.167.014.508.575.177 1.444-.375.986-.295-.244-.459-.198-.6.168-.111.292-.06.422.123.31.174-.108.317-.043.317.143 0 .614.53.353.89-.437zm6.15.456c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm81.498-.38c-.102-.255-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm-204.903-.1c-.101-.264-.33-.48-.509-.48-.187 0-.156.203.073.48.22.264.449.48.51.48.06 0 .028-.216-.074-.48zm1.213 0c0-.167-.155-.356-.344-.419-.19-.063-.344.125-.344.419 0 .293.154.481.344.418.189-.063.344-.251.344-.418zm14.832.16a.744.744 0 0 0-.58-.315c-.228.003-.189.128.1.315.614.397.725.397.48 0zm-38.08-.32a.744.744 0 0 0-.58-.315c-.228.003-.189.128.1.315.614.397.725.397.48 0zm128.626-.342c-.101-.164.04-.298.315-.298.274 0 .499-.151.499-.336 0-.536-1.061.186-1.148.781-.042.285.057.435.22.334a.35.35 0 0 0 .114-.481zm15.054.342c.108-.176.045-.32-.142-.32-.186 0-.338-.352-.338-.781 0-.43-.136-.865-.302-.968-.169-.104-.255.204-.196.701.057.488.121 1.068.141 1.288.044.479.56.528.837.08zm-102.2-.726c-.317-.313-.354-.277-.18.18.12.315.3.493.398.394.098-.098 0-.356-.219-.574zm100.12.406c0-.176-.324-.318-.72-.315-.583.004-.629.064-.24.315.62.4.96.4.96 0zm.516-1.355c-.196-.13-.23-.238-.077-.24.153-.003.1-.221-.12-.485-.219-.264-.632-.471-.919-.46-.324.013-.218.146.28.354.74.308.753.35.183.563-.551.206-.56.253-.08.437.295.113.547.462.559.776.02.495.056.486.276-.07.155-.39.115-.732-.102-.875zm74.5.723c-.189-.189-.48-.175-.78.035-.398.282-.385.308.084.157.31-.1.56-.018.56.183 0 .2.098.265.218.145.12-.12.083-.355-.082-.52zm-193.736.01c0-.377-.625-.78-.854-.552-.229.23.175.854.552.854a.302.302 0 0 0 .302-.301zm108.06-.33c-.107-.696-.54-1.28-.54-.728 0 .437.347 1.36.512 1.36.068 0 .08-.285.027-.632zm-125.02-1.246c0-.129-.18-.427-.4-.662-.328-.35-.274-.397.296-.26.506.122.649.045.523-.282-.187-.488-1.083-.468-1.441.03-.122.171-.09.469.07.663.376.452-.56 1.842-1.04 1.545-.21-.13-.255-.066-.115.16.166.27.496.187 1.169-.292.516-.368.938-.773.938-.902zm10.282.832c-.381-.381-1.442-.047-1.182.373.099.161.478.215.841.12.44-.115.554-.28.341-.493zm140.438.163c0-.134-.288-.423-.64-.643-.768-.48-.829-.308-.138.383.555.554.778.629.778.26zm-194.56-.397c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm24.64-.16c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm12.64.16c.108-.176-.036-.32-.32-.32-.285 0-.43.144-.32.32.108.176.252.32.32.32.067 0 .21-.144.32-.32zm4-.34c0-.165-.288-.3-.64-.3-.352 0-.64.152-.64.339 0 .186.144.25.32.14.176-.108.32-.036.32.16 0 .198.144.27.32.16.176-.108.32-.332.32-.498zm113.178-.04c-.102-.255-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm21.222.559c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm1.44-.5c-.114-.358-.058-.64.128-.64.182 0 .249-.214.148-.477-.105-.274.039-.562.338-.677.407-.156.44-.299.151-.647-.267-.321-.485-.351-.78-.107-.521.434-.779.016-.662-1.076.126-1.189.438-1.395 1.017-.672.473.59.48.585.146-.103-.36-.741-1.286-1.001-1.286-.361 0 .234-.19.206-.542-.08-.368-.298-.464-.311-.301-.04.132.22.091.4-.09.4-.203 0-.251.404-.124 1.04.219 1.092.843 1.947 1.178 1.612.11-.109.198.042.198.335 0 .318-.255.534-.63.534-.433 0-.57.152-.442.488.138.36.296.398.603.143.314-.26.467-.184.624.312.115.361.28.657.369.657.088 0 .068-.288-.043-.64zm-1.44-3.858c0-.362.137-.574.306-.47.168.104.224.4.125.659-.254.662-.431.584-.431-.19zm14.807 3.838c-.127-.484-.268-.566-.528-.307-.259.26-.226.435.123.656.263.166.5.304.528.307.027.003-.028-.293-.123-.656zm5.891-.04c-.102-.255-.178-.179-.193.194-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm-129.643-.215c-.106-.728-.815-.836-.815-.124 0 .337.2.613.443.613.244 0 .412-.22.372-.49zm98.603-.104c-.102-.255-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm17.251.132c.045-.225.007-.255-.085-.067-.114.234-.29.239-.562.013-.285-.236-.396-.191-.396.16 0 .579.923.485 1.043-.106zm2.05.427c0-.078-.143-.23-.32-.34-.175-.108-.32-.045-.32.142 0 .186.145.339.32.339.177 0 .32-.064.32-.141zm.96-.66c-.294-.773-.11-.978.744-.83.145.026.173-.101.06-.282-.404-.655-1.37.23-1.204 1.101.085.447.279.812.43.812.151 0 .138-.36-.03-.8zm69.44.48c0-.175-.063-.32-.14-.32-.078 0-.23.145-.34.32-.108.177-.045.32.142.32.186 0 .339-.143.339-.32zm-249.92-.32c0-.175-.207-.32-.46-.32-.254 0-.55.145-.66.32-.108.177.1.32.462.32s.659-.143.659-.32zm139.689-.257c-.099-.099-.357 0-.574.218-.314.316-.277.353.18.18.315-.12.493-.3.394-.398zm25.752.437c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.339.32.339.176 0 .32-.064.32-.141zm-140.582-.88c-.102-.254-.178-.179-.193.194-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm158.933.231c.1-.258.043-.555-.125-.659-.169-.104-.306.108-.306.47 0 .773.177.85.431.189zm6.074.016a.5.5 0 0 0-.302-.636c-.27-.103-.392-.045-.281.134.107.174.034.316-.162.316-.197 0-.27.144-.16.32.282.457.702.395.905-.134zm-160.635-.36c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.412.284-.152zm4.459-.16c-.094-.358-.242-.58-.33-.493-.173.173.133 1.146.36 1.146.078 0 .064-.293-.03-.652zm21.35.512c0-.077-.143-.23-.32-.339-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm98.06-.4c.13-.34.03-.36-.467-.095-.753.404-.793.53-.166.53a.731.731 0 0 0 .633-.434zm5.681-.883c-.1-.172-.234-.136-.306.082-.071.213-.252.31-.402.217-.15-.092-.252.116-.226.464.045.595.079.6.58.087.292-.3.452-.683.354-.85zm16.158.724c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm4.093.366c-.114-.183-.033-.543.18-.8.273-.328.28-.466.028-.466-.198 0-.364.18-.37.4-.007.265-.142.228-.4-.108-.214-.28-.57-.447-.79-.373-.22.074-.4-.045-.4-.265 0-.22-.083-.317-.185-.214-.103.102-.015.505.194.896.28.522.447.603.631.304.186-.3.347-.227.617.277.201.376.441.683.534.683.092 0 .074-.15-.04-.334zm72.702-.132c0-.256-.123-.39-.272-.297-.15.092-.19.302-.088.465.259.42.36.372.36-.168zm-87.157-.283c.09-.236.036-.632-.121-.88-.175-.276-.288-.306-.29-.077-.004.206-.093.602-.2.88-.107.279-.05.506.126.506s.394-.193.485-.429zm12.221.113c.112-.181-.016-.235-.3-.126-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm8.221-.393c-.23-.23-.378-.248-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm-193.018-.25c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm44.934-.11c-.179-.468-1.547-.518-1.96-.072-.14.152.07.196.465.099.396-.098.8-.047.9.112.28.456.78.34.595-.14zm136.713-.042c-.1-.26.064-.615.366-.79.3-.176.378-.324.173-.329-.206-.005-.638-.095-.96-.2-.488-.158-.506-.132-.106.155.33.238.354.347.077.35-.323.004-.323.133-.003.645.469.751.711.841.453.169zm9.2.098c-.091-.147-.033-.267.13-.267.161 0 .226-.354.143-.788-.117-.613-.235-.702-.53-.4-.5.51-.483 1.722.024 1.722.219 0 .323-.12.233-.267zm7.379.075c.101-.163.038-.388-.141-.499-.18-.11-.325.024-.325.298 0 .562.192.645.466.201zm-191.506-.342a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm62.442-.849c-.3-.518-.344-.474-.353.353-.007.689.086.849.344.591.253-.253.256-.52.01-.944zm2.953.69c-.101-.265-.24-.48-.31-.48-.069 0-.125.215-.125.48 0 .263.139.48.31.48.17 0 .227-.217.125-.48zm96.205.354c0-.07-.216-.209-.48-.31-.264-.102-.48-.045-.48.125 0 .17.216.31.48.31s.48-.056.48-.125zm.857-.839c-.116-.759-.857-1.64-.857-1.02 0 .212.18.396.4.41.308.02.31.061.009.183-.308.125-.308.253 0 .603.521.593.563.577.448-.176zm18.622.104c-.387-.475-.37-.513.147-.32.4.15.54.093.44-.18-.08-.22-.308-.364-.506-.32-.198.044-.36-.208-.36-.56 0-.352-.108-.604-.24-.56-.322.107-.38-.246-.173-1.04.126-.483.276-.566.574-.318.294.243.46.189.609-.2.112-.293.13-.609.037-.7-.092-.093-.167-.014-.167.175s-.27.273-.6.187c-.448-.117-.686.092-.943.83-.342.98-.812 1.258-1.164.688-.101-.163-.037-.388.142-.5.349-.214.107-1.72-.357-2.226-.817-.89.174-1.633 1.505-1.127.564.215 1.035.195 1.517-.062.404-.216.537-.427.317-.501a.39.39 0 0 1-.243-.506c.212-.579-.367-1.296-.82-1.016-.3.185-.274.314.111.53.665.371.337 1.196-.451 1.136-.338-.025-.614-.142-.614-.26 0-.118-.3-.293-.666-.389-.486-.127-.618-.05-.49.283.179.465-.475.639-.88.234-.123-.123-.468-.259-.768-.303-.3-.044-.596-.234-.66-.423-.062-.189-.31-.54-.55-.78-.24-.24-.335-.548-.211-.685.123-.137.05-.15-.161-.028a.535.535 0 0 0-.229.633c.087.226-.04.792-.282 1.258-.354.683-.524.772-.876.459-.361-.322-.37-.3-.055.12.223.298.78.485 1.344.452.62-.037.964.095.964.37 0 .237-.108.393-.24.35-.132-.045-.282.063-.333.24-.051.175.188.364.53.418.56.088.597-.02.364-1.054-.21-.932-.18-1.086.158-.805.306.254.47.236.609-.066.105-.228.144.053.087.623-.075.745.045 1.083.427 1.204.545.173.74 1.148.289 1.446-.374.248.626 2.127 1.132 2.127.258 0 .364-.206.259-.507-.143-.409-.094-.43.25-.111.235.218.476.715.535 1.106.06.39.285.823.5.96.612.388.669.305.192-.282zm5.16.258c0-.156-.296-.36-.658-.455-.54-.141-.59-.09-.28.283.422.509.939.603.939.172zm66.88-.697c0-.922-.489-.752-.568.197-.039.474.066.735.25.621.175-.108.319-.476.319-.818zm-185.836.061c.316-.319.277-.354-.196-.174-.365.14-.696.058-.862-.212-.347-.56-.7-.224-.45.427.216.565.925.546 1.508-.04zm86.294.358c-.012-.132-.147-.528-.299-.88-.239-.552-.27-.519-.228.24.027.484.162.88.3.88.137 0 .24-.108.227-.24zm14.567-.06c-.432-.428-2.021-.669-2.225-.338-.095.152.3.335.874.406.576.072 1.183.153 1.35.181.193.032.193-.06 0-.25zm9.136-.18c0-.264-.12-.48-.267-.48-.147 0-.267.216-.267.48s.12.48.267.48c.147 0 .267-.216.267-.48zm-178.667-.32c0-.264-.12-.48-.267-.48-.32 0-.351.449-.053.747.296.297.32.277.32-.267zm39.067-.32c0-.44-.15-.8-.334-.8-.183 0-.238-.094-.123-.21.116-.116.032-.432-.186-.702-.317-.391-.317-.442.003-.25.689.414.63-1.296-.1-2.888-.254-.556-.38-1.226-.28-1.488.101-.262.028-.573-.16-.69-.19-.117-.428.003-.529.268-.11.285-.401.403-.718.29-.325-.115-.167.205.403.818.516.553.84 1.103.72 1.222-.119.12-.216.054-.216-.145 0-.2-.29-.517-.645-.707-.495-.265-.625-.25-.56.069.047.227-.074.384-.269.349-.199-.036-.338.354-.32.896l.034.96.667-.835c.668-.835.668-.835.64-.096-.015.407-.167.84-.338.962-.178.127-.075.314.24.434.303.117.55.358.55.537 0 .187-.203.156-.48-.074-.263-.219-.477-.272-.474-.119.007.415.505 1.126.83 1.187.157.029.245.171.197.316-.049.145.06.173.24.06.181-.11.47.167.64.617.393 1.034.568 1.04.568.02zm-1.2-3.04a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm133.018 3.14c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-108.263-.1c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm2.264-.193c-.296-.48-1.095-.326-.903.173a.49.49 0 0 0 .628.287c.249-.096.372-.303.275-.46zm-70.22.095c0-.143-.202-.536-.45-.874-.42-.576-.438-.559-.282.258.149.78.733 1.27.733.616zm29.12-.062c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm3.84 0c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm6.889-.258c-.099-.098-.357 0-.574.219-.314.316-.277.353.18.179.315-.12.492-.3.394-.398zm121.255-.089a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.117.357.357 0 0 0 .117-.49zm6.257.4c0-.146-.21-.266-.466-.266-.257 0-.392.12-.302.267.091.146.3.266.466.266.166 0 .302-.12.302-.266zm14.631-1.208c-.077-.077-.365-.053-.641.053-.449.172-.445.249.034.734.503.51.542.507.641-.052.059-.327.043-.658-.034-.735zm2.867.775c-.102-.255-.178-.179-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm76.582-.1c0-.893-.467-1.072-.766-.293-.308.8-.231 1.093.286 1.093.298 0 .48-.302.48-.8zm-225.318.24c-.107-.675.111-.745.838-.269.841.551.93.438.48-.61-.152-.353-.286-.485-.298-.294-.025.377-.934.4-1.52.037-.232-.144-.327-.021-.259.335.06.309.119.67.132.801.014.132.169.24.345.24.176 0 .302-.108.282-.24zm112.896-.46c-.102-.255-.178-.179-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm35.074-.73c.044-.58-.1-.924-.412-.98-.264-.048-.696-.15-.96-.226-.264-.076-.388-.083-.274-.016.113.068.136.387.052.71-.094.36.105.769.512 1.054.366.256.617.543.557.637-.059.094.02.068.175-.057.156-.126.313-.631.35-1.122zm-1.248.013c-.268-.7.021-.952.672-.588.472.264.475.334.028.705-.413.343-.531.323-.7-.117zm6.078.92c.109-.284.055-.413-.126-.3-.174.107-.316.33-.316.496 0 .46.229.359.442-.195zm-182.202-.143c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm24.48-.32c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm10.14-.632c.247-.67.221-.696-.293-.292-1.328 1.045-1.457 1.254-.698 1.138.395-.06.84-.44.99-.846zm129.11.163c-.204-.434-.42-.646-.48-.47-.061.177.064.532.278.79.562.677.623.58.201-.32zm91.95.112c0-.176-.144-.231-.32-.123-.176.11-.32.342-.32.518s.144.231.32.122c.176-.108.32-.341.32-.517zm-107.131-.224c.27-.27.275-.379.018-.379-.22 0-.325-.487-.27-1.263.055-.766-.062-1.322-.295-1.411-.284-.11-.325.184-.157 1.103.217 1.186.086 1.418-.726 1.29-.132-.021-.24.225-.24.548 0 .665 1.046.736 1.67.112zm21.69.456c0-.07-.223-.212-.496-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm12.923-.371c.104-.273.063-.418-.093-.322-.155.096-.373-.061-.483-.35-.111-.287-.28-.445-.376-.349-.137.138.51 1.517.712 1.517.027 0 .135-.223.24-.496zm79.265-.497c-.169-.422-.316-.598-.327-.393-.027.5.345 1.447.506 1.287.07-.07-.01-.473-.18-.894zm-259.547.353a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm7.04-.338c0-.166-.216-.302-.48-.302-.495 0-.636.378-.276.738.256.256.756-.033.756-.436zm36.264.208c.095-.247-.075-.673-.378-.947-.5-.454-.55-.444-.55.106 0 .333.114.534.252.449.138-.085.252.07.252.344 0 .62.196.643.424.049zm89.816.328c0-.284-1.295-.433-1.46-.168-.098.16.19.29.64.29.451 0 .82-.055.82-.122zm1.28-.198c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm5.852-.64c-.23-.88-.412-.801-.412.18 0 .45.13.738.29.639.159-.099.214-.467.122-.819zm42.542-.626c-.315-.894-.747-1.25-1.368-1.13-.337.064-.71-.04-.83-.233-.138-.224-.065-.257.204-.09.257.159.34.132.217-.068-.111-.18-.602-.245-1.09-.146-.61.125-.712.219-.327.301.698.149.707.374.035.866-.487.355-.487.398 0 .585.34.13.525.036.525-.269 0-.522.815-.642 1.11-.164.105.169.401.225.66.126.313-.12.461.018.444.414-.014.34-.094.423-.187.192-.09-.22-.29-.322-.448-.225-.16.099-.12.443.09.778.343.55.407.557.757.08.21-.288.304-.746.208-1.017zm1.565.73c-.378-.648-.469-.44-.16.364.11.286.267.453.35.37.082-.082-.004-.412-.19-.734zm4.92.536c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm-160.455-.408c-.04-.382-.479-.308-.616.104-.07.212.044.327.256.256.21-.07.373-.232.36-.36zm107.176-.09c0-.275-.144-.41-.32-.302-.176.11-.32.334-.32.5 0 .165.144.3.32.3.176 0 .32-.224.32-.498zm34.24.357c0-.337-.615-.48-.797-.184-.11.18.023.325.298.325.274 0 .499-.063.499-.14zm.976-.318c-.284-.343-.29-.63-.025-1.124.234-.437.25-.853.05-1.212-.257-.458-.354-.366-.6.564-.291 1.105.05 2.231.675 2.231.155 0 .11-.206-.1-.46zm-152.976-.002c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141s.144.339.32.339c.176 0 .32-.064.32-.141zm11.898-.889c-.232-.232-.3-.15-.22.268.172.92.2.954.383.494.094-.235.02-.578-.163-.762zm118.022.889c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141s.144.339.32.339c.176 0 .32-.064.32-.141zm19.52-.838c0-.342-.128-.621-.283-.621-.329 0-.689 1.162-.438 1.413.303.303.72-.155.72-.792zm16.56-.541c.22-.044.404.1.41.32.005.232.14.175.323-.138.212-.363.189-.81-.072-1.383-.315-.69-.301-.897.074-1.129.366-.226.378-.364.062-.68-.317-.317-.397-.307-.397.047 0 .306-.158.25-.504-.176-.491-.605-.5-.603-.35.1.085.396.034.646-.113.555-.147-.09-.214-.811-.15-1.6.065-.79.018-1.447-.103-1.46-.121-.014-.45-.07-.73-.125-.39-.076-.471.095-.348.745.137.722.091.786-.32.447-.265-.219-.576-.303-.692-.187-.116.116-.21.047-.21-.153 0-.207-.229-.275-.532-.159-.421.162-.494.06-.35-.49.1-.382.062-.621-.084-.53-.146.09-.332-.09-.413-.4-.112-.43-.156-.392-.184.156-.04.764-.493.957-.86.364-.12-.196-.047-.463.165-.593.252-.156.316-.666.186-1.484-.11-.686-.271-1.72-.36-2.296-.088-.577-.3-.963-.47-.858-.17.105-.21.35-.091.543.14.227.028.28-.315.148-.38-.145-.544-.024-.572.426a6.964 6.964 0 0 1-.12.95 15.68 15.68 0 0 0-.12.515c-.022.108-.34-.144-.705-.56-.365-.415-.573-.575-.46-.355.11.22.038.4-.163.4s-.306.18-.232.4c.073.22.265.4.426.4.417 0 1.823 1.457 1.61 1.67-.097.097-.555-.071-1.017-.374-.82-.538-.835-.535-.626.123.208.654.19.652-.58-.062-.438-.405-1.1-.76-1.471-.787-.856-.065-.537.492.51.89.598.227.741.455.588.938-.163.515-.09.598.379.433.475-.168.508-.127.18.226-.508.548-.528 1.38-.025 1.07.252-.156.307-.058.17.3-.112.293-.075.533.084.533s.38-.29.493-.645c.113-.354.338-.562.502-.46.163.1.297.015.297-.19 0-.246-.295-.3-.856-.16-.79.199-.821.17-.4-.364.908-1.153 1.214-1.388 1.405-1.078.105.17.384.235.619.145.253-.097.502.122.61.536.138.526.352.656.862.523.423-.11.745-.006.853.278.097.25.412.464.7.475.363.014.302.11-.193.31-.396.159-.72.426-.72.593 0 .168-.088.534-.196.814-.145.377-.058.457.332.308.532-.204 1.886.73 1.638 1.131-.071.116.151.232.495.258.343.026.54-.088.439-.253-.103-.166.098-.301.444-.301.632 0 .729.45.258 1.203-.138.221-.142.725-.009 1.12.243.717.243.717.42-.083.098-.44.358-.836.578-.88zm-3.027-2.316c-.091-.35-.27-.573-.397-.494-.126.078-.23-.068-.23-.324s.26-.466.577-.466c.4 0 .525-.171.407-.56-.093-.308.121-.056.476.56.356.616.655.904.665.64.016-.427.053-.427.329 0 .45.698.388 1.055-.15.848-.259-.099-.555-.042-.66.126-.316.513-.84.342-1.017-.33zm-4.049-5.378c-.144-.23-.106-.599.085-.83.19-.228.25-.51.134-.625-.115-.116-.12-.211-.008-.211.112 0 .366.305.566.679.218.407.232.597.035.476-.18-.112-.378.05-.44.361-.084.427-.174.463-.371.15zM30.704 418.56c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm153.838-.373c-.169-.647-.57-.766-.882-.262-.11.18-.357.229-.548.11-.212-.13-.255-.064-.11.171.184.297.356.29.75-.03.432-.351.482-.337.322.09-.11.296-.02.507.216.507s.341-.245.252-.586zm11.872.2c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.153zm90.352-.555c.079-.565.034-.613-.217-.232-.358.543-.443 1.505-.104 1.165.122-.122.266-.542.321-.933zm-240.153-.61c-.2-.2-.245.01-.126.594.137.67.217.75.31.31.07-.327-.013-.734-.184-.904zm125.472 1.098c.076-.132.023-.528-.119-.88s-.268-.472-.28-.266c-.012.205-.11.601-.217.88-.191.5.346.732.616.266zm15.462-.882c-.485-.485-.523-.479-.523.086 0 .78.351 1.132.742.742.193-.193.112-.497-.22-.828zm-114.89.331c-.037-.259-.158-.56-.267-.67-.154-.153-.124.496.049 1.061.095.309.274-.012.219-.39zm120.666.03c-.093-.243-.008-.603.19-.8.265-.265.218-.359-.182-.359-.38 0-.52.236-.474.8.036.44.194.8.35.8.157 0 .209-.198.116-.441zm-18.78-.199c0-.176-.063-.32-.14-.32-.078 0-.23.144-.34.32-.108.176-.045.32.142.32.186 0 .339-.144.339-.32zm5.87-.174c-.103-.271-.257-.425-.341-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm18.93.174a.744.744 0 0 0-.578-.315c-.23.003-.19.129.099.315.614.397.725.397.48 0zm-149.981-.809c-.099-.098-.278.08-.398.395-.174.456-.137.493.18.18.218-.218.316-.476.218-.575zm112.741.084c-.316-.314-.353-.277-.179.179.12.315.3.493.398.394.098-.098 0-.356-.219-.573zm15 .066c0-.362-.143-.57-.32-.461-.175.109-.32.405-.32.659 0 .253.145.461.32.461.177 0 .32-.297.32-.659zm8.61-.76c-.44-.47-.691.017-.431.835.226.712.246.717.473.104.13-.352.11-.774-.042-.939zm-121.423.801c.101-.164.038-.388-.141-.499-.18-.11-.325.024-.325.298 0 .562.192.645.466.201zm147.827-.227c.159-.415.11-.45-.236-.163-.24.2-.554.256-.698.125-.144-.13-.159-.057-.032.163.318.553.726.5.966-.125zm-167.282-.835c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm144.864.56c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm10.445.37c0-.06-.264-.35-.587-.641-.485-.44-.587-.45-.587-.064 0 .257.11.4.245.316.134-.083.335-.005.445.174.194.314.484.442.484.215zm9.92-.03c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-181.76-.32c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm25.052-.5c-.17-.653-.462-.804-.834-.431-.156.156.59.988.952 1.061.027.005-.026-.278-.118-.63zm14.948.141c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm94.515.02c-.101-.265-.24-.48-.31-.48-.069 0-.125.215-.125.48 0 .263.139.48.31.48.17 0 .227-.217.125-.48zm4.205.16c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm5.32-.85c-.302-.518-.337-.483-.283.284.036.509.18.756.345.59.165-.164.14-.53-.061-.874zm29.213.415c-.254-.662-.648-.675-.896-.029-.104.273-.058.415.104.315.162-.1.39-.026.508.165.31.502.521.167.284-.45zm2.534-.452c.166-.87.126-.978-.234-.641-.239.222-.39.621-.338.886.052.265.107.613.12.775.043.517.247.057.452-1.02zm-170.794.013c-.325-.325-.594.165-.327.596.202.327.277.327.385 0 .075-.222.048-.49-.058-.597zm127.6.183c.035-.236.162-.586.281-.776.12-.19.02-.347-.22-.347-.252 0-.39.249-.324.587.062.322-.031.586-.208.586-.176 0-.225.154-.11.342.243.393.487.228.58-.392zm-134.193.05a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm139.084-.24c-.024-.308.136-.524.356-.48.22.044.4-.136.4-.4s-.127-.48-.281-.48c-.499 0-1.077.938-.885 1.436.25.652.465.613.41-.076zm4.436.24c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm6.543-.01c-.223-.138-.599-.176-.834-.086-.637.244-.526.336.405.336.533 0 .688-.09.429-.25zm2.868-.256c.226-.423.203-.587-.085-.587-.219 0-.418.264-.443.587-.024.322.014.586.085.586.071 0 .27-.264.443-.586zm22.611-.03c0-.34-.098-.556-.218-.482-.12.074-.303-.09-.409-.364-.209-.545-.838-.332-.83.281.002.273.078.265.264-.028.188-.296.36-.187.628.4.442.97.565 1.012.565.193zm87.178-.397c0-1.141-.395-.982-.557.225-.058.434.044.788.226.788s.33-.456.33-1.013zm-263.74.137c-.161-.834-1.22-.927-1.22-.107 0 .458.205.663.663.663.458 0 .63-.172.556-.556zm63.708-1.524c-.008-.542-.057-.52-.325.151-.173.435-.47.887-.66 1.005-.19.117-.235.392-.099.612.304.492 1.097-.802 1.084-1.768zm-43.808 1.46c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.498.32.498.176 0 .32-.135.32-.3zm2.991-.51c-.254-.661-.431-.583-.431.19 0 .362.137.573.306.469.168-.104.224-.4.125-.659zm2.015.017a.73.73 0 0 1 .15-.714c.193-.194.126-.306-.186-.306-.328 0-.49.307-.49.926 0 .575.129.845.341.714.188-.116.272-.395.185-.62zm71.634.473c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm36 0c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm25.28-.357c0-.176-.144-.231-.32-.123-.176.11-.32.342-.32.518s.144.231.32.122c.176-.108.32-.341.32-.517zm13.658-.023c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-165.114-1.102c-.108-.108-.422-.11-.698-.004-.42.161-.436.297-.094.845l.408.653.29-.649c.16-.357.202-.737.094-.845zm19.388.842c.092-.352.037-.56-.122-.461-.16.098-.29.387-.29.64 0 .662.217.568.412-.18zm35.64.174c0-.256-.11-.398-.244-.314-.134.083-.335.005-.445-.175-.291-.47-.697-.398-.697.125 0 .247.178.381.394.298a.52.52 0 0 1 .606.19c.286.463.387.43.387-.124zm75.818.097c.138-.223.088-.283-.125-.151-.194.12-.505-.065-.69-.411-.38-.71.043-1.183.705-.786.275.165.263.072-.037-.298-.24-.296-.552-.466-.694-.378-.142.088-.525-.166-.852-.564-.594-.724-1.382-1.093-1.372-.643.003.132.363.58.8.994.437.414.794.907.794 1.095 0 .304.92 1.511 1.151 1.511.05 0 .194-.166.32-.37zm7.772-.564c-.025-.572-.083-.649-.186-.25-.115.442-.25.494-.578.222-.337-.28-.394-.226-.27.25.243.929 1.078.75 1.034-.222zm-53.008-.166c.082-.429.013-.969-.153-1.2-.226-.315-.259-.286-.13.116.093.295-.044.714-.306.932-.382.317-.394.447-.06.658.228.145.434.266.457.268.024.003.11-.345.192-.774zm39.606.46a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm14.754-1.44a2.236 2.236 0 0 1-.23-.56 1.854 1.854 0 0 0-.124-.4 1.819 1.819 0 0 1-.12-.454c-.07-.516-.52-.79-.525-.32-.004.373-.06.369-.315-.027-.379-.584-.379-.08 0 .8.15.352.285.452.297.222.012-.23.173-.326.358-.212.226.14.2.376-.08.72-.311.385-.315.453-.016.273.22-.132.4-.088.4.099 0 .186-.149.338-.33.338-.211 0-.19.263.06.72l.391.72.21-.8c.114-.44.126-.944.024-1.12zm17.886 1.618c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm17.92-.52c0-.862-.597-1.964-.947-1.747-.245.151-.188.848.165 2.008.198.651.782.456.782-.26zm-56.749-.699c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm4.375-.103c-.096-.251-.247-.457-.335-.457-.088 0-.077.216.024.48.102.264.045.48-.126.48-.17 0-.31.162-.31.36 0 .254.135.248.462-.024.253-.21.382-.588.285-.839zm8.432.443c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm1.062.351c-.362-.255-.382-.38-.08-.502.22-.089.4-.423.4-.741 0-.729.897-1.098 1.485-.61.36.3.422.225.327-.395-.087-.572-.328-.77-.964-.795-.696-.026-.78.049-.472.42.31.375.242.42-.4.263-.612-.15-.852-.024-1.134.593-.277.608-.268.75.04.631.273-.105.347.102.24.667-.123.642-.029.817.44.813.51-.004.527-.054.118-.344zm3.186-1.041c-.306-.283-.346-.273-.168.041.173.306.001.37-.673.252l-.905-.16.798.61c.702.535.831.549 1.073.117.173-.308.126-.629-.125-.86zm9.178.973c.122-.122-.09-.223-.471-.223s-.693.132-.693.292c0 .325.818.277 1.164-.069zm4.276.097c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm16.315-.24a2.274 2.274 0 0 0-.291-1.012c-.24-.377-.383-.354-.875.143-.573.576-.572.587 0 .37.43-.163.635-.05.758.418.206.79.414.832.408.081zm15.04.32c-.003-.132-.145-.456-.315-.72-.251-.388-.312-.342-.316.24-.003.396.14.72.316.72s.317-.108.315-.24zm78.725-.08a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zM44.7 413.648c.204.126.249.06.11-.163-.271-.44-.838-.176-.801.374.018.273.071.267.187-.02.09-.222.316-.307.504-.191zm6.404-.853c.295-.004.286-.076-.033-.279-.327-.207-.35-.43-.092-.913.37-.69.198-1.043-.508-1.043-.258 0-.348.157-.214.375.156.252.057.307-.301.17-.312-.12-.545-.043-.563.185-.017.215-.228-.33-.47-1.21l-.438-1.6.15 1.568c.082.862.33 1.79.549 2.062.328.405.32.445-.05.222-.336-.202-.377-.157-.165.179.28.44.334.606.414 1.25.022.175.328.031.68-.32.352-.353.82-.643 1.04-.646zm-1.5.232c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm3.356.005-.749-.712.606.85c.334.466.67.786.749.71.078-.075-.195-.457-.606-.848zm31.99-1.192c-.131-1.144-.259-1.828-.283-1.52-.024.308-.18.56-.345.56-.166 0-.25.264-.189.587.091.473-.073.576-.849.53-.529-.032-1.09-.26-1.246-.507-.157-.247-.287-.314-.29-.148-.003.165-.223.021-.49-.32-.446-.572-.454-.545-.099.338.433 1.078 1.085 1.974.699.961-.238-.624-.223-.626.62-.072.626.41.873.453.89.159.02-.321.06-.323.187-.007.09.22.35.4.578.4.229 0 .499.317.6.706.344 1.312.46.426.218-1.666zm56.954 2.1c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm51.192-.776c-.004-.288-.294-.884-.645-1.324l-.638-.8.28.8c.427 1.225.12 1.763-.623 1.09-.556-.504-.606-.505-.606-.02 0 .292.152.53.338.53.187 0 .266.118.177.263-.089.144.263.2.781.123.608-.089.941-.324.936-.662zm12.433-.036c.49-1.107.238-1.839-.439-1.276-.399.33-.522 2.226-.145 2.228.09 0 .352-.428.584-.952zm-.585-.45c0-.264.144-.569.32-.678.176-.108.32.019.32.283 0 .264-.144.569-.32.677-.176.11-.32-.018-.32-.282zm13.12.922c0-.264-.14-.48-.31-.48-.17 0-.228.216-.126.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm-130.08-.16c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm70.047-.053a.615.615 0 0 0-.466-.267c-.166 0-.301.12-.301.267 0 .147.21.267.465.267.257 0 .392-.12.302-.267zm-116.496-.416c.1-.259.073-.537-.059-.618-.132-.082-.26.13-.286.47-.056.734.095.8.345.148zm38.929-.19c0-.165-.252-.29-.56-.275-.338.015-.401.09-.158.187.22.09.306.316.19.504-.125.202-.06.249.158.114.203-.126.37-.364.37-.53zm64.527-.713c-.09-.22-.168-.151-.182.162-.016.353-.198.484-.505.366-.264-.101-.48-.037-.48.143s.18.39.4.468c.478.167.99-.592.767-1.139zm33.436.8c-.23-.077-.572.012-.758.199-.237.237-.112.279.42.14.433-.114.578-.259.338-.339zm17.106-.625c-.104-.104-.19-.013-.19.203 0 .216-.143.303-.32.194-.36-.223-.439.254-.097.596.122.122.351-.009.51-.29.157-.283.201-.599.097-.703zm96.098-.522-.033-1-.236.987c-.13.544-.359 1.192-.509 1.44-.232.386-.193.388.269.013.317-.257.528-.853.509-1.44zm-205.407 1.08c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm53.23-.387c.101-.388.118-.772.037-.853-.081-.081-.148.038-.148.265 0 .323-.1.33-.46.03-.254-.21-.383-.588-.286-.84.096-.25.028-.456-.151-.456-.272 0-.297.644-.05 1.28a.934.934 0 0 1 .025.4c-.02.132.115.24.301.24.187 0 .25.144.142.32-.11.176-.063.32.103.32.166 0 .385-.317.487-.706zm20.257-.099c-.29-.212-.53-.585-.532-.83-.004-.362-.06-.358-.302.025-.183.289-.182.607.002.83.164.197.214.444.11.548-.104.104.135.105.53 0 .647-.169.666-.226.192-.573zm17.713-.013c0-.713-.498-.545-.553.185-.027.356.087.564.252.461.165-.102.3-.393.3-.646zm22.613.005c0-.257-.12-.467-.267-.467-.146 0-.266.06-.266.134 0 .074-.088.363-.196.644-.137.355-.056.456.267.332.254-.097.462-.387.462-.643zm-45.187.195c.101-.163.062-.373-.088-.465-.15-.093-.272.041-.272.297 0 .54.101.587.36.168zm14.894.104c0-.265-.622-.415-.764-.184-.093.15.041.272.298.272.256 0 .466-.04.466-.088zm28.378-.25c-.119-.309.013-.395.434-.285.476.124.576.014.474-.518-.072-.371-.213-.809-.314-.972-.1-.163-.037-.387.142-.497.48-.297.396-.708-.19-.933-.366-.14-.463-.06-.334.275.206.539-.269.952-.751.654-.213-.132-.207-.434.017-.9.33-.681.326-.683-.166-.069-.277.347-.434.815-.348 1.04.087.225.018.41-.152.41-.596 0-.785-.164-.687-.593.196-.854-.528-.026-.868.992-.322.966-.312.995.142.402.409-.535.534-.563.774-.175.158.254.215.578.129.718-.087.14-.005.255.18.255.187 0 .34-.21.34-.468 0-.522 1.081-1.224 1.397-.907.405.405.187.696-.43.577-.658-.127-.73.31-.167 1.014.426.533.587.525.378-.02zm3.093-.025c.1-.259.073-.537-.059-.618-.132-.082-.26.13-.286.47-.056.734.095.8.345.148zm-44.911-.17c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm22.83-.174c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm36.234-.71c-.326-.324-.914.48-.656.897.176.285.321.244.545-.157.168-.3.218-.632.11-.74zm-176.824.563c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm7.36 0c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm1.6 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm5.209-.332c-.094-.36-.242-.581-.33-.494-.173.173.133 1.146.36 1.146.078 0 .064-.293-.03-.652zm27.958.167c-.285-.208-.412-.495-.283-.638.13-.142.062-.16-.15-.038-.516.296-.198 1.055.442 1.055.46 0 .459-.037-.01-.379zm66.537-1.357c-.348-.348-.448.084-.241 1.042l.206.96.11-.909c.06-.5.026-.992-.075-1.093zm10.376 1.701c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm5.723-.38c.108-.121-.055-.13-.363-.02s-.56.053-.56-.128c0-.18-.163-.228-.362-.105-.214.132-.305.053-.223-.193.176-.528 1.223-.702 1.23-.204.002.234.106.21.28-.064.386-.609.057-1.645-.522-1.645-.365 0-.396-.103-.128-.426.263-.318.227-.583-.145-1.04-.274-.338-.416-.449-.316-.247.283.57-.7.781-1.22.261-.837-.836-2.322-.423-2.144.596.025.145-.092.179-.26.075-.463-.286-.795.465-.387.873.262.262.357.254.357-.028 0-.21.216-.384.48-.384s.48.144.48.32a.32.32 0 0 1-.317.32c-.175 0-.07.288.23.64.302.352.86.64 1.24.64.418 0 .757.249.856.628.117.45.369.589.88.49.395-.075.806-.237.914-.359zm-3.394-2.153c-.112-.18-.033-.384.174-.453.207-.07.377-.253.377-.41 0-.155-.216-.2-.48-.098-.264.101-.48.04-.48-.136 0-.633.949-.672 1.38-.057.24.343.532.53.648.413.116-.116.212.024.212.312 0 .357-.17.458-.533.319-.317-.122-.452-.075-.334.117.11.176-.018.32-.282.32-.264 0-.57-.147-.682-.327zm8.23 2.354c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm8.32.18c0-.078-.143-.23-.32-.34-.175-.108-.32-.045-.32.142 0 .186.145.338.32.338.177 0 .32-.063.32-.14zm14.613-.958c-.313-.817-.777-.571-.607.32.106.55.264.717.479.502.176-.176.234-.546.128-.822zm10.886.398c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm5.862.202c0-.275-.147-.409-.326-.298-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm-57.287-.31c-.223-.268-.47-.421-.551-.34-.222.221.229.828.616.828.212 0 .187-.183-.065-.487zm22.727.187c0-.165-.144-.39-.32-.499-.176-.108-.32.027-.32.302 0 .274.144.498.32.498.176 0 .32-.135.32-.3zm21.222-.463c.105-.274-.132-.354-.776-.259-.958.14-1.227.545-.526.79.537.187 1.116-.049 1.302-.531zm-37.926.06c.544-.544.478-.796-.256-.988-.352-.092-.64-.343-.64-.557 0-.28.114-.294.41-.048.236.195.596.227.843.074.34-.21.296-.34-.208-.61-.353-.19-.707-.278-.788-.198-.08.08-.083-.284-.006-.811.088-.599 0-.958-.234-.958-.207 0-.28-.153-.164-.341.116-.188.42-.262.675-.164.297.114.392.035.264-.218-.11-.218.017-.13.282.195.265.325.404.793.31 1.04-.096.246-.014.448.181.448.312 0 .503-.66.392-1.36-.02-.132.102-.24.272-.24.17 0 .227-.217.125-.483-.138-.358-.04-.428.374-.269.472.181.507.12.223-.388-.203-.362-.226-.811-.058-1.125.208-.39.08-.628-.507-.942-1.024-.548-1-.87.064-.827.775.031.856-.08.914-1.246.082-1.634.106-1.693.459-1.135.162.256.199.616.082.8-.273.432-.292 4.335-.02 4.335.112 0 .304-.395.426-.88l.22-.879.468.8.467.8-.217-.8c-.12-.44-.285-.98-.368-1.2-.133-.355.092-.464.77-.372.548.074.759-1.024.287-1.496-.495-.495-.625-.773-.362-.773.444 0 1.137 1.116.987 1.589-.098.309.041.743.309.965.502.417.693 1.131.225.842-.144-.089-.261.263-.261.782 0 .53.171.942.391.942.216 0 .332-.252.258-.56-.206-.86.348-1.497 1.042-1.197.55.238.552.266.032.39-.308.074-.56.326-.56.56 0 .817 1.142.151 1.213-.706.038-.46-.028-.738-.146-.62s-.479-.024-.8-.315c-.452-.409-.587-.43-.587-.093 0 .348-.101.337-.492-.053-.291-.292-.403-.721-.275-1.056.17-.445.273-.474.487-.136.211.333.272.337.275.016.003-.225-.183-.482-.412-.57-.238-.091-.39-.572-.352-1.118.079-1.134-.76-2.207-1.192-1.525-.206.325-.28.293-.314-.137-.025-.308-.066-.74-.092-.96-.026-.22-.332-.36-.68-.311-.594.083-.598.061-.073-.355.687-.545.716-.854.08-.854-.264 0-.48-.128-.48-.284 0-.157.252-.265.56-.24.315.025.52-.144.47-.386-.05-.236.095-.365.32-.285.226.08.396.349.378.598-.018.25.186.659.453.909.511.477.511.474-.012-1.272-.08-.264-.083-.37-.009-.238.074.133.289.147.477.03.192-.118.25-.061.132.13-.258.417.086 1.412.418 1.207.131-.082.495.04.809.268.495.362.374.409-.922.355-1.771-.074-2.06.216-1.1 1.109.75.7 1.226.844 1.226.373 0-.157.209-.365.464-.463.31-.12.405-.024.286.285-.098.255-.042.464.125.464.38 0 1.07 1.469.81 1.728-.4.401-.658.167-.496-.453.135-.517.05-.606-.43-.45-.495.162-.515.135-.119-.15.264-.19.318-.347.12-.35-.2-.003-.547.22-.775.493-.342.412-.335.481.041.4.282-.06.458.168.464.605.005.387.113.807.24.933.126.127.23.484.23.793 0 .358.406.696 1.123.932.617.204 1.26.628 1.428.943.213.396.555.524 1.118.417.653-.125.811-.029.811.496 0 .358.088.879.194 1.157.329.855-.697.58-1.096-.294-.2-.44-.592-.8-.87-.8s-.43.124-.336.275c.094.151-.198.235-.648.185-.807-.088-.81-.08-.23.605.837.992 1.023 1.092 1.868 1 .576-.064.871.163 1.25.962.273.575.713 1.225.979 1.445.265.22.41.518.32.662-.088.144-.015.352.164.463.37.229.399-.01.124-1.033-.105-.394-.283-.66-.395-.59-.112.068-.232-.293-.266-.804a25.917 25.917 0 0 0-.118-1.33c-.03-.22.044-.64.167-.935.14-.336-.005-.764-.389-1.147-.336-.336-.611-.851-.611-1.145 0-.766.179-.66.58.347.192.484.414.708.492.498.078-.21.364-.297.634-.193.355.136.46.02.375-.418-.064-.334-.314-.607-.556-.607-.714 0-1.054-1.341-.412-1.628.96-.43 2.126-.366 2.724.149.428.368.556.388.48.074-.06-.245.229-.483.677-.558.938-.158 1.296-.437.56-.437-.397 0-.523-.294-.512-1.2.02-1.674-.095-2.317-.38-2.14-.135.083-.337.002-.449-.18-.112-.182-.338-.247-.502-.146-.164.101-.472.076-.685-.055-.249-.154-.048-.33.56-.494.52-.14.985-.141 1.032-.004.047.138.57.193 1.162.124.593-.07 1.175.032 1.294.225.12.193.064.35-.122.35s-.339.162-.339.36c0 .234.188.206.54-.08.473-.385.514-.37.33.12-.115.308-.077.884.086 1.28.257.627.29.575.254-.4-.023-.615-.215-1.335-.427-1.6-.516-.643-.767-2.538-.325-2.46.188.033.31-.11.269-.32-.04-.209-.107-.82-.148-1.36-.041-.539-.188-.98-.327-.98-.138 0-.252-.167-.252-.373 0-.205.094-.28.209-.165.114.115.402-.041.64-.346.403-.517.418-.513.218.057-.138.392-.094.537.122.404.186-.115.421.107.522.493.101.386.262.624.358.528.171-.17-.423-2.198-.645-2.198-1.054 0-2.414 1.666-1.714 2.1.16.098.29.466.29.818 0 .352-.144.551-.32.442-.176-.108-.32-.039-.32.155 0 .61-1.223 1.696-1.703 1.512-.252-.097-.62-.015-.818.182-.265.266-.371.155-.406-.425-.026-.43-.062-1-.08-1.264-.053-.773-1.192-2.15-1.378-1.664-.127.332-.307.319-.893-.065-.695-.455-.726-.443-.588.224.135.652.109.644-.342-.095-.27-.44-.494-1.047-.5-1.35-.008-.38-.177-.486-.544-.345-.4.153-.464.09-.259-.25.217-.36.177-.38-.187-.098a5.27 5.27 0 0 1-.942.564c-.264.114-.156.146.24.073s.814.02.93.206c.115.187.079.263-.08.17-.16-.093-.575-.066-.923.06-.606.22-.6.247.121.633.616.33.804.324 1.028-.03.296-.467.299-.464.417.607.044.396.007.647-.082.558-.09-.09-.425.234-.745.72l-.582.882-.04-.96c-.022-.528-.023-1.068-.002-1.2.021-.132-.102-.24-.274-.24-.179 0-.226.427-.112 1 .15.752.065 1.077-.342 1.304-.35.196-.473.522-.347.918.16.507.05.603-.626.547-.451-.038-.82-.17-.82-.292 0-.123-.086-.488-.19-.81-.136-.42 0-.358.472.213.502.605.665.673.67.28.004-.287.21-.69.457-.894.38-.316.447-.933.177-1.626-.034-.088-.04-.286-.011-.44.028-.154-.256-.496-.632-.76-.472-.33-.638-.713-.538-1.239.17-.89-.23-1.005-.705-.2-.303.513-.347.501-.527-.139-.127-.449-.366-.632-.672-.515-.388.149-.397.232-.049.453.346.219.347.271.008.275-.23.003-.33.15-.22.325.283.46-.07.395-.933-.171-.637-.417-.777-.423-.924-.04-.106.277.02.436.327.412a.668.668 0 0 1 .655.44c.12.371.065.395-.245.104-.22-.206-.614-.292-.877-.191-.362.139-.427.025-.27-.472.133-.418.008-.854-.345-1.207-.524-.524-.565-.522-.788.046-.193.49-.24.504-.258.074-.013-.29-.239-.61-.503-.71-.658-.253-.603-.031.23.928.647.743.732.765.938.242.216-.547.228-.547.25-.005.012.314-.194.653-.458.754-.264.102-.48.322-.48.49 0 .167.123.228.272.136.15-.092.284.262.299.787.034 1.224-.424.954-.699-.41-.165-.821-.277-.943-.516-.567-.168.264-.308.366-.31.228-.004-.14-.208-.067-.456.16-.386.353-.378.493.054.977.462.517.453.603-.109 1.014-.755.552-1.014.374-.448-.307.356-.43.316-.531-.274-.685-.895-.234-.883-.862.027-1.47.715-.478.716-.485.098-1.173-.577-.642-.58-.675-.036-.467.423.163.542.1.428-.226-.087-.248-.394-.431-.68-.407-.288.024-.453-.069-.368-.206.175-.284-.794-.782-1.282-.658-.176.044-.588.134-.916.2-.328.064-.76.313-.96.551-.428.51-2.14 1.608-2.268 1.455-.049-.058-.267-.448-.485-.867-.322-.617-.315-.812.036-1.035.337-.213.308-.275-.127-.279-.308-.003-.565-.185-.571-.405-.006-.22-.222-.04-.48.4l-.469.8.14-.88c.122-.78.04-.877-.72-.855-.473.014-.679.099-.458.188.221.089.32.293.221.454-.1.161-.04.293.13.293s.268.252.216.56c-.051.308-.255.524-.451.48-.197-.044-.358.06-.358.23s-.24.218-.532.106c-.356-.137-.457-.082-.304.166.148.238.06.306-.243.19-.538-.207-1.142.723-1.198 1.847-.03.612-.064.636-.192.135-.125-.488-.211-.519-.438-.16-.184.29-.285.312-.288.065a.743.743 0 0 1 .315-.579c.585-.361.332-.646-.607-.685-.798-.032-.916.07-.843.732.046.423-.02.833-.147.911-.3.185-.225-1.482.088-1.976.132-.208.093-.468-.086-.579-.454-.28-1.02.128-.76.549.129.209.065.255-.16.115-.207-.127-.3-.353-.208-.502.092-.148.014-.321-.174-.384s-.355-.579-.37-1.147c-.017-.569-.16-1.034-.32-1.034s-.202.144-.093.32c.11.176-.043.32-.338.32-.394 0-.497.205-.389.772.13.681.079.728-.443.403-.324-.203-.59-.478-.59-.612s-.209-.243-.464-.243-.612-.252-.794-.56c-.288-.488-.371-.499-.651-.08-.263.394-.322.354-.326-.221-.003-.386-.146-.789-.32-.896-.173-.107-.436-.655-.584-1.219l-.269-1.024-.17.87c-.093.48-.046.795.105.702.15-.094.273-.03.273.143 0 .171-.18.384-.4.473-.232.094-.157.172.18.187.318.014.495.16.394.323-.101.164-.038.388.141.499.508.314.381.805-.155.599-.264-.101-.48-.025-.48.17s.153.354.34.354c.186 0 .236.165.112.366-.144.233-.388.057-.673-.488-.246-.47-.346-1.016-.223-1.215.144-.234.079-.272-.188-.108-.273.17-.361.106-.263-.188.08-.243-.153-.596-.519-.784-.711-.367-1.881-.236-1.624.18.085.138-.06.661-.321 1.164-.262.502-.478 1.075-.479 1.274-.003.526-.868 1.17-1.09.81-.101-.164.028-.475.288-.69.26-.217.394-.521.298-.677-.304-.492-.778-.308-.778.303 0 .813-.34 1.074-.85.651-.262-.217-.43-.231-.43-.036 0 .176.216.499.48.718.363.301.48.305.48.016 0-.942.804.554.851 1.584.029.616-.02.94-.107.718-.087-.221-.306-.31-.487-.199-.18.112-.454.004-.608-.238-.22-.349-.28-.324-.284.12-.003.307-.149.56-.325.56-.176 0-.32.152-.32.338 0 .186.144.25.32.141.176-.109.32.116.32.5 0 .548.093.622.43.342.236-.196.532-.254.657-.129s.125-.04 0-.366c-.166-.43-.104-.553.222-.445.248.081.5.497.558.923.132.952.547 1.43.836.963.118-.191.063-.348-.124-.348-.186 0-.339-.216-.339-.48 0-.64.52-.613.772.04.29.759-.411 1.512-.974 1.045-.64-.531-.584.483.063 1.13.646.646.282 1.233-.593.956-.627-.2-.638-.176-.155.307.287.287.676.522.865.522.188 0 .342.288.342.64 0 .352.133.64.295.64.162 0 .39.43.505.956.26 1.188.64 1.475.64.484 0-.406-.108-.672-.24-.59-.132.081-.24.005-.24-.17 0-.174.288-.408.64-.52.352-.112.651-.373.665-.582.013-.208.073-.63.132-.938.059-.308-.015-.56-.165-.56-.15 0-.252-.264-.228-.587.025-.322.225-.586.446-.586s.313.144.204.32c-.114.185.006.243.283.137.265-.102.684-.04.932.136.359.254.337.284-.104.142-.475-.153-.5-.09-.174.432.21.335.74.7 1.178.81.633.159.702.26.335.493-.4.254-.399.3.016.336.264.024.583.028.709.01.126-.02.147.178.046.44-.1.26-.321.387-.492.282-.19-.118-.187.036.01.402.177.326.407.866.512 1.2.23.733.511.516.643-.498.053-.412.19-1.037.305-1.389.157-.484.115-.465-.171.08-.209.396-.505.72-.659.72-.153 0-.056-.432.218-.96.456-.882.404-1.1-.24-.998-.132.021-.24-.106-.24-.282 0-.463.281-.396 1.122.265.523.412.658.72.455 1.04-.425.673-.367.843.356 1.031.54.142.617.058.445-.482-.138-.436-.089-.58.147-.435.22.136.358-.063.364-.52.01-.704.027-.71.371-.116.27.467.268.654-.01.747-.204.068-.37.4-.37.737 0 .388-.223.613-.607.613-.658 0-1.244 1.037-.69 1.222.187.062.257.248.155.413-.216.35.541 2.205.9 2.205.364 0 .29-.572-.107-.817-.191-.118-.269-.515-.173-.882.096-.367.044-.824-.115-1.016-.192-.231-.05-.368.425-.407.546-.045.729.126.779.732.036.435-.077.79-.251.79-.445 0-.396.874.064 1.158.21.13.438.065.508-.143s.258-.297.419-.198c.335.208.4-.282.08-.603-.118-.117-.25-.564-.297-.994-.06-.563.044-.733.371-.607.25.096.389.28.308.41-.08.131.018.8.219 1.487.246.844.407 1.06.496.667.08-.358.313-.514.6-.404.258.1.385.044.282-.121-.102-.166.193-.5.655-.742.8-.42.814-.468.284-.999-.307-.307-.597-1.087-.643-1.734l-.085-1.177.427 1.12c.234.616.437.985.45.82.014-.166.225-.028.47.306.244.334.385.762.313.95-.073.189.097.627.376.974.491.609.504.6.371-.252-.111-.717-.055-.815.299-.521.24.199.436.284.436.189 0-.095.086-.437.19-.76.14-.43.11-.473-.115-.159-.24.334-.344.282-.48-.24-.13-.498-.025-.667.416-.667.948 0 .996-.495.138-1.422-.45-.484-.698-1.026-.568-1.237.147-.238.313-.084.454.423.122.438.242.652.266.476.025-.176.26.076.522.56.263.484.617.88.787.88.17 0 .31.223.31.494 0 .29-.227.456-.548.4-.346-.059-.581.143-.637.546-.086.616-.08.617.172.024.243-.573.277-.577.477-.054.31.807.267 1.22-.104.99-.176-.108-.32-.045-.32.141 0 .187.141.34.314.34.173 0 .404.358.514.797.157.625.35.76.896.623.594-.15.746.016 1.043 1.13.192.718.224 1.381.07 1.476-.406.251-.338.681.138.864.247.095.434-.1.463-.482.066-.883.38-1.122.735-.56.211.335.299.353.302.061.003-.225-.208-.492-.469-.592-.359-.137-.395-.33-.149-.79.198-.37.207-.608.021-.608-.167 0-.362.173-.432.384-.08.236-.211.168-.343-.176-.145-.377-.096-.487.151-.334.25.154.31.006.186-.464-.099-.38-.05-.61.11-.511.16.099.29.003.29-.213 0-.683.342-.081.498.875.292 1.801.479 2.36.788 2.36.41 0 .407-.866-.005-1.12-.202-.125-.154-.515.132-1.069.328-.634.36-1.033.119-1.465-.241-.431-.234-.533.028-.372.223.138.36-.032.36-.447 0-.532-.116-.612-.56-.39-.357.178-.85.126-1.36-.144-.44-.233-.692-.444-.56-.469.132-.025.372-.063.533-.085.162-.022.414-.17.56-.33.155-.17.1-.196-.133-.062-.236.136-.4.054-.4-.2 0-.237.292-.43.648-.43.388 0 .586.16.494.4-.085.221-.029.48.125.574.153.095.335.003.405-.206.236-.71.888.089.908 1.113.02 1.017.022 1.018.37.221.193-.44.328-.908.3-1.04-.072-.344.517-.296.738.06.102.166-.008.418-.245.56-.237.144-.524.512-.637.82-.113.308-.393.56-.621.56-.638 0-.449 2.82.233 3.473.515.493.537.483.347-.155-.225-.753.394-1.19 1.082-.765.314.193.276.328-.16.571-.57.32-.863 1.556-.512 2.156.103.176.216.513.252.748.035.236.328.723.649 1.083.571.64.568.65-.136.43-.453-.14-.72-.09-.72.137 0 .198.144.271.32.162.176-.108.32-.045.32.142 0 .45.421.43.896-.046zm10.517-4.949a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm-11.276-.85c-.106-.276-.518-.37-1.189-.272-.913.135-.98.094-.6-.363.235-.282.334-.664.22-.848-.117-.19.073-.334.443-.334.424 0 .589-.154.477-.447-.095-.246-.054-.52.09-.61.144-.088.292.263.33.78.047.657-.05.874-.32.722-.294-.165-.3-.122-.023.178.29.314.54.283 1.2-.15.5-.327.834-.403.834-.19 0 .197-.144.357-.32.357-.176 0-.32.36-.32.8 0 .844-.546 1.095-.822.378zm-3.575-1.9c-.05-.976-.035-.992.262-.262.173.425.197.892.053 1.036-.144.144-.286-.205-.315-.774zm14.466-.014c-.17-.387-.632-.749-1.028-.805-.396-.056-.72-.212-.72-.345 0-.134.324-.232.72-.218.514.018.693-.134.626-.532-.07-.42.105-.541.712-.491.773.064.785.097.303.832-.38.58-.412.853-.128 1.13.28.276.347.257.27-.074-.066-.282.244-.485.857-.563.787-.1.86-.06.4.217-.308.186-.56.571-.56.856 0 .284-.095.422-.211.306-.116-.115-.373-.075-.572.09-.243.201-.462.07-.67-.403zm.492-1.823c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-18.16 1.84c.079-.395.558-.865.891-.875.095-.003.194.283.22.635.033.437-.149.64-.571.64-.341 0-.584-.18-.54-.4zm1.52-1.079c0-.425.086-.447.48-.12.264.218.48.452.48.519 0 .066-.216.12-.48.12s-.48-.233-.48-.519zm-8.23-.28c.096-.77 1.546-.9 1.748-.158.114.42.089.419-.21-.003-.292-.414-.34-.403-.344.08-.003.308-.157.56-.343.56-.187 0-.25-.144-.141-.32.108-.176.057-.32-.115-.32-.172 0-.394.18-.493.4-.1.22-.145.112-.102-.24zm14.82-.676c-.145-.378-.061-.463.312-.32.28.107.57.195.644.195.073 0 .134.144.134.32 0 .522-.875.365-1.09-.195zm2.93.146c.254-.254.27-.553.053-.96-.174-.325-.19-.59-.036-.59.24 0 1.022 1.356 1.022 1.774 0 .08-.316.145-.704.145-.531 0-.613-.09-.335-.369zm8.274-.137c-.282-.734-.26-.774.446-.774.352 0 .64.16.64.355 0 .194-.21.274-.464.176-.31-.119-.405-.024-.286.286.098.255.106.463.018.463s-.247-.227-.354-.506zm-19.19-.036c-.35-.349-.226-.631.276-.631.264 0 .48.112.48.248 0 .36-.517.622-.756.383zm16.298-1.538c-.118-1.056-.35-2.17-.518-2.475-.475-.867-.373-.937.615-.426.506.262 1.01.386 1.12.275.11-.11.2-.032.2.173s-.196.373-.437.373c-.315 0-.407.358-.33 1.278.06.702-.014 1.602-.164 2-.22.58-.315.346-.486-1.198zm-23.042.707c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm2.714-.44c-.49-1.03-.575-2.019-.222-2.59.163-.263.08-.327-.256-.199-.276.106-.496.023-.496-.187 0-.208.252-.326.56-.263.337.07.52.346.458.696-.056.32.028.5.187.403.158-.098.288.025.288.273 0 .249-.12.378-.267.287-.24-.148-.284-.02-.259.75.004.129.437.19.96.135.576-.06.953.05.953.278 0 .21-.22.294-.493.19-.314-.12-.58.05-.736.472-.232.625-.269.611-.677-.246zm-4.672.185a.539.539 0 0 1 .07-.632c.165-.165.448-.02.678.348.325.52.313.632-.069.632-.255 0-.56-.156-.679-.348zm17.138.01c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.339zm-4.521-.542c-.398-.507-.387-.518.12-.12.367.287.56.315.56.08 0-.198.193-.36.427-.36.235 0 .427.216.427.48 0 .658-.997.606-1.534-.08zm2.12.24c.11-.176.262-.32.34-.32.077 0 .14.144.14.32 0 .176-.152.32-.338.32-.187 0-.25-.144-.141-.32zm1.059-.24c-.265-.308-.586-.776-.714-1.04-.206-.426-.185-.426.192 0 .233.264.686.732 1.006 1.04.32.308.451.56.29.56-.161 0-.51-.252-.774-.56zm12.061.24c-.122-.197-.045-.784.17-1.304.334-.804.468-.885.893-.54.418.338.456.325.232-.076-.207-.37-.178-.396.129-.114.547.505.313 1.388-.513 1.935-.493.326-.753.355-.91.099zm3.276-.13c-.264-.264-.576-.382-.694-.264-.119.118-.12-.033-.004-.335.134-.351.053-.558-.223-.57-.24-.012-.101-.155.306-.318.407-.164.652-.44.543-.616-.114-.185.013-.239.3-.129.297.114.5.016.506-.243.007-.33.072-.32.268.045.376.7.264 2.646-.16 2.788-.2.066-.579-.095-.842-.358zm-29.914-.467c.098-.376.048-.603-.112-.504-.382.236-.964-1.315-.726-1.936.276-.72 1.09-.596.976.15-.053.347-.196.73-.318.852-.396.396-.234.74.259.551.303-.117.48.004.48.33 0 .283.01.619.024.746.013.128-.153.291-.369.363-.261.087-.333-.097-.214-.552zm9.039-.043c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm8.197-.296c-.3-.186-.23-.302.255-.43.367-.095.668-.052.668.097 0 .436-.477.608-.923.333zm7.496 0c-.101-.164-.038-.389.141-.5.18-.11.326.024.326.299 0 .562-.193.645-.467.2zm-17.307-.364c-.339-.549-.035-.602.635-.112.52.38.535.454.099.454-.288 0-.618-.154-.734-.342zm4.494.02c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm3.035-.154c.194-.234.258-.798.144-1.255-.115-.457-.073-.83.092-.83.166 0 .303.18.305.4.002.22.102.706.222 1.08.169.523.065.72-.448.855-.527.137-.593.085-.315-.25zm-6.315-.378c-.22-.088-.4-.301-.4-.473s.127-.234.283-.137c.39.24.66-.927.336-1.451-.15-.241-.109-.61.093-.854.267-.322.253-.404-.058-.33a.493.493 0 0 1-.561-.303c-.092-.25.034-.33.335-.215.504.193.556-.34.104-1.065-.157-.25-.078-.4.213-.4.567 0 1.09 2.322.562 2.498-.191.063-.347.328-.347.588 0 .26.114.402.253.315.14-.086.275.125.3.468.028.362-.093.538-.287.418-.216-.133-.258.036-.12.473.215.676.06.778-.706.468zm2.804-.329c-.003-.385.15-.796.337-.912.524-.324.552-.065.09.813-.405.768-.422.772-.427.1zm-21.338-.979c0-.572.156-1.042.347-1.045.19-.003.132-.14-.13-.306-.407-.257-.412-.363-.034-.715.332-.31.387-.313.219-.014-.125.22-.071.4.119.4.191 0 .282.349.203.782-.078.43.027.85.234.935.207.084.135.164-.158.178-.293.014-.593.205-.667.425-.073.22-.133-.068-.133-.64zm10.294.56c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm12.922.08a1.934 1.934 0 0 1 .026-.56c.036-.176-.042-.213-.172-.082-.26.26-1.097-.312-1.097-.75 0-.51 1.545.426 1.703 1.031.087.33.027.601-.133.601-.159 0-.307-.108-.327-.24zm12.227-.482c-.17-.446-.497-.886-.729-.979-.3-.12-.275-.175.085-.193.544-.028 1.497 1.438 1.157 1.778-.112.113-.343-.16-.513-.606zm3.078-.004c.126-.66.04-.874-.35-.874-.285 0-.517-.159-.517-.354 0-.195.206-.275.459-.178.252.097.517.077.587-.046.07-.122.091-.06.046.14-.045.198.05.494.214.657.181.181.121.534-.155.912-.422.578-.44.562-.284-.257zm-30.183-.651c-.033-.952-.013-.972.294-.292.2.443.213.845.035 1.022-.178.177-.308-.11-.329-.73zm7.382.396c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm10.734-.139c-.324-.389-.31-.48.067-.48.256 0 .466.216.466.48s-.03.48-.068.48c-.037 0-.246-.216-.465-.48zm10.88.16c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm-24.837-.565c-.42-.277-.375-1.55.07-1.997.203-.202.546-.148.98.156.82.573 1.165 1.66.529 1.66-.248 0-.38-.18-.296-.4.084-.22-.061-.483-.323-.584-.27-.103-.392-.045-.281.134.107.174-.047.316-.343.316-.442 0-.467.086-.14.48.433.522.364.605-.196.235zm-6.471-.586c-.67-.469-1.016-1.326-.376-.93.181.111.235-.017.126-.3-.222-.579-.762-.351-.762.32 0 .254-.18.464-.4.466-.267.003-.24.109.08.315.288.187.327.313.098.315-.694.01-.78-.618-.196-1.422.318-.436.848-.797 1.178-.803.492-.008.566.156.414.917-.16.801-.101.904.44.762.344-.09.626-.011.626.175 0 .603-.52.681-1.228.185zm2.957.142c-.126-.203-.098-.29.061-.191.16.098.32-.245.358-.762.047-.66-.048-.873-.32-.714-.214.124-.114-.086.221-.469.637-.726 1.47-.932 1.47-.365 0 .182-.216.413-.48.515-.296.113-.48.6-.48 1.27 0 1.08-.395 1.42-.83.716zm32.984.039c-.076-.123.132-.469.462-.768.362-.327.68-.417.798-.225a.383.383 0 0 1-.133.523c-.182.113-.263.315-.18.45.083.134-.065.244-.329.244s-.542-.101-.618-.224zm-30.98-.203c-.117-.117-.213-.416-.213-.663 0-.372.082-.367.48.03.264.265.48.563.48.663 0 .25-.486.231-.747-.03zm9.28-.32a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm-12.053-.724c0-.34-.216-.833-.48-1.097-.61-.61-.63-1.049-.025-.546.584.485 1.22 2.26.808 2.26-.167 0-.303-.277-.303-.617zm15.763.076c.298-.297.631-.45.74-.34.316.314-.168.881-.751.881-.488 0-.488-.042.011-.54zm2.097.323c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm-3.607-.4c-.116-.188-.132-.47-.036-.625.096-.156.009-.76-.195-1.344-.321-.922-.4-.979-.604-.436-.14.372-.2.01-.148-.897.065-1.117-.029-1.52-.351-1.52-.242 0-.444.252-.45.56-.008.52-.034.518-.349-.024-.42-.722-.392-.748 1.06-1.019l1.18-.22-.122 1.631c-.095 1.286-.02 1.632.355 1.632s.43.255.259 1.2c-.255 1.406-.318 1.518-.6 1.062zm5.527-.24c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm9.893.025c-.128-.128-.233-.401-.233-.607 0-.524.896-.467 1.102.07.094.244.04.363-.119.265-.159-.098-.34-.025-.403.163-.063.189-.219.237-.347.11zm-37.501-.863c-.382-.583-.45-.99-.236-1.402.166-.32.248-.914.182-1.321-.071-.438.01-.659.2-.541.302.186.371.056.45-.85.056-.656-1.023-.553-1.198.115-.092.352-.321.545-.51.428-.399-.246.125-1.453.63-1.453.17 0 .31-.348.31-.773 0-.426.087-1.002.194-1.28.212-.553 1.086-.703 1.086-.187a.32.32 0 0 1-.32.32c-.176 0-.32.305-.32.678 0 .513.15.638.62.515.836-.219 1.494 1.447.8 2.024-.53.44-.312.99.298.755.23-.088.604.062.83.334.278.335.294.494.05.494-.197 0-.358-.127-.358-.282 0-.155-.504-.269-1.12-.252-1.222.032-1.379.242-.64.854.264.22.48.261.48.093s.216-.306.48-.306.48.188.48.417c0 .252.22.345.56.236.474-.152.486-.126.08.17-.402.293-.409.397-.041.633.241.156.372.48.291.72-.093.275-.344.06-.677-.583-.549-1.058-1.64-1.333-1.961-.496-.091.237-.033.348.13.248.16-.1.385-.033.498.148.112.182.328.254.48.16.151-.093.347-.054.435.089.088.142-.14.281-.509.309-.368.028-.774.22-.903.429-.158.256-.407.114-.771-.443zm1.875-4.01c.09-.147-.039-.267-.287-.267-.249 0-.378.12-.288.267.091.146.22.266.288.266.067 0 .196-.12.287-.266zm9.051 4.538c-.326-.326-.264-1.137.072-.93.16.099.214-.109.122-.461-.093-.358-.01-.64.19-.64.197 0 .375.18.395.4.104 1.096-.354 2.056-.779 1.631zm2.957.128a10.2 10.2 0 0 1-.348-2.074c-.015-.393-.14-.644-.28-.558-.387.239-.159-.764.272-1.195.294-.294.38-.257.38.163 0 .3.225.544.5.544.274 0 .421.125.327.278-.205.33.89 1.393 1.202 1.166.12-.087.066.02-.12.236-.236.279-.402.292-.562.046-.294-.453-1.404-.446-1.235.008.07.19.297.309.502.262.277-.062.284.083.029.56-.303.566-.592.81-.667.565zm.665-2.194c0-.465-.573-.603-.736-.177-.09.234.039.425.286.425.247 0 .45-.112.45-.248zm5.12 1.794c0-.264.056-.48.125-.48.07 0 .209.216.31.48.102.264.045.48-.126.48-.17 0-.31-.216-.31-.48zm8.866.057c-.114-.295-.103-.548.024-.561.49-.052 1.3-.237 1.967-.448.496-.158.605-.332.378-.605-.2-.24-.208-.56-.022-.853.201-.32.298-.341.302-.07.003.22.212.4.466.4.253 0 .552.148.663.328.112.18.019.289-.206.24-.225-.048-.416.128-.424.392a.5.5 0 0 1-.495.48c-.264 0-.576.134-.694.298-.321.446-1.222.5-1.248.074-.012-.204-.131-.094-.264.245-.216.552-.263.56-.448.08zm-16.04-.175c-.1-.16.035-.467.297-.685.387-.321.477-.301.477.105 0 .598-.522.988-.775.58zm12.934-.06c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.339zm-20.904-.831c-.432-.433-.201-.687.466-.512.475.124.872-.055 1.307-.59.345-.423.533-.589.42-.369-.114.22-.055.4.132.4.186 0 .339.16.339.355 0 .194-.207.274-.46.178-.252-.097-.504-.06-.56.083-.143.37-1.385.713-1.644.455zm23.784-.788c0-.193.216-.268.48-.167.308.118.488-.012.502-.366.019-.459.068-.444.298.09.245.572.277.578.297.061.012-.318.173-.485.358-.371.518.32-.168.957-1.115 1.035-.451.038-.82-.09-.82-.282zm-29.6-.603c-.261-.422.121-1.021.502-.786.388.24.386 1.106-.003 1.106-.166 0-.39-.144-.5-.32zm5.447-.312c-.323-.356-.429-.648-.236-.648s.452.164.575.364c.15.242.406.124.766-.354.412-.546.54-.594.54-.203 0 .282-.12.513-.266.513-.146 0-.23.162-.186.36.144.65-.595.63-1.193-.032zm11.193.312c-.11-.176-.054-.32.122-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm1.9-.35c-.277-.449.421-.61.778-.18.265.32.232.424-.138.424-.269 0-.557-.11-.64-.245zm-2.024-.415c-.493-.274-.634-.503-.4-.648.2-.123.364-.066.364.128 0 .195.237.311.526.26.29-.052.59.085.667.305.177.507-.186.492-1.157-.045zm-8.774-.496c.098-.375.018-.659-.185-.659-.197 0-.357-.144-.357-.32 0-.538.598-.356.942.287.238.445.205.705-.124.978-.365.303-.416.25-.276-.286zm-2.782-.358c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm13.165.054c-.267-.169-.31-.351-.113-.473.176-.109.403.017.504.28.212.553.192.563-.39.193zm-12.325-.93c-.087-.14-.044-.44.096-.667.186-.3.302-.231.43.255.167.644-.204.935-.527.412zm3.233-.359c-.139-.532-.097-.657.14-.42.186.186.276.527.199.758-.08.24-.225.095-.339-.338zm-94.9 21.66c-.237-.237-.279-.112-.14.42.114.433.259.578.339.338.077-.23-.013-.572-.199-.758zm119.947.714c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm11.336-.744c-.112-.293-.332-.452-.49-.355-.158.097-.286 0-.286-.215 0-.216-.096-.297-.212-.181-.116.116.028.476.32.8.293.323.483.666.422.761-.06.096.016.072.17-.052.154-.125.189-.466.076-.758zm2.143.208c-.378-.648-.469-.44-.16.364.11.286.267.453.35.37.082-.082-.004-.412-.19-.734zm25.745-.083c.343.284.456.285.456.006 0-.263.13-.251.446.04.245.228.367.543.27.703-.096.159-.007.185.2.058.475-.294.265-.626-.936-1.481-.622-.443-.928-.533-.87-.255.058.278-.22.424-.79.416-.484-.007-.88.1-.88.24 0 .139.22.252.49.252s.592.252.717.56c.193.478.243.452.334-.178.088-.6.194-.668.563-.361zm-165.391.426c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm90.225-.507c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm22.822.38c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm15.68 0c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm50.88-.019c0-.186.12-.264.266-.174.147.091.267-.034.267-.277 0-.243-.268-.422-.595-.397-.327.025-.527.22-.444.435a.427.427 0 0 1-.232.546c-.21.086-.13.167.178.181.308.014.56-.127.56-.314zm-185.6-.324c0-.492-.95-1.373-1.206-1.117-.119.118-.022.335.216.482.237.147.333.427.212.623-.126.202-.006.355.279.355.274 0 .499-.154.499-.343zm49.28.202c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm64-.053c0-.265-.622-.415-.764-.184-.093.15.041.272.298.272.256 0 .466-.04.466-.088zm3.74-1.326c-.08-.308-.146-.056-.146.56 0 .616.066.868.146.56.08-.308.08-.812 0-1.12zm16.485.904c.344-.402.786-.561 1.271-.458.645.137.67.111.188-.197-.364-.233-.751-.251-1.12-.054-.57.306-.792.365-1.354.365-.17 0-.228.216-.126.48.244.637.506.606 1.14-.136zm49.298-.104c-.097-.396-.271-.864-.388-1.04-.117-.176-.188-.644-.158-1.04s-.07-.72-.221-.72c-.633 0-.788-.051-1.44-.479-.665-.436-1.076-.347-1.076.232 0 .157.134.202.297.101.312-.192.761.34.865 1.026.066.433-.384.552-.603.16-.074-.132-.086-.048-.027.187.06.234.108.727.108 1.095 0 .653.02.65.847-.106l.847-.776-.182.74c-.138.558-.012.808.512 1.02l.746.3c.027.011-.03-.304-.127-.7zm-1.683-2.019c0-.274.144-.41.32-.3.176.108.32.333.32.498 0 .166-.144.301-.32.301-.176 0-.32-.224-.32-.499zm-185.28 1.723c0-.462-.183-.601-.692-.526-.97.144-1.026 1.05-.068 1.108.557.034.76-.12.76-.582zm125.813-.338c-.237-.237-.279-.112-.14.42.114.433.259.578.339.338.077-.23-.013-.572-.199-.758zm33.867.554c0-.264-.14-.48-.31-.48-.17 0-.228.216-.126.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm2.56.34c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm1.925-.657c-.608-.325-.64-.417-.203-.584.573-.22.695-1.031.201-1.336-.183-.114-.234.019-.12.314.124.325.042.476-.23.416-.233-.05-.44.123-.46.387-.046.65.814 1.634 1.213 1.387.176-.109-.004-.371-.4-.584zm14.063-.895c.006-.14-.19-.067-.435.16s-.38.52-.301.652c.08.132-.016.24-.212.24-.197 0-.257.164-.134.364.21.338 1.053-.766 1.082-1.416zm-170.868.133c.413-.378.386-.39-.198-.091-.373.191-.77.257-.88.146-.112-.111-.202.137-.202.552 0 .636.062.682.4.293.22-.253.616-.658.88-.9zm9.373.657c-.202-.125-.355-.44-.34-.702.07-1.216-.085-1.571-.598-1.374-.485.186-.484.231.009.592.468.343.474.414.045.578-.27.104-.49.345-.49.537 0 .192.128.27.284.174.156-.097.464.042.685.309.221.266.486.4.587.299.102-.102.02-.288-.182-.413zm106.467.33c0-.137-.288-.25-.64-.25-.352 0-.64.113-.64.25 0 .14.288.252.64.252.352 0 .64-.113.64-.251zm49.44-.068a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.398.725.398.48 0zm6.08 0c-.28-.453.268-.397.782.08.237.22.342.24.233.045-.31-.555.522-2.04 1.145-2.042.739-.003.697-.617-.11-1.603-.558-.683-.604-.698-.312-.1.415.85.438 1.38.059 1.38-.156 0-.372-.324-.48-.72-.165-.6-.25-.64-.512-.24-.218.334-.184.578.109.8.232.176.359.506.282.734-.108.32-.24.328-.595.034-.55-.455-.86-.204-.94.759-.062.725.087 1.193.376 1.193.088 0 .071-.144-.038-.32zm-54.02-.763c-.199-.42-.545-.692-.77-.605-.233.089-.41-.074-.41-.376 0-.311-.15-.441-.357-.313-.232.143-.035.537.56 1.12 1.134 1.114 1.446 1.17.976.174zm11.048.487c.242.339.273.316.14-.103-.095-.297 0-.603.21-.682.272-.101.237-.294-.125-.676-.356-.374-.508-.41-.51-.118-.002.228-.096.775-.21 1.215-.114.44-.12.604-.012.364.166-.368.245-.368.507 0zm9.75-.424c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm8.714.22c-.02-.176-.202-.263-.404-.194-.203.068-.655.11-1.004.094-.454-.022-.516.043-.214.23.572.353 1.666.266 1.622-.13zm10.947-.245c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm9.4.405c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm-71.901-.808c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm4.44.108c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm7.396-.466c-.094-.44-.174-.36-.31.31-.12.585-.075.795.125.595.17-.171.254-.578.185-.905zm35.159.624c0-.486-.592-.401-.762.109-.06.18.087.327.326.327.24 0 .436-.196.436-.436zm8.38.257c.308-.194.192-.275-.393-.275-.456 0-.75.126-.656.28.216.35.493.348 1.05-.005zm106.165-.778c-.069-.626-.354-1.093-.788-1.286-.53-.237-.636-.486-.484-1.137.165-.7.125-.767-.245-.418-.421.397-.661 1.958-.296 1.925 1.234-.114 1.858.823.815 1.224-.747.286-.566.675.312.675.696 0 .78-.12.686-.983zm-152.986-.137c-.142-.573-.11-.768.094-.56.171.176.38.608.465.96.12.502.162.457.191-.205.02-.466-.167-.925-.418-1.02-.25-.097-.415-.436-.366-.755.05-.319.028-.4-.048-.18-.076.22-.257.4-.404.4-.147 0-.191.288-.1.64.094.358.01.64-.19.64-.196 0-.357.14-.357.31 0 .17.216.227.48.126s.48-.025.48.17.088.354.195.354c.107 0 .097-.396-.022-.88zm48.929.052c-.05-.456-.198-.924-.327-1.04-.13-.116-.14.056-.022.384.17.469.099.55-.33.386-.483-.185-.478-.133.045.445.744.821.743.821.634-.175zm12.979.516c0-.178-.582-.3-1.294-.272-1.426.055-1.212.404.32.52.536.041.974-.07.974-.248zm3.816-.516c-.206-.249-.708-.452-1.115-.452-.598 0-.76-.196-.841-1.015-.055-.559-.303-1.082-.551-1.164-.31-.102-.389.016-.25.376.11.288.061.523-.11.523-.17 0-.31.225-.31.5 0 .274.134.415.297.315.164-.101.385.091.492.428.124.392.399.558.765.462.314-.082.757.075.985.35.228.274.549.415.713.313.177-.109.146-.37-.075-.636zm-171.336.188c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm104.16 0c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm25-.405c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-136.013-.058c.47.29.337-.062-.187-.497-.405-.335-.477-.278-.455.361.014.418.098.578.187.357.09-.22.294-.32.455-.22zm11.852-.262c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm6.67-.575c-.158-.295-.196-.626-.085-.738.111-.11.035-.202-.17-.202-.21 0-.313.31-.236.72.074.396.147.936.163 1.2.024.415.068.417.321.018.174-.275.176-.681.006-.998zm99.253.34c.173 0 .226-.144.118-.32-.316-.51-.75-.374-1.141.359-.255.477-.259.614-.011.461.193-.12.368-.03.389.201.02.23.103.167.183-.14.08-.309.288-.56.462-.56zm22.841.057c-.254-.254-.804.323-.609.64.133.215.298.182.468-.093.145-.234.208-.48.141-.547zm11.357.583c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm27.755-.553c.422-.635.403-.667-.292-.487-.668.172-.698.136-.298-.352.245-.299.333-.648.196-.775-.137-.128-.314-.052-.393.17-.079.22-.275.32-.436.22-.16-.1-.292-.013-.292.193 0 .214-.224.287-.526.171-.445-.17-.462-.125-.108.301.334.402.473.42.7.087.204-.3.268-.238.231.225-.11 1.376.4 1.479 1.218.247zm-165.995-.087c-.233-.434-.236-.64-.012-.64.182 0 .331-.12.331-.266 0-.474-.942-.283-1.468.297-.474.524-.462.552.159.39.475-.125.67-.025.67.342 0 .284.149.517.33.517.225 0 .222-.206-.01-.64zm101.44.446c0-.265-.622-.415-.764-.184-.093.15.041.272.298.272.256 0 .466-.04.466-.088zm19.432-1.386c-.082-.313-.022-.796.133-1.073.174-.31.154-.583-.05-.71-.182-.112-.292-.064-.243.107.048.172-.04.29-.196.264-.156-.026-.409.291-.562.706-.185.5-.445.69-.773.563-.283-.108-.411-.054-.3.127.108.174.387.316.62.316.233 0 .515.324.626.72.19.675.224.684.548.134.19-.322.279-.842.197-1.154zm25.266.88c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm7.38-.26c.105 0 .43.217.723.482.475.43.532.426.532-.029 0-.28-.336-.637-.747-.793-.41-.156-.746-.44-.746-.63 0-.191-.173-.24-.385-.11-.298.184-.298.266 0 .365.21.07.333.44.27.822-.061.381-.05.513.025.293.075-.22.222-.4.328-.4zm5.313.49c.1-.258.073-.536-.059-.617-.132-.082-.26.13-.286.47-.056.734.095.799.345.147zm-165.613-.658c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm90.164-.974c-.37-.371-.418-.658-.182-1.099.33-.616.434-1.18.17-.916-.083.083-.366.666-.629 1.296-.441 1.057-.436 1.143.07 1.104.35-.027.599.246.689.757.135.774.144.776.262.08.067-.396-.104-.946-.38-1.222zm3.396 1.073c-.23-.23-.378-.248-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm10.662.39c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm9.755-.24c-.004-.48-.05-.49-.315-.08-.207.32-.312.346-.316.08-.003-.22-.256-.396-.564-.39-.507.009-.501.054.06.48.819.618 1.14.593 1.135-.09zm5.125.24c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm38.49-.326c-.092-.354-.317-.737-.499-.85-.183-.113-.235-.05-.116.144.118.19.042.454-.169.584-.268.166-.197.31.235.48.34.133.641.253.669.265.027.012-.026-.268-.12-.623zm6.63.469c0-.097-.432-.327-.96-.511-1.024-.357-1.012-.913.018-.913.737 0 .801-.597.157-1.458-.443-.594-.455-.588-.27.148.139.546.085.702-.183.537-.227-.14-.343-.065-.29.19.048.233-.103.384-.336.335-.233-.048-.333.06-.221.24.111.18.04.328-.16.328-.63 0 .488.892 1.313 1.048.424.08.807.165.851.189.044.024.08-.036.08-.133zm95.669-.16c.128.206.245-.087.261-.655l.03-1.029-.46.887c-.253.487-.45.978-.435 1.09.014.112.103.007.199-.233.127-.32.234-.337.405-.06zm-160.47-.304c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm2.08.18c0-.078-.143-.23-.32-.34-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm7.187-.158c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm7.005-.171c.1-.259.04-.557-.13-.663-.172-.105-.235-.316-.141-.468.093-.151.021-.367-.16-.48-.182-.112-.267-.308-.188-.435.078-.127-.341-.174-.932-.105-1.173.136-1.247.83-.12 1.124.554.145.582.097.218-.369-.377-.482-.362-.49.156-.083.316.248.496.657.399.908-.194.507.037 1.04.451 1.04.147 0 .348-.211.447-.47zm29.587-.34c-.099-.098-.278.08-.398.396-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm4.703-1.715c.187-1.638.067-1.816-1.143-1.693-.1.01-.12-.405-.044-.922.082-.56-.006-.94-.218-.94-.503 0-.443-.81.092-1.255.345-.286.488-.276.615.041.175.436.314-.376.259-1.507l-.032-.64.28.64c.153.352.202 1.049.109 1.548-.151.803-.086.896.565.8.451-.066.788.078.87.372.12.427.097.427-.205 0-.282-.399-.34-.362-.345.221-.006.789.484 1.243.796.74.112-.182.338-.248.502-.147.564.349.295-.245-.654-1.443-.523-.66-.863-1.29-.754-1.398.108-.109-.003-.444-.249-.746-.287-.354-.304-.465-.05-.311.273.163.335.077.2-.274-.116-.306.046-.696.404-.967.33-.25.528-.47.44-.489-1.137-.246-1.28-.202-1.28.402 0 .542-.08.584-.48.252-.396-.329-.48-.298-.48.174 0 .315-.086.487-.191.381-.105-.105-.2-1.28-.208-2.613-.01-1.332-.15-2.422-.31-2.422-.162 0-.203-.287-.091-.638.155-.489.086-.593-.297-.446-.274.105-.41.335-.302.51.114.185-.079.17-.46-.034-.363-.193-.848-.342-1.08-.33-.231.012-.097.178.3.369.395.19.72.485.72.652 0 .168.215.223.48.122.263-.102.48-.055.48.104 0 .158-.297.382-.659.497-.738.234-.726 1.134.018 1.38.402.132.413.076.065-.345-.31-.376-.321-.562-.044-.733.86-.532 1.174 1.986.35 2.81-.204.203-.37.513-.37.687 0 .175.21.038.47-.304.356-.47.47-.505.474-.14.003.263-.1.628-.23.81-.355.5-1.763.375-1.912-.17-.117-.427-.09-.427.234 0 .295.387.324.333.15-.28-.166-.59-.117-.702.22-.5.352.213.36.17.036-.229-.218-.27-.327-.587-.242-.704.085-.117-.002-.083-.193.076-.191.158-.37.879-.397 1.6-.028.722-.158 1.313-.29 1.314-.132 0-.24-.214-.24-.478s-.14-.48-.313-.48c-.197 0-.204.283-.02.767.16.422.193.886.072 1.03-.12.144-.004.114.26-.067.265-.18.66-.302.88-.27.22.033.58.078.8.1.242.024.4.514.4 1.24 0 .79.137 1.173.4 1.12.448-.09.478.08.199 1.12-.208.776-.63.973-.686.32a8.954 8.954 0 0 0-.19-1.04 23.86 23.86 0 0 1-.178-.78c-.013-.079-.251.137-.528.48-.277.34-.413.44-.301.22.111-.22.05-.4-.137-.4a.34.34 0 0 0-.338.34c0 .186-.152.244-.338.13-.186-.115-.283-.448-.217-.74.067-.291-.082-.943-.33-1.449-.304-.618-.375-1.298-.216-2.08.36-1.767.379-2.28.087-2.28-.403 0-.319-1.21.103-1.471.21-.13.283-.09.17.094-.11.177 0 .593.24.923.406.555.427.534.273-.273-.108-.567-.03-.874.225-.874.27 0 .32-.275.164-.88-.245-.946-.418-1.717-.457-2.042-.013-.112-.312-.278-.664-.37-.425-.112-.64-.01-.64.301 0 .258.144.38.32.271.176-.108.32-.045.32.141 0 .187-.162.34-.36.34-.248 0-.236.148.04.48.23.276.26.48.073.48-.403 0-.603-.557-.575-1.6.015-.56.19-.787.582-.756.308.024.56-.093.56-.26 0-.387-1.362-.211-1.675.215-.144.196-.237.157-.24-.099-.003-.23-.139-.336-.302-.235-.383.236.145 2.12.69 2.467.276.175.178.26-.305.262-.628.004-.688.125-.51 1.015.144.722.096.945-.168.781-.204-.126-.37-.093-.37.073 0 .166.311.383.692.483.566.148.622.266.305.649-.287.345-.293.526-.025.692.547.338 1.124-.366.717-.874-.493-.616-.815-1.854-.482-1.854.16 0 .47.6.69 1.332.347 1.156.332 1.369-.111 1.617-.357.2-.427.449-.232.828.153.299.363 1.191.468 1.983l.19 1.44-.48-1.28c-.262-.704-.516-1.525-.562-1.825-.047-.3-.344-.832-.66-1.18-.315-.35-.478-.787-.363-.975.116-.187.058-.34-.128-.34-.498 0-.413.84.14 1.395.543.542.647.986.16.685-.484-.3-.383.391.224 1.536.3.563.505 1.283.457 1.6-.047.317.296.877.764 1.245.467.367.713.756.546.864-.555.357-.762 1.573-.315 1.852.233.145.584.623.78 1.063.328.735.377.751.601.198.139-.342.084-.86-.126-1.196-.435-.697-.492-1.882-.09-1.882.154 0 .28.371.28.824 0 .454.162.986.36 1.184.266.267.36.168.36-.381 0-.62.117-.705.72-.52.396.12.914.233 1.15.25.8.056 1.13 1.363.562 2.23-.576.878-.351 1.418.313.754.236-.236.513-1.165.616-2.065zm-1.548-5.931a.49.49 0 0 1 .287-.628c.265-.102.46.014.46.275 0 .638-.54.893-.747.353zm-5.308-.691c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm1.255-4.614c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm23.204 13.447c-.107-.172-.043-.595.141-.94.28-.523.236-.62-.27-.581-.334.025-.55.231-.48.46.36 1.195.44 1.374.613 1.374.104 0 .102-.14-.005-.313zm-64.164-.148c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm8.329-.647c-.221-.267-.554-.39-.74-.276-.219.135-.256-.004-.107-.393.127-.332.133-.505.012-.384-.12.12-.473.083-.783-.083-.41-.22-.683-.156-.998.233-.365.45-.365.493 0 .273.338-.203.384-.092.208.498-.222.74-.215.744.266.12.452-.586.528-.596.913-.116.418.52 1.266.927 1.505.72.07-.06-.055-.326-.276-.592zm18.226.358c.003.215.28.299.658.2.626-.164.63-.193.08-.718-.521-.497-.609-.5-.963-.04-.215.28-.393.652-.395.828-.003.176.134.104.305-.16.173-.268.312-.317.315-.11zm24.983-.348c-.183-.22-.26-.474-.17-.563.09-.09-.05-.575-.312-1.079-.366-.706-.386-.972-.086-1.163.214-.136.293-.25.176-.252-.118-.003-.431-.088-.697-.19-.363-.14-.44-.02-.309.48.1.38.021.665-.183.665-.197 0-.357.144-.357.32 0 .176.272.32.605.32.69 0 1.158.852.577 1.048-.285.095-.271.263.054.657.24.29.57.445.735.343.181-.112.168-.343-.033-.586zm9.733.444c-.114-.183-.034-.542.177-.796.223-.268.28-.698.137-1.026-.136-.31-.217-.744-.182-.964.036-.22-.066-.4-.225-.4-.16 0-.252-.35-.205-.778.062-.567-.04-.73-.378-.6-.254.097-.394.34-.31.538.734 1.732.927 2.858.585 3.406-.28.449-.275.626.021.746.588.239.602.234.38-.126zm2.089.091c0-.133-.292-.425-.648-.647-.6-.375-.618-.357-.243.243.403.645.89.866.89.404zm-169.28-.397c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm5.265-.4c-.343-1.137-.785-1.428-.785-.517 0 .846.226 1.237.714 1.237.159 0 .19-.324.071-.72zm7.326.25c.1-.258.043-.554-.125-.658-.169-.104-.306.063-.306.37 0 .507-.047.501-.485-.06-.336-.43-.459-.474-.4-.142.162.918 1.029 1.24 1.316.49zm94.671-.136c.25.35.279.325.138-.114-.1-.308-.041-.56.13-.56.17 0 .31-.161.31-.359 0-.259-.125-.255-.45.014-.344.286-.48.276-.587-.041-.077-.228-.142.09-.145.706-.003.616.06.848.14.514.12-.496.204-.525.464-.16zm31.138.286c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm1.94.034c-.255-.413.642-.684 1.018-.307.209.209.391.122.536-.255.12-.315.12-.474 0-.353-.12.12-.49.074-.821-.104-.467-.25-.65-.2-.81.216-.189.493-.246.487-.66-.066-.44-.588-.45-.587-.348.035.057.352.32.738.584.858.667.302.702.3.501-.024zm9.633-.18c0-.256-.108-.399-.24-.318-.131.082-.303-.033-.382-.254-.08-.22-.261-.292-.404-.158-.19.177.5.996 1 1.186.014.005.026-.2.026-.456zm10.76-.17c-.091-.35-.288-.561-.436-.47-.315.195-.03 1.106.347 1.106.14 0 .18-.286.09-.636zm-165.053-.004c-.11-.176-.045-.32.143-.32.23 0 .216-.201-.038-.608-.209-.335-.57-.535-.802-.446-.586.225-.53.743.137 1.248.679.516.82.548.56.126zm100.32.019a.615.615 0 0 0-.267-.466c-.147-.09-.267.045-.267.301s.12.466.267.466c.147 0 .267-.136.267-.301zm3.68-.02c-.11-.175-.334-.32-.5-.32-.165 0-.3.145-.3.32 0 .177.224.32.498.32.275 0 .41-.143.302-.32zm4.064-.063c-.465-.465-.51-1.536-.064-1.536.176 0 .32-.456.32-1.013 0-.558-.108-.905-.24-.772-.132.134-.24.554-.24.934 0 .44-.19.677-.52.653-.43-.03-.457.078-.158.64.584 1.097.862 1.478 1.08 1.478.113 0 .033-.173-.178-.384zm11.776.258c0-.07-.224-.211-.497-.316-.285-.11-.413-.056-.301.126.188.304.798.45.798.19zm29.339-.594c.02-.396-.034-.54-.12-.318a.352.352 0 0 1-.527.178c-.205-.122-.175.02.067.318.55.68.537.684.58-.178zm-50.35-.094c-.103-.271-.257-.425-.341-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm14.43.207c.097-.157-.031-.366-.285-.463-.308-.118-.403-.023-.284.286.206.538.324.574.569.177zm46.538-.83c-.24-.228-.796-.523-1.235-.655-.702-.212-.747-.18-.377.267.232.279.663.432.958.34.419-.13.396-.047-.103.379-.635.541-.634.544.08.376.423-.1.73-.018.745.2.015.22.095.194.197-.062.094-.237-.025-.617-.265-.845zm-16.597-.022a.457.457 0 0 0-.45-.461c-.292 0-.392.224-.284.636.182.697.734.565.734-.175zm12.265.365a.49.49 0 0 0-.286-.63c-.303-.116-.46.038-.46.454 0 .728.49.844.746.176zm11.201-.223c.54-.029.57-.07.135-.183-.445-.117-.491-.273-.23-.763.259-.482.226-.617-.15-.617-.296 0-.41.184-.297.48.101.264.016.48-.19.48-.204 0-.283.144-.174.32.279.452-.264.398-.808-.08-.25-.22-.175-.065.168.344.343.41.675.59.738.4.063-.19.427-.36.808-.381zm11.386.164c-.237-.286-.23-.607.026-1.083.199-.373.317-.9.262-1.172-.096-.472-2.13-1.416-3.14-1.46-.265-.01-.688-.18-.942-.376-.352-.271-.404-.261-.221.044.132.22.088.4-.099.4-.186 0-.339.161-.339.359 0 .258.127.254.452-.015.314-.26.516-.271.662-.034.116.187.345.258.509.156.163-.101.297-.043.297.128 0 .172-.18.385-.4.474-.252.102-.206.17.126.187.499.024 1.088 1.354.958 2.162-.033.207.267.427.668.49 1.372.212 1.542.175 1.181-.26zm-.846-.745c.025-.34.154-.551.286-.47.132.082.158.36.06.618-.25.652-.402.587-.346-.148zm7.274 1.117c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.064.499-.141zm1.178-.56c-.102-.254-.178-.179-.193.194-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-183.985.188c-.106-.107-.382-.118-.613-.026-.256.102-.18.178.193.194.337.013.526-.062.42-.169zm87.952-.962c.303.117.467-.061.492-.535.034-.65.05-.656.19-.07.085.352.3.784.48.96.219.216.25.06.096-.48-.234-.822-.997-1.6-1.569-1.6-.183 0-.156.166.062.384.522.523.482.896-.096.896-.321 0-.466.292-.437.88.04.79.058.804.186.135.092-.482.301-.683.596-.57zm29.334.464c-.152-.582-.072-.662.51-.51.466.122.69.034.69-.27 0-.594-.645-.57-1.544.06-.576.403-.649.602-.352.96.554.667.902.547.696-.24zm14.11.197c-.103-.271-.257-.425-.341-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm35.935-1.498c-.282-.454-.266-.649.07-.858.32-.199.336-.33.06-.5-.219-.136-.294-.587-.182-1.097.166-.753.09-.865-.578-.865h-.767l.595.976c.783 1.283.754 1.834-.042.816-.345-.44-.644-.656-.665-.48-.022.176-.155-.04-.295-.48-.24-.748-.259-.73-.289.274-.024.82.08 1.032.438.894.53-.203 1.045.393.612.708-.155.112-.298.66-.318 1.217-.027.734.083.967.4.846.24-.092.442.028.448.267.006.238.206.082.444-.348.331-.597.347-.92.069-1.37zm-.631 1.139a.882.882 0 0 1-.213-.544c0-.201.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.069-.38-.048zm20.907.194c0-.362-.138-.574-.307-.47-.168.104-.224.4-.125.66.254.66.432.583.432-.19zm78.12.099c.398-.508.387-.519-.12-.12-.534.417-.703.68-.44.68.067 0 .319-.252.56-.56zm2.559-.296c-.378-.649-.469-.441-.16.364.11.286.267.452.35.37.082-.083-.004-.413-.19-.734zm-223.4.216c0-.176-.251-.318-.56-.315-.478.004-.49.05-.08.315.604.39.64.39.64 0zm8.04-.405c-.316-.314-.353-.277-.179.179.12.315.3.493.398.394.098-.098 0-.356-.219-.573zm38.9-.243c.053-.348-.056-.632-.243-.632-.2 0-.252-.278-.126-.672.207-.655.198-.657-.408-.08-.606.578-.652 1.264-.06.898.163-.101.298.209.298.688 0 .954.385.81.54-.202zm7.714-.4c-.192-.567-.409-1.102-.482-1.186-.121-.14.09 1.538.24 1.914.035.088.044.279.018.424-.025.145.094.178.263.073.196-.121.182-.57-.04-1.224zm4.067 1.048c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm4.87-.305c-.089-.343.002-.692.203-.775.202-.082.223-.159.046-.17-.176-.011-.52.106-.764.261-.379.24-.379.355 0 .783.594.67.711.648.516-.099zm7.204-.601c.285-.285.24-.374-.19-.374-.309 0-.473-.144-.364-.32.108-.176.045-.32-.142-.32-.186 0-.338.288-.338.64 0 .352-.117.64-.26.64-.142 0-.538.208-.88.463-.55.41-.482.416.59.054.665-.225 1.378-.578 1.584-.783zm27.954.426c-.116-.461-.063-.8.125-.8.18 0 .327.144.327.32 0 .176.124.32.275.32.152 0 .204-.373.117-.83-.116-.605-.232-.713-.43-.4-.21.331-.274.301-.278-.13-.003-.308-.137-.56-.298-.56-.162 0-.504-.08-.76-.179-.358-.137-.427.021-.3.688.115.6.054.796-.2.64-.735-.454-.343.423.477 1.068 1.08.85 1.189.834.945-.137zm28.673-.773c-.117-.312-.039-.37.254-.19.268.166.347.137.214-.078-.116-.186-.508-.261-.871-.166-.468.122-.561.272-.32.514.188.187.352.636.364.997.022.648.025.649.276.016.139-.352.176-.844.083-1.093zm-170.043.909c-.063-.19-.19-.297-.28-.24-.092.057-.563-.156-1.047-.473-.553-.362-1.133-.497-1.558-.362-.558.177-.593.263-.198.483.263.148 1.007.304 1.652.348.645.043 1.173.193 1.173.333s.084.255.186.255c.103 0 .135-.155.072-.344zm94.462.024c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm49.173-.146c0-.256-.12-.392-.267-.301a.615.615 0 0 0-.266.466c0 .165.12.3.266.3.147 0 .267-.209.267-.465zm27.736.003c.119-.31.024-.405-.284-.286-.254.097-.382.306-.285.463.245.397.363.36.569-.177zm6.785.015c.385-.386.383-.475-.017-.628-.266-.102-.385-.393-.277-.675.132-.343.047-.44-.277-.316-.522.2-.703 2.068-.2 2.068.178 0 .524-.202.771-.45zm-131.374-.013c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm37.76-.18c0-.175-.252-.317-.56-.314-.48.004-.49.05-.08.315.603.39.64.39.64 0zm61.405-.603c-.496-.403-.892-.516-1.125-.323-.198.164-.63.214-.96.11-.343-.107-.258.017.197.288.591.352.858.378 1.029.102.165-.268.386-.217.783.18.304.303.617.487.697.407.08-.08-.2-.423-.621-.764zm-54.297-.712c.05-.146.633-.08 1.294.149.662.228 1.094.53.96.673-.133.142.074.065.461-.17.5-.306.611-.542.382-.818-.241-.29-.146-.342.38-.204.499.13.659.058.556-.25-.083-.248-.615-.44-1.243-.449-.604-.008-1.204-.16-1.334-.335-.129-.176-.237.022-.24.44-.004.637-.08.695-.484.36-.264-.22-.49-.633-.503-.92-.017-.4-.086-.373-.297.12-.236.547-.279.559-.298.08-.02-.493-.228-.587-1.222-.552-.367.014-.408 1.592-.042 1.592.175 0 .24-.129.142-.287-.097-.157.03-.365.28-.462.738-.282.768.526.044 1.136-.573.482-.598.604-.184.88.453.303 1.056-.136 1.348-.983zm9.082.946c.142-.228.088-.282-.141-.14-.203.125-.37.051-.37-.165 0-.215-.086-.305-.192-.2-.183.183.096.875.353.875.067 0 .224-.166.35-.37zm54.525.13c-.01-.438-.598-1.185-.786-.997-.252.252.15 1.237.505 1.237.157 0 .283-.108.28-.24zm-153.846-.964c-.177-.059-.251-.376-.165-.704.1-.385-.08-.724-.51-.954-.62-.332-.644-.3-.354.464.172.451.297.923.278 1.049-.13.875.052 1.099.557.68.283-.235.37-.476.194-.535zm97.21.743c0-.078-.143-.23-.32-.34-.175-.108-.32-.044-.32.142s.145.339.32.339c.177 0 .32-.064.32-.141zm70.08-.465c0-.136-.202-.247-.449-.247s-.376.19-.286.424c.163.426.736.289.736-.177zm12 .286c.11-.176.054-.32-.122-.32s-.409.144-.517.32c-.11.176-.054.32.122.32s.409-.144.518-.32zm-147.04-.286c0-.157-.236-.376-.525-.487-.439-.169-.459-.122-.12.286.46.555.646.613.646.201zm9.056-.247c-.09-.235-.205-.427-.255-.427-.05 0-.166.192-.256.427-.09.234.025.426.256.426.23 0 .345-.192.255-.426zm42.145.213c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm17.92-.301c0-.342-.156-.718-.346-.835-.195-.12-.26-.585-.15-1.059.146-.633.114-.725-.13-.365-.428.633-.424 1.6.007 1.6.196 0 .255.273.139.64-.117.367-.058.64.138.64.188 0 .342-.28.342-.621zm51.2.357c0-.146-.38-.614-.843-1.04-.812-.749-.826-.75-.403-.056.242.396.557.72.701.72.144 0 .173.144.064.32-.108.176-.045.32.142.32.186 0 .338-.119.338-.264zm7.292-.237c.418-.293 1.012-.42 1.43-.308.577.155.545.094-.162-.31-.946-.539-1.187-.899-.4-.597.361.14.48-.056.48-.791 0-.536.146-1.066.325-1.176.179-.11.24-.338.138-.504a.357.357 0 0 0-.49-.116c-.168.103-.234.3-.149.438.086.138-.211.418-.659.622-.69.315-.798.295-.71-.13.058-.275.215-.49.35-.477.385.037 1.144-.762.981-1.031-.08-.133-.512-.15-.96-.037-.533.134-.913.05-1.096-.239-.2-.315-.29-.165-.314.517l-.034.96-.316-1.12c-.45-1.595-.756-1.766-.69-.385.032.652.079 1.185.105 1.185.067 0 .349 1.202.39 1.666.02.212.157.31.307.218.15-.093.17-.338.045-.546-.152-.254-.062-.245.274.027.276.223.737.315 1.025.205.414-.159.495-.042.385.554-.077.416-.15.864-.164.996-.013.132-.183.24-.378.24s-.28-.192-.19-.427c.09-.235-.045-.427-.3-.427s-.39.192-.3.427c.09.235.016.427-.165.427-.18 0-.24.144-.13.32.27.438.538.403 1.372-.18zm-.842-3.34c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm5.512 3.344c.109-.285.055-.413-.126-.3-.174.107-.316.33-.316.496 0 .46.229.359.442-.196zm-118.844-.46c.188-.351.407-1.287.487-2.08.112-1.104.04-1.443-.31-1.443-.258 0-.435-.277-.408-.64.056-.742.255-.797.855-.24.35.323.382.314.175-.05-.163-.286-.133-.373.084-.238.656.404 1.359-.168 1.359-1.106 0-.51-.154-.926-.34-.926-.188 0-.296.324-.24.72.08.578-.074.74-.78.821-.805.093-1.257-.383-.603-.634.153-.06.379-.431.502-.827.17-.55.096-.72-.313-.72-.42 0-.492-.189-.331-.88.151-.653.12-.756-.12-.4-.422.622-.434 2.018-.015 1.76.392-.243.408.164.03.76-.153.243-.439.343-.635.222-.195-.12-.355-.08-.355.092s.17.369.376.438c.207.07.272.296.143.504-.3.487-1.15-.23-.935-.79.08-.207-.171-.546-.558-.754-.56-.299-.652-.293-.453.03.184.298.088.346-.36.178-.447-.166-.375-.004.267.599 1.11 1.044 1.145 1.526.08 1.12-.44-.166-.8-.217-.8-.112s-.205.021-.455-.186c-.37-.306-.426-.269-.3.2.274 1.024 1.008 1.76 1.61 1.616.501-.12.47-.19-.215-.488-.44-.192-.728-.369-.64-.393.806-.226 1.308-.21 1.467.048.116.188.365.162.641-.068.44-.365.626-.067.482.768-.026.145.117.163.316.04.25-.156.292-.004.134.496-.156.49-.116.65.125.5.195-.12.355-.066.355.12 0 .187-.135.34-.3.34-.166 0-.29.252-.278.56.013.308-.084.812-.214 1.12-.326.77.05.708.47-.078zm36.924.14c.109-.285.055-.413-.126-.3-.174.107-.316.018-.316-.198 0-.215-.09-.302-.2-.192-.2.2.061 1.187.315 1.187.075 0 .222-.224.327-.497zm3.718.158c0-.186.131-.257.292-.158.35.217.633-.46.426-1.023-.08-.22-.293-.4-.472-.4-.2 0-.183.17.042.443.285.342.252.487-.147.64-.87.333-1.218.242-.835-.219.27-.325.105-.431-.76-.49-.631-.042-1.107.076-1.107.275 0 .192.144.26.32.15.176-.108.32-.079.32.066 0 .145.324.424.72.62.968.479 1.2.497 1.2.096zm57.31-1.203c-.192-.36-.35-.962-.35-1.336 0-.374-.131-.6-.29-.5-.16.098-.22-.145-.133-.542.153-.704.142-.702-.496.08-.544.666-.572.818-.168.907.273.06.463.41.434.8-.029.381.054 1.028.184 1.438.207.653.294.687.704.277.36-.36.387-.617.116-1.124zm-.67.243c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm14.936 1.088c-.116-.115-.07-.38.101-.586.215-.26.165-.376-.163-.376-.26 0-.474.201-.474.448 0 .311-.208.382-.68.232-.458-.145-.609-.1-.462.139.12.194.595.354 1.054.354.459 0 .74-.095.624-.21zm-156.376-.608c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm38.56.18c-.11-.177.007-.32.257-.32.27 0 .44-.294.419-.72-.044-.861-.938-.976-1.1-.142-.12.63.13 1.501.432 1.501.104 0 .1-.144-.009-.32zm10.938-.38c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm53.862.433c0-.147-.21-.267-.466-.267-.257 0-.392.12-.302.267.091.146.3.266.466.266.166 0 .302-.12.302-.266zm32.442-.23c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm4.49-.258c-.11-.289-.33-.526-.49-.526-.158 0-.112.282.103.626.453.725.682.666.388-.1zm2.86.285c.098-.259.042-.555-.126-.66-.169-.103-.306.108-.306.47 0 .773.177.851.431.19zm-108.41-1.027c-.109-.283-.285-.428-.392-.32-.107.106-.464.05-.793-.126-.404-.217-.597-.213-.597.011 0 .182.224.331.498.331.296 0 .406.15.27.37-.141.23-.087.282.144.14.214-.133.464.01.588.334.14.361.264.422.348.17.073-.217.043-.627-.066-.91zm11.716.467c-.21-.21-.517-.189-.908.06-.515.33-.52.356-.03.204.308-.096.56-.027.56.154s.156.232.347.114c.23-.142.24-.323.031-.532zm35.833-.453c.181-.231.107-.431-.203-.55-.378-.145-.483.045-.463.842.014.567.105.814.203.55.097-.264.306-.643.463-.842zm82.944.682c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm97.718.287c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-220.798-.72c-.03-.395-.23-.545-.598-.448-.397.104-.528-.023-.462-.447.051-.325.032-.42-.041-.21-.074.21-.342.303-.595.206-.805-.309-.495.127.58.816 1.263.808 1.17.801 1.116.083zm58.96-.447c.003-.132-.172-.204-.388-.16-.73.15-.587-1.194.227-2.131.445-.513.728-1.013.63-1.111-.099-.099-.326.033-.506.292-.249.358-.366.374-.49.068-.09-.22-.302-.316-.471-.211-.187.115-.144.393.107.702.36.444.331.48-.224.272-.477-.178-.549-.146-.28.125.234.236.272.757.109 1.482-.203.9-.164 1.085.199.946.28-.108.453.035.456.376.004.472.05.482.316.07.17-.264.312-.588.315-.72zm52.681.013c-.036-.723-1.156-1.281-1.156-.577 0 .2-.159.264-.352.145-.232-.143-.22.03.034.504.307.573.444.63.667.279.259-.41.43-.165.32.46-.025.145.083.185.24.088.156-.097.267-.501.247-.9zm24.764.707c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-135.214-.662c-.301-.487-.782-.338-.583.18.101.264.315.398.475.298.16-.099.21-.314.108-.478zm36.34.175c.338-.407.318-.454-.121-.286-.29.111-.525.33-.525.488 0 .411.185.353.646-.202zm1.594.167c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm13.44 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.214-.604c.044-.58-.11-.994-.412-1.11-.265-.102-.48-.442-.478-.756.004-.485.052-.498.316-.09.427.661.389.38-.151-1.12-.59-1.636-.605-2.4-.047-2.4.244 0 .512-.36.596-.8.084-.44.029-.8-.123-.8-.151 0-.275.288-.275.64 0 .734-.323.816-.944.24-.351-.326-.394-.297-.234.16.109.308.058.56-.112.56-.171 0-.31.225-.31.5 0 .274-.14.412-.308.308-.176-.109-.28.214-.24.75.056.775.202.931.833.891.42-.027.835.151.921.396.102.29.02.36-.24.2-.293-.182-.334-.048-.158.515.131.418.375.848.542.956.167.108.292.288.277.4a9.992 9.992 0 0 0-.027.844c0 .998.495.752.574-.285zm-1.97-4.036c.101-.264.24-.48.31-.48.069 0 .126.216.126.48s-.14.48-.31.48c-.17 0-.228-.216-.126-.48zm2.822 4.662c.101-.163.062-.373-.088-.465-.15-.093-.272.041-.272.297 0 .54.101.587.36.168zm58.614-.368c.022-.162.069-.33.104-.374.035-.044.114-.34.174-.657.09-.473.025-.508-.354-.193-.397.33-.418.263-.143-.462.27-.711.234-.852-.23-.873-.333-.015-.393-.089-.151-.187.22-.088.4-.301.4-.473s-.154-.217-.342-.101c-.188.116-.309.016-.27-.222.098-.584-.347-1.552-.714-1.552-.17 0-.155.265.035.621.267.498.2.715-.338 1.091-.629.44-.634.48-.081.622.407.105.323.164-.272.19-.473.02-.95-.108-1.058-.284-.11-.176-.442-.319-.74-.318-.395 0-.282.214.42.788.989.811 2.308 1.119 1.889.44-.136-.219-.088-.282.117-.155.19.117.444.68.567 1.249.122.57.291 1.154.376 1.298.17.288.548.011.61-.448zm106.488-.344c-.082-.133-.364-.16-.627-.058-.376.144-.397.28-.098.64.297.359.434.371.627.059.136-.22.18-.509.098-.641zm-225.851.11c-.314-.507-1.453-.689-1.266-.202.09.234.403.48.696.545.655.147.813.052.57-.343zm12.923.26c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm34.686-.374c-.156-.252-.057-.307.301-.17.293.112.533.065.533-.106 0-.17-.302-.31-.67-.31-.41 0-.738-.259-.845-.667-.132-.507-.24-.564-.445-.24-.149.235-.27.643-.27.907 0 .4.047.405.28.037.224-.354.354-.306.646.24.201.376.441.683.534.683.092 0 .063-.168-.064-.374zm8.945-.436c-.25-.651-.4-.587-.345.148.025.34.154.551.286.47.132-.081.158-.36.06-.618zm5.329.67c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm165.686-.66c-.036-.44-.194-.8-.35-.8-.157 0-.198.228-.09.507.106.278.194.638.194.8 0 .161.07.293.156.293s.127-.36.09-.8zm-233.308-.22c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm72.102.22c0-.264-.12-.48-.267-.48-.147 0-.267.216-.267.48s.12.48.267.48c.147 0 .267-.216.267-.48zm68.8.187c0-.162.088-.524.195-.804.14-.366.057-.457-.298-.32-.272.104-.473.465-.448.803.046.603.55.897.55.32zm-81.177-.475c.17-.443-.021-.832-.408-.832-.11 0-.198.288-.198.64 0 .738.354.85.606.192zm-95.644-.158c.097-.158-.031-.366-.285-.464-.308-.118-.403-.023-.284.287.206.537.324.574.569.177zm40.73-.45c-.683-.71-1.51-.803-1.51-.17 0 .167.123.228.273.135.15-.092.546.039.88.291.94.711 1.144.563.356-.257zm2.58.364c-.068-.204-.404-.411-.747-.46-.616-.086-.616-.082-.002.373.753.557.91.575.748.087zm.88-.568c-.305-.591-.716-.923-1.105-.893-.341.025-.548.163-.46.305.088.142.287.18.444.083.156-.096.522.19.814.635.722 1.101.904 1.024.308-.13zm4.95.815c0-.07-.215-.209-.48-.31-.263-.102-.48-.045-.48.125 0 .17.217.31.48.31.265 0 .48-.056.48-.125zm4.8-.016c0-.077-.143-.23-.32-.339-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm33.166-.339c-.264-.264-.58-.48-.702-.48s-.043.216.177.48c.219.264.535.48.702.48.167 0 .087-.216-.177-.48zm4.467-.335c.112-.448.115-.904.006-1.013-.11-.109-.199.114-.199.495 0 .786-.112.827-.98.362-.773-.413-.814-.046-.06.526.802.609 1.002.549 1.233-.37zm1.888-.759c0-1.083-.126-1.423-.55-1.485-.62-.091-.618.422.005 1.09.491.527.353 1.524-.195 1.41-.21-.045-.38.074-.38.263s.251.295.56.235c.431-.083.56-.429.56-1.513zm59.36 1.254c0-.176-.297-.32-.66-.32-.362 0-.57.144-.46.32.108.176.405.32.658.32.254 0 .462-.144.462-.32zm118.018-.488c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zM94.544 399.2c.23-.276.26-.48.073-.48-.179 0-.408.216-.51.48-.1.264-.134.48-.073.48.061 0 .29-.216.51-.48zm30.978-.328c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm1.827-.449c-.12-.54-.364-.983-.545-.983-.188 0-.23.24-.098.56.126.308.304.818.394 1.133.272.947.481.349.249-.71zm68.08-.902c-.144-.374-.076-.434.26-.232.38.23.379.18-.01-.298-.363-.446-.504-.477-.64-.142-.097.237-.433.452-.747.478-.482.039-.507-.033-.16-.462.31-.383.314-.449.013-.268-.443.266-1.264 1.65-.833 1.406.15-.085.632.232 1.072.704l.8.859.22-.77c.12-.423.131-.997.025-1.275zm-168.686 1.114c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm53.653.278c-.227-.247-.463-.4-.525-.342-.19.18.292.79.624.79.173 0 .128-.202-.099-.448zm-50.972-.193c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm35.098-.389c-.23-.23-.378-.249-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm17.16-.1c-.099-.098-.278.08-.398.396-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm115.52.465c-.063-.189-.239-.32-.39-.292-.153.028-.412-.141-.577-.376-.238-.34-.27-.329-.156.052.08.264.307.444.505.4.198-.044.36.064.36.24s.084.32.186.32c.103 0 .135-.154.072-.344zm-100.2-.676c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm26.918.46c-.143-.541.453-1.674.776-1.475.206.128.254.065.118-.155-.341-.552-.825-.446-.868.19-.035.53-.045.53-.184-.004-.08-.31-.28-.481-.443-.38-.418.258-.367 1.225.088 1.68.442.442.604.487.513.144zm2.076-.435c-.19-.19-.612-.281-.939-.203-.514.122-.486.185.207.472.902.374 1.248.247.732-.269zm-95.325.089c.09-.147-.039-.267-.287-.267-.249 0-.378.12-.288.267.091.146.22.266.288.266.067 0 .196-.12.287-.266zM65.65 398c-.079-.22.051-.625.29-.9.238-.275.514-1.139.612-1.92.165-1.319.144-1.374-.306-.78l-.483.64-.02-.64c-.012-.352-.246-.928-.522-1.28-.474-.605-.489-.58-.273.48.126.616.392 1.327.591 1.58.297.376.252.418-.242.233-.525-.197-.549-.16-.18.284.354.428.349.56-.035.803-.366.231-.329.294.18.306.57.013.585.057.129.405-.377.287-.42.49-.16.773.461.504.598.51.42.016zm3.55-.408c-.098-.099-.277.079-.397.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm4.67.541c.22-.355-.483-2.613-.813-2.613-.142 0-.122.36.046.8.167.44.218.8.112.8-.105 0-.023.202.182.45.286.344.276.487-.041.614-.284.114-.294.174-.032.191.21.014.455-.095.546-.242zm100.907-.56c.04-.337-.007-.432-.107-.21-.1.22-.314.32-.475.22-.16-.099-.292.056-.292.345 0 .723.782.406.874-.354zm127.446.686c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-269.691-1.197c-.208-.209-.49-.26-.624-.116-.135.144-.065.327.157.405a.35.35 0 0 1 .193.517c-.135.24-.055.23.222-.028.331-.307.343-.487.052-.778zm-3.766.031a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.117.357.357 0 0 0 .117-.49zm53.777.347c-.11-.176-.022-.32.194-.32s.317-.075.225-.167c-.273-.273-1.232.208-1.039.52a.657.657 0 0 0 .497.287c.176 0 .231-.144.123-.32zm104.755-.65c.233-.667.234-.907.005-.766-.191.119-.306-.047-.27-.389.114-1.073-.004-1.206-.508-.576-.484.604-.489.602-.172-.057.18-.372.226-.778.103-.901-.123-.124.134-.497.571-.83.721-.549.732-.589.115-.43-.374.095-.865.519-1.091.941-.226.422-.684.854-1.018.96-.69.22-.602.935.117.937.7.003 1.656 1.025 1.15 1.231-.297.12-.276.248.082.501.264.187.502.342.529.344.027.003.201-.432.387-.966zm-123.195-.284c-.31-.893-1.24-1.624-1.24-.976 0 .17.128.31.285.31.157 0 .375.36.486.8.11.44.334.8.498.8.176 0 .165-.38-.028-.934zm-37.08.473c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm47.995-.259c-.003-.22-.13-.595-.28-.834-.195-.306-.275-.188-.275.4 0 .459.126.834.28.834.154 0 .277-.18.275-.4zm15.278.207c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm36.887-.663c0-.254-.13-.382-.287-.284-.158.097-.383-.074-.501-.381-.203-.526-.234-.525-.54.02-.18.32-.25.776-.159 1.016.217.565 1.487.248 1.487-.371zm174.08.57c0-.157-.237-.376-.526-.487-.439-.168-.459-.121-.12.286.46.555.646.613.646.202zm-230.432-.642c.429-.43.707-.508.948-.267.24.24.284.066.15-.592-.104-.513-.18-1.182-.169-1.486.018-.446-.062-.477-.406-.16-.236.216-.299.441-.14.5.636.235.263.92-.431.79-.396-.074-1.003.075-1.348.33-.535.395-.565.54-.201.979.553.666.854.648 1.597-.094zm-1.088-.672c.88-.378 1.384-.378.8 0-.264.171-.696.303-.96.293-.317-.012-.262-.111.16-.293zm52.32 1.14c0-.339-.615-.48-.797-.185-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm76.91-.353c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm-169.178-.238a.378.378 0 0 1 .557.17c.102.22.098.041-.009-.399-.267-1.108-.486-1.257-1.357-.923-.584.224-.676.387-.403.716.194.234.27.51.167.613-.254.254.582.113 1.045-.177zm-.662-.179c-.11-.179-.045-.422.146-.54.492-.304.809.113.398.524-.23.23-.409.235-.544.016zm53.468-.43c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm2.017-.33c.003-.126-.202-.15-.455-.053a.505.505 0 0 0-.276.657c.15.39.235.4.455.053.149-.235.273-.53.276-.657zm91.617.07c.092-.352.037-.56-.122-.461-.16.098-.29.387-.29.64 0 .663.217.568.412-.18zm-94.172 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm7.755-.16c.387-.527.278-.762-.332-.716a.692.692 0 0 0-.62.613c-.044.594.544.658.952.103zm-25.355-.445c0-.136-.216-.248-.48-.248-.502 0-.625.282-.276.631.24.24.756-.023.756-.383zm10.776.205c.002-.22.11-.733.241-1.14.215-.669.18-.703-.377-.356-.414.259-.568.631-.47 1.14.15.788.6 1.053.606.356zm1.092-.702c.166.102.22.319.12.48-.1.163.062.202.36.087.505-.194.504-.235-.016-.615-.306-.224-.462-.56-.346-.748.116-.188.076-.342-.09-.342-.326 0-.712 1.143-.648 1.92.021.264.101.154.178-.244.077-.399.275-.641.442-.538zm4-.095c-.103-.104-.188-.013-.188.203 0 .216-.144.303-.32.194-.516-.318-.369-1.38.24-1.734.308-.18.391-.33.186-.336-.206-.005-.638-.103-.96-.217-.45-.159-.503-.116-.226.185.233.253.272.788.109 1.51-.203.9-.164 1.085.199.946.248-.096.456.003.461.216.005.215.163.128.35-.194.186-.32.254-.669.15-.773zm-48.91.477c-.074-.22.055-.544.287-.72.29-.22.326-.47.113-.8-.206-.32-.31-.346-.314-.08-.003.22-.22.4-.484.4-.585 0-.621.508-.08 1.122.5.568.652.593.478.078zm42.962.275c0-.07-.216-.209-.48-.31-.264-.102-.48-.045-.48.125 0 .17.216.31.48.31s.48-.056.48-.125zm52.892-.515c.096-.366.01-.642-.202-.645-.228-.003-.2-.112.07-.284.243-.153.35-.427.239-.608-.112-.18-.023-.389.199-.463.32-.108.321-.233.005-.617-.521-.631-.127-1.008.527-.505.312.24.274.115-.1-.323-.54-.633-.549-.715-.08-.715.584 0 .712-.489.21-.8-.176-.108-.32-.036-.32.16 0 .197-.144.27-.32.16-.176-.108-.32.115-.32.496 0 .528-.134.642-.56.48-.433-.165-.474-.127-.18.169.292.295.274.487-.08.842-.516.515-.613 1.561-.17 1.835.16.098.214.467.122.819-.112.43-.01.64.313.64.264 0 .555-.289.648-.64zm46.484-.595a39.18 39.18 0 0 1 .447-1.885c.152-.572.163-.97.023-.884-.14.087-.432-.057-.65-.32-.217-.261-.341-.487-.276-.5.066-.014.385-.075.709-.136 1.167-.221.945-.491-.248-.302-2.323.37-2.903.385-3.273.089-.383-.307-.83.139-.954.951-.052.344.028.344.451 0 .444-.36.484-.337.29.178-.163.436-.101.549.23.422.25-.096.684.08.965.39.608.671.671 1.127.11.79-.286-.171-.278-.09.027.287.235.29.326.692.202.893-.169.272-.058.276.431.014.85-.454.913-.445.913.128 0 .272-.29.483-.667.485-.515.004-.564.07-.215.29.676.429 1.293.058 1.485-.89zm-1.433-1.405c.029-.22.035-.67.014-.999-.03-.47-.132-.52-.475-.236-.331.275-.528.255-.809-.084-.305-.368-.189-.437.658-.395.908.046 1.042.173 1.146 1.083.07.608-.026 1.031-.234 1.031-.193 0-.328-.18-.3-.4zm-86.948 1.84c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm6.181 0c-.205-.22-.554-.33-.775-.245-.673.258-.449.645.374.645.606 0 .693-.087.401-.4zm34.18.155c-.11-.179-.325-.248-.476-.155-.152.094-.368.022-.48-.16-.113-.181-.365-.23-.561-.11-.228.141-.134.308.262.463.902.353 1.486.336 1.255-.038zm2.584-.88c-.118-.12-.35-.005-.513.255-.478.756-.352 1.041.21.478.286-.285.422-.615.303-.734zm59.13.712c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm8.203.006c-.223-.269-.488-.405-.59-.303-.102.102.027.32.286.483.677.428.766.376.304-.18zm-166.073-.153a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm39.497-.182c.637-.638.636-.978-.004-1.224-.325-.124-.455-.05-.362.206.08.22-.075.652-.343.96-.608.699.017.75.709.057zm8.777-.178c-.36-.232-.353-.34.045-.63.407-.296.395-.322-.08-.17-.734.236-.706.054.142-.922.75-.862 1.03-1.758.55-1.758-.383 0-.378-1.189.006-1.426.164-.101.402-.015.53.19.154.25.091.289-.188.116-.268-.166-.341-.133-.203.09.307.497 1.42.347 1.343-.18-.085-.58-.811-1.013-1.35-.806-.237.09-.43.014-.43-.171 0-.185.272-.284.604-.22.446.086.564-.032.454-.454-.103-.395.078-.63.59-.764.588-.154.66-.276.347-.588-.486-.486-.531-1.669-.053-1.373a.512.512 0 0 1 .194.595c-.202.528 1.08 1.66 1.864 1.644.545-.01.644-.239.666-1.531.03-1.813.264-2.156.794-1.164.274.512.287.767.044.848-.191.064-.265.332-.163.597.235.614-.515 2.037-1.075 2.037-.234 0-.426.153-.426.34 0 .186-.158.24-.352.12-.256-.158-.256-.037 0 .44.494.923.438 1.559-.157 1.787-.842.323-1.18-.139-.582-.798.303-.335.436-.609.296-.609-.348 0-1.102 1.03-1.115 1.52-.012.493 1.786.54 2.085.056.139-.224.451-.13.899.273 1.012.909 1.704 1.06 2.183.48.375-.456.325-.49-.437-.3-.526.13-.95.07-1.09-.157-.149-.242-.088-.283.177-.12.23.142.51.08.648-.144.193-.31.404-.308 1.005.012.711.379.73.368.287-.168-.411-.499-.8-2.732-.476-2.732.216 0 1.411 2.911 1.516 3.691.11.818.553 1.479.553.824 0-.229.167-.292.4-.152.304.183.315.13.046-.221-.487-.636-.768-1.902-.422-1.902.156 0 .373.356.482.791.176.698.254.735.672.317.26-.26.606-.392.768-.292.162.1.294-.071.294-.38 0-.438-.085-.478-.384-.18-.44.44-1.216.515-1.216.118 0-.147.18-.282.4-.301 1.097-.095 1.676-.338 1.983-.83.232-.371.234-.613.007-.772-.403-.281-.412-.883-.018-1.244.168-.153.2-.106.075.111-.12.208-.07.469.108.58.18.11.326.049.326-.137 0-.185.324-.276.72-.202l.85.158c.07.013-.129.308-.443.656-.315.348-.71.548-.876.445-.168-.104-.082.242.19.767.271.525.403 1.045.293 1.155-.325.324-1.43.23-1.223-.106.104-.168.432-.212.728-.099.478.184.486.15.07-.297-.424-.455-.524-.422-1.027.34-.69 1.042-.703 1.322-.063 1.322.314 0 .41-.148.258-.4-.163-.271-.067-.259.301.04.46.372.624.372 1.082 0 .472-.385.513-.37.33.12-.14.375-.054.56.26.56.258 0 .47-.159.47-.354 0-.195.2-.277.443-.184.315.12.396-.014.278-.464-.097-.371-.347-.564-.603-.466-.493.19-.518.13-.247-.577.15-.392.273-.415.578-.106.212.215.482.643.599.951.116.308.365.56.553.56.24 0 .239-.191-.005-.646-.19-.356-.245-.81-.122-1.01.13-.21.082-.275-.112-.155-.37.229-.824-.646-.558-1.075.091-.148-.002-.374-.209-.5-.25-.155-.288-.093-.116.186.173.28.134.342-.115.188-.394-.243-.28-.571.564-1.628.507-.634.505-.634-.209-.03-.443.375-.72.46-.72.221 0-.213-.128-.309-.286-.211-.158.097-.373-.047-.478-.322-.105-.274-.336-.408-.513-.299-.178.11-.323.047-.323-.14 0-.429.539-.442.8-.019.11.176.423.32.699.32.43 0 .438-.076.06-.541-.326-.402-.332-.477-.024-.292.227.137.617.08.865-.127.25-.206.595-.286.77-.178.177.109.413-.308.53-.936.117-.623.365-1.227.551-1.342.21-.129.262-.01.138.314-.11.287-.063.607.105.711.169.104.306.333.306.51 0 .175-.166.216-.369.09-.229-.14-.283-.087-.141.142.126.203.052.37-.164.37s-.296.096-.178.213c.118.118-.026.48-.318.802-.293.324-.437.683-.32.8.115.116.21.043.21-.162 0-.206.144-.374.32-.374.176 0 .32.182.32.403 0 .222.288.583.64.803.38.237.64.268.64.077a.317.317 0 0 0-.308-.323c-.593 0-1.049-1.28-.635-1.78.537-.647.864-.573 1.127.255l.227.715.264-.715c.146-.393.442-.715.66-.715.306 0 .308-.085.01-.384-.212-.21-.385-.526-.385-.7 0-.175.204-.04.452.3.248.34.394.71.324.824-.07.114.23.276.668.36.438.083.796.028.796-.124s-.252-.278-.56-.28c-.4-.004-.446-.078-.158-.26.22-.14.37-.632.332-1.092-.038-.46-.183-.767-.321-.682-.14.086-.253-.003-.253-.197 0-.224-.44-.294-1.2-.191-.66.089-.934.082-.61-.015.324-.097.859-.447 1.189-.777.564-.564.567-.625.05-1.01-.53-.398-.776-.94-.803-1.771-.007-.22-.123-.4-.26-.4-.135 0-.219-.38-.186-.845.073-1.017-.587-1.372-.83-.447-.11.422-.342.588-.654.469-.266-.102-.831.041-1.255.32-.425.277-.868.408-.986.29s-.215.098-.215.48c0 .38.144.693.32.693.176 0 .32-.216.32-.48 0-.56.505-.639.82-.13.315.511-.613 1.309-1.243 1.067-.295-.113-.537-.535-.537-.938 0-.402-.196-.806-.435-.898-.461-.177-.948-1.502-.552-1.502.128 0 .55.366.94.813.808.93 1.327.789 1.327-.362 0-.527-.24-.882-.72-1.064-1.018-.385-1.164-.084-.281.582.558.42.618.565.235.565-.282 0-.514-.105-.514-.233 0-.435-1.04-.633-1.466-.279-.507.421-1.094.132-1.094-.54 0-.263-.137-.394-.306-.29-.168.104-.224.402-.124.662.292.76-1.275.374-1.63-.402-.283-.62-1.779-.9-1.78-.332 0 .565-.545.17-.886-.64-.292-.695-.331-.72-.187-.12.122.51.065.688-.172.542-.2-.123-.355-.008-.355.26 0 .265.144.57.32.678.176.11.318.442.316.74-.004.433-.061.452-.285.098-.22-.348-.327-.297-.496.237-.119.374-.107.861.026 1.083.194.321.144.323-.249.006-.27-.219-.574-.314-.677-.211-.102.102-.161-.64-.13-1.652.049-1.613-.023-1.85-.585-1.939-.882-.139-1.808.181-1.582.547.103.166.337.21.52.096.358-.22.89.417.898 1.076.003.22-.148.4-.334.4-.187 0-.25-.144-.142-.32.11-.176.13-.32.046-.32s-.402-.096-.707-.213c-.453-.174-.526-.068-.4.587.1.528.008.8-.273.8-.234 0-.426-.208-.426-.462 0-.278-.19-.388-.48-.276-.297.114-.48 0-.48-.305 0-.292.151-.396.375-.258.255.158.306.054.16-.327-.118-.307-.219-.727-.224-.932-.005-.206-.158-.12-.34.193-.414.71-.932.432-.77-.414.079-.405-.051-.633-.36-.633-.348 0-.423.191-.268.68.133.418.094.604-.102.483-.42-.259-.733 1.782-.337 2.197.196.206.233.132.104-.208-.11-.29-.047-.623.14-.739.464-.286.54.909.166 2.627-.085.396-.019.72.148.72.167 0 .35-.324.406-.72.131-.922.722-.815.807.147.06.686.047.682-.208-.067-.261-.766-.274-.756-.305.24-.022.725.114 1.04.448 1.04.264 0 .48.114.48.254s.468.293 1.04.339c.572.046 1.517.13 2.1.188.736.072 1.014-.016.91-.288-.215-.56.286-1.306.57-.847.12.194.03.358-.2.364-.256.006-.198.138.148.34.41.239.828.2 1.517-.144.909-.454.936-.447.618.147-.252.47-.212.743.162 1.117.737.738.635 1.73-.179 1.73-.493 0-.62.14-.472.525.168.44.121.46-.286.12-.41-.34-.488-.298-.488.257 0 .83-.51 1.178-.762.52-.123-.321-.06-.416.177-.269.373.231.296-.298-.238-1.633-.23-.573-.199-.593.29-.195.475.386.523.38.359-.048-.104-.27-.013-.601.202-.734.241-.15.31-.109.177.105-.118.191-.1.42.042.507.142.087.284-.16.316-.55.042-.503-.128-.724-.579-.758-.35-.027-.563.072-.472.219.09.147-.05.35-.313.45-.263.101-.478.066-.478-.078 0-.143-.432-.273-.96-.288-.93-.027-.961.019-.986 1.471-.014.824-.103 1.303-.198 1.063-.147-.369-.217-.369-.45 0-.21.33-.28.28-.286-.204-.008-.531-.063-.558-.32-.16-.236.365-.312.233-.316-.55-.004-.837-.106-.99-.548-.821-.34.13-.4.256-.16.336.552.184.473 1.035-.096 1.035-.264 0-.502.18-.53.4l-.085.72c-.067.569-1.036 1.763-1.254 1.544-.116-.116-.211.02-.211.3 0 .52-1.17 1.093-1.518.745-.104-.104.042-.19.325-.19.283 0 .593-.126.69-.282.095-.155-.292-.236-.862-.18a44.61 44.61 0 0 1-1.435.122c-.22.012-.4.32-.4.687 0 .39-.166.612-.398.535-.218-.073-.601.072-.852.322-.368.368-.375.504-.039.712.233.144.416.841.416 1.588 0 .993.11 1.29.436 1.164.24-.092.437-.004.437.196s.073.29.163.2c.09-.09-.054-.78-.32-1.533-.609-1.726-.61-2.25-.003-2.25.267 0 .48-.285.48-.64 0-.367.213-.64.499-.64.319 0 .409.144.249.4-.43.688-.39 1.2.094 1.2.256 0 .443.18.414.4-.028.22-.033.904-.009 1.52.033.848.118 1.004.353.64.276-.427.315-.427.353 0 .024.264.028.583.01.709-.09.6.632 1.867.951 1.67.248-.153.224-.304-.08-.5zm-1.128-3.4c0-.653.159-1.04.427-1.04.235 0 .427.153.427.34 0 .186-.18.247-.4.136-.22-.112-.121.024.22.3.517.42.535.504.107.504-.283 0-.574.18-.647.4-.074.22-.134-.068-.134-.64zm10.808-1.117c-.125-.335-.363-.635-.53-.666-.168-.031-.304-.434-.304-.896 0-.485-.15-.782-.355-.703-.217.083-.342-.244-.32-.84.03-.871.675-1.27.675-.418 0 .19.315.62.7.954.385.334.745.81.8 1.059.055.249.273.64.486.869.212.23.314.605.226.834-.24.626-1.121.503-1.378-.193zm.302-.998c-.381-1.004-.976-1.117-.976-.186 0 .363.145.57.322.46.177-.11.41.032.52.315.108.283.255.456.326.385.071-.072-.015-.51-.192-.974zm-3.894.505c-.023-.541-.092-.658-.183-.31-.16.609-.901.755-1.22.24-.108-.176-.054-.32.12-.32.175 0 .406-.28.515-.623.237-.744 1.126-.528 1.126.274 0 .298.153.695.341.883.242.242.195.397-.16.534-.375.144-.51-.027-.539-.678zm5.453.49c-.203-.662-.179-1.2.053-1.2.16 0 .292.288.292.64 0 .515-.24.904-.345.56zm-12.775-.56c0-.176.135-.32.3-.32.166 0 .39.144.5.32.108.176-.027.32-.302.32-.274 0-.498-.144-.498-.32zm8.16-1.6c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm4.01.1c-.006-.21.12-.463.281-.562.16-.1.23-.648.152-1.22-.102-.757-.056-.903.17-.54.17.273.275.705.235.96-.103.65-.827 1.824-.839 1.361zm-7.58-1.542c-.204-.44-.24-.718-.082-.62.422.26.997 1.423.703 1.42-.138 0-.418-.362-.622-.8zm6.45.482c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm.546-2.485c-.038-.461-.248-.949-.465-1.083-.315-.195-.314-.327.002-.642.316-.317.397-.316.397.005 0 .221.12.328.268.237.446-.276 1.615.736 1.568 1.358-.058.763-.876.76-.876-.004 0-.322-.154-.586-.342-.586-.19 0-.255.27-.147.613.107.337.076.687-.07.777-.146.09-.296-.214-.335-.675zm5.694-.181c0-.235.213-.427.474-.427.36 0 .39.104.121.427-.195.234-.408.426-.475.426-.066 0-.12-.192-.12-.426zm-3.547-.774a35.1 35.1 0 0 0-.169-1.106c-.138-.84-.112-.856.826-.529.535.187.97.568.97.85 0 .389.09.424.37.143.28-.28.261-.503-.08-.915-.417-.505-.394-.512.311-.094.598.354.793.365.908.05.08-.222.293-.311.474-.2.18.112.445.014.588-.217.205-.333.358-.34.73-.03.408.339.38.49-.208 1.152-.53.595-.807.692-1.267.446-.425-.227-.803-.175-1.357.188-.734.48-.791.463-1.276-.377l-.507-.88.183.88c.105.503.043.88-.143.88-.18 0-.338-.109-.353-.24zm4.187-1.04c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm1.428.082c.05-.309-.081-.778-.293-1.042-.493-.616-.563-1.92-.102-1.92.194 0 .258.095.143.21-.367.367.422 1.01 1.04.85.325-.086.695.012.821.217.164.265-.068.325-.806.21-.773-.123-.945-.072-.674.198.436.436.477 1.407.07 1.658-.16.1-.25-.072-.2-.381zm-7.208-.439c-.274-.511-.271-.646.012-.552.207.07.352.25.324.402-.028.151.141.398.376.547.303.192.314.272.039.275-.214.003-.552-.3-.751-.672zm8.365-.15c.015-.372.091-.448.193-.193.093.231.081.507-.025.614-.107.106-.182-.083-.168-.42zm-14.252-.75a.348.348 0 0 1 .108-.479c.16-.099.374.035.475.298.199.519-.282.667-.583.18zm7.364-.194c-.417-.315-.73-.365-.944-.15-.465.465-.833.395-.833-.159 0-.266.284-.48.64-.48.352 0 .64-.144.64-.32 0-.176-.15-.32-.333-.32-.197 0-.17-.173.066-.426.219-.235.59-.427.823-.427.292 0 .322.103.094.33-.432.433-.426 1.483.008 1.483.187 0 .251-.142.144-.316-.117-.19.03-.23.364-.101.315.12.4.268.195.337-.201.067-.286.328-.19.581.219.57.114.564-.675-.032zm-9.112-.052c-.014-.211-.387-.774-.829-1.25-.441-.477-.74-.93-.664-1.006.238-.238 1.468.265 1.468.6 0 .174-.18.212-.4.083-.22-.129-.134.07.192.443.326.372.518.865.426 1.095-.115.286-.176.297-.193.035zm.819-.577c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm9.582-.365c-.11-.29-.132-.595-.048-.68.259-.258 1.142.202 1.142.595 0 .263-.14.253-.488-.036-.407-.338-.454-.318-.286.121.111.289.13.525.042.525s-.25-.236-.362-.525zm-5.783-.353c.06-.309.119-.77.132-1.026.019-.36.11-.378.409-.08.673.674.981.415.781-.656-.17-.912-.142-.971.232-.485.234.306.499.482.589.393.089-.09.363.092.608.405.404.515.394.527-.11.131-.47-.368-.578-.368-.69 0-.538 1.763-.49 1.711-.993 1.045-.407-.538-.462-.546-.471-.068-.006.298-.142.623-.302.722-.161.1-.244-.072-.185-.381zm-4.19-.446c-.14-.224-.094-.29.113-.161.19.117.411-.04.492-.35.132-.505.151-.507.184-.023.047.678-.48 1.035-.79.534zm1.253 15.583c.675.077.863-.012.734-.347-.095-.248-.013-.55.183-.67.223-.139.265-.074.112.173-.176.286-.059.278.434-.03.372-.232.53-.471.352-.53-.18-.06-.244-.24-.145-.402.1-.16-.12-.293-.488-.293s-.751-.216-.853-.48c-.294-.768-.66-.558-.872.502-.127.636-.327.9-.57.75-.247-.153-.286-.09-.114.187.204.331.34.306.65-.118.362-.495.404-.49.549.065.129.492.003.583-.694.502-.662-.078-.861.044-.9.55-.034.465.06.563.334.345.21-.169.79-.26 1.288-.204zm102.2-.115c-.424-.086-.519-.296-.364-.81.338-1.12.577-1.203 2.132-.736 1.247.376 1.45.377 1.307.005-.093-.241-.282-.368-.421-.283-.14.086-.34-.068-.445-.342-.111-.29-.48-.457-.884-.398-.384.056-.76-.1-.845-.35-.1-.294.009-.389.312-.273.34.13.465-.067.465-.74 0-.66-.104-.832-.371-.61-.204.17-.497.201-.651.07-.154-.13-.12-.02.077.244.27.362.247.58-.09.892-.37.34-.448.322-.448-.101 0-.372-.244-.486-.88-.413-.734.084-.863.234-.773.901.06.44.228.926.375 1.08.147.153.191.477.098.72-.093.242-.026.44.148.44s.392.289.485.642c.123.472.323.58.757.41.558-.22.56-.239.016-.348zm-1.186-2.285c0-.165.144-.39.32-.499.176-.108.32.027.32.301 0 .275-.144.5-.32.5-.176 0-.32-.136-.32-.302zm-155.647 1.668c-.325-.325-.594.164-.327.596.202.327.277.327.385 0 .075-.222.048-.49-.058-.597zm35.293.58c.294-.186.36-.484.19-.874-.243-.563-.263-.56-.403.047-.081.352-.31.746-.51.875-.2.13-.22.236-.044.236s.521-.128.767-.283zm26.355-.136c.22.135.274.023.148-.304-.166-.433-.072-.47.564-.229.53.202.812.173.92-.094.086-.21.167-.132.181.176.03.673.45.725.954.118.492-.593-.171-.838-2.269-.838-1.335 0-1.575.086-1.414.507.107.278.206.674.22.88.017.255.076.246.187-.029.09-.22.318-.305.51-.187zm107.759-.143c0-.378-.091-.39-.48-.068-.264.22-.48.43-.48.466 0 .037.216.068.48.068s.48-.21.48-.466zm-100.48-.068c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm69.658-.7c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-94.615-1.37c-.498-1.309-.689-.83-.258.648.202.694.42 1.035.484.757.064-.278-.038-.91-.226-1.404zm-41.39 1.216c-.119-.117.037-.513.346-.88.559-.664.559-.664-.152-.063-.629.532-.724 1.157-.175 1.157.107 0 .098-.096-.02-.214zm55.728-.586c-.386-.847-.736-1.006-1.061-.48-.11.176.01.32.266.32s.548.216.65.48c.1.264.257.48.347.48.09 0-.001-.36-.202-.8zm-20.65-.386c.087-.456-.015-.734-.27-.734-.225 0-.673-.085-.995-.19-.44-.142-.477-.112-.152.12.29.207.32.38.094.52-.518.32-.076 1.113.593 1.062.34-.025.648-.353.73-.778zm4.788-.334c-.63-.482-1.04-.514-1.04-.08 0 .176.145.32.32.32.177 0 .32.222.32.493 0 .406.081.42.461.08.4-.358.391-.466-.061-.813zm10.156.32c-.004-.412-.074-.451-.266-.149-.15.236-.522.325-.875.21-.503-.165-.528-.139-.134.144.717.517 1.28.426 1.275-.205zm-12.295-.046c-.097-.158.038-.37.301-.47.263-.101.459-.512.435-.914-.041-.69-.052-.687-.2.07-.145.744-.174.755-.402.16-.225-.586-.265-.593-.474-.08-.23.564-.023 1.52.328 1.52.104 0 .11-.129.012-.286zm113.415.046c-.003-.132-.145-.456-.315-.72-.251-.388-.312-.342-.316.24-.003.396.14.72.316.72s.317-.108.315-.24zm-108.475-1.024c0-.323-.216-.67-.48-.771-.298-.115-.48 0-.48.304 0 .306.15.4.4.249.319-.192.32-.141.003.25-.219.27-.307.582-.196.693.324.324.753-.088.753-.725zm162.778.244c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-200.538-.1c-.33-.397-.295-.484.2-.502.33-.013.033-.23-.66-.484-.896-.328-1.359-.363-1.6-.119-.242.244-.174.28.233.125.315-.12.55-.093.522.061-.12.657.057.884.345.44.268-.416.31-.409.315.053.004.446.327.754.924.881.065.014-.06-.19-.28-.455zm93.978-.22c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm50.977-.02c-.004-.562-.07-.618-.3-.255-.161.256-.222.58-.135.72.277.45.44.276.435-.464zm-105.092-.487c-.553-.528-.561-.52-.195.195.21.411.471.66.578.552.108-.107-.065-.443-.383-.747zm-5.303.426c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-37.28-.499c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm39.2-.022c0-.377-.927-1.405-1.096-1.216-.058.065-.205.443-.326.839-.19.617-.104.72.6.72.452 0 .822-.155.822-.343zm71.61-.422c-.04-.477-.22-.705-.477-.606-.753.29-.499 1.027.463 1.345.042.014.048-.318.013-.739zm88.825-.036c-.2-.523-.755-.66-.755-.186 0 .243.224.408.87.641.038.014-.013-.19-.115-.455zm-206.297-.54c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm5.862.58c0-.067-.252-.319-.56-.56-.508-.399-.52-.387-.121.12.418.533.68.703.68.44zm4.988-1.078c-.35-.35-.59.206-.339.785.238.548.256.547.388-.012.077-.321.054-.67-.05-.773zm107.652.878a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm6.027.04c.235-.15.379-.4.32-.555-.06-.157.214-.33.607-.386.539-.077.699-.294.65-.88-.064-.781-.276-.96-.668-.568-.116.116-.037.44.177.72.213.28.031.198-.403-.182-.944-.827-1.406-.486-1.478 1.091-.049 1.085.083 1.211.795.76zm33.455-.216c.109-.285.055-.414-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm3.078.035c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm1.171-.899c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm-42.219.073c.027-.355-.093-.559-.266-.452-.417.258-1.314-.504-1.137-.965.077-.2-.205-.39-.625-.425-.492-.04-.764.106-.764.413 0 .578.523.632.748.076.147-.366.348.85.241 1.464-.025.146.234.176.576.067.341-.108.713-.047.826.136.29.467.346.423.401-.314zm45.528.148c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm-110.72.054c0-.07-.224-.212-.497-.317-.285-.11-.413-.055-.301.126.188.304.798.45.798.19zm14.374-.435c-.016-.356-.085-.41-.19-.146-.128.317-.27.327-.616.04-.353-.293-.448-.262-.448.147 0 .306.262.52.64.52.405 0 .63-.206.614-.56zm28.891-.91c-.202-.363-.368-.417-.52-.17-.123.198-.07.36.116.36s.355.324.376.72c.027.526.076.572.181.17.08-.302.01-.789-.153-1.08zm108.383.75c.032.737.483.963.823.414.104-.168.4-.225.659-.125.258.099.47.004.47-.212 0-.245-.3-.334-.8-.238-.44.084-.8.028-.8-.123 0-.152.144-.276.32-.276.176 0 .33-.396.345-.88.014-.484.096-.704.183-.49.16.397.733-.03 1.65-1.232.323-.425.31-.557-.074-.704-.318-.122-.414-.03-.294.283.098.255.034.463-.142.463-.429 0-.753-.894-.403-1.11.35-.217 1.38.154 1.69.607.129.189.237.667.24 1.063.003.396.149.72.325.72.176 0 .426 0 .556-.003.13 0 .238-.222.24-.49.002-.269.218-.621.48-.784.381-.236.397-.377.08-.694-.316-.316-.401-.27-.419.227-.022.608-.03.607-.297-.016-.414-.963-.372-1.208.172-1 .34.131.464.022.4-.353a.57.57 0 0 1 .466-.659c.341-.07.518.05.453.309-.059.233-.046.314.028.181s.292-.145.483-.027c.192.118.118-.113-.163-.515-.281-.4-.444-.906-.36-1.121.266-.697-.64-1.1-2.047-.912-.744.1-1.353.275-1.353.39 0 .114-.671.168-1.492.12-.888-.052-1.893.117-2.48.415-.543.277-1.251.557-1.573.624a14.14 14.14 0 0 0-1.168.306c-.678.215-2.048-1.3-1.788-1.976.089-.232.045-.422-.097-.422-.534 0-1.115-3.45-.767-4.55l.333-1.05.001 1.12c0 .616.138 1.47.304 1.897.3.77.305.77.485.079.1-.383.052-.616-.108-.518-.16.1-.29-.053-.29-.338 0-.284.13-.438.287-.34.157.097.381-.072.498-.375.117-.304.06-.603-.126-.665-.187-.062-.339-.317-.339-.566 0-.25-.216-.454-.48-.454s-.48-.16-.48-.357c0-.196.279-.284.62-.195.632.165 1.189-.56.674-.88-.154-.094-.328-.025-.387.154-.06.178-.285.042-.501-.304-.29-.463-.298-.687-.03-.852.24-.148.274-.08.101.2-.184.297-.12.369.214.24.275-.105.643.087.874.458.22.351.481.557.58.458.325-.324.393-2.442.08-2.442-.168 0-.305.162-.305.36 0 .248-.148.236-.48-.04-.377-.312-.48-.314-.48-.005 0 .217-.214.312-.476.211-.262-.1-.442-.06-.4.091.118.424-1.406 1.635-1.772 1.409-.213-.131-.238.12-.073.727.344 1.268.367 1.874.075 1.96-.547.163-1.104.908-.96 1.284.084.22.261.333.393.252.132-.082.395.194.586.612.297.651.234.844-.433 1.346-.846.635-.996 1.222-.406 1.587.25.154.309.059.177-.285-.139-.362-.06-.463.264-.339.254.098.382.306.284.464-.097.157.07.286.372.286.495 0 .5-.054.06-.56-.687-.788-.396-1.46.44-1.013.353.19.562.542.468.788-.094.245-.03.531.14.637.171.106.226.33.123.498-.104.169.002.267.234.218.254-.052.465.268.526.798.056.487.23.806.387.709.488-.302 1.591.605 1.591 1.309 0 .908.327 1.169.885.706.372-.31.555-.262.92.239.284.387.331.666.126.734-.47.157-.412.736.07.674.786-.103 1.2.029 1.2.383 0 .25-.121.259-.4.027-.3-.249-.412-.138-.447.44-.028.47.129.773.4.773.245 0 .46.252.478.56.021.374.117.294.288-.24.246-.767.258-.77.288-.08zm4.192-3.28c0-.264.056-.48.125-.48.07 0 .209.216.31.48.102.264.045.48-.126.48-.17 0-.31-.216-.31-.48zm-2.92-1.76c-.08-.637-.135-.808-.412-1.28-.23-.39-.202-.405.149-.08.498.463 1.066.54.8.108-.1-.16.072-.243.381-.184.309.06.626.118.706.132.079.013-.018.186-.215.383-.198.198-.283.558-.19.8.11.289-.064.441-.505.441-.371 0-.692-.144-.714-.32zm-4.92-.32c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm8.946-1.3c-.116-.189-.142-.41-.058-.495.084-.084.238.07.342.342.216.563.032.663-.284.152zm-.006 7.03c-.083-.135-.005-.336.174-.446.18-.111.326-.345.326-.521 0-.176-.132-.239-.293-.14-.161.1-.373 0-.472-.22-.098-.222-.166-.115-.15.237.05 1.12-.02 1.146-1.325.48-1.013-.517-1.28-.558-1.28-.198 0 .26.513.58 1.2.746 1.485.36 2.016.378 1.82.061zm1.255-.13c.102-.264.045-.48-.125-.48-.17 0-.31.216-.31.48s.056.48.125.48c.07 0 .21-.216.31-.48zm-140.702-.306c0-.256-.123-.39-.272-.297-.15.092-.19.302-.088.465.259.42.36.372.36-.168zm142.187.356c0-.06-.278-.362-.618-.67-.593-.536-.61-.531-.443.11.096.37.374.67.618.67.243 0 .443-.05.443-.11zm-169.92-.53a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm10.24-.14c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm72.64-.48c0-.128-.192-.233-.427-.233s-.427.178-.427.396c0 .218.192.323.427.233s.427-.269.427-.397zm74.752-1.167c.206-1.524-.32-.874-.67.827-.171.835-.137 1.032.135.773.201-.191.442-.911.535-1.6zm-97.792 1.147a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm8.232-.32c-.05-.645-.552-.925-.552-.307 0 .192-.19.158-.448-.08-.617-.568-.36-.727 1.025-.634 1.073.072 1.13.037.608-.376-.317-.25-.88-.375-1.25-.278-.424.11-.599.052-.469-.158.116-.188-.037-.315-.35-.29-.306.023-.65.331-.765.683-.183.564-.213.545-.25-.16-.035-.676-.09-.717-.352-.267-.452.776-.034 1.558 1.098 2.05 1.379.6 1.76.56 1.705-.183zm3.928-.805c0-.371-.64.208-.998.903l-.361.702.679-.706c.374-.389.68-.793.68-.9zm86.72 1.125c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-132.8-.64c-.189-.352-.41-.64-.492-.64-.082 0-.148.288-.148.64 0 .362.213.64.49.64.393 0 .423-.129.15-.64zm49.28.16c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm81.384-.565c-.222-.366-.744.053-.744.597 0 .389.08.4.446.06.245-.226.38-.522.298-.657zm8.856.725c.264-.17.372-.312.24-.315-.132-.003-.29.031-.351.075s-.327-.098-.59-.317c-.595-.494-1.023-.137-.538.448.422.507.599.523 1.239.11zM75.05 385.28c.137 0 .331.258.43.572.1.314.449.571.774.571.411 0 .547-.175.443-.571-.191-.733.428-.75.708-.02.182.471.255.483.51.08.26-.413.3-.412.312.008.013.419.052.417.303-.012.405-.69.242-2.686-.27-3.303-.236-.284-.347-.73-.247-.99.1-.261.053-.554-.104-.65-.156-.097-.225-.815-.152-1.596.074-.78.016-1.491-.127-1.58-.144-.088-.26.265-.26.785 0 1.144-.354 1.58-.76.937-.26-.411-.298-.41-.303.011-.003.266.13.95.293 1.52.35 1.222.187 1.304-.636.318-.35-.42-.605-.545-.61-.3-.007.23-.171.32-.367.199-.206-.128-.283-.665-.183-1.28.135-.83.073-1.023-.283-.886-.25.096-.381.293-.291.439.09.145 0 .365-.198.487-.199.123-.469.049-.6-.165-.162-.26-.305-.143-.434.353-.127.483-.029.833.282 1.006.262.147.407.378.323.514-.084.136.055.247.309.247.33 0 .367-.112.13-.398-.228-.275-.226-.463.005-.606.184-.114.335.017.335.291 0 .275.18.504.4.51.22.004.112.17-.24.366-.932.52-.93.519-.445 1.117.295.363.31.468.045.309-.22-.132-.4-.103-.4.064 0 .168.216.388.48.49.459.175.637-.291.504-1.317-.028-.22.086-.4.254-.4s.266.252.218.56c-.048.308.032.882.179 1.275.228.613.165.704-.445.64-.39-.041-.815-.219-.945-.395-.131-.179-.237-.065-.24.26-.003.318-.149.49-.325.38-.494-.305-.379.084.24.806l.559.653.29-.65c.159-.356.402-.649.539-.649zm2.853 0c-.254-.156-.39-.357-.302-.445.088-.088.368-.032.622.125.253.157.389.358.301.446-.088.088-.368.031-.621-.126zm-.52-1.344c-.367-.594-.45-3.136-.103-3.136.166 0 .303.351.303.78 0 .428.138 1.143.307 1.588.325.853-.078 1.462-.507.768zm-1.72-1.216c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm-41.727 2.548c.87-.331.993-1.001.29-1.584-.74-.615-1.544-.139-1.363.808.085.442.027.882-.129.978-.155.096-.181.338-.058.537.16.26.262.248.359-.043.074-.223.48-.536.901-.696zm65.549.623c-.096-.154-.517-.252-.935-.218-.985.082-.792.394.28.453.456.026.75-.08.655-.235zm31.858.224c0-.07-.224-.212-.497-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm87.36-.195a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm11.017-.676c-.323-.522-.777-.291-.777.396 0 .565.08.612.476.283.262-.217.398-.523.301-.679zm-199.817.162c0-.069-.216-.126-.48-.126s-.48.14-.48.31c0 .17.216.227.48.126s.48-.24.48-.31zm77.12.194c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm33.92 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-6.725-1.04c.003-.132-.14-.24-.315-.24-.176 0-.318.324-.316.72.004.583.065.629.316.24.17-.264.312-.588.315-.72zm91.43.838c-.112-.11-.067-.457.1-.768.254-.474.195-.538-.358-.394-.504.132-.56.238-.235.444.235.149.311.273.169.275-.296.005.033.645.33.645.108 0 .104-.09-.007-.202zm1.05-.838c-.004-.562-.07-.618-.3-.255-.161.256-.222.58-.135.72.277.45.44.276.435-.465zm-15.548.134c.09-.147-.039-.267-.287-.267-.249 0-.378.12-.288.267.091.146.22.266.288.266.067 0 .196-.12.287-.266zm2.012-1.039c.046-.61.021-.64-.117-.135-.097.352-.34.76-.54.905-.24.174-.2.22.118.135.264-.072.506-.478.539-.905zm4.58.665c-.263-.17-.623-.31-.8-.31-.175 0-.103.14.16.31.265.171.625.31.8.31.177 0 .105-.139-.16-.31zm4.16.02c0-.166-.143-.39-.32-.5-.175-.108-.32.027-.32.301 0 .275.145.5.32.5.177 0 .32-.136.32-.302zm-120.185-1.981c-.262-.424-.785-.332-.694.121.044.22-.172.38-.48.356-.308-.024-.56.084-.56.24 0 .156.18.296.4.31.317.02.317.058-.002.187-.222.09-.311.31-.2.49.116.187.521-.046.955-.55.414-.482.675-1.001.58-1.154zm-70.981.448c-.325-.325-.594.164-.327.596.202.327.277.327.385 0 .075-.222.048-.49-.058-.597zm197.713.575c.101-.163.01-.405-.202-.536-.213-.131-.444-.069-.513.14-.07.208-.258.297-.419.197-.16-.099-.292-.028-.292.158 0 .418 1.172.452 1.426.041zm-155.288-.731c-.23-.23-.378-.248-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm8.811.31c-.078-.22-.02-.64.13-.932.221-.432.127-.515-.506-.446-.428.047-1.182-.18-1.676-.506-1.229-.81-1.566-.748-1.518.283.04.855.09.879 1.77.816.952-.035 1.55.013 1.33.107-.22.094-.4.311-.4.483s.145.223.32.114c.177-.108.32-.045.32.141 0 .187.085.34.187.34.103 0 .122-.18.043-.4zm5.21.258c0-.077-.143-.23-.32-.339-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm-52.886-.372c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-6.092-1.96c-.08-.312-.153-.135-.16.393-.006.528.06.783.148.566.088-.216.093-.648.012-.96zm74.659.641c0-.245.12-.371.266-.28.147.09.267-.045.267-.302 0-.256-.071-.395-.157-.308-.087.086-.345.003-.573-.188-.229-.19-.566-.252-.75-.138-.343.212-.459 1.216-.173 1.502.338.338 1.12.139 1.12-.286zm-67.84-.229c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm65.704-.268c-.102-.166.012-.43.255-.586.374-.242.374-.327 0-.569-.243-.156-.34-.448-.217-.648.13-.21.047-.327-.199-.276-.276.058-.398-.19-.352-.712.04-.44-.009-.62-.106-.4-.334.747-1.066.404-1.367-.64-.24-.831-.307-.892-.33-.3-.016.406-.172.65-.348.54-.176-.108-.32-.045-.32.141v.58c0 .131.144.257.32.28.735.091.766.179.16.44-.611.262-.607.275.08.297.396.012.72.175.72.361 0 .187-.144.25-.32.141-.176-.108-.32-.068-.32.09s.36.452.8.652c.44.2.8.488.8.638 0 .15.21.274.465.274.257 0 .382-.136.28-.303zm-1.526-1.737c-.27-.703-.072-.8.61-.302.507.37.517.45.083.617-.294.113-.578-.016-.693-.315zm116.302 1.506c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-183.72-.455c.341-.211.346-.315.023-.515a.943.943 0 0 0-1.367.46c-.17.441.662.476 1.343.055zm3.545-.212c-.197-.367-.435-.59-.531-.494-.264.264.159 1.161.547 1.161.236 0 .232-.204-.016-.667zm181.353-.353c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-183.258.06c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm42.393-.925c.074-.384-.002-.608-.17-.504-.167.103-.303.49-.303.862 0 .817.289.598.473-.358zm27.086.2c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-69.266-.38c0-.257-.122-.39-.272-.298-.15.092-.19.302-.088.465.259.42.36.372.36-.168zm3.019-1.043c-.307-.528-.334-.52-.343.095-.01.74.396 1.318.566.805.06-.18-.04-.585-.223-.9zm192.608.835c0-.136-.279-.226-.618-.2-.34.025-.562.136-.494.246.177.287 1.112.248 1.112-.046zm8.832-.479c-.114-.296-.28-.467-.368-.38-.088.089-.066.404.048.7.113.297.279.468.367.38.088-.088.066-.403-.047-.7zm-202.686-.363c-.338-.12-.338-.244 0-.676.37-.472.354-.482-.146-.09-.475.373-.564.373-.586 0-.02-.35-.06-.353-.193-.018-.172.43.889 1.43 1.178 1.11.088-.098-.025-.245-.253-.326zm40.868-.485c-.014-.396-.1-.534-.19-.306-.123.303-.279.32-.587.064-.308-.256-.484-.238-.66.067-.132.228-.128.314.01.19.137-.123.458-.015.714.24.629.63.743.589.714-.255zm147.764.02c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-139.296-.961c-.158-.256-.305-.178-.458.242-.294.812.02 1.332.397.658.161-.288.189-.693.06-.9zm11.188.847c-.104-.271-.258-.425-.342-.34-.084.083-.058.305.058.493.316.51.5.411.284-.153zm-58.641-1.186c.13-.484.114-.88-.034-.88-.443 0-1.275.97-1.275 1.487 0 .82 1.058.33 1.309-.607zm193.57.56c0-.264-.139-.48-.31-.48-.17 0-.227.216-.125.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm-196.48-.3c0-.078-.143-.23-.32-.34-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm.835-.819c-.04-1.12-.514-1.318-.514-.214 0 .622.228 1.173.487 1.173.033 0 .045-.431.027-.959zm186.192.661c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm12.678-.11c-.04-.382-.479-.308-.616.104-.07.212.044.327.256.256.21-.07.373-.232.36-.36zm-201.53-1.087c-.26-.68-1.154-.368-1.212.423-.044.601.04.647.668.36.43-.196.649-.51.544-.783zm190.862-.836c-.2-.599-.687-.198-.782.643-.096.852-.08.863.387.261.268-.345.446-.751.395-.904zm-189.676.374c0-.176-.144-.231-.32-.123-.176.11-.32.342-.32.518s.144.231.32.122c.176-.108.32-.341.32-.517zm3.248.197c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm53.072-.32c0-.264-.153-.48-.34-.48-.186 0-.257.132-.157.293.1.161 0 .366-.222.455-.242.098-.18.172.159.187.308.014.56-.19.56-.455zm1.6.17c0-.17-.216-.227-.48-.125-.264.101-.48.24-.48.31 0 .069.216.125.48.125s.48-.14.48-.31zm138.24-.17c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm-1.487-.026c.267-.103.41-.387.315-.632-.145-.38-.237-.38-.62.004-.722.722-.599.975.305.628zm82.927-.134c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-225.555-.64c.26 0 .392-.13.293-.29-.2-.323-1.458-.086-1.458.274 0 .418.464.703.58.356.062-.187.325-.34.585-.34zm133.125-.56c-.3-.973-.39-1.064-.473-.48-.056.396-.316.72-.579.72-.262 0-.386.147-.275.326.11.178.306.26.434.18.128-.079.442-.011.698.15.255.162.487.297.515.3.027.002-.117-.536-.32-1.196zm-137.024-.058c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm-51.986-.483c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm7.151-.328c.1-.259.043-.555-.125-.66-.169-.103-.306.108-.306.47 0 .773.177.851.431.19zm51.519-.344c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm133.17-.467c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm92.96 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-2.56-.514c0-.069-.216-.126-.48-.126s-.48.14-.48.31c0 .17.216.227.48.126s.48-.24.48-.31zm-220.16-.25c0-.228-.228-1.12-.506-1.985-.293-.912-.595-3.438-.72-6.025-.145-3.006-.339-4.495-.597-4.58-.494-.164-1.865 2.007-2.175 3.443-.328 1.52-1.014 2.79-1.708 3.162-.319.17-.775.931-1.014 1.69-.239.759-.625 1.607-.857 1.885-1.33 1.587.829 2.822 4.935 2.822 1.945 0 2.642-.109 2.642-.413zm138.733.103c.364-.59-.119-.719-.661-.177-.447.448-.452.518-.034.518.266 0 .579-.153.695-.34zm-148.653-.225c0-.135.396-.507.88-.826.484-.319.628-.5.32-.404-.383.12-.564.003-.572-.374-.009-.43-.1-.391-.416.18-.223.402-.506.63-.63.507-.122-.123-.222.089-.222.47s.144.693.32.693c.176 0 .32-.11.32-.246zm138.56-.074a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm.856.11c-.116-.116-.032-.44.186-.72.351-.45.333-.459-.159-.073-.5.392-.507 1.003-.011 1.003.107 0 .1-.094-.016-.21zm92.104-.11c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-280.229-.682c.057-.293-.166-.584-.516-.676-.482-.126-.615.007-.615.615 0 .883.963.936 1.131.061zm282.949.042c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm-284.48-.499c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.499zm191.85-.125a.4.4 0 0 0-.547-.14c-.215.132-.182.297.093.467.514.317.747.149.453-.327zm41.988.224c.014-.22.172-.868.351-1.44.18-.572.3-1.056.268-1.076-.331-.21-3.036-.123-2.902.095.099.159.035.464-.141.676-.22.266-.173.588.15 1.026.456.619.467.614.33-.16-.209-1.181.46-1.659 1.365-.976.55.415.602.549.214.549-.282 0-.513-.12-.513-.267 0-.147-.17-.267-.376-.267-.207 0-.038.36.376.8.413.44.645.8.516.8s-.145.144-.036.32c.262.425.368.404.398-.08zm1.362.08c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm-235.84-.62c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.301 0 .275.144.5.32.5.176 0 .32-.136.32-.302zm4.32-.02c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm46.566-.8c-.063 0 .054-.315.26-.7.245-.458.264-.77.054-.9-.176-.108-.338-.045-.36.141-.022.187-.058.477-.08.646-.022.168-.328.528-.68.8-.52.402-.534.458-.077.299.44-.154.522-.066.376.399-.164.52-.136.514.217-.045.223-.352.353-.64.29-.64zm173.914.16c0-.234-.216-.485-.48-.557-.427-.117-.427-.093 0 .213.426.306.426.383 0 .689-.427.306-.427.33 0 .213.264-.072.48-.323.48-.558zm4.32.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-227.619-1.218c-.165-1.23-.701-1.186-.701.058 0 .74.127 1.03.406.923.227-.087.357-.519.295-.98zm281.019.706c.066-.056.17-.525.23-1.042.103-.885.034-.948-1.16-1.061-1.05-.1-1.27-.023-1.27.447 0 .313-.18.57-.4.573-.27.003-.288.082-.057.24.189.13.437.49.553.803.16.437.415.519 1.096.355.488-.117.942-.259 1.008-.315zm-278.12-.384c-.652-.129-.739-1.024-.16-1.647.322-.347.315-.383-.036-.183-.258.147-.556.068-.73-.193-.192-.288-.219-.117-.076.492.18.772.129.899-.294.736-.363-.139-.459-.057-.329.281.101.263.255.407.342.32.087-.088.37.051.626.309.258.257.636.361.842.232.254-.16.194-.271-.185-.347zm3.794-.89c-.107-.278-.205-.674-.217-.88-.012-.205-.146-.086-.297.266-.236.548-.279.56-.298.08-.026-.635-.511-.744-.853-.19-.133.214-.089.283.105.163.183-.113.408.08.5.43.09.351.41.637.71.637.365 0 .48-.167.35-.506zm212.028-.694c-.093-.484-.23-.695-.306-.47-.136.408.108 1.35.35 1.35.068 0 .049-.396-.044-.88zm2.498.08c0-.44-.125-.8-.276-.8-.152 0-.207.36-.123.8.084.44.208.8.276.8.067 0 .123-.36.123-.8zm-213.44.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm191.724-1.2c.044-.738-.043-1.454-.193-1.59-.15-.138-.19-.015-.088.271.103.287.026.681-.17.877-.437.438-.609 1.394-.205 1.145.16-.1.291.068.291.372 0 1.087.288.24.365-1.075zm4.756.861c0-.165-.144-.3-.32-.3-.176 0-.32.224-.32.498 0 .275.144.41.32.301.176-.108.32-.333.32-.499zm28.8.004c0-.146-.288-.244-.64-.217-.643.048-.806.28-.45.636.25.25 1.09-.074 1.09-.419zm51.84.175c0-.264-.136-.48-.302-.48-.403 0-.692.5-.436.755.36.36.738.22.738-.275zm-286.04-.885c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm2.2.211c0-.069-.216-.126-.48-.126s-.48.14-.48.31c0 .17.216.227.48.126s.48-.24.48-.31zm214.69-.766c-.015-.33-.072-.354-.183-.078-.09.221-.28.33-.425.24-.145-.09-.184.138-.088.505.132.507.24.565.445.24.149-.234.262-.643.25-.907zm69.468.092c-.349-.543-.358-.543-.183.015.102.322.196.754.21.96.018.27.069.265.182-.015.087-.213-.008-.645-.209-.96zm-279.86.013c-.286-.21-.723-.303-.97-.208-.787.302-.482.67.521.629.833-.034.896-.094.45-.42zm206.902.215c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm-212.8-.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm210.778-.38c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-208.858.235c0-.247-.953-.446-1.088-.227-.081.132.13.26.47.286.34.026.618 0 .618-.06zm49.908-.32c.213-.257.288-.626.168-.82-.21-.342-1.082.482-1.106 1.045-.017.4.527.27.938-.226zm154.695-.78c-.116-.107-.276-.014-.355.207-.079.221-.297.307-.485.19-.207-.127-.248-.059-.104.174.184.299.341.3.697.004.252-.21.364-.468.247-.575zm74.28.292c-.139-.226-.693-.229-1.443-.008-.088.026.128.163.48.304.705.284 1.223.125.963-.296zm-65.013-.18c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm70.798-.054c.927.284 1.205.25 1.657-.201.423-.423.465-.667.189-1.098-.275-.429-.702-.528-1.89-.442-1.637.12-2.77.792-1.896 1.127.26.1.488.438.509.751.031.488.057.495.176.045.119-.445.308-.473 1.255-.182zm-283.538-.928c-.287-.286-.43-.611-.32-.722.111-.111.37.023.576.298.509.68 1.494 1.026 1.494.525 0-.218-.289-.933-.641-1.59-.352-.658-.54-1.196-.416-1.196.123 0 .063-.161-.134-.359-.198-.197-.283-.557-.19-.8.097-.253-.034-.44-.308-.44-.8 0-.88 1.19-.117 1.758.377.281.515.43.308.331a.492.492 0 0 0-.61.195c-.135.219-.093.289.102.168.183-.113.514.012.735.278.336.406.311.45-.157.27-.33-.127-.672-.032-.84.233-.222.35-.284.318-.288-.153-.004-.496-.087-.53-.484-.2-.637.527-.612 1.01.046.893.29-.051.59.086.667.306.078.223-.113.4-.43.4-.722 0-.208.531.677.7.835.16.984-.241.33-.895zm206.87.835c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-203.38-.734c-.116-.304-.396-.427-.703-.31-.396.152-.457.06-.274-.42.181-.476.148-.53-.147-.237-.508.504-.109 1.5.506 1.265.263-.101.478-.02.478.18 0 .2.075.288.167.195.092-.092.08-.395-.026-.673zm193.14.057c0-.176-.144-.231-.32-.123-.176.11-.32.342-.32.518s.144.231.32.122c.176-.108.32-.341.32-.517zm3.2.197c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm77.553-.644c-.224-.585-.567-.606-1.017-.064-.26.315-.16.427.43.475.563.047.721-.063.587-.411zm2.675.051c-.174-.523-.868-.624-.868-.127 0 .25.22.454.488.454.27 0 .44-.147.38-.327zM44.304 360.64c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm189.48-.405c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-195.331-.438c.073-.223-.257-.348-.855-.323-.972.04-1.177.217-.748.647.33.33 1.463.101 1.603-.324zm2.97.398c0-.07-.223-.212-.496-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm277.176-.671c-.08-.444.05-.53.586-.39.521.136.644.063.505-.3-.194-.507.488-1.394 1.07-1.394.19 0 .344-.23.344-.513 0-.406-.268-.488-1.28-.392-.732.07-1.291-.018-1.306-.206-.014-.18-.098-.149-.186.071-.09.22-.366.4-.615.4-.266 0-.453.32-.453.774 0 1.084.328 1.82.707 1.584.202-.124.236.07.093.52-.168.53-.114.679.206.567.238-.083.387-.408.33-.721zm-81.982-.011c-.223-.269-.488-.405-.59-.303-.102.102.027.32.286.483.677.428.766.376.304-.18zm-196.473.042c0-.07-.224-.212-.497-.317-.285-.11-.413-.055-.301.126.188.304.798.45.798.19zm277.12-.195c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm4.16-.499c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm-283.142-.605c.384-.534-.096-.863-.628-.431-.404.326-.46.328-.268.008.15-.249.095-.374-.139-.32-.21.048-.45-.092-.53-.312-.097-.266.186-.4.84-.4.543 0 .987-.153.987-.34 0-.186-.119-.265-.264-.176-.144.09-.864.199-1.6.242-.877.052-1.336.229-1.336.515 0 .259-.164.343-.4.206-.22-.126-.288-.107-.151.044.388.426 1.217.46 1.008.04-.102-.204.02-.122.27.184.25.305.573.449.715.32.143-.13.17.014.06.319-.153.429-.038.537.51.48.39-.041.806-.211.926-.38zm-4.435-.066c.29-.29-.427-1.105-.78-.887-.44.272-.334 1.097.143 1.097.235 0 .522-.094.637-.21zm280.63-.75c.091-.351.042-.716-.11-.81-.151-.093-.185-.405-.075-.692.144-.377.082-.45-.223-.261-.27.167-.585.041-.874-.348-.443-.598-.46-.597-.911.012-.533.72-.604 1.46-.14 1.46.175 0 .32-.217.32-.48 0-.265.135-.48.301-.48.48 0 1.267 1.309 1.08 1.796-.093.244-.027.443.147.443s.392-.287.484-.64zm2.467.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-282.24-1.28c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm2.395-1.521c-.172-.9-.188-.909-.458-.239-.284.706-.125 1.224.296.964.148-.091.221-.418.162-.725zm-1.965.068c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm5.467-.839c.434-.87.428-.94-.072-.837a.568.568 0 0 0-.451.661c.11.646-.272.71-.878.148-.352-.327-.393-.293-.224.187.114.322.208.713.208.87 0 .583.961-.114 1.418-1.029zm268.983 1.012a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm6.72 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-5.12-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm7.04-.359c0-.565-.08-.613-.477-.284-.482.4-.379.963.175.963.166 0 .302-.305.302-.679zm2.066.061c.237-.382-.365-.762-.792-.498-.358.22-.123.796.326.796.155 0 .365-.134.466-.298zm-278.145-.422c.2-.592-.11-1.54-.438-1.337-.375.232-.367 1.737.01 1.737.161 0 .354-.18.428-.4zm268.719-.4c0-.264-.234-.48-.52-.48-.425 0-.447.087-.12.48.219.264.452.48.519.48.066 0 .12-.216.12-.48zm2.88.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm3.75-.039c.572-.57-.186-1.933-1.009-1.815-.699.1-.755.992-.112 1.774.406.494.66.503 1.122.041zm-7.984-.34c-.198-.594-.886-.692-.886-.127 0 .278.228.506.506.506.279 0 .45-.17.38-.38zm-270.473-.56c-.116-.187-.364-.34-.552-.34-.212 0-.187.183.065.487.439.529.831.41.487-.146zm4.627-.001c0-.342.15-.715.335-.829.233-.144.232-.332-.006-.618-.188-.226-.242-.67-.121-.984.159-.414.107-.504-.185-.323-.235.145-.348.64-.27 1.173.074.507.025.922-.11.922-.134 0-.222.288-.196.64.062.823.552.84.552.019zm215.471-.169c.1-.258.043-.555-.125-.659-.169-.104-.306.107-.306.47 0 .772.177.85.431.189zm-218.518-.286c.772-.565.884-1.386.223-1.64-.592-.227-1.336.606-1.336 1.496 0 .692.309.732 1.113.144zm273.45-.045c-.003-.298-.149-.33-.963-.208-.61.092-.318.6.324.565.354-.02.642-.18.64-.357zm6.203-.029c.37-.962-.411-1.407-1.386-.79-.38.24-.388.377-.04.795.536.647 1.177.645 1.426-.004zm-274.366-.645c0-.665-.542-.538-.727.17-.113.432-.029.566.283.446.244-.094.444-.37.444-.616zm-6.88.194c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm201.6 0c-.11-.176-.334-.32-.5-.32-.165 0-.3.144-.3.32 0 .176.224.32.498.32.275 0 .41-.144.302-.32zm69.536-.521c.131-.913-1.11-1.278-1.386-.409-.105.333-.097.758.019.945.342.555 1.263.194 1.367-.536zm-267.475.03c.135.083.18-.19.101-.607a1.087 1.087 0 0 0-.904-.904c-.418-.08-.72-.058-.674.048.552 1.251 1.018 1.947 1.113 1.662.064-.193.228-.283.364-.2zm200.212-.069c-.16-.459-.107-.446.292.07.455.588.472.558.266-.48-.2-1.01-.171-1.07.315-.67.462.38.534.364.534-.12 0-.387.126-.473.415-.279.228.154.12.006-.24-.327-.455-.421-.533-.65-.255-.747.22-.077.4-.28.4-.452s-.143-.225-.317-.117c-.178.11-.237-.012-.133-.281.1-.262.377-.402.616-.31.238.091.36.356.272.587-.11.287.1.406.66.374.451-.027.821-.212.821-.412 0-.2-.251-.345-.56-.32-.307.024-.523-.138-.478-.36.058-.287-.224-.357-.96-.24-.87.139-.96.1-.549-.235.271-.22.514-.722.54-1.116.037-.566-.099-.691-.653-.604-.519.083-.696.33-.687.955.01.668-.107.807-.56.663-.364-.116-.572-.019-.572.266 0 .247-.216.449-.48.449-.548 0-.638-.399-.158-.695.202-.125.15-.372-.137-.66-.604-.603-1.145-.584-1.145.04 0 .274.144.41.32.301.176-.109.32.022.32.291 0 .53-.909.354-1.381-.267-.15-.196-.187-.069-.088.296.096.352.05.837-.101 1.079-.222.353-.34.323-.61-.158-.182-.327-.432-.496-.555-.373-.349.349.777 1.295 1.303 1.093.298-.114.483.022.503.37.02.353.124.264.289-.25.254-.794.256-.793.336.16.045.527.114 1.103.155 1.28.041.175.1.463.132.64.031.175.183.006.337-.375.337-.837 1.492-.8 1.338.044-.115.628.138 1.45.446 1.45.112 0 .116-.252.009-.56zm-1.153-2c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm1.36.108c-.458-.184-.544-.748-.115-.748.157 0 .369.216.47.48.102.264.153.469.114.455-.038-.014-.25-.098-.47-.187zm3.6 1.827c-.387-.106-.674-.491-.724-.975-.047-.44-.107-.966-.134-1.17-.027-.202-.227-.3-.445-.217-.308.119-.297.343.051 1.01.396.758.388.87-.07.968-.403.087-.35.198.242.505.418.217.976.318 1.24.224.371-.132.335-.21-.16-.345zm1.73-.12c-.278-.207-.447-.59-.374-.855.115-.419.09-.42-.194-.01-.238.342-.179.614.215.999.299.29.614.463.702.384.088-.08-.069-.313-.348-.519zm-163.97.105c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm155.069-1.627-.309-.773-.02.827c-.011.455.084.932.213 1.06.38.38.449-.282.116-1.114zm78.69.987a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm-71.36-.64c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm68.48 0c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm4.59-.494c-.103-.271-.257-.425-.341-.34-.084.083-.058.305.058.493.316.51.5.411.284-.153zm-71.15-.165c0-.186-.168-.234-.374-.107-.252.155-.307.057-.17-.301.131-.342.043-.533-.247-.533-.718 0-.875.57-.255.93.734.429 1.047.432 1.047.011zm-210.24-.3a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.145.32.32.32a.32.32 0 0 0 .32-.32zm4.044-.158c.613-.614.252-1.313-.4-.773-.252.21-.538.302-.635.206-.287-.287.831-2.194 1.165-1.987.169.104.307.021.307-.184 0-.206.222-.288.496-.183.285.11.413.056.301-.125-.276-.447.596-.395 1.053.062.518.518.59.368.824-1.702.2-1.774.189-1.805-.676-1.971-.483-.093-1.036-.04-1.228.12-.192.159-.444.194-.56.078-.116-.116-.21-.027-.21.197 0 .231.208.328.48.224.286-.11.48-.003.48.266 0 .248.159.55.354.67.238.148.283-.004.138-.46-.16-.505-.08-.68.308-.68.394 0 .468.176.302.72-.121.395-.383.926-.582 1.18-.29.368-.253.419.183.256.374-.14.492-.07.38.224-.093.243-.434.358-.784.267-.436-.114-.62-.442-.62-1.104 0-.518-.135-.858-.3-.756-.165.102-.453-.07-.64-.381-.321-.537-.364-.534-.82.054-.263.342-.48.504-.48.361 0-.143-.222-.075-.494.15-.272.226-.419.608-.326.85.1.261-.136.554-.582.724-.413.157-.85.544-.97.86-.122.316-.13.483-.017.37.257-.256 2.07.358 2.07.701 0 .14-.226.341-.5.447-.276.105-.41.34-.299.52.112.18.32.254.464.165.144-.089.337.125.428.475.198.756.731.817 1.39.159zm-1.618-2.682c-.128-.207-.133-.83-.012-1.383l.221-1.007.623.775c.59.733.612.738.43.08-.16-.57-.083-.664.43-.53.343.09.692.427.777.75.112.429.02.535-.343.396-.304-.117-.415-.058-.286.15.116.188-.004.424-.267.525-.263.1-.478.016-.478-.188 0-.204-.194-.106-.432.219-.305.417-.499.48-.663.213zm262.535 3.018c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm4.098-.203c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm5.399-.156c.053-.165-.262-.466-.7-.67-.614-.284-.797-.28-.797.016 0 .889 1.245 1.432 1.497.654zm-267.591-.118c.101-.163.038-.388-.141-.498-.18-.111-.325-.04-.325.156 0 .197-.167.255-.37.13-.229-.142-.283-.088-.141.14.275.447.725.48.977.072zm273.646-1.216c-.103-.103-.008-.407.21-.676.335-.413.306-.455-.189-.27-.322.121-.718.22-.88.22-.161 0-.293.144-.293.32 0 .176.225.32.501.32.365 0 .448.196.305.72-.176.644-.158.659.168.136.2-.32.28-.668.178-.77zm-271.872.554c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-2.465-.56c.141-.22.11-.652-.07-.96-.286-.49-.33-.46-.358.24-.028.7-.063.724-.274.184-.224-.572-.257-.576-.458-.054-.118.31-.216.679-.216.821 0 .4 1.09.218 1.376-.23zm4.283-.14c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm264.422.56c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-275.807-1.234c-.411-.411-.827-.094-.523.398.117.19.36.256.54.145.218-.135.213-.314-.017-.543zm-2.273-.2c0-.161.087-.521.194-.8.139-.362.003-.506-.478-.506-.613 0-.713.4-.38 1.52.068.23.664.037.664-.213zm277.28-.026c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm8.738-.024c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm-74.594-.178c-.111-.11-.063-.462.108-.78.332-.621-.131-1.202-.492-.618-.113.182-.322.258-.466.17-.374-.232-1.07.697-.823 1.096.113.184.582.334 1.04.334.46 0 .744-.09.633-.202zm56.736-.449c0-.552-.098-.599-.64-.309-.352.189-.64.257-.64.153 0-.105-.147-.1-.326.01-.52.322-.027.797.824.797.573 0 .782-.174.782-.65zm7.84.331c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-68.97-.307c.26-.164.393-.376.297-.472-.096-.096-.452.036-.79.292-.676.51-.266.66.493.18zm77.77-.154c0-.51-.581-.985-.861-.705-.264.264.147 1.166.53 1.166.182 0 .33-.207.33-.46zm-6.4-1.135c0-.199.144-.272.32-.164.176.11.32.046.32-.14 0-.843-1.11-.129-1.44.925-.226.726-.206.746.277.263.288-.287.523-.685.523-.884zM38.026 344.5c-.197-.514-.246-.519-.507-.051-.346.618-.001 1.347.431.914.162-.162.196-.55.076-.863zm271.176-.027c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm8.525.141a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.117.357.357 0 0 0 .117-.49zm-281.743.027a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm4.437-1.296c.033.358.13.377.421.086.59-.59.059-.836-1.093-.507-1.311.375-1.662 1.608-.505 1.773.599.084.777-.078.937-.856.11-.528.217-.75.24-.496zm263.723 1.296c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm19.389-1.438c-.115-.455-.334-.75-.489-.654-.154.095-.115.522.086.95.457.967.679.805.403-.296zm-60.456.332c0-.256-.123-.39-.272-.297-.15.092-.19.302-.088.465.259.42.36.372.36-.168zm54.299-.342c-.099-.257-.337-.37-.53-.251-.247.152-.236.255.035.345.213.071.291.283.175.471-.122.198-.061.25.144.123.196-.121.275-.43.176-.688zm-4.592-.17c0-.166-.144-.302-.32-.302-.176 0-.32.225-.32.5 0 .274.144.41.32.3.176-.108.32-.333.32-.498zm-10.734.04c.101-.163.038-.388-.141-.498-.18-.11-.325.023-.325.298 0 .562.192.644.466.2zm21.846-1.356c-.501-.31-.611-.15-.356.515.165.43.27.46.471.135.15-.242.101-.516-.115-.65zm-8.615.122c-.32-.064-.47-.296-.366-.568.12-.31-.042-.46-.497-.46-.371 0-.674.127-.674.281 0 .436 1.4 1.272 1.76 1.051.176-.108.076-.245-.223-.304zm1.476.058c.751-.288.645-1.406-.133-1.406-.47 0-.64.214-.64.8 0 .871.027.893.773.606zm-280.853-.526a.63.63 0 0 0-.56-.4.63.63 0 0 0-.56.4c-.08.238.147.4.56.4.412 0 .639-.162.56-.4zm12.235-.468c.491.128.777-.059 1.129-.74.418-.81.415-.966-.03-1.411-1.074-1.075-2.339-.17-2.096 1.5.088.604-.434.765-.762.234-.11-.179-.332-.244-.492-.145-.166.103-.127.443.091.792.35.562.429.57.943.105.315-.285.848-.432 1.217-.335zm256.002.066c-.171-.207-.205-.494-.075-.638.13-.144.058-.159-.162-.032-.555.32-.503 1.046.074 1.046.328 0 .378-.117.163-.376zm15.619.098c.56-.56.469-1.467-.185-1.817-1.268-.679-2.353 1.133-1.111 1.856.726.423.837.42 1.296-.039zm2.624.243c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm-277.68-.39a1.235 1.235 0 0 0-.8 0c-.22.088-.04.16.4.16s.62-.072.4-.16zm254.635-.383c-.014-.561-.586-1.005-1.061-.822-.625.24-.672.51-.175 1.007.352.353 1.245.22 1.236-.185zm-256.955-.686c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm273.103-.347a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm9.137.366c0-.165-.144-.39-.32-.499-.176-.108-.32.027-.32.302 0 .274.144.498.32.498.176 0 .32-.135.32-.3zm-286.08-.339c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm252.8 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm22.08-.669c0-.63-.812-1.186-1.186-.812-.11.11-.03.567.175 1.018.412.904 1.01.783 1.01-.206zm-14.88.35c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm9.76-.142c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm-30.24-.499c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm27.04 0c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm16.96-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-283.84-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm273.6 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-8.653-.616c.534-.998.074-1.672-1.066-1.56-1.178.114-1.547 1.103-.655 1.755.802.587 1.335.526 1.721-.195zm6.333.095c.86-.23.96-.759.144-.759-.317 0-.75-.172-.96-.384-.503-.502-1.19.13-.917.843.206.538.594.605 1.733.3zm10-.119c-.62-.4-.96-.4-.96 0 0 .176.324.318.72.315.582-.004.628-.064.24-.315zm2.88 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-277.44-.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm4.16-.46c0-.254-.157-.559-.348-.677-.452-.28-1.069.338-.79.79.314.507 1.138.425 1.138-.114zm3.44-.74c.175-.525-.828-.9-1.258-.47-.184.184-.233.5-.109.7.283.458 1.188.305 1.367-.23zm-9.099-.597c-.149-.388-.246-.406-.445-.085-.3.486-.057 1.01.352.757.156-.096.198-.399.093-.672zm280.855.361c.518-.624.185-1.444-.587-1.444-.924 0-1.51.837-1.01 1.44.507.61 1.093.612 1.597.004zm-285.293-.83a.357.357 0 0 0-.49-.117.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm3.537-.156c0-.335-.252-.657-.56-.717-.564-.108-.811.862-.34 1.333.378.378.9.02.9-.616zm272.848.023c0-.168-.155-.356-.344-.42-.19-.062-.344.126-.344.42 0 .293.154.481.344.418.189-.063.344-.251.344-.418zm-10.038-1.408c-.02-.726-.114-.848-.427-.56-.22.202-.279.413-.13.468.149.056.191.308.094.56-.097.253-.026.46.157.46s.32-.418.306-.928zm8.39.607a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm11.52-.338c0-.166-.216-.302-.48-.302-.495 0-.636.378-.276.738.256.256.756-.033.756-.436zm-285.09-.68c.319-.594.268-.785-.338-1.276-.54-.438-.859-.498-1.322-.25-.588.315-.837 1.572-.397 2.011.472.472 1.7.182 2.058-.485zm281.09.378c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-275.68-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm274.24 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-270.56-.32c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm245.6 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm17.093.126c.624-.239.665-1.516.065-2.013-.617-.513-2.118.094-2.118.855 0 1.081.913 1.596 2.053 1.158zm3.387-.606c0-.264-.144-.48-.32-.48-.176 0-.32-.216-.32-.48 0-.694-.88-.59-1.277.153-.275.516-.248.598.146.447.281-.108.568.03.682.327.249.649 1.089.674 1.089.033zm3.2.02c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm-276.017-.847a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm1.457.027a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm272.487-.198c-.285-.285-.598-.438-.695-.341-.285.285.203.86.73.86.417 0 .413-.071-.035-.519zm-279.527-.442c0-.355-.214-.64-.48-.64-.54 0-.56.059-.286.774.274.715.766.63.766-.134zm14.08 0c0-.355-.214-.64-.48-.64-.267 0-.48.285-.48.64 0 .356.213.64.48.64.266 0 .48-.284.48-.64zm251.84.16c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm-263.04-.3c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm7.745-1.017c.2-1.718-.784-2.559-1.803-1.54-.677.678-.634 1.059.218 1.91 1.036 1.036 1.431.944 1.585-.37zm10.921-.626c-.202-.528-.409-.56-1.046-.156-.382.242-.389.376-.037.799.503.607 1.366.095 1.083-.643zm-20.906.503c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm271.756-.578c.115-.439-.013-.576-.503-.54-.786.058-1.103.766-.508 1.134.53.328.814.16 1.011-.594zm12.084.578a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-8.48-.32c.108-.176-.036-.32-.32-.32-.285 0-.43.144-.32.32.108.176.252.32.32.32.067 0 .21-.144.32-.32zm5.28.18c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-281.6-.839c0-.165-.216-.3-.48-.3-.495 0-.636.377-.276.737.256.256.756-.033.756-.437zm15.36.34a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm-9.659-.739c.538-.572.608-.824.312-1.12-.21-.21-.493-.382-.63-.382-.42 0-1.292 1.551-1.072 1.906.31.502.626.41 1.39-.404zm273.819.418c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-10.08-.96c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm3.2-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-4.445-2.32c.184-.354.172-.56-.033-.56a.326.326 0 0 0-.322.328c0 .18-.36.465-.8.632-.938.357-1.024.801-.24 1.247.444.253.616.174.832-.384.15-.386.404-.955.563-1.263zm9.885 1.414c0-.417-.38-.694-.69-.503-.331.205-.046.77.388.77.166 0 .302-.12.302-.267zm-271.3-.46c.848-1.335-.163-1.92-1.824-1.059-.482.25-1.074.379-1.316.286-.613-.235-.554.444.07.793.777.435 2.79.421 3.07-.02zm257.86-.093c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.499zm6.56.18c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm-262.56-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm265.901-.303c.605-.382-.012-1.851-.92-2.187-.343-.127-.668-.371-.722-.543-.127-.399-1.22-.578-1.22-.2 0 .156.194.358.43.449.278.106.377.511.284 1.15-.12.81-.01 1.042.61 1.29.969.388.99.388 1.538.041zm7.819.046c.087-.14-.193-.256-.621-.256-.429 0-.78.116-.78.256 0 .141.28.256.622.256.341 0 .692-.115.779-.256zm8.368-.322c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm-2.088-.24c0-.275-.144-.41-.32-.302-.176.11-.32.334-.32.5 0 .165.144.3.32.3.176 0 .32-.224.32-.499zm-270.72-1.568c0-.426-1.641-.12-1.817.339-.316.821.595 1.145 1.248.444.313-.335.569-.688.569-.783zm-15.36.786a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm276.674-.15c-.097-.663-.514-1.016-.514-.436 0 .419.271.906.505.906.043 0 .047-.211.009-.47zm-254.594-.671c0-.704-.103-.79-.72-.6-.934.287-.93.28-.694.896.111.289.475.525.808.525.437 0 .606-.228.606-.821zm2.56.501a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-20.8-.933c0-.161-.18-.366-.4-.455-.22-.088-.087-.172.297-.186.383-.014.913.19 1.177.454s.661.48.883.48c.227 0 .097-.285-.297-.652-.77-.718-.926-1.763-.3-2.016.242-.098.183-.171-.15-.186-.38-.018-.486-.192-.345-.561.165-.431.085-.485-.41-.274-.338.144-.857.272-1.153.284-.295.013-.511.121-.48.242.032.12-.05.234-.182.251-.696.093-.896-.005-.69-.337.142-.229.088-.283-.141-.141-.645.398-.436 1.47.287 1.47.442 0 .766.314.991.96.312.893.913 1.332.913.667zm276.48-1.02c0-.46-.556-.33-.75.177-.119.31-.024.405.286.286.255-.098.464-.307.464-.464zm6.528.303c-.153-.249-.022-.316.4-.206.522.136.639-.016.7-.91.064-.964-.014-1.074-.768-1.074-.571 0-.894.205-1.008.64-.092.352-.366.64-.61.64-.243 0-.442.233-.442.518 0 .36.194.466.64.35.351-.092.72-.037.818.122.099.16.251.29.34.29.087 0 .056-.166-.07-.37zm-279.808-.09c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm270.08-.18a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-259.771-1.338c-.489-.49-.85-.128-.579.578.16.417.3.459.584.174.285-.285.283-.464-.005-.752zm265.85.877c0-.077-.143-.23-.32-.339-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm-14.473-.759c.07-.209-.101-.38-.38-.38a.508.508 0 0 0-.506.507c0 .565.688.467.886-.127zm2.896-.15c.456-.55-.058-1.337-.71-1.086-.626.24-.686 1.496-.072 1.496.243 0 .595-.184.782-.41zm-261.702-.573c0-.82-1.06-.727-1.22.107-.074.384.098.556.556.556.458 0 .664-.205.664-.663zm2.24.343c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm260.8 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm10.016-1.115c.035-.174-.188-.364-.496-.424-.35-.067-.56.09-.56.42 0 .556.945.56 1.056.003zm-30.648-.423c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm8.065.385c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm8.407-.306c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm-264.96-.14a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm280.96-.462c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm4.16 0c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm-10.136-.629c.095-.247-.13-.715-.501-1.04-.37-.324-.568-.41-.44-.19.129.22.082.4-.105.4-.186 0-.338.288-.338.64 0 .746 1.112.9 1.384.19zm-268.584-.19c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm259.343-.347a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm15.217.206c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm-3.52-.8c0-.165-.144-.39-.32-.499-.176-.108-.32.027-.32.301 0 .275.144.5.32.5.176 0 .32-.136.32-.302zm-268.8-.339c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm1.28-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm268.48-.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-276.96-.32c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm260.143-.347a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm18.737.347a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-283.2-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm267.2-.659c0-.407-.22-.62-.64-.62-.717 0-.915 1.128-.24 1.37.583.209.88-.044.88-.75zm19.31.166c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm-9.71-.467c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zM47.824 312a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-3.52-.32c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm20.096-.064c.594-.594.459-1.152-.418-1.726-.646-.423-.895-.448-1.28-.128-.9.746-.365 2.238.802 2.238.281 0 .684-.172.896-.384zm262.542-.416c-.174-.907-.642-1.05-.935-.287-.108.281.004.64.25.795.71.45.848.347.685-.508zm-277.582.096c.598-.598.456-.82-.416-.654-.799.153-.99.422-.587.825.308.309.567.264 1.003-.17zm8.95-.196c.07-.209-.101-.38-.38-.38a.508.508 0 0 0-.506.507c0 .565.688.467.886-.127zm240.292-.76c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-253.338.06a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm267.733-.13c0-.246-.191-.375-.425-.286-.234.09-.345.292-.248.45.271.438.673.34.673-.163zm15.947.13c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm-276.96-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm257.491-.72c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm12.909.72c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-14.566-.648c-.096-.156-.398-.198-.672-.093-.387.149-.406.246-.085.445.486.3 1.01.056.758-.352zm8.806.328a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-256.32-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm261.022-.206c.277-.722-.805-1.52-1.396-1.029-.235.195-.426.624-.426.955 0 .774 1.53.836 1.822.074zm6.827-.736c-.236-.44-.242-.658-.02-.658a.336.336 0 0 0 .33-.339c0-.186-.144-.25-.32-.14-.176.108-.32-.027-.32-.302 0-.274-.134-.499-.297-.499-.164 0-.36-.252-.436-.56-.076-.308-.101-.209-.055.22.134 1.26-.17 1.743-.673 1.07-.393-.525-.413-.514-.248.139.098.39.595.892 1.104 1.118.509.225.937.626.95.891.017.302.084.34.181.1.086-.21-.003-.678-.196-1.04zm-279.69.622a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm2.56 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm262-.24c.176-.525-.827-.9-1.257-.47-.184.184-.233.5-.109.7.283.458 1.188.305 1.367-.23zm10.96.24c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm1.698.116c.341-.341-.086-.74-.586-.548-.257.099-.388.308-.29.466.207.336.587.371.876.082zm-9.697-1.076a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm9.28-.659c0-.401-.22-.62-.622-.62-.89 0-1.176.663-.5 1.158.695.508 1.122.303 1.122-.538zm-267.2.16c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm10.08-.803c0-.247-.252-.497-.56-.557-.552-.106-.78.573-.34 1.013.335.335.9.05.9-.456zm249.44.342c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm5.12 0c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm-16-.32c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm22.44-.405c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-276.262.061c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm265.022-1.095c0-.242-.278-.42-.616-.395-.493.038-.554.163-.304.63.337.63.92.481.92-.235zm-275.04.16c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm4.82-.559c.196-.395.452-.623.568-.506.116.116.212.031.212-.189s-.18-.335-.4-.255c-.22.08-.656-.078-.968-.35-.412-.36-.664-.398-.919-.143-.193.193-.55.275-.792.182-.243-.093-.441-.01-.441.185s.168.354.373.354.282.091.171.202c-.111.112-.053.48.128.82.433.808 1.602.639 2.068-.3zm278.54.558a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-276.16-.48a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm279.132-.16c-.178-.68-.575-.834-.88-.34-.14.226.533.88.998.97.027.006-.026-.278-.118-.63zm-277.852 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm274.24-.46c0-.626-.62-.967-1.024-.564-.181.18-.232.485-.114.676.314.508 1.138.426 1.138-.113zm4.104-.692c-.463-.463-.493-.433-.344.345.116.609.261.754.507.507.247-.246.2-.49-.163-.852zm-31.304.691c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm16-.179a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm3.778-.344c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm5.373-.464c-.064-.437-.511-.71-.511-.312v.48c0 .176.13.32.291.32.16 0 .26-.22.22-.488zm-262.271-.293c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm-12.16-.499c0-.176-.288-.32-.64-.32-.352 0-.64.144-.64.32 0 .176.288.32.64.32.352 0 .64-.144.64-.32zm275.078-.465c.098-.256-.046-.785-.32-1.176l-.498-.711-.293.776c-.186.492-.176.923.029 1.176.428.532.863.506 1.082-.065zm-260.358-.281c0-.235-.095-.522-.211-.638-.29-.289-1.105.428-.887.78.273.442 1.098.334 1.098-.142zm266.358.173c.087-.14-.155-.277-.537-.306-.55-.041-.595.01-.217.249.583.368.563.367.754.057zM49.104 301.6c0-.264-.14-.48-.31-.48-.17 0-.228.216-.126.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm269.822-.16c-.354-.967-1.175-1.219-1.47-.45-.276.72.005 1.03.885.977.531-.033.708-.191.585-.527zm-258.984-.11c.422-.509.161-.85-.652-.85-.573 0-.798.642-.373 1.067.323.323.63.258 1.025-.216zm-8.918-.21c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm254.72-.32c0-.355-.214-.64-.48-.64-.488 0-.657.677-.267 1.067.406.406.747.21.747-.427zm20.48.068c0-.378-.091-.39-.48-.068-.264.22-.48.43-.48.466 0 .037.216.068.48.068s.48-.21.48-.466zm-269.44-.228c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm259.019.194c.097-.158-.031-.366-.285-.464-.308-.118-.403-.023-.284.287.206.537.324.574.569.177zm4.98-.034a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm-272.32-.499c0-.274-.143-.41-.32-.3-.175.108-.32.333-.32.498 0 .166.145.301.32.301.177 0 .32-.224.32-.499zm15.68.198c0-.432-.583-.731-.965-.495-.179.11-.242.335-.14.498.24.39 1.106.387 1.106-.003zm164.7-.399c-.103-.255-.179-.18-.194.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm100.9.06c0-.352-.055-.64-.122-.64-.068 0-.198.288-.29.64-.092.352-.037.64.122.64.16 0 .29-.288.29-.64zm-22.08-.16c.22-.264.299-.48.177-.48s-.438.216-.702.48c-.264.264-.344.48-.177.48.167 0 .483-.216.703-.48zm14.88.16c.11-.176-.035-.32-.32-.32-.284 0-.428.144-.32.32.11.176.253.32.32.32.068 0 .212-.144.32-.32zm-270.08-.32c.11-.176-.026-.32-.3-.32-.275 0-.5.144-.5.32 0 .176.136.32.302.32.165 0 .39-.144.499-.32zm258.023-.419c.173-.899-.531-1.55-1.256-1.163-.698.374-.78.961-.213 1.528.534.533 1.335.335 1.47-.365zm7.738.42a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm1.92-.142c0-.652-.628-.96-1.066-.521-.279.279-.253.443.108.67.675.428.958.384.958-.149zm-271.36-.499a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm242.24 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-223.68-.14c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-11.647-1.053c-.325-.325-.594.164-.327.596.202.327.277.327.385.001.075-.222.048-.49-.058-.597zm-5.733.03c.274-.714-.307-1.55-1.109-1.592-1.109-.059-1.414.308-1.052 1.262.376.987 1.824 1.208 2.161.33zm18.68-.037c.266-.308.838-.804 1.271-1.103.588-.405.655-.547.263-.56-.29-.009-.613-.243-.719-.52-.115-.298-.48-.46-.902-.4-.52.076-.775.404-.95 1.223-.393 1.822.092 2.457 1.037 1.36zm248.3-.06c0-.862-.606-1.151-1.19-.568-.582.583-.293 1.188.568 1.188.402 0 .622-.22.622-.62zm-1.92-.02a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-240.8-.964c0-.686-.93-.587-1.065.113-.083.428.048.558.475.476.324-.062.59-.327.59-.589zm239.84.004a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-258.56-.49c0-.511-.85-1.006-1.174-.683-.102.102-.1.408.004.68.246.639 1.17.642 1.17.003zm253.76.17c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm10.58-.011c.73-.39.81-1.352.16-1.892-.332-.276-.635-.288-1.092-.043-.795.426-1.004.987-.634 1.706.33.643.693.696 1.567.229zm-20.18-.13c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm23.68-1.14c0-.175-.153-.32-.34-.32-.186 0-.25.145-.14.32.108.177.26.32.338.32.078 0 .142-.143.142-.32zm-266.4-.32c.108-.175.045-.32-.142-.32-.186 0-.338.145-.338.32 0 .177.063.32.14.32.078 0 .23-.143.34-.32zm4.96 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm255.04.18c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141s.144.339.32.339c.176 0 .32-.064.32-.141zm-264.42-.674c.273-.273.413-.578.313-.678-.184-.185-1.173.65-1.173.99 0 .324.352.196.86-.312zm263.46.175a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm13.247.053c.09-.146-.039-.266-.287-.266-.249 0-.378.12-.288.266.091.147.22.267.288.267.067 0 .196-.12.287-.267zm-278.881-.812c.495-.597.106-1.481-.65-1.481-.688 0-1.082.708-.8 1.44.23.6.968.62 1.45.04zm271.18-.704c-.171-.448-1.706-.665-1.706-.242 0 .118.237.477.528.799.6.662 1.485.243 1.178-.557zm-14.186.503a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-2.88-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-244.88-.56c.189-.568-.887-.907-1.212-.382-.146.237-.19.554-.098.704.237.384 1.15.159 1.31-.322zm268.703-.107a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm-275.823.027c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm113.44.194c0-.303-.958-.456-1.13-.18-.103.168.108.306.47.306.363 0 .66-.057.66-.126zm151.68-.335c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.064.499-.141zm-263.36-.5a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm273.453-.02c.294-.477-.047-.736-.66-.5-.283.108-.424.341-.315.519.26.42.709.41.975-.02zm-11.754-.703c.08-.412-.106-.556-.716-.556-.898 0-.917.024-.623.79.255.664 1.198.5 1.34-.234zm-19.78.084a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm-234.56-.32c0-.176-.063-.32-.14-.32-.078 0-.23.144-.34.32-.108.176-.045.32.142.32.186 0 .339-.144.339-.32zm258.089-.258c-.099-.099-.357 0-.574.218-.314.316-.277.353.18.18.315-.12.492-.3.394-.398zm-243.528-.702c-.155-.25-.34-.27-.553-.056a.594.594 0 0 0-.088.696c.155.25.34.269.553.056a.594.594 0 0 0 .088-.696zm222.88.443c0-.068-.288-.123-.64-.123-.352 0-.64.13-.64.29 0 .16.288.215.64.123.352-.092.64-.223.64-.29zm25.265.055c.67-.807.282-1.926-.705-2.04-.808-.092-.88-.01-.88.987 0 1.55.756 2.052 1.585 1.053zm5.295.142c.108-.176.053-.32-.123-.32s-.409.144-.517.32c-.11.176-.054.32.122.32s.409-.144.518-.32zm-20.96-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm5.12-.286c0-.355-.985-.756-1.237-.504-.102.102.027.319.286.482.598.379.95.387.95.022zm13.253.092c.62-.238.655-.64.078-.862-.586-.225-1.304.262-1.034.7.256.414.286.419.956.162zm-269.253-.606c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm249.737.196c.097-.156-.027-.452-.275-.658-.363-.3-.43-.26-.341.204.06.318.12.614.134.658.054.175.316.064.482-.204zm-253.873-.444c-.04-.383-.479-.309-.616.104-.07.211.044.326.256.256.21-.07.373-.232.36-.36zm10.877.077c.773-.415.797-1.15.05-1.55-1.123-.602-2.17.615-1.287 1.497.465.465.465.465 1.237.053zm250.476-.618c-.068-.903-.1-.923-.666-.411-.565.511-.566.558-.032.949.764.558.78.544.698-.538zm2.623.412c0-.045-.288-.235-.64-.423-.49-.262-.64-.243-.64.08 0 .233.288.423.64.423.352 0 .64-.036.64-.08zm-258.56-.423a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm261.44-.48c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm-264.177-1.147a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm1.777.347c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm252.106-.206c-.144-.351-.906-.445-.906-.112 0 .267.708.627.906.46.059-.048.059-.206 0-.348zm6.134.065c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm6.291-.9c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm-24.211.58c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm16.96-.18c0-.175-.153-.32-.34-.32-.186 0-.25.145-.14.32.108.177.26.32.338.32.078 0 .142-.143.142-.32zm12.64 0c-.11-.175-.334-.32-.5-.32-.165 0-.3.145-.3.32 0 .177.224.32.498.32.275 0 .41-.143.302-.32zm-31.2-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm22.72 0c0-.175-.153-.32-.34-.32-.186 0-.25.145-.14.32.108.177.26.32.338.32.078 0 .142-.143.142-.32zm-269.263-.347c.3-.487-.353-1.056-.95-.826a.512.512 0 0 0-.308.682c.219.57.944.653 1.258.144zm3.84 0c.33-.533-.412-1.145-.854-.704-.369.37-.138 1.052.357 1.052.155 0 .378-.156.497-.348zm258.896-.525c-.325-.325-.594.164-.327.596.202.327.277.327.385.001.075-.222.048-.49-.058-.597zm11.647.553c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-273.047-.193c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm5.047-.127c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm260.96-.33c0-.794-.918-1.212-1.308-.596-.5.789-.313 1.246.508 1.246.59 0 .8-.17.8-.65zm-1.658-.895c.075-.512-.063-.695-.526-.695-.753 0-1.11.738-.603 1.245.51.51 1.008.268 1.129-.55zm9.679.574c.928-.497.755-.994-.261-.75-1.09.262-1.156.316-.894.74.262.423.38.424 1.155.01zM60.944 284.8a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm237.498-.709c-.23-.23-.378-.248-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm-233.098-.17c.078-.235-.143-.4-.534-.4-.393 0-.666.206-.666.503 0 .588.998.502 1.2-.104zm260.114.053c-.107-.278-.194-.566-.194-.64 0-.073-.218-.134-.483-.134-.403 0-.417.107-.083.64.474.76 1.038.86.76.134zm-261.954-.134a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm250.416-.026c.275-.446.005-.682-.897-.78-.515-.057-.742.083-.742.458 0 .608 1.304.864 1.639.322zm7.216-.16c-.012-.13-.42-.278-.907-.327l-.885-.089.799.435c.8.435 1.032.43.993-.018zm6.158.013c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm-276.59-.787a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm13.43-1.338c.011-.642-1.196-1.104-1.663-.637-.403.403-.031 2.077.402 1.81.17-.106.31-.012.31.208 0 .603.939-.76.95-1.381zm258.57 1.338a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm0-1.18c0-.214-.191-.503-.425-.644-.233-.14-.516-.508-.63-.816-.234-.636-1.033-.745-1.378-.187-.134.217.13.662.633 1.062.606.483.799.859.645 1.259-.196.51-.147.525.468.141.378-.236.687-.603.687-.816zm-266.24.72c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm255.817-.143c.097-.156-.026-.451-.273-.656-.498-.414-1.01.062-.664.62.244.396.704.413.937.036zm-253.257-.517c0-.264-.136-.48-.302-.48-.403 0-.692.5-.436.756.36.36.738.22.738-.276zm242.049-.85c-.234-.378-1.09.067-1.09.567 0 .364.118.375.62.062.34-.213.552-.496.47-.629zm18.523.37c.092-.352.037-.64-.122-.64-.16 0-.29.288-.29.64 0 .352.055.64.122.64.068 0 .198-.288.29-.64zm10.57-.443c.119-.312-.014-.396-.446-.283-.709.185-.836.726-.17.726.244 0 .522-.2.615-.443zm-268.582-.197c0-.176.13-.284.288-.24.158.044.302-.028.32-.16.033-.254-.195-.255-.848-.005-.477.183-.537.725-.08.725a.32.32 0 0 0 .32-.32zm252.16 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-261.44-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm3.84 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm3.2.18c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm249.6-.32c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-236.48-.5c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm-18.946-.697c.066-.343-.192-.493-.88-.512-1.064-.03-1.386.736-.414.987.814.21 1.187.073 1.294-.475zm5.086.202c.273-.272.387-.596.254-.72s-.306-.045-.385.175c-.079.22-.427.4-.775.4-.348 0-.543.144-.434.32.283.46.77.396 1.34-.175zm257.38.175a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-20.48-.32c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm-224.16-.64c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm228.96 0c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm23.793.134c.645-.248.297-1.094-.449-1.094-.673 0-1.075.491-.784.96.225.366.54.4 1.233.134zm-258.833-.774c0-.264-.324-.526-.72-.582-.555-.079-.72.055-.72.582 0 .527.165.661.72.583.396-.057.72-.319.72-.583zm-3.68-.64c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-.96-.64c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm267.455-.926c.18-.538-.84-.798-1.38-.35-.33.274-.475.285-.475.036 0-.563-1.277-.42-1.503.167-.353.92.685 1.379 2.058.907.65-.224 1.235-.565 1.3-.76zm-18.495.785c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm11.138-.203c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.154.418-.344zm-267.138-.296a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm262.866.022c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm-8.466-.502c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm-248.377-.373c-.156-.803-.903-.913-.903-.133 0 .393.206.666.503.666.298 0 .461-.217.4-.533zm4.217.213a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm240.96.18c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm18.24-.18a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-269.12-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm238.938-1.34c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-234.68-.19c.482-.534.464-.576-.271-.637-.748-.062-1.07.497-.574.994.283.283.253.295.844-.358zm14.302.25a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm251.707-.54c.69-.745.73-.898.296-1.14-.867-.486-1.935-.158-1.827.56.052.352.112.82.133 1.04.059.63.534.473 1.398-.46zm-256.827.22c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-6.72-.64c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm230.56 0c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm37.6 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-266.63-.59c.092-.276-.062-.39-.427-.32-.314.06-.635.304-.714.54-.092.276.062.392.427.32.314-.06.635-.303.714-.54zm-4.41-.69a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm8.582-.585c.076-.516-.063-.695-.541-.695-.843 0-1.158.546-.661 1.145.52.626 1.074.419 1.202-.45zm256.058.78c0-.07-.224-.212-.497-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm-252.48-.995c0-.264-.13-.48-.286-.48-.157 0-.369.216-.47.48-.112.293 0 .48.286.48.258 0 .47-.216.47-.48zm237.6.16c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm10.08 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm11.812-.506c.23-.229-.14-.436-.94-.527-.535-.06-.804.095-.891.516-.107.517.005.57.786.374.501-.126.971-.289 1.045-.363zm-269.732-.134a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm8.32 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm109.018-.38c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm117.222.4c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.301 0 .275.144.5.32.5.176 0 .32-.136.32-.302zm28.48-.18c.23-.276.26-.48.073-.48-.179 0-.408.216-.51.48-.1.264-.134.48-.073.48.061 0 .29-.216.51-.48zm-5.614-.138c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm8.494-.36c0-.166-.144-.302-.32-.302-.176 0-.32.225-.32.5 0 .274.144.41.32.3.176-.108.32-.333.32-.499zm-269.44.018a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm262.448-.48c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm2.752-.142c.887-.74.907-.978.08-.978-.352 0-.64.153-.64.34 0 .186-.114.268-.252.183-.138-.086-.251.122-.251.46 0 .76.148.759 1.063-.004zm6.08-.514c.394-.29.388-.395-.038-.748-.723-.6-1.078-.21-.899.99.088.588.229.842.319.574.089-.264.367-.631.618-.816zm-259.44.176c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm6.08-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm249.28-.16c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm-264.32.02c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm4.48-.519c0-.165-.216-.3-.48-.3-.495 0-.636.377-.276.737.256.256.756-.033.756-.437zm262.269-.435c.037-.254-.15-.545-.414-.646a.51.51 0 0 1-.303-.652c.099-.257.055-.544-.098-.638-.38-.235-1.294.146-1.294.539 0 .176.232.23.515.122.418-.16.477-.045.312.613-.142.568-.058.866.283.997.267.103.394.351.28.553-.126.226-.04.215.223-.03.236-.219.459-.605.496-.858zm3.16.182c-.18-.19-.79.292-.79.624 0 .172.202.128.448-.099s.4-.463.342-.525zm-33.43.467c0-.304-.957-.457-1.128-.18-.104.168.107.305.47.305.362 0 .659-.056.659-.125zm-239.68-.515a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm14.08-.16c0-.264-.143-.48-.32-.48-.175 0-.32.216-.32.48s.145.48.32.48c.177 0 .32-.216.32-.48zm106.007-.107c.097.059.485-.286.863-.767.512-.651.663-1.223.59-2.24-.055-.751-.243-1.37-.42-1.377-.47-.017-1.76-.9-1.76-1.204 0-.145.18-.159.4-.032.22.126.289.107.152-.043-.362-.398-1.59-.534-1.352-.15.294.475-.548.37-1.242-.156-.523-.396-.725-.393-1.534.025-1.716.888-2.118 3.687-.729 5.077.448.448 1.024.814 1.28.814.517 0 .612-.873.17-1.57-.336-.531-.086-1.386.329-1.129.458.283.33-.411-.167-.909-.392-.392-.375-.522.13-.954.535-.458.597-.449.744.111.169.647 1.007.83 1.34.291.11-.177-.125-.32-.526-.32-.544 0-.632-.09-.355-.367.578-.578 2.009.502 1.93 1.456-.043.517-.21.703-.524.583-.352-.135-.415.007-.267.598.107.427.071.976-.08 1.22-.22.356-.36.308-.703-.243-.561-.898-1.15-.88-1.049.033.044.396.094.936.112 1.2.018.285.127.35.266.16.344-.468 1.44-.388 1.608.118.109.326.204.34.382.051.13-.21.316-.335.412-.276zm132.074.304c0-.443-1.546-1.344-1.747-1.019-.099.16.048.518.326.797.546.546 1.42.683 1.42.222zm13.808-.197c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm-38.128-.3c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-227.2-.32c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm3.2-.48c0-.342-.13-.701-.287-.799-.157-.097-.265.183-.24.621.054.934.527 1.092.527.177zm259.731-.42c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm-257.345.102c.237-.382-.365-.762-.792-.498-.358.22-.123.796.326.796.155 0 .365-.134.466-.298zm8.814-.022a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm4.16-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm246.272-.512c-.114-.296-.28-.467-.368-.38-.088.089-.066.404.048.7.113.297.279.468.367.38.088-.088.066-.403-.047-.7zm1.32.192c-.054-.704-.552-.897-.552-.213 0 .382.283.853.513.853.048 0 .065-.288.039-.64zm-29.018-.347c.474-.886.104-1.212-.488-.43-.547.725-.608 1.097-.178 1.097.17 0 .47-.3.666-.667zm23.666.347a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.498-1.02c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zM72.464 264a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm252.835-.733c-.172-.171-.554-.219-.85-.105-.439.168-.464.294-.14.686.31.373.5.396.85.106.294-.243.342-.484.14-.687zm-264.717.304c.391-.472.172-.85-.492-.85-.234 0-.426.287-.426.64 0 .738.403.83.918.21zm9.642-.192c0-.165-.144-.39-.32-.499-.176-.108-.32.027-.32.301 0 .275.144.5.32.5.176 0 .32-.136.32-.302zm4.48-.019c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm238.4 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm5.12-.979c0-.407-.22-.62-.64-.62-.717 0-.915 1.128-.24 1.37.583.209.88-.044.88-.75zm10.818.17c-.099-.098-.278.08-.398.396-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm-14.658.009c0-.264-.136-.48-.302-.48-.403 0-.692.5-.436.755.36.36.738.22.738-.275zm8.866-1.15c-.195-.313-.499-.48-.675-.37-.199.122-.174.246.066.326.213.07.305.26.206.421-.1.161-.083.452.038.647.154.25.292.236.47-.051.137-.223.09-.661-.105-.974zm-245.026.331c0-.166-.216-.301-.48-.301-.495 0-.636.377-.276.738.256.256.756-.033.756-.437zm-15.36-.301a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm12.613-.194c.739-.284.647-1.406-.115-1.406-.736 0-1.105.489-.857 1.135.201.524.265.542.972.27zm237.147-.126c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm6.19-.278c.38-.328.69-.817.69-1.085 0-.269.24-.58.533-.693.423-.163.452-.286.137-.595-.312-.306-.51-.253-.933.25-.296.353-.882.64-1.303.64-.42 0-.924.261-1.12.58-.284.463-.23.67.267 1.04.795.59.901.582 1.73-.137zm8.69.278c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm-266.579-1.142c-.549-.662-2.861-.614-2.861.06 0 .356.195.465.628.352.345-.09.792.034.993.276.273.329.525.355.993.105.5-.268.55-.428.247-.793zm3.859.822c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm241.92 0c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm4.623-.347a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm13.903.374c.246-.155.365-.497.264-.759-.13-.34-.017-.432.397-.324.707.185 1.042-.26.539-.717-.368-.334-1.871.17-1.827.612.081.804-.062.919-.47.38-.542-.717-.625-.427-.138.482.367.687.578.742 1.235.326zm-255.646-.526c0-.274-.144-.41-.32-.301-.176.109-.32.333-.32.499 0 .165.144.3.32.3.176 0 .32-.224.32-.498zm10.88-.141a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm242.382.029c.289-.468-.137-1.233-.78-1.401-.403-.105-.55-.012-.459.288l.286.924c.168.535.676.636.953.189zm6.15-.75c.469-.75.352-1.07-.585-1.609-.516-.295-.856-.406-.757-.246.099.16.034.382-.145.493-.458.282-.406 1.357.075 1.551.702.283 1.155.223 1.412-.188zm-259.836-.431c.243-.632-.408-1.077-1.584-1.083-.873-.005-.879.008-.363.795.592.903 1.651 1.06 1.947.288zm240.099-.048c-.003-.132-.14-.454-.306-.716-.237-.374-.29-.323-.247.24.048.634.565 1.08.553.476zm-245.755-.4a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm244-.32c0-.26-.252-.52-.56-.58-.393-.075-.56.098-.56.58s.167.655.56.579c.308-.06.56-.32.56-.58zm8.293-.165c.52-.393.558-.588.247-1.27-.567-1.245-2.3-.887-2.3.475 0 .586.607 1.285 1.104 1.27.184-.006.612-.22.95-.475zM61.18 257.7c-.298-.298-.649-.434-.78-.303-.13.131-.026.373.233.536.779.493 1.125.345.547-.233zm220.084.22c.108-.175.045-.32-.142-.32-.186 0-.338.145-.338.32 0 .177.063.32.14.32.078 0 .23-.143.34-.32zm20.64 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm8-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm-247.04-.96a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm245.586.023c.237-.383-.365-.762-.792-.499-.358.221-.123.797.326.797.155 0 .365-.134.466-.298zm-243.186-.342c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm262.273-.414c-.411-.411-.828-.094-.523.398.117.19.36.256.54.145.218-.135.213-.314-.017-.543zm-264.353-.386c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm5.76.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm256.784-.051c.812-.37 1.105-.909.496-.909-.176 0-.323.18-.325.4-.004.278-.094.26-.296-.06-.24-.378-.378-.386-.792-.043-.275.229-.422.544-.325.7.223.36.264.358 1.242-.088zm-22.696-.527c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm8.152.437c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-244.8-.499a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm239.36-.46c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-229.84-.993c0-.775-.029-.788-.6-.27-.33.298-.6.664-.6.813 0 .149.27.27.6.27.429 0 .6-.231.6-.813zm5.84.493c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm222.128-.16c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm4.112.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-240.64-.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm260.94-.734c-.114-.298-.398-.427-.692-.314-.434.167-.424.246.083.617.682.498.88.4.61-.303zm-12.889-.113c.546-.493.548-.552.039-.924-.747-.546-1.37-.234-1.37.686 0 .892.508.983 1.331.238zm7.792.202c.11-.179.323-.25.473-.157.15.093.509-.069.798-.358.647-.647.163-1.284-.693-.912-.32.14-.75.227-.957.194-.504-.079-.844.518-.623 1.094.207.539.711.609 1.002.14zm2.717-.315a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-263.84-.8c0-.953-1.25-.857-1.386.106-.088.62.02.728.64.64.497-.07.746-.319.746-.746zm37.28.48a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm211.74-.72c.02-.572-.032-.788-.116-.48-.083.308-.302.56-.487.56-.207 0-.182.185.063.48.518.624.498.645.54-.56zm5.86.9c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-11.2-.319c0-.75-.737-1.78-1.273-1.78-.772 0-.845.716-.145 1.416.457.457 1.418.703 1.418.364zm-240.32-.5c0-.177-.225-.32-.5-.32-.274 0-.41.143-.3.32.108.175.333.32.498.32.166 0 .302-.145.302-.32zm248 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm5.44 0c0-.177-.136-.32-.302-.32-.165 0-.39.143-.498.32-.11.175.026.32.3.32.275 0 .5-.145.5-.32zm-236.26-.844c.288-.748-.326-1.557-1.18-1.557-.984 0-1.544.897-.983 1.574.55.662 1.907.651 2.163-.017zm239.606.225c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm-32.786-1c0-.187-.144-.25-.32-.142-.176.11-.32.022-.32-.194s-.087-.306-.193-.2c-.245.246.136.874.531.874.166 0 .302-.152.302-.339zm-226.24-.622a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm253.12-.32c0-.355-.214-.64-.48-.64-.58 0-.62.374-.096.896.516.517.576.49.576-.256zm7.614-.526c-.094-.44-.174-.36-.31.31-.12.585-.075.795.125.595.17-.171.254-.578.185-.905zm-253.694.705c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm8-.339a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm233.92.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-220.88-.4c-.074-.22-.393-.45-.71-.511-.498-.097-.516-.045-.133.388.535.604 1.027.676.843.123zm212.24.08c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-4.8-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-211.36-.804c0-.404-.248-.67-.68-.733-.574-.082-.654.032-.519.736.189.988 1.199.985 1.199-.003zm217.76.164a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-219.914-.38c-.198-.593-.886-.691-.886-.126 0 .278.228.506.506.506.279 0 .45-.17.38-.38zm229.827-.107c-.223-.269-.488-.405-.59-.303-.102.102.027.32.286.483.677.428.766.376.304-.18zm-248.17-.5a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm12.497.347c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm232.8-.14c0-.259-.273-.44-.624-.413-.472.036-.54.148-.281.46.455.548.905.525.905-.047zm-240.32-.34a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm4.807-.179a40.1 40.1 0 0 1 .564-1.146c.343-.67.229-1.075-.305-1.075-.146 0-.266.216-.266.48s-.273.48-.606.48c-.755 0-1.131.89-.632 1.492.433.522.94.428 1.245-.23zm6.713.02a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm233.6.187c0-.073-.5-.647-1.11-1.274-.693-.715-1.292-1.072-1.6-.954-.597.23-.601.427-.024 1.19.304.4.66.52 1.112.377.451-.143.727-.05.857.291.169.44.765.728.765.37zm8.218-.568c-.102-.255-.178-.18-.193.194-.014.337.062.526.168.42.106-.107.118-.383.025-.614zm-233.818.06c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm85.551-.421c.115.114.209.117.209.006 0-.112-.287-.356-.638-.543-.565-.303-.63-.248-.568.486.057.697.125.75.428.335.199-.271.455-.4.57-.285zm126.929-.078c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm6.427-.494c-.169-.422-.316-.598-.327-.393-.027.5.345 1.447.506 1.287.07-.07-.01-.473-.18-.894zm-230.747.353a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm95.893-.136c-.097-.251.044-.639.312-.861.391-.325.613-.325 1.132-.001.354.222.723.324.82.228.095-.096-.059-.264-.344-.373-.639-.245-1.546-1.986-1.16-2.225.157-.097.125-.52-.072-.953-.195-.428-.487-.697-.65-.597-.16.1-.062.438.221.75.48.53.455.58-.376.739-.49.094-1.112.051-1.383-.094-.583-.312-.743-1.491-.244-1.8.207-.127.258-.067.125.147-.26.42.32 1.657.777 1.657.17 0 .31-.612.313-1.36.004-.996.088-1.232.316-.88.265.41.31.398.315-.08.003-.308.157-.56.343-.56.187 0 .246.15.133.334-.114.183-.04.535.165.782.294.354.54.371 1.17.084.64-.291.858-.272 1.092.098.16.254.294.3.297.1.006-.458-.793-1.135-1.044-.884-.104.104-.358.085-.564-.042-.256-.158-.268-.299-.039-.441.216-.133.23-.378.04-.68-.25-.396-.3-.382-.304.088-.005.595-.485.758-.788.268-.099-.161-.01-.35.2-.42.513-.17.084-1.208-.501-1.208-.261 0-.562.444-.687 1.014-.186.846-.273.924-.525.473-.17-.302-.47-.44-.683-.312-.222.133-.197.002.059-.313.286-.353.314-.542.08-.542-.198 0-.36-.224-.36-.498 0-.275-.135-.416-.3-.314-.165.102-.449-.07-.63-.38-.264-.454-.34-.471-.378-.087a3.608 3.608 0 0 0-.005.732c.105.628-.645 1.472-1.138 1.283-.424-.162-.492-.039-.36.655.123.639.068.775-.218.537-.268-.221-.383-.177-.383.146 0 .33.323.444 1.119.395.948-.058 1.127.04 1.172.638.03.389-.131.777-.356.864-.256.098-.342-.017-.231-.307.124-.323-.048-.463-.568-.463h-.745l.656.655c.36.36.968.68 1.35.708.383.03.696.243.696.476 0 .816.99 1.969 1.517 1.767.317-.122.428-.065.294.15-.214.347.038 1.364.337 1.364.088 0 .082-.206-.015-.457zm-.135-2.344c-.058-.83-.036-.846.4-.273.253.334.385.73.292.88-.327.53-.632.263-.692-.607zm1.032-2.976c-.304-.492.112-.81.523-.398.23.23.235.408.017.543-.18.111-.423.046-.54-.145zm-3.66-2.048c-.008-.688.085-.848.343-.59.253.253.256.52.01.943-.301.518-.345.475-.353-.353zm127.328 6.73c.355-.428.176-.471-.877-.21-.123.03.257.664.398.664.056 0 .272-.204.48-.454zm17.622-.186a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-247.36-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.474-.24c.876-1.154.388-2.228-.837-1.839-.642.204-.914 1.44-.317 1.44.176 0 .32.215.32.48 0 .636.313.606.834-.08zm235.326-.075c0-.651-.797-.873-1.44-.4-.64.47-.415.904.502.974.75.057.938-.057.938-.574zm-195.04-.325c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm65.44-.179c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.499zm133.937-.214c-.3-.168-.639-.212-.752-.099-.282.282.63.816 1 .587.163-.1.051-.32-.248-.488zm6.48-.292c.077-.66.235-.81.72-.683.427.112.623 0 .623-.354 0-.575-.806-.706-1.129-.185-.113.184-.488.244-.834.134-.345-.11-.831-.031-1.079.174-.248.206-.6.282-.784.168-.184-.114-.334-.054-.334.132 0 .187.127.34.282.34.156 0 .36.298.456.663.134.51.384.64 1.078.56.706-.081.925-.289 1.001-.949zm-4.451.246c.365-.44.174-1.48-.271-1.48-.13 0-.473.26-.762.58-.405.447-.438.667-.145.96.49.49.731.478 1.178-.06zm-134.202-.194c-.107-.172-.027-.64.178-1.04.352-.686.341-.697-.189-.191-.498.475-.487 1.544.015 1.544.104 0 .102-.14-.005-.313zm125.276-.007c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zM76.2 242.688c.2-.519-.363-1.074-1.096-1.083-.419-.005-.556 1.013-.187 1.382.385.385 1.083.223 1.283-.3zm233.064.192a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm13.44-.021c0-.165-.204-.3-.454-.3-.25.001-.51-.169-.579-.376-.156-.47-.887-.053-.887.507 0 .239.404.424.96.44.528.015.96-.107.96-.271zm-23.36-.3a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm-215.568-.468c.325-.247.497-.602.38-.79-.123-.2.063-.341.449-.341.445 0 .659-.207.659-.64 0-.352-.117-.64-.26-.64-.143 0-.569.288-.947.64-.378.352-.9.64-1.161.64-.605 0-.94.536-.71 1.135.222.58.82.58 1.59-.004zm2.197-.55c-.489-.489-.85-.128-.579.579.16.417.3.458.584.173.285-.284.283-.463-.005-.752zm91.766.459c-.012-.569-.56-1.102-.774-.754-.12.195-.13.498-.021.674.23.373.802.43.795.08zm.709-.325c-.212-.07-.384-.356-.384-.635s-.086-.422-.19-.318c-.335.335.216 1.54.597 1.304.263-.163.257-.258-.023-.351zm112.896-.395a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-222.72-.32c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm13.12-.69c0-.507-1.014-.701-1.294-.247-.4.645.29 1.371.856.902.24-.2.438-.494.438-.654zm7.246.27c.121-.121.064-.22-.127-.22-.19 0-.575-.087-.853-.194-.317-.122-.506-.023-.506.266 0 .462 1.066.568 1.486.148zm231.154-.22c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm3.458-.024c-.063-.19-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.155.418-.344zM77.744 240c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm247.418-.613c.017-.46-.036-.578-.118-.267-.081.308-.28.56-.444.56-.163 0-.296.12-.296.267 0 .703.833.16.858-.56zm-237.978.293a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-16.317-.807c.496-.926.105-1.577-.75-1.25-.772.297-.681 2.057.106 2.057.117 0 .407-.363.644-.807zm21.917.487c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm218.08 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm5.12.179c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm3.126-.44c.071-.211-.167-.38-.54-.38-.665 0-.864.337-.446.754.296.297.83.095.986-.373zm-33.206-.238c0-.274-.144-.41-.32-.301-.176.109-.32.333-.32.499 0 .165.144.3.32.3.176 0 .32-.224.32-.498zm-199.04-.32c0-.274-.147-.408-.326-.298-.179.11-.242.335-.14.5.273.443.466.36.466-.202zm83.264.115c-.515-.515-.489-1.005.042-.8.235.09.427-.04.427-.287 0-.583-.353-.572-.85.027-.45.542-.219 1.444.37 1.444.307 0 .31-.085.01-.384zm142.336.064c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm3.833-.168c-.223-.268-.488-.404-.59-.302-.102.101.027.319.286.482.677.429.766.376.304-.18zm6.964-.043c.62.383 1.468-.607 1.252-1.464-.392-1.562-2.506-1.556-2.246.007.079.477.144 1.154.144 1.504 0 .477.068.527.27.199.15-.24.41-.351.58-.246zm-250.682-.27c.102-.263.045-.48-.126-.48-.17 0-.31.217-.31.48 0 .265.057.48.126.48.07 0 .209-.215.31-.48zm1.805-.018c0-.274-.147-.408-.326-.298-.179.11-.242.335-.14.499.273.444.466.361.466-.201zm233.778-.172c.12-.193.02-.547-.22-.788-.556-.555-1.408-.084-1.135.627.225.586 1.034.682 1.355.161zm-9.778-.61c0-.175-.153-.32-.34-.32-.186 0-.25.145-.14.32.108.177.26.32.338.32.078 0 .142-.143.142-.32zm15.04-.64c0-.175-.153-.32-.34-.32-.186 0-.25.145-.14.32.108.177.26.32.338.32.078 0 .142-.143.142-.32zm-142.502-.7c-.102-.254-.178-.179-.193.194-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm5.017-.1c-.101-.263-.24-.48-.31-.48-.069 0-.125.217-.125.48 0 .265.139.48.31.48.17 0 .227-.215.125-.48zm143.7.12c-.077-.123.041-.294.263-.38.22-.085-.02-.131-.533-.102-.515.029-.994.23-1.067.446-.084.252.158.37.672.328.442-.037.74-.168.664-.292zm2.425-.726c0-.095-.216-.09-.48.011-.264.102-.48.395-.48.653 0 .406.063.405.48-.011.264-.264.48-.558.48-.653zm-233.457.1a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm215.857.347a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm2.72 0c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm4.96 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.28 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-140.082-.213c-.222-.089-.307-.316-.191-.504.125-.202.06-.249-.158-.114-.558.345-.443.834.19.806.338-.016.401-.09.159-.188zm117.682-.107a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm9.28 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-213.44-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm12.16 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm70.19-.174c-.104-.271-.258-.425-.342-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm154.77.353c0-.078-.144-.23-.32-.34-.176-.108-.32-.044-.32.142s.144.339.32.339c.176 0 .32-.064.32-.141zm-151.383-.74c-.012-.131-.16-.527-.327-.88-.287-.603-.296-.6-.171.066.073.387-.032.772-.233.854-.202.083-.114.162.194.176.308.014.55-.083.537-.215zm117.143-.258c0-.274-.147-.408-.326-.298-.179.11-.242.335-.14.499.273.444.466.361.466-.201zm17.711-.311c-.099-.259-.386-.47-.637-.47-.36 0-.383.138-.11.649.385.72 1.033.564.747-.18zm-5.711.17c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm3.04 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm14.301-.874c-.08-.311-.153-.134-.16.394-.006.528.06.783.148.566.088-.217.093-.649.012-.96zm5.379.874a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.397.725.397.48 0zm-154.08-.461c0-.254-.144-.55-.32-.66-.176-.108-.32.1-.32.462s.144.659.32.659c.176 0 .32-.208.32-.461zm112 .14c0-.175-.064-.32-.142-.32-.077 0-.23.145-.338.32-.11.177-.046.32.14.32.187 0 .34-.143.34-.32zm-101.44-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .177.144.32.32.32a.32.32 0 0 0 .32-.32zm122.4-.266c0-.579-.627-.473-.751.127-.07.334.05.48.32.39.237-.079.43-.311.43-.517zm19.188-.012a1.01 1.01 0 0 0-.495-.241c-.161-.022-.33-.069-.373-.104-.324-.258-1.52-.269-1.52-.014 0 .175.224.318.498.318.275 0 .426.118.337.262-.089.144.27.199.796.122.527-.078.868-.232.757-.343zm-250.908-.213a.51.51 0 0 0-.3-.68c-.626-.24-.912.049-.67.678.243.633.727.634.97.002zm113.572-.148c.105-.4.01-.64-.252-.64-.263 0-.358.24-.253.64.092.352.206.64.253.64.047 0 .16-.288.252-.64zm131.982-.689c-.17-.672-.437-1.143-.593-1.047-.158.098-.13.46.062.82.19.355.276.827.192 1.048-.085.22.026.401.247.401.307 0 .329-.29.092-1.222zm-199.011.262c.07-.36-.113-.533-.56-.533-.365 0-.663.192-.663.427 0 .98 1.036 1.07 1.223.106zm184.057.427a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-208.64-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.28 0c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm221.76 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm7.675-.579c-.004-.466-.048-.475-.315-.061-.405.627-.405 1.05 0 .8.176-.109.317-.441.315-.739zm-144.98-1.965c.052-.99-.573.194-.752 1.424l-.186 1.28.457-1.12c.251-.616.468-1.329.481-1.584zm116.825 2.064a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm9.519-.398c.066-.197-.177-.518-.54-.712-.557-.298-.66-.26-.66.245 0 1.012.901 1.362 1.2.467zm-6.96-.242c0-.264-.139-.48-.31-.48-.17 0-.227.216-.125.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm19.52.019c0-.713-.5-.855-.553-.157-.026.34.088.618.253.618s.3-.208.3-.461zm-242.268-.872c-.248-.464-.45-.556-.692-.315-.24.241-.221.485.066.831.568.685 1.054.284.626-.516zm10.086.51c.686-.686.634-.996-.27-1.589-.633-.414-.89-.434-1.409-.11-.625.39-.616.967.03 1.802.42.542 1.043.503 1.649-.103zm235.608-.558c-.074-.208-.4-.354-.723-.324-.324.03-.772-.185-.995-.48-.378-.497-.408-.495-.417.025-.006.308.17.572.39.586.32.02.32.057 0 .186-.22.09-.4.323-.4.52 0 .247.117.24.384-.028.539-.54 1-.478.777.104-.154.401-.072.426.465.138.359-.192.592-.52.519-.727zm-244.065.082c0-.165-.216-.3-.48-.3-.495 0-.636.377-.276.737.256.256.756-.033.756-.437zm216 .34c0-.177-.064-.32-.142-.32-.077 0-.23.143-.338.32-.11.175-.046.32.14.32.187 0 .34-.145.34-.32zm1.372-.64c-.092-.353-.294-.64-.45-.64-.33 0-.361.382-.089 1.091.274.713.741.321.54-.452zm-112.115-.027c.012.25.118.358.234.242.116-.117-.058-.51-.387-.873-.516-.57-.534-.708-.132-.992.374-.265.348-.292-.131-.136-.48.157-.565.067-.429-.454.231-.885-.818-1.469-1.393-.776-.224.27-.275.466-.114.436.729-.139 1.095.064 1.095.606 0 .323.108.695.24.827s.258.516.28.853c.067 1.03.153 1.12.44.453.162-.378.284-.454.297-.186zm97.303.346a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-190.08-.32c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm210.383-.347a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm-120.303-.933c-.122-.553-.28-.946-.353-.874-.073.073-.04.592.073 1.154.112.563.27.956.352.874.082-.081.049-.6-.072-1.154zm1.16.555c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm115.4-.101c-.305-.305-.917.189-.69.556.135.219.314.213.544-.016.189-.189.254-.432.145-.54zm-105.84-.008c0-.07-.216-.126-.48-.126s-.48.14-.48.31c0 .17.216.227.48.126.264-.102.48-.241.48-.31zm-110.4-.126a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm44.48-.16a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.216.48.48.48s.48-.216.48-.48zm58.671.01c.1-.258.043-.555-.125-.659-.169-.104-.306.108-.306.47 0 .773.177.85.431.19zm103.569.15a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm36.697-1.36.036-1.68-.278 1.405c-.233 1.181-.18 1.955.134 1.955.04 0 .088-.756.108-1.68zm-145.23.817c-.187-.226-.468-.331-.624-.235-.508.314-.299.74.34.691.469-.035.54-.149.284-.456zm13.493.417c0-.07-.224-.211-.497-.316-.285-.11-.413-.056-.301.126.188.304.798.45.798.19zm86.08-.194a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm43.346.022c.101-.164.038-.388-.141-.499-.18-.11-.325.024-.325.298 0 .562.192.645.466.201zm-239.186-.33c0-.17-.288-.464-.64-.652-.496-.265-.64-.243-.64.095 0 .241.096.534.213.652.322.322 1.067.255 1.067-.096zm1.052-.332c-.092-.352-.294-.64-.45-.64-.155 0-.282.288-.282.64 0 .352.202.64.45.64.292 0 .391-.224.282-.64zm31.61.133c.305-.367.328-.653.085-1.04-.478-.758-1.434-.86-1.914-.204-.888 1.215.864 2.407 1.829 1.244zm77.653-.18c.037-.486-.048-.588-.288-.349-.187.187-.243.497-.125.688.301.487.354.443.413-.34zm87.445.367c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm24.218-.38c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm16 0c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-27.738.06a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm10.138-.38c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-123.22-1.348c-.165-1.083-.675-.617-.693.634-.014 1.004.035 1.079.39.593.223-.305.36-.858.303-1.227zm12.282 1.587c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm122.24-.339c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm-130.753-.085c-.193-.129-.434-.45-.534-.715-.122-.32-.191-.24-.208.24-.017.484.158.719.535.715.345-.003.425-.095.207-.24zm124.571-.455c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm3.905.41c.286-.182.372-.564.243-1.08-.378-1.504-2.126-1.445-2.126.071 0 .48.096.969.213 1.086.297.297 1.14.258 1.67-.077zm7.166-.362c-.094-.36-.193-.611-.22-.56-.028.05-.243.344-.48.652-.374.49-.347.56.221.56.496 0 .61-.154.479-.652zm-239.61.012c-.108-.176-.333-.32-.498-.32-.166 0-.301.144-.301.32 0 .176.224.32.498.32.275 0 .41-.144.302-.32zm218.08 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm23.523-.366c-.023-.32-.165-.692-.314-.827-.15-.136-.174-.077-.055.131.12.208.07.469-.108.58-.461.284-.404.696.097.696.233 0 .404-.261.38-.58zm-215.922-.034a.63.63 0 0 0-.56-.4.63.63 0 0 0-.56.4c-.08.238.147.4.56.4.412 0 .639-.162.56-.4zm71.978-.3c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm128.418.15c.824-.706.826-1.37.004-1.37-.352 0-.64.205-.64.454 0 .25-.088.682-.194.96-.252.657.028.642.83-.045zm-223.036-.09a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm20.48.054c0-.417-.38-.694-.69-.503-.331.205-.046.77.388.77.166 0 .302-.12.302-.267zm-12.86-1.096c.114-.978-.36-1.143-1.114-.39-.606.606-.305 1.517.453 1.373.338-.064.6-.454.662-.983zm197.82.722a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm35.138-.488c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm-178.178-.01c0-.275-.147-.409-.326-.298-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm33.498-.202c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-.538.255c0-.07-.216-.21-.48-.31-.264-.102-.48-.045-.48.125 0 .17.216.31.48.31s.48-.056.48-.125zm2.458-.575c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-94.298.06a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm9.206-.26c.07-.209-.101-.38-.38-.38a.508.508 0 0 0-.506.507c0 .565.688.467.886-.127zm1.674.26c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm205.44 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm14.44-.24c.398-.507.387-.519-.12-.12-.308.241-.56.493-.56.56 0 .263.262.093.68-.44zm-205.8-.08c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-7.106-1.221c-.145-.754-1.292-.686-1.405.083-.05.342-.019.738.07.88.275.447 1.444-.397 1.335-.963zm13.186.715c0-.279-.171-.45-.38-.38-.594.197-.692.886-.127.886a.508.508 0 0 0 .507-.506zm-15.84-.134c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm11.955-.106c.5-.603-.26-1.602-1.004-1.317-.643.247-.713.814-.167 1.36.492.492.734.483 1.17-.043zm65.645-.214c-.396-.739-.517-.778-.831-.27-.133.216-.089.283.108.162.184-.115.418.008.519.27.1.263.265.478.365.478.1 0 .027-.288-.161-.64zm112.32.18c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm8.32-.18c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm14.56 0a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.398.725.398.48 0zm-42.08-.32c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm21.44 0c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-199.36-.32c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm87.162-.176c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm-92.922-.144a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm10.349-.143c.119-.31.024-.405-.286-.286-.255.098-.463.306-.463.464 0 .46.555.328.749-.178zm175.25-.177c0-.362-.213-.64-.49-.64-.393 0-.423.13-.15.64.189.352.41.64.492.64.082 0 .149-.288.149-.64zm3.2.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm6.08 0c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm16 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm-202.56-.32c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm5.12-.16a.481.481 0 0 0-.48-.48.481.481 0 0 0-.48.48c0 .264.217.48.48.48.265 0 .48-.216.48-.48zm78.748.017c.16.1.293.017.293-.184 0-.475-.737-.232-.836.275-.042.214-.003.24.087.058.09-.181.295-.248.456-.149zm2.213.322c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-89.76-.499c-.11-.176-.334-.32-.5-.32-.165 0-.3.144-.3.32 0 .176.224.32.498.32.275 0 .41-.144.302-.32zm-9.44-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm49.84-.506c-.305-.305-.917.189-.69.556.135.219.314.213.544-.016.189-.189.254-.432.145-.54zm161.36.506c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm13.12 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-209.407-.873c-.325-.325-.594.164-.327.596.202.327.277.327.385.001.075-.222.048-.49-.058-.597zm201.727.553a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm12.16.02c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.301 0 .275.144.5.32.5.176 0 .32-.136.32-.302zm-216.205-.5c-.2-.523-.755-.66-.755-.186 0 .243.224.408.87.641.038.014-.013-.19-.115-.455zm85.315-.8c0-.397-.049-.403-.28-.039-.155.245-.452.335-.667.202-.303-.188-.303-.083 0 .482.306.573.444.63.666.279.155-.244.281-.66.281-.924zm127.69 1.14c0-.339-.615-.48-.797-.185-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm-219.36-.686c0-.157-.252-.333-.56-.393-.33-.063-.56.087-.56.368 0 .27.24.44.56.393.308-.046.56-.211.56-.368zm10.72-.134a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm159.04 0c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm36.48-.344c0-.151-.216-.193-.48-.091-.264.101-.48.308-.48.46 0 .151.216.192.48.091s.48-.308.48-.46zm3.52.344a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-191.68-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm156.8 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm23.68 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-139.042-1.282c-.295-.478-.794-.382-1.015.195-.262.682.598 1.218.95.59.143-.257.173-.61.065-.785zm153.355 1.089c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-183.45-.794a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm133.16.125c-.082-.558-.823-1.015-.823-.508 0 .243.641 1.05.835 1.05.037 0 .032-.244-.012-.542zm28.937.062c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm24.786.182c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zM92.944 219.2a.32.32 0 0 0-.32-.32c-.176 0-.32-.216-.32-.48 0-.5-.379-.635-.747-.266-.117.117.039.468.347.78.635.645 1.04.756 1.04.286zm2.88.18c0-.339-.615-.48-.797-.185-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm36.96-.504c0-.262-.324-.522-.72-.578-.7-.1-1 .516-.496 1.02.373.373 1.216.066 1.216-.442zm171.52.324c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-200.48-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm.96 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm142.866.022c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .562.192.645.466.201zm21.934-.022a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm17.28 0c0-.176-.136-.32-.302-.32-.165 0-.39.144-.498.32-.11.176.026.32.3.32.275 0 .5-.144.5-.32zm6.72-.01c0-.412-.912-.785-1.205-.492-.12.12-.005.351.254.515.62.392.95.384.95-.023zm-206.894-.288c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm176.494-.022a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm7.84 0c.108-.176-.036-.32-.32-.32-.285 0-.43.144-.32.32.108.176.252.32.32.32.067 0 .21-.144.32-.32zm9.12 0c0-.176-.216-.32-.48-.32s-.48.144-.48.32c0 .176.216.32.48.32s.48-.144.48-.32zm15.074-.539c-.126-.472-.416-.921-.643-.997-.325-.108-.336.007-.051.54.199.372.276.676.172.676-.105 0-.101.144.008.32.4.648.738.295.515-.539zm-195.234.04c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.498zm-6.08-.746c0-.51-.185-.997-.41-1.083-.37-.142-.423.229-.256 1.768.014.132.17.24.346.24.176 0 .32-.416.32-.925zm3.68.125c0-.746-.95-1.019-1.62-.464-.406.338-.394.445.096.82.767.589 1.524.412 1.524-.356zm46.817-.359c.11-1.142-.562-1.603-1.56-1.068-1.16.62-.505 2.35.819 2.16.461-.066.671-.375.74-1.092zm146.463.84c.108-.177-.027-.32-.302-.32-.274 0-.498.143-.498.32 0 .175.135.32.3.32.166 0 .39-.145.5-.32zm-185.92-.32c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm72.91-.174c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm116.37.173c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm9.92.012c0-.17-.259-.447-.574-.616-.456-.244-.583-.18-.62.309-.031.412.159.615.573.615.341 0 .62-.138.62-.308zm4.48-.012c-.264-.17-.624-.31-.8-.31-.176 0-.104.14.16.31.264.171.624.31.8.31.176 0 .104-.139-.16-.31zm-207.04-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm197.12 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-194.719-.322c.11-.178.104-.626-.014-.996-.192-.605-.263-.623-.704-.182-.27.27-.404.718-.297.996.22.572.718.662 1.015.182zm75.078-.403c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm104.596.005c-.004-.562-.07-.618-.3-.255-.161.255-.222.58-.135.72.277.449.44.275.435-.465zm3.845.4c0-.176-.252-.317-.56-.315-.48.004-.49.05-.08.315.603.39.64.39.64 0zm1.81-.477c-.377-.812-.85-1.073-.85-.47 0 .378.69 1.237 1.01 1.255.115.007.043-.346-.16-.785zm-157.184-.14c.101-.164.038-.389-.141-.5-.18-.11-.325.024-.325.298 0 .563.192.645.466.201zM297.744 216a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm8.32.035c0-.158-.216-.37-.48-.47-.488-.188-.656.153-.267.542.306.306.747.263.747-.072zm-209.28-.355c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm171.2 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm12.96 0c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm14.671-.49c-.254-.661-.431-.583-.431.19 0 .362.137.573.306.469.168-.104.224-.4.125-.659zm-200.431.17a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm42.56 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm120.32.18c0-.339-.615-.48-.797-.185-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm40.8-.18c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-198.832-.48c0-.167-.155-.355-.344-.418-.19-.063-.344.125-.344.418 0 .294.154.482.344.419.189-.063.344-.251.344-.419zm55.632.34c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm22.557-.176c.112-.181-.016-.235-.3-.126-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm85.283.175c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm30.633-.052c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm2.52-.68c-.325-.325-.594.164-.327.596.202.327.277.327.385.001.075-.222.048-.49-.058-.597zm3.466.2c-.28-.452-.78-.334-.78.183 0 .286.188.398.479.287.263-.101.398-.313.3-.47zm-41.74.033c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm10.88 0c0-.4-.34-.4-.96 0-.388.251-.342.311.24.315.397.003.72-.139.72-.315zm32.96-.16c0-.295-.276-.465-.72-.443-.541.028-.58.074-.16.184.309.08.56.28.56.443 0 .163.073.296.16.296.089 0 .16-.216.16-.48zm-9.92.02c0-.078-.143-.23-.32-.34-.175-.108-.32-.045-.32.141 0 .187.145.34.32.34.177 0 .32-.064.32-.142zm-188.48-.305c0-.07-.223-.212-.496-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm24-.195c0-.176-.063-.32-.14-.32-.078 0-.23.144-.34.32-.108.176-.045.32.142.32.186 0 .339-.144.339-.32zm109.609-.258c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm24.43-.14c-.269-.502-.43-.588-.531-.284-.08.24.052.562.294.714.639.406.662.364.236-.43zm9.269.175c-.187-.225-.468-.33-.624-.234-.508.314-.299.739.34.69.469-.035.54-.148.284-.456zm4.373-.097c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm12.32 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-176.96-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm42.4-.266c0-.58-.627-.473-.751.126-.07.334.05.48.32.39.237-.078.43-.311.43-.516zm138.817.38c-.21-.085-.302-.362-.205-.614.097-.253.033-.46-.14-.46-.175 0-.393.288-.485.64-.13.499-.015.635.522.615.38-.014.519-.095.308-.18zm3.462-.519c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-164.066.211c.514-.197.72-1.086.25-1.086-.33 0-1.023.693-1.023 1.024 0 .307.11.316.773.062zm162.427-.126c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm-163.322-.793c.61-.61.552-.922-.118-.638-.308.13-.956.215-1.44.189-.846-.046-1.19.507-.65 1.046.312.312 1.665-.053 2.208-.597zm-7.707-.204c.147-.462.013-.88-.422-1.316-.638-.637-.64-.637-1.321.045-.546.546-.615.81-.345 1.316.463.864 1.81.835 2.088-.045zm173.589.357a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-161.24-1.046c-.426-.427-1.011.006-.79.585.145.375.282.396.64.1.29-.242.345-.491.15-.685zm158.387.583c.44.272.352-.05-.12-.441-.316-.262-.422-.176-.448.36-.019.388.035.523.12.302.086-.22.287-.32.448-.22zm-17.947-.177c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm12.66-.354c.095-.153-.036-.198-.292-.1-.255.098-.559.024-.675-.164-.116-.188-.035-.342.181-.342s.3-.092.187-.205c-.273-.273-1.181.496-1.181 1 0 .44 1.49.281 1.78-.19zm2.561-.631c-.069-.718-.23-1.402-.359-1.52-.128-.118-.136.188-.018.68.28 1.163-.17 1.963-.485.862-.2-.704-.222-.675-.185.243.03.766.191 1.04.607 1.04.47 0 .544-.223.44-1.305zm-144.981.665c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm118.88 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm8-.16c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm23.565 0c.521-.52.444-.586-.34-.285-.278.106-.505.322-.505.48 0 .419.301.35.845-.195zm2.035.16c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-30.254-.298c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm26-.893c-.342-.341-.546-.4-.546-.157 0 .213.159.388.354.388.205 0 .264.236.14.56-.17.451-.133.482.193.158.327-.324.3-.508-.141-.949zm-1.26-.029c.192-.576-.47-.455-.692.127-.12.312-.049.458.185.38a.906.906 0 0 0 .507-.507zm-137.063-.407a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm128.075-.033c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm2.662.38c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-151.04-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm41.374-.353c-.243-.243-.413-.227-.588.055-.158.256-.114.316.124.169.203-.126.37-.052.37.164s.098.294.218.173c.12-.12.065-.372-.124-.56zm112.226.212c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-29.12-.499a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm6.19-.493c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm-12.674-.368c-.298-.297-.631-.45-.74-.34-.316.314.168.881.751.881.488 0 .488-.042-.011-.54zm30.004.221c-.11-.176.062-.322.38-.325.483-.004.5-.054.108-.303-.308-.195-.55-.17-.699.07-.221.358-.074.878.248.878.088 0 .071-.144-.038-.32zm2.317-1.149c-.316-.315-.865.488-.674.986.204.532.25.518.497-.152.15-.406.23-.78.177-.834zm-140.717.83a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm105.746.021c.101-.163.038-.388-.141-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm20.654-.52c0-.275-.144-.41-.32-.302-.176.11-.32.334-.32.5 0 .165.144.3.32.3.176 0 .32-.224.32-.499zm1.498-.202c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-9.737-1.267c-.178-.177-.225.121-.12.757.148.889.193.934.294.293.065-.416-.013-.888-.174-1.05zm-4.881 1.007a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm29.76-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-109.419-.4c.012-.22.082-.86.156-1.424.073-.563.005-1.103-.152-1.2-.157-.097-.205.134-.105.514.122.469.063.618-.186.464-.251-.155-.33.076-.253.743.062.532-.002.897-.142.81-.14-.086-.346-.01-.456.168-.112.18.093.325.458.325.362 0 .668-.18.68-.4zm65.797-.3c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm17.382.38c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm7.661-.405c-.365-.34-.74-.542-.835-.448-.246.246.588 1.067 1.083 1.067.257 0 .163-.237-.248-.62zm-21.901.085c.108-.176-.036-.32-.32-.32-.285 0-.43.144-.32.32.108.176.252.32.32.32.067 0 .21-.144.32-.32zm25.212-.32c.092-.352.037-.64-.122-.64-.16 0-.29.288-.29.64 0 .352.055.64.122.64.068 0 .198-.288.29-.64zm5.348.5c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm4.8 0c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-127.68-.5a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm102.08 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm14.08 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-118.944-1.17c-.213-.555-.622-.55-.837.011-.229.596.459 1.295.773.787.126-.203.154-.563.064-.799zm25.335.864c.273-.442-.72-.646-1.072-.221-.239.287-.16.406.29.44.34.026.692-.073.782-.22zm-27.031-.334a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm17.28 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm12.16 0c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm-.21-1.453c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm67.25.173c-.11-.176-.334-.32-.5-.32-.165 0-.3.144-.3.32 0 .176.224.32.498.32.275 0 .41-.144.302-.32zm-94.66-.495c.273-.272.413-.577.313-.678-.184-.184-1.173.65-1.173.99 0 .324.352.196.86-.312zm26.66.055c0-.067-.252-.319-.56-.56-.508-.399-.52-.387-.121.12.418.533.68.703.68.44zm-21.93-.504c.208-.336-.92-1.06-1.206-.773-.1.099-.103.382-.008.629.196.51.933.599 1.213.144zm4.33-.016a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-2.56-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm68.058-1.02c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-44.858-.26c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm75.506.022c.101-.163.038-.388-.141-.498-.18-.11-.325.023-.325.297 0 .563.192.645.466.201zm-1.106-.147c0-.07-.224-.212-.497-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm-73.112-.773c-.099-.098-.357 0-.574.219-.314.316-.277.352.18.179.315-.12.492-.3.394-.398zm-23.528-1.022a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm30.895-.934c-.1-.162.037-.512.304-.78.3-.3.363-.56.163-.684-.177-.11-.322-.03-.322.179 0 .273-.115.282-.415.034-.324-.269-.403-.155-.361.52.064 1.047.054 1.025.474 1.025.187 0 .257-.132.157-.294zm50.385-.026c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-.96-.32c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-53.01-.813c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm-6.612-.527c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm65.205.033a.357.357 0 0 0-.49-.116.357.357 0 0 0-.117.49.357.357 0 0 0 .49.117.357.357 0 0 0 .117-.49zM159.939 196c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm-.595-.8c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm83.297-.64c.04-.528-.064-.96-.231-.96s-.291.432-.276.96c.015.528.118.96.23.96.112 0 .236-.432.277-.96zm5.081-.06c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-3.738-.118c0-.275-.144-.41-.32-.302-.176.11-.32.334-.32.5 0 .165.144.3.32.3.176 0 .32-.224.32-.498zm1.554-.107c.306-.194.188-.275-.4-.275-.46 0-.834.126-.834.28 0 .356.669.354 1.234-.005zm-14.034-.355a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-44.998-.816c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm58.278-.144c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm-43.253-1.14c.17-.517.467-1.045.66-1.175.202-.134.216-.233.032-.23-.584.01-1.507.897-1.293 1.244.116.188.083.341-.074.341s-.286.22-.286.49c0 .788.627.352.961-.67zm33.653.82c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm2.88-.64c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm7.2 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-59.36-1.28c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm48.8 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-40.005-1.04c.003-.132-.14-.24-.315-.24-.176 0-.318.324-.316.72.004.583.065.629.316.24.17-.264.312-.588.315-.72zm-7.9-.132c-.116-.303-.073-.451.102-.344.168.104.305-.084.305-.42 0-.334-.17-.673-.38-.753-.246-.095-.378.237-.378.952 0 .603.125 1.097.277 1.097.153 0 .186-.24.074-.532zm53.923-.596c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm-54.658.008c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm56.96.16a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-62.69-1.378c-.418-.418-.477.045-.12.952.222.565.235.565.35-.008.066-.327-.038-.752-.23-.944zm14.503.852c.268-.698-.088-1.023-.466-.425-.378.599-.386.95-.022.95.157 0 .377-.236.488-.525zm44.027-1.074c0-.176-.252-.318-.56-.315-.48.004-.49.05-.08.315.603.39.64.39.64 0zm-1.974-.545c-.187-.224-.467-.33-.623-.233-.489.303-.31.64.339.64.468 0 .538-.1.284-.407zm3.641-.56c-.105-.173-.24-.138-.313.083-.071.212-.26.305-.422.205-.324-.2-.405.278-.098.584.285.286 1.05-.514.833-.871zm-67.803-1.544c-.241-.39-1.064.63-1.064 1.32 0 .321.197.24.633-.263.348-.402.542-.877.431-1.057zm60.536 1.37c-.11-.177-.334-.32-.5-.32-.165 0-.3.143-.3.32 0 .175.224.32.498.32.275 0 .41-.145.302-.32zm2.72.039c0-.155-.204-.45-.452-.656-.342-.284-.507-.285-.681-.003-.126.204-.031.497.212.65.567.36.92.363.92.009zm3.2-.08c0-.154-.144-.28-.32-.28-.176 0-.32-.224-.32-.499 0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.1.164.03.298-.156.298s-.338.126-.338.28c0 .154.36.28.8.28.44 0 .8-.126.8-.28zm-51.337-.847c-.553-.528-.561-.52-.195.195.21.41.471.66.578.552.108-.107-.065-.443-.383-.747zm49.417.213c0-.366-.868-.374-1.093-.01-.094.151-.088.357.012.458.25.25 1.08-.095 1.08-.448zm-28.16.213c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-30.081-.819c-.206-.127-.351-.355-.323-.507.028-.152-.084-.322-.25-.377-.165-.055-.266.23-.224.632.097.934.07.906.664.678.358-.138.397-.263.133-.426zm-3.072.128c.396-.152.428-.327.154-.84-.263-.492-.245-.712.076-.91.233-.145.318-.37.188-.499-.323-.323-.712.162-1.125 1.401-.349 1.046-.217 1.203.707.848zm8.193-.79c0-.541-.206-1.19-.458-1.44-.556-.557-.95-.602-.622-.072.131.212.271.824.311 1.36.09 1.202.064 1.134.449 1.134.176 0 .32-.442.32-.982zm48.032.221c-.294-.354-.287-.493.034-.622.263-.106.21-.175-.146-.191-.308-.014-.56.056-.56.155 0 .413.705 1.46.871 1.295.099-.1.009-.386-.2-.637zm-72.192.121c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm74.72-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-63.04-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm11.2-.64c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm25.709-.143c.119-.31.024-.405-.284-.287-.254.098-.382.306-.285.464.245.397.363.36.569-.177zm-36.59-.167c0-.17-.217-.226-.483-.124-.346.133-.427.039-.286-.33.109-.284.039-.516-.156-.516-.387 0-.483.725-.141 1.067.323.323 1.067.255 1.067-.097zm2.88.01c0-.166-.146-.392-.325-.503-.179-.11-.223-.37-.098-.579.127-.211-.013-.183-.319.065-.418.339-.46.545-.182.88.417.503.924.578.924.136zm32.32-.641c0-.145-.36-.333-.8-.417-.939-.18-.965-.132-.294.539.489.488 1.095.42 1.095-.122zm4.8-.376c0-.176-.143-.231-.32-.122-.175.108-.32.341-.32.517s.145.231.32.123c.177-.11.32-.342.32-.518zm19.84.019c0-.166-.12-.301-.266-.301-.147 0-.267.21-.267.465 0 .257.12.392.267.302.147-.091.267-.3.267-.466zm-62.167-.942c.027-.365-.15-.64-.412-.64-.278 0-.46-.317-.46-.8 0-.675-.15-.8-.96-.8-.687 0-.971-.159-.998-.56-.035-.533-.044-.533-.183 0-.172.66-.52.703-1.37.172-.34-.213-.73-.277-.866-.142-.357.357.554.84 1.598.845.783.004.872.098.678.71-.213.672-.197.679.335.146.65-.65 1.305-.534 1.242.22-.024.288.076.448.224.357.147-.091.424.126.615.483.432.808.496.809.557.01zm40.204-.39c-.12-.193-.304-.148-.472.116-.208.329-.282.279-.305-.206-.017-.361-.102-.461-.195-.23-.09.227-.078.639.03.917.155.407.285.429.666.113.26-.216.384-.535.276-.71zm-39.398-.196c.087-.334-.016-.587-.238-.587-.223 0-.326.253-.24.587.085.322.193.586.24.586.047 0 .154-.264.238-.586zm-4.558-.195c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm66.4-.179c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-2.08-1.139c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm3.68.18c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm-70.88-.622c0-.341-.144-.71-.32-.819-.182-.112-.32.157-.32.621 0 .45.144.82.32.82.176 0 .32-.28.32-.622zm69.875-.179c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm-67.422-1.216c0-.228-.281-.437-.625-.463-.606-.045-.607-.034-.026.406.328.25.61.458.624.463.015.006.027-.177.027-.406zm46.187-.098c0-.07-.216-.126-.48-.126s-.48.14-.48.31c0 .17.216.227.48.126s.48-.24.48-.31zm-47.68-.436c0-.17-.216-.227-.48-.125-.264.101-.48.24-.48.31 0 .069.216.125.48.125s.48-.14.48-.31zm48.99-1.068c-.254-.253-.35-.17-.35.301 0 .846.447 1.295.59.592.06-.298-.048-.7-.24-.893zm1.045.258c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm2.765-.509c0-.151-.346-.144-.768.017-.421.16-.877.193-1.01.072-.135-.12-.153-.059-.041.138.228.4 1.819.202 1.819-.227zm-55.873.083c.09-.147-.039-.267-.287-.267-.249 0-.378.12-.288.267.091.146.22.266.288.266.067 0 .196-.12.287-.266zm58.753-.77c0-.134-.144-.244-.32-.244-.176 0-.32.153-.32.34 0 .186-.12.264-.267.173-.147-.09-.267.031-.267.27 0 .343.126.358.587.07.323-.202.587-.476.587-.61zm-7.68.396c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm8.8 0c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-5.36-.832c.988-.079 1.053-.16.537-.675-.601-.602-1.541-.872-1.219-.35.127.205-.05.246-.478.11-.404-.128-.68-.077-.68.126 0 .188.216.341.48.341.277 0 .489.304.502.72.016.52.083.587.24.24.12-.264.398-.494.618-.512zm-50.64.192c-.11-.176-.442-.317-.74-.315-.466.004-.474.048-.06.315.626.405 1.05.405.8 0zm5.28.02c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.498.32.498.176 0 .32-.135.32-.3zm44.16.037c0-.29-1.3-1.103-1.48-.925-.074.075-.056.343.04.595.177.46 1.44.75 1.44.33zm-47.021-1.805c.161.1.203-.054.092-.342-.157-.41-.256-.433-.459-.105-.202.327-.302.303-.46-.109-.111-.29-.438-.617-.727-.728-.29-.11-.425-.1-.3.024.123.124-.025.412-.33.64-.503.377-.488.4.159.237.566-.143.794.01 1.097.736.365.872.389.881.509.19.069-.398.257-.642.419-.543zm10.327.652c.097-.251-.06-.647-.347-.88-.379-.307-.456-.314-.282-.024.142.237.07.41-.179.426-.324.02-.328.061-.017.187.222.09.321.294.222.455-.1.16-.044.292.123.292.168 0 .384-.205.48-.456zm1.213-.269c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-14.44-.056c0-.516-.453-.899-.733-.619-.25.25.095 1.08.448 1.08.157 0 .286-.207.286-.46zm16.64-.187c0-.142.094-.523.208-.845.169-.48.128-.514-.224-.187-.613.568-.943.496-.943-.205 0-.334-.237-.697-.526-.808-.413-.158-.448-.109-.166.231.303.365.567 1.241.668 2.212.032.313.984-.072.984-.398zm-18.88.187c0-.337-.614-.48-.796-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm13.095-1.258c-.017-.244-.075-.238-.18.021-.086.21-.327.342-.535.293-.209-.05-.27-.03-.138.045.134.074.142.303.02.508-.124.205.02.175.317-.067.298-.241.53-.601.516-.8zm40.932.17a33.93 33.93 0 0 1-.503-.671c-.076-.11.068.917.213 1.52.013.054.174.005.359-.11.227-.14.204-.379-.07-.738zm3.19.12c.094-.094-.13-.17-.497-.17s-.926-.1-1.243-.222c-.511-.196-.523-.164-.106.285.43.463 1.432.52 1.846.106zm2.368.085c-.212-.21-.384-.651-.384-.978 0-.328-.147-.505-.326-.394-.179.11-.25.321-.16.469.092.147-.122.192-.474.1-.358-.093-.64-.01-.64.19 0 .197.216.375.48.397.903.076 1.066.12 1.306.36.132.132.317.24.41.24.095 0-.001-.172-.212-.384zm-44.704-.576c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm1.527-.872c-.115-.3-.28-.344-.492-.13-.176.175-.222.577-.1.892.177.463.271.488.492.13.15-.243.195-.644.1-.892zm-15.558.083c-.203-.434-.42-.646-.48-.47-.06.177.065.532.28.79.561.677.622.58.2-.32zm12.63.064c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm41.88-.235a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm-.252-1.28c.16 0 .2-.18.088-.4-.112-.22.024-.12.3.222.532.654.633.565.31-.275-.107-.279-.471-.507-.81-.507-.338 0-.698-.215-.799-.478-.101-.263-.306-.402-.456-.31-.405.251.017 1.108.546 1.108.376 0 .385.08.046.448-.316.343-.52.362-.874.08-.37-.295-.408-.273-.19.112.705 1.249.937 1.374 1.248.675.166-.371.432-.675.591-.675zm-53.646.08c-.046-.308-.249-.545-.452-.528-.849.074-1.01.144-1.01.438 0 .17.202.233.448.139.246-.095.543-.018.659.17.31.502.448.417.355-.219zm14.245-.03c-.218-.407-.201-.707.052-.96.28-.28.217-.37-.255-.375-.472-.004-.518-.071-.19-.28.303-.191.328-.34.08-.494-.194-.12-.372-.066-.394.12-.076.65-.131.822-.396 1.24-.172.272-.056.582.324.87.827.627 1.152.576.779-.122zm42.214.13c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-45.798-.42c-.1-.636.1-.693.808-.23.846.555 1.285.237.935-.677-.207-.538-.227-.537-.42.01-.172.491-.27.511-.671.137-.69-.645-1.37-.724-1.144-.133.107.277.019.496-.2.498-.247.003-.214.12.09.315.584.378.65.387.602.08zm-2.202-1.42c0-.421-.728-.158-.887.32-.078.234.068.306.38.186.278-.107.507-.335.507-.507zm48.96-.005c0-.136-.35-.218-.777-.183-.428.035-.726.147-.664.248.171.277 1.44.22 1.44-.065zm-45.876-.495c-.028-.35.164-.543.516-.515.308.024.56-.084.56-.24a.292.292 0 0 0-.298-.285c-.163 0-.551-.252-.862-.56-.511-.507-.545-.509-.36-.02.263.695-.45.946-.912.32-.282-.384-.401-.395-.61-.059-.16.262-.132.34.079.21.405-.25.812.666.511 1.153-.135.217-.02.271.309.145.287-.11.607-.063.711.105.283.459.406.372.356-.254zm3.636-.365c0-.469-1.04-.723-1.414-.346-.25.252-.19.29.214.136.324-.123.56-.064.56.141 0 .195.144.354.32.354.176 0 .32-.128.32-.285zm41.592-.524c-.201-.242-.595-.34-.896-.221-.493.194-.491.22.024.324.308.063.56.255.56.429 0 .173.15.222.335.108.231-.143.224-.342-.023-.64zm-59.192.028c0-.077-.144-.23-.32-.338-.176-.11-.32-.046-.32.14 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm62.534-2.579c.136-1.221.105-1.76-.085-1.479-.169.25-.47.335-.695.196-.3-.185-.269-.317.124-.537.287-.16.521-.416.521-.567 0-.472-1.015-.154-1.335.418-.376.672-.952.385-.675-.336.149-.388.068-.474-.309-.33-.307.118-.855-.124-1.38-.61-.836-.776-.862-.78-.686-.11.228.873-.034 1.595-.579 1.595-.26 0-.352-.242-.247-.644.13-.496.049-.6-.35-.446-.285.11-.52.363-.523.565-.003.223-.113.196-.28-.069-.204-.322-.335-.337-.508-.058-.254.411-.044.733.562.858 2.64.547 2.79.537 2.79-.183 0-.448-.133-.618-.369-.472-.244.15-.282.087-.111-.19.205-.331.337-.31.641.106.21.288.5.418.642.288.143-.129.167-.071.052.13-.247.433.588 1.21 1.016.946.436-.27 1.33 1.244 1.33 2.251 0 1.398.223.747.454-1.322zm-1.521-.29c0-.246-.192-.375-.427-.285-.234.09-.426.292-.426.45 0 .157.192.285.426.285a.44.44 0 0 0 .427-.45zm-1.813-.01c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.338.32.338.176 0 .32-.063.32-.14zm6.866-1.162c-.092-.148-.407-.178-.7-.065-.341.13-.394.251-.148.333.212.071.285.297.162.502-.123.205.019.176.315-.064.295-.24.462-.558.37-.706zm-70.706-.618c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm13.893-.115c-.073-.063-.565-.211-1.093-.33-.702-.156-.831-.126-.48.11.432.293 1.894.497 1.573.22zm2.267-.425c0-.046-.432-.307-.96-.58-.528-.273-.96-.704-.96-.958 0-.266-.192-.388-.453-.288-.266.102-.512-.066-.599-.41-.081-.321-.142-.044-.136.616.006.66.14 1.2.298 1.2.158 0 .204-.134.103-.298-.431-.697.479-.605 1.007.103.319.427.832.76 1.14.738.308-.021.56-.077.56-.123zm-18.56-.54c0-.067-.252-.319-.56-.56-.508-.398-.52-.387-.121.12.418.533.68.703.68.44zm14.877-.836c.112-.181-.016-.235-.3-.126-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm2.883-.004c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm4.16-1.92a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.397.725.397.48 0zm-2.08-1.6c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm10.56-2.503c0-.145-.564-.632-1.253-1.083-1.197-.784-1.26-.793-1.415-.199-.12.462-.062.538.228.298.277-.23.657-.095 1.305.461.995.856 1.135.92 1.135.523zm-30.945-.59c-.136-.355-.081-.456.166-.303.246.152.304.054.172-.289-.132-.345-.305-.411-.518-.198-.3.3-.127 1.323.224 1.323.088 0 .068-.24-.044-.532zm27.838-.103c-.091-.35-.288-.562-.436-.47-.315.195-.03 1.106.347 1.106.14 0 .18-.286.09-.636zm-28.675-1.344c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm27.417.22c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm4.045-.419c0-.542-.865-1.434-1.07-1.103-.114.184.017.421.292.526.274.105.408.337.299.514-.11.177-.047.322.14.322.186 0 .339-.116.339-.259zm-31.462-1.401c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm27.734-.43c-.133-.346-.26-.358-.59-.056-.23.212-.289.434-.129.493.16.06.19.275.067.48-.131.22-.008.199.299-.05.287-.233.446-.623.353-.866zm4.257.545c-.291-.322-.53-.754-.53-.96 0-.206-.152-.375-.338-.375-.187 0-.237.18-.112.4.332.583 1.164 1.52 1.35 1.52.088 0-.079-.263-.37-.585zm-37.596-1.41c-.237-.237-.279-.112-.14.42.114.433.259.578.339.339.077-.231-.013-.572-.199-.758zm32.085-.346c-.113-.295-.325-.462-.47-.372-.145.09-.355.017-.465-.162a.737.737 0 0 0-.582-.315c-.21.006-.115.212.21.459.326.247.498.602.382.79a.722.722 0 0 0 .006.692c.332.538 1.165-.45.919-1.092zm-1.936.564c.109-.284.055-.413-.126-.3-.174.107-.316.33-.316.496 0 .46.229.359.442-.196zm1.473-2.623c-.003-.132-.127-.432-.276-.667-.22-.348-.304-.339-.453.049-.1.261-.096.562.01.667.268.269.725.238.719-.049zm1.605-2.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-24.205-.8c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm29.005-.8c0-.176-.208-.32-.462-.32-.253 0-.55.144-.658.32-.11.176.098.32.46.32.363 0 .66-.144.66-.32zm-42.88-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm13.651-1.68c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm-1.139-1.64c-.187-.226-.385-.709-.441-1.074-.056-.365-.28-.878-.498-1.141-.218-.263-.355-.666-.305-.897.05-.23-.124-.429-.388-.44-.297-.014-.44-.265-.374-.655.072-.425 0-.528-.217-.313-.178.176-.385.68-.46 1.12-.075.44-.075.62 0 .4.076-.22.28-.4.453-.4s.213.166.087.37c-.132.214-.089.283.105.163.393-.243.81.892.744 2.027-.038.64.019.704.282.32.27-.393.33-.347.335.254.006.922.748 1.85.911 1.14.059-.256-.047-.65-.234-.874zm.873-.024c-.045-.678.136-1.335.47-1.705.3-.33.55-1.022.555-1.536.006-.514.216-1.207.467-1.54.327-.43.367-.772.143-1.192-.255-.476-.217-.551.196-.392.348.133.452.43.327.93-.113.45.01.927.32 1.236.644.645.982.656.45.015-.223-.268-.304-.588-.182-.71.301-.301.818.561.824 1.374.003.36-.174.865-.393 1.12-.231.27-.156.25.18-.048.391-.346.603-1.045.654-2.16.041-.906-.01-1.648-.112-1.648-.103 0-.187-.288-.187-.64 0-.982.495-.76.71.32.106.528.375.96.598.96.408 0 .947-.891.837-1.384-.032-.145.213-.178.544-.073.375.12.771-.023 1.048-.376.4-.509.391-.524-.086-.152-.42.329-.583.333-.777.02-.137-.223-.078-.453.134-.523.208-.07.3-.253.206-.406-.095-.154.007-.567.226-.918.532-.852.066-1.269-.542-.485-.356.46-.43.483-.294.09.1-.29.028-.623-.16-.74-.454-.28-.444.876.012 1.332.257.258.25.513-.025.944-.329.516-.355.52-.203.031.102-.328.008-.56-.226-.56-.352 0-.4-.396-.246-2.037.015-.153.314-.202.666-.11.382.1.64.01.64-.223 0-.214.274-.683.609-1.042.334-.36.514-.782.4-.94-.337-.466-1.649-.532-1.649-.084 0 .311-.087.317-.378.025-.208-.208-.285-.472-.17-.587.318-.318 1.603-.354 2.209-.061.341.164.626.113.771-.14.127-.22.117-.298-.022-.172-.14.125-.559.059-.932-.148-.372-.207-.784-.347-.914-.31-.13.036-.206-.301-.169-.75.063-.755.1-.773.487-.244.394.54.43.531.606-.142.103-.393.29-.715.414-.715.51 0-.118-2.033-.874-2.827-.447-.47-.708-.673-.58-.453.126.22.105.4-.048.4s-.594.294-.98.652c-.384.36-.7.499-.7.31 0-.188.207-.422.46-.519.486-.186.327-1.083-.193-1.083-.167 0-.215.144-.106.32.108.176.053.32-.123.32-.49 0-.731-.569-.302-.712.224-.074.289-.363.158-.703-.182-.475-.307-.506-.705-.175-.728.604-.976.087-.31-.648.329-.363.42-.642.211-.642-.203 0-.37.144-.37.32 0 .176-.152.32-.338.32-.187 0-.236-.166-.11-.37.144-.233.086-.282-.157-.131-.214.132-.321.635-.242 1.136.14.89-.385 1.154-.983.496-.137-.15-.07-.17.15-.043.243.139.4.046.4-.235 0-.255-.223-.55-.496-.655-.273-.105-.435-.084-.36.046.075.13.02.524-.121.876-.254.632-.258.631-.28-.019-.025-.74-.956-2.159-.972-1.482-.006.23-.154.33-.33.22-.176-.108-.32.012-.32.268 0 .59-.868.941-1.16.47-.133-.216-.074-.266.15-.128.203.126.37.11.37-.033 0-.144-.304-.451-.674-.683-.375-.234-.578-.265-.457-.07.142.23-.148.334-.846.303-1.663-.074-2.208-.293-2.112-.847.07-.4-.215-.522-1.291-.554-.759-.022-1.451.075-1.539.217-.088.142-.007.276.18.298.186.022.483.076.659.12.176.044.448.098.605.12.157.022.372.263.477.537.128.335.062.421-.206.265-.218-.128-.127.075.202.451.627.715.515 1.685-.188 1.642-.322-.02-.324-.06-.01-.187.22-.089.388-.401.374-.695-.015-.332-.086-.382-.186-.133-.09.22-.474.402-.855.405-.54.004-.592.069-.234.295.348.22.371.397.098.726-.2.242-.247.62-.104.852.188.303.308.225.442-.29.156-.594.329-.671 1.084-.482 1.073.27 1.367.53.82.724-.22.079-.4.365-.4.636 0 .401-.088.419-.48.094-.264-.22-.482-.633-.484-.92-.003-.34-.148-.243-.418.28-.261.506-.642.769-1.035.715-.45-.06-.379.053.257.41.484.273.88.635.88.805 0 .17.153.31.34.31.186 0 .25-.144.14-.32-.108-.176-.072-.32.08-.32.153 0 .285 1.006.294 2.235.015 2.097-.026 2.228-.659 2.126-.371-.06-.495-.046-.275.03.22.074.398.377.396.672-.004.456-.05.466-.303.066-.254-.401-.33-.386-.518.101-.124.325-.042.737.19.951.317.294.358.289.183-.021-.135-.24-.04-.4.24-.4.572 0 .88.717.544 1.262-.191.309-.41.319-.924.044-.55-.295-.64-.277-.496.102.098.254.383.541.633.637.25.096.455.476.455.844s.122.594.27.502c.148-.091.233.546.188 1.416-.063 1.241.003 1.497.307 1.187.483-.49.6-3.447.134-3.346-.183.04-.376-.18-.428-.488-.102-.607.327-.761.653-.235.11.179.335.243.499.141.163-.101.309.077.322.395.014.318.093 1.191.176 1.939.084.748.016 1.36-.15 1.36-.166 0-.384.214-.485.476-.1.262-.08.442.046.4.263-.087.388.198.388.884 0 .286-.29.478-.72.475-.568-.004-.62-.067-.249-.303.26-.163.377-.391.262-.507-.116-.115-.364-.114-.551.002-.388.24-.467 1.131-.102 1.138.132.003.54.085.907.183.68.183.72.112.867-1.6.037-.426.21-.75.386-.72.176.028.32-.416.317-.988-.002-.572.102-1.04.23-1.04.129 0 .141-.24.029-.532-.143-.372-.085-.459.192-.288a.595.595 0 0 1 .224.693c-.094.246-.017.447.173.447s.258.224.153.497c-.104.273-.064.419.09.324.154-.096.358.124.453.488.126.483.05.615-.284.487-.251-.097-.457-.046-.457.113 0 .158.295.382.654.496.455.144.597.385.467.794-.103.323-.051.671.114.773.166.103.474.907.685 1.787.447 1.862.692 2.07.586.498zm-.585-2.595c0-.274.144-.41.32-.301.176.109.32.333.32.499 0 .166-.144.301-.32.301-.176 0-.32-.224-.32-.499zm.32-1.28c0-.274.146-.408.325-.298.179.11.242.335.14.5-.273.443-.465.36-.465-.202zm-3.815-4.808c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm6.055-.113c0-.165.278-.28.617-.254.34.026.548.161.461.3-.219.355-1.078.318-1.078-.046zm1.34-1a1 1 0 0 1 .56-.56c.24-.08.36.04.28.28a1 1 0 0 1-.56.56c-.24.08-.36-.04-.28-.28zm-8.444-.364c.298-.299.469-.299.768 0 .298.299.213.384-.384.384-.598 0-.683-.085-.384-.384zm5.664.064c.108-.176.341-.32.517-.32s.231.144.123.32c-.11.176-.342.32-.518.32s-.231-.144-.122-.32zm-5.44-.885c-.462-.339-.462-1.248 0-1.248.234 0 .325.257.225.636-.122.467-.054.568.254.378.278-.172.342-.135.191.11-.266.43-.256.429-.67.124zm2.4-.11c0-.194-.215-.271-.478-.17-.313.12-.652-.155-.987-.802-.388-.75-.407-.947-.082-.828.235.085.39.317.347.515-.106.477.322.457.88-.04.382-.34.385-.316.025.16-.361.477-.347.56.095.56.286 0 .52.216.52.48s-.073.48-.16.48c-.089 0-.16-.16-.16-.354zm3.647-1.297c-.09-.148.3-.268.867-.268.568 0 .933.099.812.22-.324.324-1.488.357-1.679.048zm-2.888-.737c-.325-.85.032-1.128.41-.32.207.44.238.789.07.789-.165 0-.38-.211-.48-.47zm-1.375-.621c-.205-.248-.727-.412-1.159-.364-.432.047-.785-.038-.785-.19s.238-.276.53-.276c.469 0 .46-.081-.079-.72-.578-.686-.567-.685.247.034.51.45 1.014.654 1.252.507.272-.168.338-.09.209.248-.104.27-.028.655.17.852.197.197.275.359.174.359-.102 0-.353-.203-.559-.45zm5.608-.03c-.334-.253-.752-.37-.93-.26-.177.11-.223.04-.102-.157.121-.195.467-.262.77-.15.482.181.495.14.107-.337-.314-.386-.557-.448-.837-.216-.279.23-.515.185-.797-.156-.276-.333-.29-.484-.043-.484.198 0 .364.18.37.4.006.244.175.182.435-.16.492-.648 1.017-.72 1.348-.186.16.26.042.308-.381.16-.596-.21-.596-.203.007.264.34.264.64.768.666 1.12.026.353.036.637.021.632-.014-.006-.3-.217-.633-.47zm1.941-1.942c-.3-.628-.392-1.048-.205-.933.187.116.704-.028 1.149-.32.788-.516.8-.513.455.132-.237.442-.245.663-.024.663.643 0 .322.597-.388.722-.719.127-.719.128.08.482.716.318.73.358.139.376-.453.014-.833-.34-1.206-1.122zm-3.733-.477c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-5.907-.279a.348.348 0 0 1 .108-.478c.16-.1.374.035.475.298.199.518-.282.667-.583.18zm2.732-.529c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm9.079-.107c.1-.162-.037-.513-.304-.78-.271-.271-.353-.567-.185-.67.165-.103.414-.004.553.219.405.649.457 1.525.09 1.525-.185 0-.254-.132-.154-.294zm.866-.666c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm-4.53-.31c0-.17.216-.227.48-.126.264.102.48.241.48.31 0 .07-.216.126-.48.126s-.48-.14-.48-.31zm-3.773-.522c-.227-.246-.272-.448-.099-.448.332 0 .813.609.624.789-.062.059-.298-.095-.525-.341zm4.413-.467c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-3.926-.98c.217-.22.475-.318.574-.22.098.1-.08.278-.395.398-.456.174-.493.137-.179-.179zm-5.034-.731c0-.618.129-.736.652-.6.617.162.623.204.11.77-.697.772-.762.757-.762-.17zm1.424.425c-.081-.131.065-.208.325-.17.668.099.909.408.316.408-.271 0-.56-.107-.641-.238zm-1.424 20.364c0-.254-.144-.55-.32-.659-.176-.109-.32.099-.32.461 0 .363.144.659.32.659.176 0 .32-.207.32-.461zm7.994.221c-.003-.132-.336-.553-.74-.936-.903-.855-1.799-.54-1.188.418.313.49.351.5.212.048-.094-.302-.033-.635.135-.739.169-.104.307-.03.307.164 0 .41.69 1.255 1.04 1.273a.22.22 0 0 0 .234-.228zm-18.001-.593c-.106-.107-.382-.118-.613-.025-.256.102-.18.177.193.193.337.014.526-.062.42-.168zm10.545-.507c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm21.84-.724c-.399-.406-.382-.906.021-.656.176.109.32.033.32-.168 0-.2-.18-.305-.4-.232-.22.073-.415.66-.433 1.305-.03 1.028.016 1.103.378.613.256-.346.299-.673.114-.862zm-14.824-.175c-.02-.528-.142-.96-.274-.96-.29-.001-.313.717-.046 1.413.282.735.358.628.32-.453zm-17.022-.686c-.212-.343-1.092.489-1.092 1.032 0 .249.23.183.632-.18.348-.315.555-.698.46-.852zm6.64-.99c-.313-.313-.315-.236-.04 1.195.034.176.13.053.215-.274.084-.327.005-.741-.175-.922zm1.868.555c0-.264-.14-.48-.31-.48-.17 0-.228.216-.126.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm23.789-.624c.119-.309.024-.404-.284-.286-.254.097-.382.306-.285.464.245.396.363.36.569-.178zm-36.43-.176c.11-.176.054-.32-.122-.32s-.409.144-.517.32c-.11.176-.054.32.122.32s.409-.144.518-.32zm4-.141c0-.078-.143-.23-.32-.339-.175-.109-.32-.045-.32.141 0 .187.145.339.32.339.177 0 .32-.063.32-.141zm5.014-.265c0-.223.098-.835.218-1.36.137-.604.114-.778-.064-.474-.445.76-.727 2.24-.427 2.24.15 0 .273-.183.273-.406zm-6.293-1.048c0-.037-.216-.247-.48-.466-.39-.323-.48-.31-.48.068 0 .256.216.465.48.465s.48-.03.48-.067zm4.48.033c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141s.144.339.32.339c.176 0 .32-.064.32-.141zm.64-.819a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm2.451-1.04c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm26.029.4a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-33.097-.543c-.044-.298-.236-.594-.426-.658-.208-.07-.278.148-.175.543.207.79.715.887.601.115zm36.617.029c0-.326-.177-.447-.48-.33-.298.114-.48-.002-.48-.305 0-.269-.154-.394-.341-.278-.223.138-.151.42.21.819.672.743 1.09.78 1.09.094zm-41.28-.945c0-.274-.144-.41-.32-.301-.176.109-.32.333-.32.499 0 .165.144.301.32.301.176 0 .32-.225.32-.499zm4.007-1.077c-.127-.401.005-.744.378-.982.51-.325.492-.348-.17-.207-.5.106-.697.03-.597-.23.083-.216-.108-.388-.431-.388-.32 0-.505.123-.412.273.093.15-.098.474-.423.721-.549.416-.551.45-.032.459.308.006.56.143.56.307 0 .163.252.362.56.442.308.08.605.163.661.184.056.02.014-.24-.094-.58zm-1.127-.664a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-4.48-.965c0-.136-.216-.33-.48-.43-.351-.135-.48.039-.48.644 0 .701.074.768.48.431.264-.22.48-.51.48-.645zm30.4-.955c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm8-.32c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-31.68-.781c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141 0 .187.144.339.32.339.176 0 .32-.063.32-.141zm24.737-1.12-.202-.772-.268.726c-.296.801-.033 1.52.398 1.09.15-.151.183-.62.072-1.045zm-15.777.8c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141 0 .187.144.339.32.339.176 0 .32-.063.32-.141zm-.08-.944c-.595-.452-.753-.888-.272-.755.388.108.48-.517.095-.645-.6-.2-.753 1.018-.18 1.437.742.542 1.075.508.356-.037zm26.538-.255c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-34.138.06c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm30.08-.32c-.189-.352-.396-.64-.462-.64-.065 0-.043.288.049.64.092.352.3.64.461.64.162 0 .14-.286-.048-.64zm-23.74-1.127c-.288-.287-.96.452-.737.812.183.297.322.26.55-.148.168-.3.252-.598.187-.664zm17.598-.002c-.099-.098-.278.08-.398.395-.174.456-.137.493.18.18.218-.218.316-.476.218-.575zm-24.441.205c.096-.156-.12-.36-.48-.455-.536-.14-.586-.089-.277.284.442.533.523.55.757.171zm-1.615-.533c.109-.284.055-.413-.126-.3-.174.107-.316.33-.316.496 0 .46.229.359.442-.196zm-3.002-.266c0-.067-.288-.198-.64-.29-.352-.092-.64-.037-.64.123s.288.29.64.29c.352 0 .64-.055.64-.123zm1.501-1.071c-.08-.311-.153-.134-.16.394-.006.528.06.783.148.566.088-.217.093-.649.012-.96zm3.216.478c.043-.563-.01-.614-.247-.24-.37.585-.393.956-.059.956.139 0 .277-.322.306-.716zm24.177-1.258c.187-.118.376-.456.419-.75.043-.294-.002-.455-.1-.357-.283.284-1.412-.439-1.206-.771.102-.166-.038-.215-.31-.11-.29.11-.498.02-.498-.217 0-.224-.066-.341-.148-.26-.081.082.056.826.305 1.654s.352 1.507.228 1.51c-.123.003-.009.143.255.311.354.226.511.161.597-.244.065-.304.27-.649.458-.766zm-1.128-.514c-.22-.84.04-.9.892-.206.498.406.515.473.082.338-.296-.092-.595 0-.664.206-.068.205-.208.053-.31-.338zm-24.064.911c0-.339-.113-.546-.251-.46-.138.085-.251.362-.251.616 0 .253.113.461.25.461.14 0 .252-.277.252-.617zm1.689-.276c.471.368.481.353.092-.144-.456-.581-1.022-.48-.978.176.017.261.077.251.19-.032.136-.338.263-.338.696 0zm6.129.127c0-.069-.224-.211-.497-.316-.285-.11-.413-.056-.301.126.188.304.798.45.798.19zm26.88-.057c0-.1-.216-.399-.48-.663-.521-.52-.587-.443-.286.34.182.476.766.722.766.323zm65.6-.137c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-104.96-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm9.448-.898c-.099-.099-.357 0-.574.218-.314.316-.277.353.18.18.315-.12.492-.3.394-.398zm2.205.384c.645-.247.649-.643.01-.888-.312-.12-.416-.06-.279.161.12.194.02.478-.223.632-.512.324-.24.376.493.095zm-8.133-.766c0-.352-.114-.64-.252-.64s-.251.288-.251.64c0 .352.113.64.251.64s.252-.288.252-.64zm8.08-.852c-.22-.089-.4-.492-.4-.895 0-.866-.788-1.671-1.116-1.14-.117.188-.021.303.212.255.253-.053.443.234.472.712.027.44.063.908.08 1.04s.284.229.592.215c.334-.015.398-.09.16-.187zm28.08-.109c0-.505-.56-.642-.908-.222-.255.308-.185.421.284.456.343.026.624-.08.624-.234zm-11.971-1.117c-.115-.456-.355-.737-.534-.627-.216.134-.2.355.048.654.292.35.277.452-.064.456-.35.004-.344.065.031.303.635.4.766.2.519-.786zm-14.59.279c0-.425-.086-.447-.48-.121-.263.22-.48.453-.48.52 0 .066.217.12.48.12.265 0 .48-.234.48-.52zm-3.52-.616c0-.378-.605-.378-.75 0-.118.309-.023.403.287.285.255-.098.464-.227.464-.285zm-14.08-.145c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm8.16 0c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm-5.92-.64a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm7.04-.286c0-.136-.202-.247-.449-.247s-.376.19-.286.425c.163.425.736.288.736-.178zm4.16.293c.416-.263.396-.381-.142-.875-.498-.457-.542-.465-.222-.038.332.443.301.592-.178.87-.318.185-.433.339-.257.341.176.003.536-.131.8-.298zm7.2-.007c.11-.176.054-.32-.122-.32s-.409.144-.517.32c-.11.176-.054.32.122.32s.409-.144.518-.32zm86.4 0c-.108-.176-.413-.32-.677-.32-.264 0-.391.144-.282.32.108.176.413.32.677.32.264 0 .391-.144.283-.32zm-92.32-1.14c0-.464-.138-.732-.32-.62-.175.108-.32.477-.32.819 0 .341.145.62.32.62.177 0 .32-.368.32-.818zm16.804.192c-.11-.346-.047-.913.14-1.26.224-.42.23-.7.017-.832a.74.74 0 0 1-.32-.56c0-.2.204-.083.453.258.25.341.564.51.699.376.135-.135.074-.415-.134-.624-.432-.432-.498-.89-.129-.89.138 0 .413.431.612.958.372.986.088 1.51-.591 1.091-.213-.131-.283-.089-.166.101.112.181.582.33 1.044.33.592 0 .712-.081.406-.275-.355-.225-.346-.277.045-.285.283-.006.349-.107.16-.245-.593-.436-.513-1.118.226-1.93.404-.445.554-.705.334-.578-.22.127-.4.078-.4-.108a.34.34 0 0 1 .34-.34c.186 0 .25-.143.14-.32-.33-.534-.8-.357-.8.302 0 .842-.478 1.079-.975.48-.224-.27-.62-.409-.881-.309-.394.152-.405.099-.064-.312.35-.421.325-.462-.167-.273-.355.136-.5.097-.378-.101.118-.191-.284-.347-.988-.383-1.957-.099-2.457-.19-2.67-.484-.366-.503-.918.137-.88 1.02.023.512.096.64.181.316.114-.434.3-.484.923-.248.496.189.78.183.78-.015 0-.172.167-.312.373-.312.205 0 .286.086.18.193-.106.106-.049.572.128 1.035l.32.842-.787-.74c-.466-.437-.869-.606-.988-.414-.11.178.007.441.262.584.387.218.393.353.037.839-.273.372-.5.456-.637.235a.463.463 0 0 0-.59-.156c-.209.104-.1-.037.243-.315.349-.283.454-.52.24-.543-.502-.053-1.002-.18-1.102-.281-.044-.045-.368-.113-.72-.152-.527-.06-.655.142-.726 1.138-.047.665.076 1.31.275 1.432.245.152.292.007.146-.45-.294-.928.174-1.707.79-1.318.319.202.344.303.075.306-.748.009-.403.602.41.703.446.056.77.195.72.308-.234.538 1.106 1.425 2.22 1.47.666.027 1.03-.027.81-.12-.22-.093-.4-.396-.4-.673 0-.433.087-.424.633.07.348.315.551.704.452.865-.251.406.1 1.222.527 1.222.204 0 .268-.264.152-.628zm-2.617-1.438c0-.256.12-.392.267-.301.147.09.267.3.267.466 0 .165-.12.3-.267.3-.147 0-.267-.209-.267-.465zm.374-1.134c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm.378-1.402c-.245-.64-.258-1.859-.013-1.256.086.21.399.291.695.18.431-.161.468-.11.182.258a3.558 3.558 0 0 0-.5.924c-.115.366-.191.343-.364-.106zm77.705 3.968c-.139-.225-.693-.228-1.443-.008-.088.026.128.163.48.305.705.284 1.223.124.963-.296zm-108.003-.7c0-.205-.095-.278-.211-.162-.116.116-.44.032-.72-.187-.45-.351-.459-.332-.07.163.503.642 1 .735 1 .187zm17.12.054c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm11.04-.089c0-.049-.279-.327-.619-.618-.581-.498-.616-.492-.572.089.028.363.283.618.619.618.314 0 .572-.04.572-.089zm-20.907-.697c0-.256-.122-.39-.272-.298-.15.093-.19.302-.088.466.259.419.36.372.36-.168zm38.987.146c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm61.145-.568c-.551-.527-.558-.52-.153.153.233.388.492.637.576.553.085-.084-.106-.402-.423-.706zm-97.686-.81c-.155-.25-.251-.246-.339.016-.067.201-.365.289-.661.194-.433-.138-.45-.11-.088.148.556.396 1.385.123 1.088-.358zm36.176.258c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm-44.595-.48c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm10.24-.461c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141 0 .187.144.339.32.339.176 0 .32-.063.32-.141zm-.811-1.737c-.066-.065-.335.098-.599.362-.264.264-.393.567-.287.673.106.106.376-.056.599-.361.223-.305.352-.608.287-.674zm1.24.744c-.103-.271-.257-.425-.341-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm11.09-.127c0-.537-.567-.67-.756-.177-.111.29.001.478.287.478.258 0 .47-.135.47-.301zm1.6-.14c0-.066-.251-.318-.56-.56-.507-.398-.518-.387-.12.121.418.533.68.703.68.44zm-3.36-.519c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm12.32 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm74.433-.69c-.282-.403-.512-.626-.512-.497 0 .357.757 1.496.9 1.353.069-.068-.106-.454-.388-.856zm-98.867.272c.121-.122-.163-.222-.632-.222-.47 0-.853.143-.853.318 0 .342 1.119.27 1.485-.096zm17.616-.776c-.08-.311-.153-.134-.16.394-.006.528.06.783.148.566.088-.217.093-.649.012-.96zm-15.708-1.873c-.095-.25-.358-.442-.583-.428-.322.02-.324.06-.01.187.22.089.4.374.4.634s-.134.389-.298.288c-.164-.102-.402-.016-.53.19-.149.242-.092.289.16.133.252-.156.467.026.607.51.209.726.22.72.322-.154.059-.499.028-1.11-.068-1.36zm100.479 1.067c.127-.22.12-.301-.014-.18-.134.12-.59.088-1.011-.072-.457-.174-.767-.175-.767-.003 0 .16.324.353.72.429.396.076.747.158.78.182.034.024.165-.136.292-.356zm-102.912-.24c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-6.4-.141c0-.338-.615-.48-.797-.184-.11.179.023.325.298.325.274 0 .499-.063.499-.141zm4.32-.819c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm3.36-.393c0-.188-.204-.157-.48.073-.264.22-.48.448-.48.51 0 .06.216.027.48-.074.264-.102.48-.33.48-.51zm101.856-.03c.624.13.64.107.144-.21-.308-.198-.558-.532-.556-.743.003-.238.13-.201.33.096.238.352.269.223.116-.48-.116-.528-.427-1.176-.691-1.44-.429-.427-.448-.416-.179.097.347.658.165 2.463-.247 2.463-.15 0-.174.252-.053.56.197.5.232.504.327.034.072-.355.334-.477.81-.378zm-79.136.103c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm77.336-.21c-.116-.116-.032-.432.186-.702.317-.391.317-.442-.003-.25-.27.162-.4.015-.4-.458 0-.548-.092-.622-.43-.342-.235.196-.505.28-.6.186-.093-.094-.17.204-.17.662 0 .574.136.78.44.663.242-.093.44-.03.44.141 0 .17.168.31.374.31.205 0 .278-.095.162-.21zm-112.696-.43c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm11.68-.8c0-.44-.12-.8-.267-.8-.206 0-.258.987-.08 1.52.126.379.347-.08.347-.72zm3.59-.916c.208.128.256.066.12-.155-.127-.205-.042-.38.19-.394.345-.021.345-.055 0-.193-.524-.21-1.66.788-1.66 1.459 0 .364.137.305.501-.215.276-.394.659-.62.85-.502zm97.617-.444c-.303-1.4-.274-2.48.067-2.48.173 0 .272.252.22.56-.152.9.495.643.669-.265.103-.542-.003-.887-.31-1.005-.384-.147-.391-.233-.04-.485.298-.213.234-.235-.214-.072-.352.128-.892.222-1.2.21-.308-.013-.56.192-.56.456 0 .263-.114.408-.253.322-.14-.086-.277.156-.306.537-.041.55.01.595.249.218.22-.348.302-.363.306-.057.003.23.132.34.288.244.53-.328.59 1.365.068 1.922-.47.502-.467.53.038.354.303-.105.635-.053.739.115.34.549.433.324.239-.574zm-98.604-.652c-.23-.077-.572.012-.758.198-.237.238-.112.28.42.14.433-.113.578-.258.338-.338zm101.841-.788c.152-.644.086-.88-.247-.88-.312 0-.444.351-.422 1.12.035 1.237.348 1.124.67-.24zm-111.804.72c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm25.28-.339c0-.165-.12-.301-.267-.301-.147 0-.267.21-.267.466s.12.392.267.301c.147-.09.267-.3.267-.466zm-29.76.019a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm27.95-.174c-.104-.271-.258-.425-.342-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm4.486-.532c-.245-.405-1.04.107-.868.558.133.345.26.356.587.054.23-.212.356-.488.28-.612zm-27.156.386c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm10.08.2c0-.067-.22-.304-.488-.526-.407-.338-.454-.318-.286.12.173.45.774.764.774.405zm18.56-.52c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-18.029-1.04c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm13.287.33c-.23-.229-.378-.248-.378-.047 0 .182.096.426.213.544.117.117.288.139.379.048.09-.091-.005-.336-.214-.544zm14.24-.31c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-19.098.06c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm8-.194c0-.265-.622-.415-.764-.185-.093.15.041.272.298.272.256 0 .466-.04.466-.087zM128.78 98.65c-.347-.54-.356-.54-.182.016.102.323.201.827.222 1.12.033.481.051.48.181-.016.08-.302-.02-.806-.221-1.12zm11.534.116c-.279-.276-.31-.208-.13.274.212.569.178.591-.302.2-.297-.24-.54-.329-.54-.194 0 .134.253.43.56.657.469.346.579.333.67-.078.061-.271-.055-.658-.258-.859zm99.818-.252c.006-.113-.198-.286-.453-.383-.31-.12-.405-.025-.286.285.113.294-.023.464-.37.464-.37 0-.485-.166-.355-.506.107-.279.195-.647.195-.819 0-.172.158-.215.351-.095.245.151.24.009-.014-.468-.202-.377-.267-.862-.145-1.079.169-.3.12-.298-.21.007-.598.556-.939.5-.963-.16-.015-.417-.096-.37-.318.184-.192.48-.18.966.035 1.367.183.342.255.749.16.903-.095.153.044.362.308.464.265.102.463.297.44.434-.108.664.101.71.825.183.435-.316.795-.667.8-.78zm7.629-.122c-.099-.099-.278.079-.398.394-.174.456-.137.493.18.18.218-.218.316-.476.218-.574zm-103.98-.044c-.342-.415-.35-.562-.039-.667.22-.074.4-.37.4-.659 0-.414-.1-.38-.48.16-.49.7-.352 1.698.234 1.698.179 0 .127-.24-.114-.532zm16.63-.028c-.051-.308.003-.711.119-.896.116-.185-.088-.523-.454-.751-.615-.384-.648-.36-.443.336.122.413.275.967.341 1.231.066.264.13.516.144.56.113.368.364-.045.293-.48zm-17.637-.394c.026-.348-.056-.698-.184-.777-.127-.078-.26.207-.296.634-.035.427.047.777.184.777s.27-.285.296-.634zm-.871-.006a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm99.04-.48c0-.44-.108-.8-.24-.8-.298 0-.319 1.095-.027 1.387.117.117.225.213.24.213.015 0 .027-.36.027-.8zm1.253.606c.279-.107.507-.331.507-.499 0-.167-.137-.22-.304-.117-.46.284-1.056-1.066-.91-2.06.104-.707.021-.85-.427-.732-.551.144-.561.294-.101 1.522.247.66.33.993.413 1.68.055.457.124.474.822.206zm-79.493-.446c.363-.235.222-.311-.58-.315-.625-.003-.977.126-.86.315.248.402.817.402 1.44 0zm85.245-.186c.298-.775.232-1.414-.146-1.414-.187 0-.298.252-.248.56.051.308-.02.74-.158.96-.138.22-.114.4.053.4.168 0 .392-.228.5-.506zm-111.98-.752c.102-.163.039-.388-.14-.498-.18-.111-.325.023-.325.297 0 .563.192.645.466.201zm-6.64-.544c-.112-.11-.074-.443.083-.737.17-.317.168-.724-.006-.998-.23-.363-.293-.313-.297.231-.003.382-.093.922-.2 1.2-.114.298-.026.506.214.506.224 0 .317-.09.205-.202zm112.857-.294c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm-98.54-.491a.357.357 0 0 0-.49-.116.357.357 0 0 0-.116.49.357.357 0 0 0 .49.116.357.357 0 0 0 .117-.49zm4.018.526c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-6.21-.548c.151-.245.087-.282-.191-.11-.311.192-.375.086-.245-.41.11-.425 0-.737-.305-.854-.341-.13-.424-.036-.285.326.107.28.196.714.196.964 0 .546.512.598.83.084zm102.53.05c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm-115.48-.726c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm27.431-.591c-.353-.224-.348-.275.032-.279.36-.004.379-.09.082-.387-.297-.298-.48-.25-.818.212-.274.374-.636.517-.978.386-.321-.123-.463-.08-.347.108.107.174.551.316.986.316.457 0 .885.237 1.012.56.204.519.23.515.342-.041.066-.331-.074-.725-.311-.875zm1.43.436c-.331-.928-.451-1.059-.784-.853-.192.118-.1.44.231.805.683.755.807.765.552.048zm-5.404-.756c-.096-.156-.49-.272-.876-.258-.386.013-.52.098-.3.187.222.089.33.28.24.425-.09.144.124.188.474.096.35-.091.558-.294.462-.45zm89.143.356c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm2.72 0c-.11-.176-.046-.32.14-.32.459 0 .432-.865-.035-1.153-.261-.162-.304-.047-.14.38.182.48.148.53-.157.227-.306-.304-.303-.49.011-.87.22-.265.327-.667.236-.893-.1-.251-.175-.186-.19.168-.014.319-.17.49-.345.381-.37-.228-.44.893-.08 1.254.131.132.257.372.28.533.07.52.116.613.298.613.099 0 .09-.144-.019-.32zm-97.822-1.448c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm3.704.312c.109-.285.055-.414-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm4.72-.253c-.197-.236-.286-.5-.2-.587.087-.086-.052-.157-.308-.157-.257 0-.392.12-.302.267.091.146.013.266-.174.266-.186 0-.338.144-.338.32 0 .176.377.32.839.32.665 0 .765-.088.482-.43zm84.872.035c-.328-.53-.386-1.526-.09-1.526.284 0 .195-.847-.122-1.164-.122-.122-.223.081-.223.452s-.13.756-.291.855c-.523.323.008 1.777.65 1.777.175 0 .21-.177.076-.394zm-90.994-.051c0-.07-.224-.212-.497-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm-4.16-.515c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm98.055-.398c.13.13.137-.159.016-.642-.141-.563-.093-.88.134-.88a.348.348 0 0 0 .355-.339c0-.186-.15-.246-.334-.132-.443.273-1.317-.469-1.053-.894.12-.196.05-.238-.17-.102-.205.127-.3.35-.21.496.09.145-.05.346-.31.446-.275.105-.392.392-.279.687.175.455.255.451.795-.037.502-.454.6-.465.6-.068 0 .262-.1.577-.222.7-.122.122-.255.442-.294.71-.053.36.035.4.332.154.222-.184.51-.229.64-.099zm2.745-.76c0-.451-.14-.713-.32-.602-.176.11-.32.558-.32.998 0 .452.139.714.32.602.176-.108.32-.557.32-.997zm-93.76.713c0-.07-.224-.212-.497-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm-12.759-.624c-.196-.236-.285-.5-.199-.587.087-.086-.06-.157-.324-.157-.41 0-.403.087.05.587.608.672 1.012.806.473.157zm6.526-.089c-.285-.285-.615-.42-.733-.302-.119.118-.004.35.255.513.756.478 1.041.352.478-.21zm8.153.393c0-.07-.224-.212-.497-.317-.285-.11-.413-.055-.301.126.188.304.798.45.798.19zm.538-.575c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-13.072-.596c-.187-.537-.4-.917-.472-.844-.159.158.445 1.82.66 1.82.084 0-.001-.44-.188-.976zm5.356-.227c-.106-.107-.37-.018-.585.198-.31.31-.291.455.085.69.34.213.509.156.586-.198.06-.273.021-.584-.086-.69zm100.713.777c.09-.235-.039-.427-.286-.427a.44.44 0 0 0-.45.427c0 .234.13.426.286.426.157 0 .36-.192.45-.426zm-106.975-.682c0-.082-.288-.303-.64-.492-.386-.206-.64-.22-.64-.034 0 .169.252.373.56.454.308.08.596.163.64.183.044.02.08-.03.08-.111zm12.23-1.19c-.201-.2-.246.01-.127.594.137.67.217.75.31.31.07-.326-.013-.733-.184-.904zm6.65.858c-.22-.264-.563-.48-.763-.48-.2 0-.535-.274-.744-.609-.32-.514-.295-.595.163-.517.299.05.504.263.456.473-.049.21.06.29.24.177.182-.111.24-.59.13-1.063-.192-.834-.183-.84.31-.22.279.351.51.495.512.32.01-.614-.57-1.224-1.208-1.27-.354-.027-.899-.256-1.211-.51-.352-.285-.477-.309-.328-.06.132.22.088.4-.099.4a.348.348 0 0 0-.339.354c0 .194.18.285.4.2.283-.108.404.273.412 1.301.011 1.364.07 1.461.954 1.58.519.07 1.006.189 1.082.265.36.36.385.084.032-.34zm86.12-.08c.398-.507.387-.519-.12-.12-.534.418-.703.68-.44.68.067 0 .319-.252.56-.56zm-.878-.256c.122-.32.06-.417-.173-.273-.253.157-.299-.03-.151-.618.151-.603.04-1.013-.387-1.44-.583-.585-.597-.57-.564.586.018.651.23 1.422.472 1.713.538.648.566.65.803.032zm3.256-.407c-.142-.446-.393-.58-.857-.46-.5.131-.554.236-.229.443.235.149.284.283.108.298-.176.015-.032.143.32.285.8.321.91.227.658-.566zm-102.418.263c-.11-.176-.022-.32.194-.32s.306-.086.2-.192c-.287-.287-.914.19-.7.534.1.164.255.298.343.298.088 0 .071-.144-.038-.32zm15.04 0c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm-4.147-.618c-.116-.188-.352-.342-.525-.342-.173 0-.128.202.099.448.46.499.754.425.426-.106zm93.839-1.025c-.08-.24-.225-.095-.338.338-.14.532-.098.657.14.42.185-.187.275-.528.198-.758zm-95.394-.017c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm91.918-.071c.289-.348.28-.507-.04-.692-.23-.131-.31-.122-.18.023.131.144.078.455-.118.69-.196.237-.285.43-.197.43.088 0 .329-.203.535-.451zm-4.266-.238c.137-.222.088-.283-.121-.153-.193.118-.499-.04-.68-.351-.204-.35-.334-.406-.34-.145-.007.287-.239.352-.73.204-.49-.148-.617-.113-.4.111.177.181.68.394 1.12.473.44.078.828.163.862.187.033.024.163-.123.29-.326zm-90.11-.27c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm92.16-.5c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.499zm-3.086-1.507a9.354 9.354 0 0 1-.194-1.1c-.015-.212-.13-.322-.257-.244-.177.11-.179 1.482-.004 2.33.011.054.156.015.32-.088.166-.102.226-.506.135-.898zm2.046.646c-.045-.223.167-.358.48-.306.308.052.572-.02.588-.16.116-1.046.166-3.306.06-2.734-.073.396-.253.72-.4.72-.148 0-.193.288-.101.64.116.445.01.64-.35.64a.519.519 0 0 0-.517.518c0 .376-.196.468-.72.335-.696-.175-.7-.165-.1.283.764.57 1.166.594 1.06.064zm-85.04-.04c0-.067-.22-.303-.488-.526-.407-.338-.454-.318-.286.121.173.449.774.763.774.404zm-1.44-.52a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.398.725.398.48 0zm82.067-.683c-.306-1.068-.627-1.575-.627-.99 0 .473.586 1.993.77 1.993.08 0 .015-.451-.143-1.003zm-95.614-.35c-.237-.238-.279-.113-.14.419.114.433.259.578.339.338.077-.23-.013-.572-.199-.758zm-2.613.073c-.189-.352-.396-.64-.462-.64-.065 0-.043.288.049.64.092.352.3.64.461.64.162 0 .14-.286-.048-.64zm15.2-.64c-.11-.176.055-.32.365-.32.463 0 .487-.07.139-.4-.34-.32-.454-.32-.572.002-.08.221-.315.302-.52.179-.205-.123-.175.02.067.318.475.586.842.742.52.221zm-10.702-1.947c-.303-.731-.314-.721-.196.187.163 1.253.2 1.347.372.933.079-.191 0-.695-.176-1.12zm95.022 1.006c0-.165-.144-.39-.32-.499-.176-.108-.32.027-.32.301 0 .275.144.5.32.5.176 0 .32-.136.32-.302zm-102.4-.659a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm16.68-.24c.398-.507.387-.519-.12-.12-.534.418-.703.68-.44.68.067 0 .319-.252.56-.56zm-10.24-.805c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm101.494.052c-.243-.243-.413-.227-.588.055-.158.256-.114.316.124.169.203-.126.37-.052.37.164 0 .215.098.294.218.173.12-.12.065-.373-.124-.56zm-4.966-.464c.037-.45-.063-.737-.222-.639-.232.143-.253.716-.05 1.376.09.295.214-.042.272-.737zm-83.128.376c0-.066-.252-.318-.56-.56-.508-.398-.52-.386-.121.121.418.533.68.703.68.44zm6.546-.177c.101-.163.038-.388-.141-.499-.18-.11-.325.024-.325.298 0 .562.192.645.466.201zm-24.466-.342a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.833.127c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zM154.544 80a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.398.725.398.48 0zm1.12.18c0-.078-.144-.231-.32-.34-.176-.109-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-12.48-.32c0-.078-.144-.231-.32-.34-.176-.109-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm10.093-.478c-.116-.188-.364-.342-.552-.342-.212 0-.187.184.065.488.439.529.831.41.487-.146zm2.605-.402c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm90.502.38a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.398.725.398.48 0zm-110.423-.603c.097-.157-.027-.453-.275-.658-.363-.301-.43-.261-.341.203.06.318.12.614.134.658.054.176.316.065.482-.203zm6.903-.357a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-1.492-.722c-.09-.146 0-.464.202-.706.289-.348.244-.423-.213-.356-.317.047-.58.216-.582.375-.003.159-.1.438-.217.62-.118.186.05.332.382.332.326 0 .519-.12.428-.265zm2.27-.914c-.324-.522-.778-.291-.778.395 0 .566.08.613.476.284.262-.217.398-.523.301-.679zm3.702.676c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm8.152-.262a10.606 10.606 0 0 1-.128-.817c-.036-.408-.984.45-.984.89 0 .205.273.394.608.419.41.03.574-.13.504-.492zm5.928-.044c0-.221-.25-.284-1.627-.41-.557-.05-.647-.235-.545-1.112.087-.74-.008-1.052-.318-1.052-.33 0-.385.262-.218 1.04.282 1.317.438 1.576.81 1.347.163-.102.298-.05.298.114 0 .165.36.3.8.3.44 0 .8-.103.8-.227zm-4.16-.296c0-.156-.324-.365-.72-.464-.696-.176-.7-.166-.1.282.725.542.82.562.82.182zm-18.24-.358c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm99.713-.553c-.325-.325-.594.164-.327.596.202.326.277.327.385.001.075-.222.048-.491-.058-.597zm-84.651-.045c-.176-.329-.217-.712-.091-.851.126-.14.046-.148-.177-.02-.223.128-.307.392-.187.586.14.226.028.28-.315.148-.293-.113-.532-.075-.532.083s.324.35.72.426c.396.077.76.159.81.183.051.024-.052-.226-.228-.555zm7.478-.903c-.077-1.697-.141-1.912-.577-1.912-.277 0-.375.231-.27.637.1.382.038.556-.157.436-.199-.123-.266.106-.173.59.117.611.016.791-.446.795-.483.004-.445.086.203.428.993.525 1.473.196 1.42-.974zm-19.366.461c-.014-.414-.099-.535-.198-.284-.147.369-.218.369-.455 0-.235-.364-.33-.36-.58.029-.387.601-.143.975.637.975.439 0 .614-.212.596-.72zm16.186.08c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm90.938-.38c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-105.498-.119c0-.274-.147-.408-.326-.298-.179.111-.242.336-.14.5.273.443.466.36.466-.202zm1.28.358c0-.077-.144-.23-.32-.339-.176-.109-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm91.778-.667c-.099-.099-.278.079-.398.394-.174.457-.137.493.18.18.218-.217.316-.476.218-.574zm1.075-.226c-.237-.237-.279-.112-.14.42.114.433.259.578.339.338.077-.23-.013-.572-.199-.758zm-97.973.074a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm90.773-.146c0-.256-.12-.391-.267-.3a.615.615 0 0 0-.266.465c0 .166.12.301.266.301.147 0 .267-.21.267-.466zm-87.705-1.052c-.104-.104.039-.443.318-.752.468-.516.462-.554-.079-.477-.438.063-.609.403-.671 1.336-.07 1.032-.022 1.149.269.667.194-.32.268-.67.163-.774zm14.084.715c-.094-.643-.832-1.406-.832-.86 0 .21-.208.383-.462.383-.253 0-.545.137-.648.304-.103.166.08.251.408.188.328-.063.8.014 1.049.172.584.37.568.376.485-.187zm75.977-.945c-.402-.484-.97-.392-.97.157 0 .16.217.208.48.107.272-.104.48-.007.48.223 0 .225.093.315.206.202.113-.113.025-.423-.196-.69zm1.59.308c.23-.276.261-.48.074-.48-.179 0-.408.216-.51.48-.1.264-.134.48-.073.48.061 0 .29-.216.51-.48zm-92.48-.16c0-.176-.152-.32-.338-.32-.187 0-.25.144-.141.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm17.92.126c0-.265-.62-.415-.763-.184-.093.15.041.272.298.272.256 0 .466-.04.466-.088zm69.753-.947c-.45-1.184-.365-1.382.199-.459l.489.8-.176-.8c-.097-.44-.18-1.016-.185-1.28-.007-.385-.063-.395-.28-.053-.218.344-.308.328-.465-.08-.107-.279-.41-.507-.674-.507-.317 0-.41.182-.276.533.136.355.081.456-.166.303-.242-.15-.305-.057-.181.266.104.272.304.424.445.337.14-.087.406.274.59.802.184.527.482.96.663.96.22 0 .226-.27.017-.822zm-88.952.181a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm17.071-.49c-.25-.651-.4-.587-.345.148.025.34.154.551.286.47.132-.082.158-.36.06-.618zm78.096-.254c.227-.17.181-.218-.127-.134-.264.072-.514.407-.555.745-.052.43-.014.47.128.133.111-.264.36-.599.554-.744zm-79.749.035c-.23-.23-.378-.249-.378-.048 0 .427.378.805.592.592.09-.091-.005-.336-.214-.544zm5.167.202c-.14-.365-.26-.4-.43-.125-.352.57-.723-.188-.475-.97.12-.38.056-.638-.158-.638-.2 0-.256-.178-.126-.4.128-.22-.104-.112-.516.24-.437.372-.63.44-.465.16.157-.264.33-.762.383-1.106.054-.344.25-.72.436-.835.212-.131.149-.283-.168-.404-.315-.121-.506-.024-.506.257 0 .27-.243.405-.604.335-.462-.089-.565.03-.44.505.135.52.243.556.664.215.302-.244.415-.26.283-.041-.322.539-.55 2.67-.289 2.699.716.077 1.428.27 1.588.431.403.403 1.01.165.823-.323zm-1.865-1.093c.108-.176.341-.32.517-.32s.231.144.123.32c-.11.176-.342.32-.518.32s-.231-.144-.122-.32zm-22.88.96a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm5.76 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm105.372-.64c-.092-.352-.3-.64-.461-.64-.162 0-.14.287.049.64.188.352.396.64.46.64.066 0 .044-.288-.048-.64zm-7.22.127c-.105-.106-.381-.118-.612-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-82.452-.534c.487.127.583.044.423-.373-.117-.304-.408-.46-.671-.358-.256.098-.525.178-.599.178-.073 0-.122.252-.108.56.014.308.093.396.175.194.083-.201.433-.292.78-.201zm85.74-.34c0-.234-.18-.433-.4-.441-.22-.008-.688-.12-1.04-.247-.352-.128-.208.06.32.418 1.18.8 1.12.785 1.12.27zm-5.92-.213c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm9.92-.32c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-90.074-.956c-.592-.366-.717-.24-.452.452.154.4.306.452.565.192.26-.26.23-.432-.113-.644zm68.886.316c-.092-.352-.222-.64-.29-.64-.067 0-.122.288-.122.64 0 .352.13.64.29.64.16 0 .214-.288.122-.64zm.983.16c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm18.358.287c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-92.648-1.07c.076-.519.03-.876-.101-.795-.132.082-.34-.013-.462-.21-.235-.38-.773.196-.773.828 0 .176.132.112.293-.143.23-.363.34-.277.51.4.276 1.098.362 1.085.533-.08zm75.673.243c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm1.423.27c-.196-.235-.25-.555-.119-.709.13-.154-.015-.087-.322.149-.583.446-.783.846-.263.524.164-.101.389-.038.5.141.11.179.281.325.38.325.1 0 .02-.193-.176-.43zm-88.361-.21c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm94.08-.175c0-.378-.606-.377-.75 0-.119.309-.024.403.286.285.255-.098.464-.226.464-.285zm-85.76.034c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm89.424-.31c-.34-.249-.753-.368-.92-.265-.166.103-.024.296.317.429 1.002.392 1.266.32.603-.164zm-102.891-.388c.206-.187-.056-.332-1.013-.562-.523-.125-.88-.078-.88.115 0 .18.152.326.338.326.187 0 .24.16.12.355-.15.243.02.28.541.12.418-.129.82-.288.894-.354zm9.307.2a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .175.144.32.32.32a.32.32 0 0 0 .32-.32zm101.875-.072a.307.307 0 0 0-.421-.097c-.144.088-.335-.118-.424-.458-.105-.403.022-.664.364-.746.392-.095.31-.216-.328-.48-.469-.193-.92-.611-1.002-.93-.098-.377-.163-.272-.187.302-.02.484.096.88.26.88.162 0 .241.434.174.964-.113.89-.051.959.801.894.508-.039.851-.187.763-.33zm-109.395-.249c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm104 0c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-85.794-.374c-.15-.243-.064-.31.248-.19.29.11.479 0 .479-.28 0-.268-.191-.39-.453-.29-.25.096-.513.174-.587.174-.073 0-.133.216-.133.48s.152.48.338.48c.187 0 .235-.168.108-.374zm87.627-.977c-.102-.392-.245-.535-.317-.318-.072.216-.263.312-.424.212-.16-.099-.292-.04-.292.132 0 .284.477.596 1.01.66.115.014.126-.295.023-.686zm-80.354.104c-.243-.155-.35-.428-.24-.607.111-.18.067-.664-.099-1.076-.28-.701-.301-.682-.32.29-.011.572-.166 1.04-.344 1.04-.183 0-.261-.493-.181-1.141.111-.899.055-1.07-.266-.803-.225.186-.515.232-.646.102-.13-.13-.208-.094-.172.082.035.176.045.536.022.8-.038.427-.078.427-.353 0-.171-.264-.308-.336-.305-.16.015.907 1.01 1.578 2.505 1.69.589.045.708-.02.399-.217zm1.067-.01c.101-.164.038-.389-.141-.5-.18-.11-.325.024-.325.298 0 .563.192.645.466.201zm73.032-.403c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-84.48-.64c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm3.622.22c0-.264-.057-.48-.126-.48-.07 0-.209.216-.31.48-.102.264-.045.48.126.48.17 0 .31-.216.31-.48zm-8.32-.285c0-.07-.224-.212-.497-.317-.285-.109-.413-.055-.301.126.188.304.798.45.798.19zm95.36-.355a.476.476 0 0 0-.47-.48c-.287 0-.398.188-.286.48.101.264.313.48.47.48.157 0 .286-.216.286-.48zm-92.708-.48c-.092-.352-.206-.64-.252-.64-.047 0-.161.288-.253.64-.105.4-.01.64.253.64.262 0 .357-.24.252-.64zm-17.692-.14a.885.885 0 0 0-.4-.692c-.22-.127-.294-.112-.163.032.13.144.077.455-.12.69-.273.33-.235.43.163.43.286 0 .52-.207.52-.46zm10.56.14a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm13.479-.536c-.378-.648-.469-.44-.16.364.11.286.267.453.35.37.082-.082-.004-.412-.19-.734zm89.556-.184c.003-.132-.211-.24-.475-.24-.542 0-.562.056-.276.801.163.425.26.447.475.106.149-.235.273-.535.276-.667zm-82.836-.136c-.28-.48-.342-.493-.35-.077-.01.539.326 1.024.553.797.075-.074-.017-.398-.203-.72zm74.139.048c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm3.577-1.085c.003-.601-.09-.999-.206-.883-.116.116-.429.032-.696-.186-.353-.289-.33-.158.086.48.383.588.503 1.169.366 1.76-.152.654-.121.758.12.402.179-.264.327-.972.33-1.573zm7.045.997c0-.14-.172-.427-.381-.636-.21-.21-.417-.635-.462-.944-.044-.31-.17-1.05-.28-1.643-.197-1.059-.21-1.067-.678-.4-.608.868-1.405.897-1.24.046.066-.348-.05-.731-.26-.851-.208-.12-.277-.104-.15.035.125.14.1.494-.058.788-.428.8.73 1.471 1.316.765.376-.454.443-.426.617.254.107.42.07 1.011-.082 1.315-.208.416-.163.51.181.377.28-.107.54.083.67.487.2.635.807.94.807.407zm-109.6-1.024c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm22.56-.068c0-.126-.324-.4-.72-.608-.396-.209-.82-.534-.943-.722-.123-.189-.317-.249-.432-.134-.115.116-.09.4.058.631.146.232.287.53.312.661.024.132.063.297.085.367.071.226 1.64.04 1.64-.195zm1.62-.305c-.863-.248-1-.384-.64-.635.393-.274.39-.301-.02-.19-.265.073-.527.371-.584.665-.083.427.141.528 1.12.505l1.223-.03-1.099-.315zm63.98.053c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-92.16-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm13.266-.297c.101-.164.038-.389-.141-.5-.18-.11-.325.024-.325.299 0 .562.192.644.466.2zm76.654-.343c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm-61.76-.78c0-.678-.513-.879-.938-.367-.282.34-.272.484.044.611.707.284.893.232.893-.245zm-22.88-.18c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm100.898-.488c-.099-.099-.278.079-.398.395-.174.456-.137.492.18.179.218-.217.316-.476.218-.574zm-77.378-.152a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm61.28 0c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm-67.04-.3c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.498.32.498.176 0 .32-.135.32-.3zm64.8-.66c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-56.397-.684c-.194-.194-.272-.588-.171-.875.14-.4.09-.436-.215-.155-.307.283-.312.524-.021 1.067.206.386.462.615.568.51.106-.107.034-.352-.16-.547zm-1.923-.168a1.235 1.235 0 0 0-.8 0c-.22.09-.04.162.4.162s.62-.073.4-.162zm79.206-.168a.906.906 0 0 0-.507-.506c-.234-.078-.305.068-.185.38.223.581.884.702.692.126zm1.034-.56c0-.342-.13-.701-.287-.799-.157-.097-.265.183-.24.621.054.934.527 1.092.527.177zm-28.48-.366c0-.712-.664-.703-.902.01-.084.254.004.335.22.202.199-.123.362-.07.362.116s.072.338.16.338c.088 0 .16-.3.16-.666zm-1.805-.454c-.101-.264-.33-.48-.509-.48-.187 0-.156.204.073.48.22.264.449.48.51.48.06 0 .028-.216-.074-.48zm6.176-.56c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm-2.873.02c-.102-.255-.178-.179-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm6.182.023c0-.176-.144-.231-.32-.123-.176.11-.32.342-.32.518s.144.231.32.122c.176-.108.32-.341.32-.517zM214.836 55.2c.01-.176-.122-.104-.292.16-.171.264-.303.696-.293.96.019.507.552-.513.585-1.12zm31.84.686c-.185-.484-.772-.752-.772-.352 0 .228.774 1.066.887.96.048-.045-.003-.319-.114-.608zM137.105 56a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm2.24.02c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.498.32.498.176 0 .32-.135.32-.3zm7.04-.02c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm61.852-.32c-.092-.352-.3-.64-.461-.64-.162 0-.14.287.049.64.188.352.396.64.46.64.066 0 .044-.288-.048-.64zm-42.012.18c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm43.52.03c0-.06-.278-.361-.616-.668-.587-.53-.61-.53-.505.03.061.324.123.624.136.668.038.124.985.095.985-.03zm8.32-.21c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm2.88.01c0-.17-.216-.227-.48-.125-.264.1-.48.24-.48.31 0 .069.216.125.48.125s.48-.14.48-.31zm-78.72-.33c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm57.57-.516c-.469-.564-.696-.399-.424.309.11.288.336.44.503.337.18-.111.148-.372-.08-.646zm-63.523.25c.09-.147-.039-.267-.287-.267-.249 0-.378.12-.288.267.091.146.22.266.288.266.067 0 .196-.12.287-.266zm4.513-.054c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm71.52 0a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.678-.23c-.222-.08-.321-.276-.222-.437.1-.161.029-.293-.158-.293-.475 0-.424.876.062 1.05.22.078.472.07.56-.017.088-.088-.021-.225-.242-.304zm2.482-.25c-.22-.264-.553-.48-.74-.48-.189 0-.063.212.278.47.803.607.96.61.462.01zm-71.84-.16c.108-.176-.036-.32-.32-.32-.285 0-.43.144-.32.32.108.176.252.32.32.32.067 0 .21-.144.32-.32zm62.6-.725c-.317-.314-.354-.277-.18.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm38.36.405a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-40.027-.116c-.073-.065-.493-.304-.933-.533-.732-.38-.763-.37-.361.117.241.293.661.532.933.532s.434-.052.36-.116zm35.765-.584c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-98.458.06a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm54.537-.676c-.323-.522-.777-.291-.777.396 0 .565.08.612.476.283.262-.217.398-.523.301-.679zm14.02.196c.085-.44.03-.8-.122-.8-.151 0-.275.227-.275.503 0 .457-.046.457-.503 0-.906-.905-.937-.452-.048.697.472.611.78.482.949-.4zm2.49-.1c-.16-.056-.2-.339-.089-.63.18-.468.145-.475-.303-.06-.378.35-.425.625-.187 1.074.26.488.373.519.596.16.157-.254.15-.487-.017-.544zm1.186.707c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm28.716-.083c-.093-.094.159-.368.56-.61.505-.303.545-.38.13-.25-.33.103-.783.036-1.007-.15-.31-.257-.395-.158-.36.421.026.417.228.759.448.759s.323-.077.23-.17zm2.77-1.089c-.316-.314-.353-.277-.179.18.12.315.3.492.398.394.098-.099 0-.357-.219-.574zm-107.88.085a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm5.44.034c0-.404-.904-.703-1.111-.367-.095.153.009.352.23.44.634.256.882.236.882-.073zm.8-.034c.11-.176.046-.32-.14-.32-.187 0-.34.144-.34.32 0 .176.064.32.142.32.077 0 .23-.144.339-.32zm31.84-.125c0-.246-.2-.523-.443-.617-.312-.119-.396.014-.283.446.185.709.727.836.727.17zm31.036.205c-.003-.132-.145-.456-.315-.72-.251-.388-.312-.342-.316.24-.003.396.14.72.316.72s.317-.108.315-.24zm-26.708-1.976c-.116-.365-.353-.664-.528-.664-.174 0-.259.108-.188.24.071.132.227.513.347.846.291.815.636.42.37-.422zm7.833.795c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm3.173.05c-.073-.049-.421-.301-.773-.56-.592-.433-.608-.427-.201.091.241.308.59.56.773.56.184 0 .274-.04.2-.09zm-10.23-1.623c-.302-.277-.343-.27-.172.034.126.222.058.4-.152.4-.266 0-.248.157.061.53.407.491.448.489.55-.034.06-.31-.07-.728-.287-.93zm8.337 1.074c.348-.225.365-.311.06-.315-.23-.003-.344-.125-.253-.271.09-.147-.035-.267-.278-.267-.243 0-.422.264-.397.587.05.664.187.706.868.266zm10.653-.316c-.091-.35-.3-.553-.465-.452-.177.11-.146.37.075.637.505.608.587.569.39-.185zm15.267.51c0-.069-.224-.211-.497-.316-.285-.11-.413-.055-.301.126.188.304.798.45.798.19zm-32.64-.32c0-.069-.224-.211-.497-.316-.285-.11-.413-.055-.301.126.188.304.798.45.798.19zm16.067-.838c-.078-.53-.26-1.037-.404-1.126-.265-.164-.09 1.338.212 1.828.287.465.337.284.192-.702zm3.746.85c-.377-.326-1.928-.52-1.741-.219.113.184.58.333 1.04.333.459 0 .774-.051.7-.115zM243 49.573c.012-.103-.169-.187-.403-.187-.284 0-.373.272-.269.818.143.748.177.763.403.186.136-.347.257-.715.269-.817zm-56.297.506c0-.264-.18-.444-.4-.4-.22.044-.354-.136-.298-.4.083-.384.022-.4-.302-.08-.327.32-.285.49.217.869.78.59.783.59.783.011zm5.235 0c-.101-.264-.24-.48-.31-.48-.069 0-.125.216-.125.48s.139.48.31.48c.17 0 .227-.216.125-.48zm18.765.16c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-22.516-.48c-.102-.264-.01-.484.206-.49.214-.004.136-.157-.173-.337-.625-.363-1.211-.14-1.172.446.018.275.07.27.186-.019.173-.427.774-.562.71-.16-.077.493.045 1.04.233 1.04.107 0 .111-.216.01-.48zm2.734-.549c-.23-.23-.378-.249-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm7.176-.1c.038-.259-.038-.47-.17-.47-.428 0-.624.373-.443.844.2.522.509.333.613-.374zm4.286.42c0-.138-.186-.25-.412-.25-.227 0-.437-.323-.466-.716-.03-.393-.22-.77-.425-.839-.203-.068-.602-.394-.885-.724-.473-.553-1.332-.831-1.332-.432 0 .094.504.612 1.12 1.153.616.541 1.12 1.226 1.12 1.522 0 .325.253.538.64.538.352 0 .64-.113.64-.251zm-26.24-.25c0-.177-.064-.32-.142-.32-.077 0-.23.143-.338.32-.11.175-.046.32.14.32.187 0 .34-.145.34-.32zm3.064-.243c-.099-.098 0-.408.218-.688.352-.451.333-.459-.162-.07-.308.241-.56.325-.56.186s-.076-.177-.168-.085c-.284.284.215 1.228.542 1.025.17-.104.228-.27.13-.368zm15.656.242c-.11-.176-.05-.32.13-.32.181 0 .24-.231.132-.515-.182-.472-.222-.472-.487.003-.268.478-.114 1.153.262 1.153.088 0 .071-.144-.038-.32zm8.48 0c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm6.15-1.097c.535.17.625.104.458-.332-.115-.299-.208-.703-.208-.898 0-.195-.212-.075-.47.266-.425.562-.471.568-.48.061-.006-.308-.143-.56-.306-.56-.162 0-.246.468-.187 1.04.189 1.832.256 2.02.393 1.106.111-.739.25-.858.8-.683zm-69.51.777c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm2.675-.16c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm33.915-.333c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm4.543-.394c-.206-.22-1.11.347-.955.598.097.156.37.104.606-.114.237-.218.394-.436.349-.484zm3.347.635c0-.138-.323-.276-.716-.305-.563-.043-.615.01-.24.247.585.37.956.392.956.058zm54.4-.068c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-50.24-.32c0-.176-.225-.32-.5-.32-.274 0-.41.144-.3.32.108.176.333.32.498.32.166 0 .302-.144.302-.32zm11.52.18c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-58.245-.42c-.01-.438-.598-1.184-.786-.996-.252.252.15 1.236.505 1.236.157 0 .283-.108.28-.24zm50.497-.763c-.08-.24-.225-.095-.338.338-.14.532-.098.657.14.42.185-.187.275-.528.198-.758zm14.022.419c.478.082.587-.064.515-.694-.05-.44-.265-.974-.48-1.189-.306-.306-.4-.22-.436.4-.028.482.127.787.4.787.246 0 .447.137.447.304 0 .184-.378.172-.96-.032-.882-.307-1.335-.912-.684-.912.152 0 .25-.324.22-.72-.076-.983.16-1.358.528-.834.242.346.281.348.192.01-.062-.233-.237-.4-.389-.372-.152.028-.398-.141-.547-.376-.202-.32-.281-.266-.313.212-.024.352-.018.831.014 1.064.032.233-.1.614-.293.846-.26.313-.223.55.14.914.27.27.494.681.496.914.004.349.052.348.275-.002.148-.234.541-.378.875-.32zm5.67.136c.184-.481-.547-.514-.975-.043-.137.15-.07.17.15.044.22-.127.4-.078.4.108 0 .478.22.421.424-.11zm-14.307-1.108c-.197-.065-.537-.344-.757-.622-.362-.455-.4-.451-.4.037 0 .298.134.541.298.541.164 0 .401.324.527.72.221.695.237.698.459.08.137-.38.085-.687-.127-.756zm42.6-.12c.041-.54-.016-.602-.23-.255-.157.253-.214.576-.127.716.24.39.299.316.357-.46zm-75.437.076c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm74.56.18c0-.338-.615-.48-.797-.185-.11.179.023.325.298.325.274 0 .499-.063.499-.14zm-41.488-.989c-.103-.268-.495-.648-.87-.843-.628-.326-.62-.287.093.489.893.97 1.039 1.037.777.354zm5.672-.271c1.254-1.303 1.095-2.807-.331-3.133-.662-.152-.62.774.057 1.272.708.52.715.844.033 1.641-.501.585-.565.59-.95.084-.362-.476-.414-.481-.423-.037-.023 1.13.627 1.199 1.614.173zm-22.309-.36c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm5.485.16c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-4.32-.14c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm57.178-.56c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm-53.536-.436c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm2.583-.38c.152-.398.1-.42-.27-.113-.312.26-.525.274-.666.045-.114-.185-.36-.336-.548-.336-.232 0-.227.137.017.43.196.236.271.514.167.618-.104.104.103.113.46.02.358-.094.735-.393.84-.664zm-47.505-.084a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm41.035-.464c.082-.431-.018-.848-.223-.926-.247-.095-.326.167-.236.784.166 1.131.264 1.162.459.142zm20.157-.045c-.112-.585-.235-.706-.417-.41-.143.23-.106.602.082.829.476.573.516.524.335-.42zm-4.525-.02c-.39-.273-.796-.41-.902-.303-.105.106-.016.192.2.192.216 0 .322.114.236.254-.087.14.142.276.509.304.652.049.651.04-.043-.447zm15.711-.18c-.23-.23-.378-.249-.378-.048 0 .427.378.806.592.592.09-.09-.005-.336-.214-.544zm7.942.466c0-.133-.324-.442-.72-.685-.718-.44-.718-.44-.11.243.651.733.83.828.83.442zm-36.938-.699c0-.425-.114-.528-.36-.323-.199.165-.456.205-.572.09-.116-.117-.21-.067-.21.109 0 .422.34.746.784.746.197 0 .358-.28.358-.622zm33.738.302a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-37.76-.48c0-.264-.14-.48-.31-.48-.17 0-.228.216-.126.48.101.264.24.48.31.48.069 0 .126-.216.126-.48zm21.3-1.046c-.118-.118-.35-.004-.513.256-.478.756-.352 1.041.21.478.286-.285.422-.615.303-.734zm18.06.924c0-.156-.288-.358-.64-.45-.694-.182-.896.256-.24.52.63.255.88.235.88-.07zm13.12-.038a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-7.04-.499c0-.274-.147-.408-.326-.297-.179.11-.242.335-.14.498.273.444.466.362.466-.2zm9.92.127c0-.168-.13-.226-.287-.128-.158.097-.381-.07-.497-.373-.18-.47-.253-.481-.509-.078-.44.696-.386.787.493.837.44.026.8-.09.8-.258zm-95.045-.847c-.004-.466-.048-.474-.315-.06-.405.626-.405 1.05 0 .8.176-.11.317-.442.315-.74zm7.045.58c0-.177-.153-.32-.34-.32-.186 0-.25.143-.14.32.108.175.26.32.338.32.078 0 .142-.145.142-.32zm1.76 0c.108-.177.045-.32-.142-.32-.186 0-.338.143-.338.32 0 .175.063.32.14.32.078 0 .23-.145.34-.32zm62.281-.11c-.196-.236-.269-.517-.163-.623.107-.106-.103-.17-.466-.144-.453.034-.565.164-.359.413.166.2.206.457.09.573-.115.116.12.21.522.21.577 0 .657-.091.377-.43zm4.229-.064c-.104-.272-.258-.426-.342-.342-.084.084-.058.306.058.494.316.51.5.411.284-.152zm-15.11-.387c.389-.495.38-.514-.07-.162-.28.218-.627.29-.771.16-.144-.13-.159-.058-.032.162.298.517.35.508.873-.16zm9.209-.522c.284-.343.249-.488-.158-.644-.354-.136-.476-.456-.375-.982.139-.729-.542-1.413-.976-.98-.092.093.003.168.212.168.246 0 .308.284.178.804-.112.447-.036 1.004.17 1.254.295.354.252.48-.203.598-.48.125-.462.156.103.187.375.02.846-.162 1.049-.405zm21.979-.756c-.35-.35-.59.206-.338.785.237.548.255.547.387-.012.077-.321.054-.67-.05-.773zm-37.308.558c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm1.811-.72c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm2.018.8c-.023-.544-.895-1.386-1.098-1.059-.115.187-.061.34.12.34.18 0 .246.215.144.48-.116.303.004.48.33.48.283 0 .51-.109.504-.24zm6.599-.958c-.35-.35-.59.206-.338.785.237.548.255.547.387-.012.077-.321.054-.67-.05-.773zm10.78.546c-.093-.36-.241-.582-.329-.494-.173.173.133 1.146.36 1.146.078 0 .064-.293-.03-.652zm-70.65.016c.111-.181-.017-.235-.302-.126-.554.213-.656.442-.195.442.165 0 .389-.142.496-.316zm79.575-.718c-.237-.237-.279-.112-.14.42.114.433.259.578.339.338.077-.23-.013-.572-.199-.758zM192.144 40c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-47.245-.48c-.2-.523-.755-.66-.755-.186 0 .242.224.408.87.641.038.014-.013-.19-.115-.455zm7.565.34c0-.078-.144-.231-.32-.34-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm47.36-.839c0-.165-.12-.3-.267-.3-.147 0-.267.209-.267.465s.12.392.267.301c.147-.09.267-.3.267-.466zm8.803.014c.084-.136-.06-.33-.32-.43-.273-.104-.609.072-.793.416-.27.505-.22.57.32.43.352-.093.708-.28.793-.416zm-59.253-.169c-.104-.271-.258-.425-.342-.34-.084.083-.058.305.058.493.316.51.5.411.284-.153zm52.308.15c-.063-.189-.251-.344-.418-.344-.168 0-.356.155-.42.344-.062.19.126.344.42.344.293 0 .481-.155.418-.344zm1.553-.696c-.088-.22-.161-.04-.161.4s.073.62.161.4c.09-.22.09-.58 0-.8zm11.182.167c-.325-.325-.594.164-.327.596.202.326.277.327.385.001.075-.222.048-.491-.058-.597zm-66.113.233c0-.4-.34-.4-.96 0-.389.251-.343.311.24.315.396.003.72-.139.72-.315zm50.312-.933c-.373-.373-.535-.399-.634-.102-.073.22-.284.306-.469.192-.195-.121-.016-.382.427-.623.759-.414.758-.415-.196-.313-.528.057-1.168-.06-1.422-.259-.37-.29-.406-.266-.185.118.206.358.117.341-.346-.064-.428-.374-.77-.45-1.095-.244-.398.251-.384.3.088.303.308.003.56.23.56.504 0 .275.145.41.322.3.177-.11.413.038.524.328.146.38.269.42.44.142.173-.28.4-.217.836.233.443.457.734.535 1.124.301.478-.286.48-.361.026-.816zm22.56 1.06c-.105-.106-.381-.118-.612-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-28.494-.827c-.102-.255-.178-.18-.193.194-.014.337.061.526.168.42.106-.107.118-.383.025-.614zm19.116-.052c-.111-.288-.329-.445-.485-.349-.156.096-.105.369.114.606.49.533.635.433.37-.257zm-65.297.187c-.2-.129-.435-.523-.523-.875-.123-.49-.169-.434-.197.24-.027.64.115.879.523.875.355-.003.427-.09.197-.24zm84.363-.037c0-.156-.288-.358-.64-.45-.352-.093-.64-.048-.64.099 0 .146.252.332.56.413.308.08.596.163.64.183.044.02.08-.09.08-.245zm-10.007-.231c-.106-.106-.382-.118-.613-.025-.256.102-.18.178.193.193.337.014.526-.062.42-.168zm-26.466-.753c-.273-.51-.21-.694.336-.986.37-.198.584-.447.477-.554-.302-.302-1.451-.317-1.265-.017.156.253-.6 1.223-.954 1.223-.09 0-.11-.28-.045-.621.085-.442-.017-.57-.352-.44-.706.27-.37.835.859 1.446 1.384.687 1.34.69.944-.051zm10.416.383c-.098-.098-.028-.358.155-.579.23-.278.23-.465-.003-.608-.185-.114-.336.025-.336.31s-.146.428-.325.317c-.179-.11-.255-.314-.17-.452.086-.139-.288-.74-.831-1.338-.811-.893-.948-.958-.769-.367.225.743-.296 1.044-.554.32-.079-.22-.257-.293-.397-.163-.14.13.129.591.596 1.025.595.551.85.648.85.323 0-.256.117-.465.259-.465.142 0 .23.396.197.88-.05.726.077.889.723.928.43.026.703-.033.605-.13zm-57.303-.397c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm39.037.004c.112-.181-.016-.235-.3-.126-.29.111-.497.02-.497-.217 0-.224-.087-.32-.193-.215-.24.24.132.875.513.875.155 0 .37-.143.477-.317zm13.283.176c0-.078-.144-.23-.32-.34-.176-.108-.32-.045-.32.142 0 .186.144.339.32.339.176 0 .32-.064.32-.141zm7.36-.358c0-.275-.144-.41-.32-.301-.176.108-.32.333-.32.499 0 .165.144.3.32.3.176 0 .32-.224.32-.498zm1.846-.081c.192-.576-.47-.455-.692.126-.12.312-.049.458.185.38a.906.906 0 0 0 .507-.506zm20.327-.377c-.091-.35-.3-.553-.465-.451-.177.109-.146.37.075.636.505.608.587.57.39-.185zm-44.446.05c.09-.147-.039-.267-.287-.267-.249 0-.378.12-.288.267.091.147.22.267.288.267.067 0 .196-.12.287-.267zm5.866.073c-.106-.106-.382-.117-.613-.025-.256.102-.18.178.193.193.337.014.526-.061.42-.168zm-43.667-1.003c-.123-.32-.267-.332-.604-.052-.562.466-.56.471.161.471.367 0 .54-.164.443-.42zm4.394.237c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm3.2.178c0-.077-.144-.23-.32-.338-.176-.11-.32-.046-.32.14 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm41.737-.098a3.92 3.92 0 0 1-.529-.56c-.136-.183-.24-.08-.244.24a.539.539 0 0 0 .529.56c.293 0 .403-.108.244-.24zm1.015-.592c-.114-.297-.28-.468-.368-.38-.088.088-.066.403.048.7.113.296.279.467.367.38.088-.089.066-.404-.047-.7zm-5.49.219c.1-.161 0-.378-.22-.483-.222-.105.102-.12.718-.033 1.043.147 1.077.125.498-.317-.341-.261-.99-.475-1.44-.476-1.34-.003-3.254-.641-3.027-1.009.114-.185-.206-.069-.712.257l-.919.594.75-.96c.698-.893.709-.968.16-1.07-.325-.059-.828-.41-1.118-.78-.518-.661-.524-.657-.357.269.094.517.316 1.124.493 1.348.178.225.23.5.116.614-.228.229.702 1.379 1.115 1.379.143 0 .177-.218.075-.484-.14-.364-.038-.43.41-.264.328.12.707.404.844.63.137.226.438.338.669.25.23-.089.605.061.83.333.466.56.85.63 1.116.202zm8.084-.227c-.11-.11.118-.457.506-.771.437-.354.782-.447.907-.246.114.186.277.2.38.035.098-.159.05-.497-.108-.752-.24-.389-.369-.36-.799.175-.361.45-.562.52-.68.239-.306-.737-.71-.41-.593.48.146 1.107.122 1.04.374 1.04.117 0 .123-.09.013-.2zm30.29-.28c.125-.327-.018-.48-.447-.48-.346 0-.63.215-.63.48 0 .264.201.48.446.48s.529-.216.63-.48zm-31.68-.87c-.088-.144-.301-.174-.473-.068-.446.276-1.304-.524-1.108-1.034.09-.235-.035-.428-.279-.428-.244 0-.502.177-.575.394-.176.53 2.087 2.18 2.377 1.733.12-.185.147-.454.058-.597zm-51.22 0c.628.161.656.122.261-.359-.339-.413-.545-.454-.88-.176-.24.2-.42.597-.4.884.034.475.049.475.176-.005.097-.364.357-.47.843-.345zm2.6.03c-.208-.335-.776-.065-.776.368 0 .16.215.209.478.108.263-.1.397-.315.298-.475zm59.064.04c0-.352-.056-.64-.123-.64-.068 0-.198.288-.29.64-.092.352-.037.64.122.64.16 0 .29-.288.29-.64zm-53.9-.886c-.118-.119-.35-.004-.513.255-.478.756-.352 1.041.21.478.286-.285.422-.615.303-.733zm48.875.779c.09-.235-.025-.427-.255-.427s-.346.192-.256.427c.09.235.205.427.256.427.05 0 .165-.192.255-.427zm-21.322-.373c0-.264-.12-.48-.267-.48-.32 0-.351.448-.053.746.296.297.32.277.32-.266zm9.246-.592c-.45-.45-.82-.97-.82-1.154 0-.184-.224-.334-.498-.334-.275 0-.41.144-.301.32.108.176.053.32-.123.32s-.41-.147-.52-.326c-.111-.178-.312-.257-.446-.174-.135.083-.245-.064-.245-.328 0-.269.188-.408.427-.316.235.09.427-.039.427-.287 0-.247-.279-.429-.618-.403-.34.026-.592.197-.56.38.031.184-.122.298-.342.254-.5-.1-.497.246.01.911.41.54.565.609 1.368.609.289 0 .405.152.277.36-.16.257-.062.27.336.048.425-.238.753-.132 1.374.443 1.082 1.002 1.301.724.254-.323zm1.58.432c-.25-.406.039-.408.79-.006.446.238.635.187.789-.214.111-.29.045-.683-.147-.874-.252-.25-.29-.19-.136.213.231.609.14.662-.627.367-.278-.106-.445-.29-.371-.41.073-.118-.368-.211-.98-.206l-1.112.009.897.718c.988.792 1.196.884.898.402zm-42.924-.48c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm22.285-.141c0-.166-.144-.39-.32-.5-.176-.108-.32.027-.32.302 0 .274.144.499.32.499.176 0 .32-.136.32-.301zm-23.602-.232c-.222-.09-.321-.294-.222-.455.1-.16.029-.292-.158-.292-.38 0-.45.421-.125.746.117.118.37.202.56.188.192-.014.167-.097-.055-.187zm7.442-.107c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm7.013-.206c.168-.439.121-.459-.286-.12-.555.46-.613.646-.202.646.157 0 .377-.237.488-.526zm49.08-.64c-.093-.44-.173-.36-.31.31-.119.584-.074.794.126.594.17-.17.254-.578.185-.904zM165.7 31.61c-.275-.445-.74.062-.538.587.149.388.246.406.445.085.14-.227.182-.53.093-.672zm33.804.71a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm15.898-.38c-.102-.256-.178-.18-.193.193-.014.337.061.526.168.42.106-.106.118-.382.025-.613zm2.46-.148c-.168-.673-.12-.792.235-.579.38.23.38.189.007-.272-.242-.298-.667-.541-.944-.541-.393 0-.42.085-.121.384.211.21.382.607.38.88-.005.393-.062.408-.276.069-.215-.34-.314-.315-.48.118-.165.429-.071.51.435.377.355-.093.645-.038.645.122s.075.29.166.29c.092 0 .07-.382-.047-.848zm-67.318.261c0-.147-.21-.267-.466-.267-.257 0-.392.12-.302.267.091.147.3.267.466.267.166 0 .302-.12.302-.267zm43.175-.883c-.313-.377-.293-.43.107-.276.565.217 1.054-.348.563-.651-.18-.11-.325-.04-.325.157 0 .196-.137.273-.304.17-.31-.192-.976.779-.976 1.42 0 .256.18.255.66-.001.534-.286.587-.443.275-.819zm-32.295.17c0-.362-.144-.57-.32-.46-.176.108-.32.405-.32.659 0 .253.144.46.32.46.176 0 .32-.296.32-.658zm9.118-.569c-.191-.19-1.118.593-1.118.945 0 .152.283.034.63-.262.347-.297.566-.604.488-.683zm15.068.193c-.09-.775-.015-.873.534-.699.383.122.752.029.92-.231.232-.36.333-.352.595.046.247.376.316.29.32-.4.003-.484-.148-.88-.334-.88-.187 0-.235.168-.108.374.157.254.055.307-.318.164-.364-.14-.473-.089-.325.152.154.247-.019.305-.543.182-1.489-.35-2.043-.459-1.647-.323.22.076.4.352.4.613 0 .264-.157.379-.352.258-.233-.144-.221.027.033.502.307.575.298.772-.044.984-.3.186-.219.25.272.212.572-.043.683-.22.597-.954zm-1.762-.041c.613.136.675.1.296-.17-.264-.19-.804-.346-1.2-.348-.538-.004-.718.177-.71.715.009.656.046.672.424.175.272-.359.678-.486 1.19-.372zm3.816.258c0-.275-.147-.409-.326-.298-.179.11-.242.335-.14.499.273.444.466.36.466-.201zm28.108-.275c-.562-.287-.73-.616-.676-1.324.07-.91.061-.916-.247-.176-.345.828-.113 2.07.335 1.793.152-.093.367-.021.48.16.112.182.35.24.53.13.18-.112-.007-.372-.422-.583zm-63.148.134c.108-.176-.027-.32-.302-.32-.274 0-.498.144-.498.32 0 .176.135.32.3.32.166 0 .39-.144.5-.32zm14.397.004c.112-.182-.016-.235-.3-.126-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm13.283-.164c0-.264-.144-.48-.32-.48-.176 0-.32.216-.32.48s.144.48.32.48c.176 0 .32-.216.32-.48zm32.157.164c.112-.182-.016-.235-.3-.126-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm-14.348-1.11c-.104-.272-.343-.494-.53-.494-.237 0-.232.205.015.667.397.743.813.602.515-.173zm13.13.086c-.103-.255-.179-.18-.194.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-60.3.168a1.235 1.235 0 0 0-.8 0c-.22.089-.04.161.4.161s.62-.072.4-.161zm17.84.07c0-.077-.143-.23-.32-.338-.175-.109-.32-.045-.32.141s.145.339.32.339c.177 0 .32-.064.32-.141zm13.12-.168c0-.17-.215-.227-.48-.126-.263.102-.48.241-.48.31 0 .07.217.126.48.126.265 0 .48-.14.48-.31zm11.085-.17c-.102-.264-.01-.482.206-.485.254-.003.228-.107-.075-.299-.256-.162-.57-.229-.7-.149-.41.254-.158 1.413.307 1.413.265 0 .371-.195.262-.48zm-17.804-.389c0-.088-.216-.077-.48.025-.264.101-.48.036-.48-.145 0-.18-.16-.23-.355-.11-.25.155-.235.292.051.47.396.244 1.264.08 1.264-.24zm-16.32-.091c0-.176-.252-.318-.56-.315-.48.004-.49.05-.08.315.603.39.64.39.64 0zm35.996-.325c-.095-.155.154-.223.555-.15.62.111.655.073.237-.257-.27-.214-.443-.627-.382-.918.06-.292-.012-.605-.16-.697-.148-.091-.29.075-.317.37-.027.296-.15.954-.275 1.465-.163.666-.123.863.144.697.205-.126.294-.356.198-.51zm-34.076-.315c0-.352-.131-.64-.29-.64-.16 0-.215.288-.123.64.092.352.222.64.29.64.067 0 .123-.288.123-.64zm.96.499c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141s.144.339.32.339c.176 0 .32-.064.32-.141zm51.2-.179c-.264-.17-.624-.31-.8-.31-.176 0-.104.14.16.31.264.17.624.31.8.31.176 0 .104-.14-.16-.31zm1.91-1.051c.005-.138-.268-.103-.607.079-.34.181-.88.234-1.2.118-.401-.146-.336-.007.207.445.725.603.825.614 1.19.133.22-.288.404-.637.41-.775zm-15.19.731c.108-.176.045-.32-.142-.32-.186 0-.338.144-.338.32 0 .176.063.32.14.32.078 0 .23-.144.34-.32zm-43.36-.301c0-.166-.144-.39-.32-.499-.176-.109-.32.027-.32.301 0 .274.144.499.32.499.176 0 .32-.136.32-.301zm24.64-.499c0-.05-.216-.174-.48-.276-.29-.11-.48-.002-.48.276 0 .277.19.387.48.276.264-.102.48-.226.48-.276zm5.305.02c.287-.287.339-.534.137-.659-.177-.11-.322-.038-.322.159s-.144.269-.32.16c-.176-.109-.32.027-.32.301 0 .62.232.632.825.04zm6.126-.157c.285-.456.29-.65.02-.74-.2-.066-.265-.282-.144-.478.147-.238.541-.266 1.177-.084.525.151.955.156.955.011 0-.555-1.671-.679-2.433-.18-.775.508-1.026 1.128-.457 1.128.17 0 .228.216.126.48-.266.694.302.59.756-.137zm19.769.297a.744.744 0 0 0-.58-.315c-.228.003-.189.129.1.315.614.397.725.397.48 0zm-49.89-.81c-.038-.268-.17-.484-.29-.479-.122.005-.4.011-.62.014-.267.003-.24.108.08.315.264.17.363.312.22.315-.142.003-.168.151-.057.33.278.451.755.098.668-.495zm2.37.49a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm26.56.061c0-.142-.224-.538-.498-.88-.484-.604-.489-.602-.171.057.18.373.235.769.124.88-.111.111-.034.202.171.202.206 0 .374-.116.374-.259zm2.56.118c0-.078-.144-.23-.32-.339-.176-.109-.32-.045-.32.141s.144.339.32.339c.176 0 .32-.064.32-.141zm12.137-.526c.027.536.44.203.532-.43.037-.25-.16-.393-.463-.334-.29.056-.708.113-.93.127-.322.02-.322.152-.003.663.368.59.416.596.62.08.149-.376.229-.41.244-.106zm-45.569-.231c-.099-.099-.357 0-.574.218-.314.316-.277.353.18.18.315-.12.492-.3.394-.398zm39.816.282c.369-.019.383-.105.066-.421-.316-.317-.459-.3-.699.08-.201.318-.303.344-.307.077-.003-.22-.22-.4-.484-.4-.318 0-.48-.318-.48-.941 0-.518-.144-1.03-.32-1.139a.744.744 0 0 1-.316-.579c.003-.229.13-.19.316.099.255.395.31.4.315.027.003-.25.106-.353.23-.229.123.124.19.724.15 1.333-.042.61.073 1.109.255 1.109.181 0 .33-.36.33-.8 0-.884.289-1.007.942-.4.345.32.386.32.206 0-.14-.247-.032-.4.283-.4.28 0 .593.22.696.49.163.422.246.411.609-.08.337-.457.501-.49.826-.17.406.4 1.558.561 1.558.217 0-.1-.216-.399-.48-.663-.288-.287-.48-.334-.48-.118 0 .212-.167.256-.4.108-.492-.312-.554-.324-2.24-.428-.818-.05-1.071-.139-.636-.222.399-.077.65-.26.56-.407-.09-.147-.427-.199-.746-.115-.381.1-.712-.103-.961-.59-.379-.738-.38-.738-.198-.022.14.55.047.719-.398.715-.572-.005-1.806-.62-1.262-.63.153-.003.098-.223-.124-.49-.35-.423-.457-.38-.825.33-.437.842-.303 1.755.258 1.755.176 0 .237-.216.136-.48-.102-.264-.038-.48.142-.48.362 0 1.254 1.936 1.254 2.723 0 .692.695 1.378 1.278 1.262.265-.053.69-.107.946-.12zm-21.984-.236a1.235 1.235 0 0 0-.8 0c-.22.089-.04.161.4.161s.62-.072.4-.16zm19.12-.215c0-.234-.214-.426-.475-.426-.36 0-.39.103-.121.426.195.235.408.427.475.427.066 0 .12-.192.12-.427zm3.56-.298c-.317-.314-.354-.277-.18.179.12.315.3.493.398.394.098-.098 0-.356-.219-.573zm6.68.405a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm1.32-.405c-.317-.314-.354-.277-.18.179.12.315.3.493.398.394.098-.098 0-.356-.219-.573zm-41.511-.042c.224.086.593-.066.818-.338.279-.336.295-.495.052-.495-.198 0-.36.147-.36.326 0 .189-.339.241-.803.125-.68-.171-.77-.114-.581.377.122.32.277.415.344.214.067-.201.306-.296.53-.21zm28.612-.457c-.038-.497-.284-1.104-.546-1.35-.415-.387-.443-.363-.215.185.144.346.332.953.418 1.349.219 1.009.425.898.343-.184zm6.389.535c-.068-.204-.447-.49-.843-.636-.457-.17-.649-.151-.525.05.107.173.411.315.675.315.264 0 .391.144.283.32-.11.176-.034.32.167.32s.31-.166.243-.37zm-36.69-.676c-.317-.314-.354-.277-.18.179.12.315.3.493.398.394.098-.098 0-.356-.219-.573zm14.079-.131c-.378-.649-.469-.441-.16.364.11.286.267.452.35.37.082-.083-.004-.413-.19-.734zm2.358.54c.112-.182-.016-.235-.3-.126-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm22.08-.01c-.111-.178-.323-.25-.472-.157-.15.092-.344-.014-.433-.235-.098-.243-.172-.18-.187.158-.017.36.21.56.633.56.365 0 .57-.145.458-.325zm1.955-.326c.652-.248.937-.231 1.121.067.143.231.234-.067.215-.708-.018-.609-.094-.926-.168-.705-.074.221-.25.33-.392.243-.14-.087-.434.056-.651.318-.218.263-.594.477-.837.477-.242 0-.44.144-.44.32 0 .398.073.398 1.152-.012zm5.248-.308c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-30.57-.304c.103-.167-.09-.453-.43-.634-.528-.283-.594-.239-.452.303.178.679.575.828.882.331zm10.676-.376c-.234-.149-.624-.272-.866-.275-.346-.004-.358.093-.056.456.21.253.6.377.866.275.393-.15.403-.236.056-.456zm3.04.223c.222-.578-.594-1.33-.902-.83-.117.188-.021.303.212.255.248-.052.385.143.33.472-.114.674.116.74.36.103zm2.611-.18c.112-.18-.016-.234-.3-.125-.555.213-.657.442-.196.442.165 0 .389-.142.496-.316zm-17.757-.323c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm29.952-.4c.127-.22.112-.293-.032-.163-.144.13-.49.059-.771-.16-.45-.351-.459-.333-.07.163.523.667.575.677.873.16zm-16.512-.24c0-.176-.064-.32-.142-.32-.077 0-.23.144-.338.32-.11.176-.046.32.14.32.187 0 .34-.144.34-.32zm2.56-.32a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-1.92-.32c0-.176-.21-.32-.465-.32s-.61-.252-.79-.56c-.28-.48-.327-.487-.336-.049-.005.281.315.667.71.858.926.447.88.443.88.071zm-5.616-.296c.177-.014.166-.162-.027-.355-.35-.35-1.397-.098-1.397.337 0 .141.252.21.56.15.308-.059.696-.118.864-.132zm20.65-.192c-.224-.268-.472-.422-.552-.341-.222.222.229.829.616.829.212 0 .187-.184-.065-.488zm-14.67-.811c-.415-.342-.92-.61-1.12-.596-.235.016-.223.083.035.187.22.089.4.335.4.546 0 .212.324.408.72.435l.72.048zm12.349-.174c-.106-.107-.382-.118-.613-.026-.256.102-.18.178.193.194.337.014.526-.062.42-.168zm-9.833-.767c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm60.026 433.003c-.138-.223-.164-.492-.059-.598.287-.286.6.135.444.6-.108.324-.183.324-.385 0zm.927-.693c-.303-.49-.444-2.53-.186-2.69.272-.168.686.113 1.278.867.39.498.38.543-.08.366-.585-.224-.76.644-.2.99.358.221.123.797-.325.797-.156 0-.374-.149-.487-.33zm-10.66-.662c-.23-.369-.336-.752-.236-.853.1-.1.185.022.187.272.004.376.052.38.28.019.358-.564.656-.052.392.673-.186.509-.241.499-.622-.111zm1.387-.698c-.352-.356-.454-.542-.226-.412.475.272 1.426-.39 1.165-.81-.095-.155.063-.19.35-.08.382.147.419.266.136.44-.213.133-.299.384-.19.56.109.176.02.462-.199.635-.277.22-.59.12-1.036-.333zm8.053.517c-.298-.299-.266-.747.053-.747.147 0 .267.216.267.48 0 .544-.024.563-.32.267zm-11.443-1.193c-.417-.433-.953-.69-1.234-.593-.395.138-.417.087-.11-.244.309-.334.482-.338.866-.02.264.219.6.323.749.232.148-.092.478-.019.734.162.364.259.327.288-.175.138-.596-.177-.602-.16-.08.245.308.24.56.529.56.641 0 .432-.603.174-1.31-.56zm1.736-.3c0-.277.27-.373.776-.277.573.11.664.22.347.42-.634.403-1.123.34-1.123-.143zm5.814-.214c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm8.224-.384c-.452-.452-.502-.896-.102-.896.156 0 .358.288.45.64.196.747.165.77-.348.256zm-13.504-.324c0-.354.883-.315 1.108.049.102.165-.106.278-.462.251-.355-.026-.646-.162-.646-.3zm3.68.068c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-8.622-.61c-.099-.16.109-.215.461-.123.747.195.842.413.18.413-.254 0-.542-.13-.641-.29zm16.775-.518c-.223-.268-.324-.568-.225-.667.099-.099.34.12.537.488.419.783.263.872-.312.18zm-16.14-.13c-.218-.354.286-.736.582-.44.304.304.247.738-.097.738-.165 0-.384-.134-.485-.298zm2.817-.196c-.104-.271-.118-.565-.03-.653.087-.087.235.135.329.494.2.763-.022.88-.3.16zm11.283-.014c-.257-.67-.245-.772.092-.772.4 0 .705.903.374 1.108-.15.093-.36-.059-.466-.336zm3.407.296c-.22-.089-.4-.367-.4-.617 0-.376.112-.386.64-.057.988.617.816 1.1-.24.674zm-15.68-.32c-.458-.185-.544-.748-.115-.748.157 0 .369.216.47.48.102.264.153.469.114.455-.038-.014-.25-.098-.47-.187zm2.759-.348c-.398-.508-.387-.519.12-.12.534.417.703.68.44.68-.067 0-.319-.252-.56-.56zm-3.79-.24c0-.176.14-.536.31-.8.171-.264.31-.336.31-.16 0 .176-.139.536-.31.8-.17.264-.31.336-.31.16zm16.988-.19c-.02-.281.236-.758.57-1.061.66-.597 1.039-.322 1.227.89.088.564.047.57-.688.088-.724-.475-.793-.472-.927.04-.12.457-.152.464-.182.043zm1.141-.99c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-15.829.373c-.375-.6-.357-.618.243-.243.645.403.866.89.404.89-.133 0-.424-.291-.647-.647zm-3.75.007c-.108-.176-.053-.32.123-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm23.094.106c-.117-.117-.21-.44-.204-.72.008-.416.07-.402.35.078.344.592.244 1.033-.146.642zm-17.26-1.096c-.312-.181-.483-.465-.381-.63.305-.494.702-.341.88.34.092.352.145.635.118.63a8.264 8.264 0 0 1-.617-.34zm7.233-.13c0-.23.192-.346.427-.255.235.09.427.204.427.255 0 .05-.192.165-.427.255s-.427-.025-.427-.255zm11.743.32c0-.176.14-.536.31-.8.171-.264.31-.336.31-.16 0 .176-.139.536-.31.8-.17.264-.31.336-.31.16zm-1.067-.516c-.457-.265-.499-.431-.201-.79.56-.674.859-.553.859.346 0 .44-.018.795-.04.79-.022-.005-.3-.16-.618-.346zm-5.342-.774c0-.259.216-.47.48-.47s.48.128.48.286c0 .157-.216.368-.48.47-.293.112-.48 0-.48-.286zm-19.558-.218a3.251 3.251 0 0 1 .006-.67c.024-.141-.175-.57-.442-.951-.566-.807-.648-2.151-.132-2.151.195 0 .271.216.17.48-.235.612.093 1.492.47 1.26.157-.098.286.09.286.417 0 .327.132.732.293.899.179.185.117.464-.16.716-.37.337-.46.337-.491 0zm4.518-.073c0-.275.144-.5.32-.5.176 0 .32.136.32.302 0 .166-.144.39-.32.499-.176.109-.32-.027-.32-.301zm5.12-.286c0-.352.04-.58.09-.507.05.074.264.362.475.64.309.408.291.507-.09.507-.262 0-.475-.287-.475-.64zm13.59.41c-.294-.475-.06-.643.453-.326.275.17.308.335.093.468a.4.4 0 0 1-.546-.141zm-12.13-.53c-.174-.455-.137-.492.18-.179.218.218.316.476.218.574-.099.099-.278-.079-.398-.394zm13.13-.008c-.343-.344-.2-.725.27-.725.254 0 .541.129.639.286.203.33-.62.727-.908.439zm-12.487-.618c-.112-.294-.092-.647.046-.784.138-.138.271.102.297.533.054.916-.057.996-.343.25zm5.417.213c.108-.176.341-.32.517-.32s.231.144.123.32c-.11.176-.342.32-.518.32s-.231-.144-.122-.32zm1.12-.16c0-.264.056-.48.125-.48.07 0 .209.216.31.48.102.264.045.48-.126.48-.17 0-.31-.216-.31-.48zm8.364-.299c-.302-.62-.323-.624-.343-.048-.023.662-.425.454-.532-.275-.044-.304.177-.4.703-.305.457.083.768-.014.768-.24 0-.209.094-.285.21-.17.116.117.404.05.64-.145.293-.244.43-.249.43-.016 0 .187-.153.434-.34.55-.215.133-.137.357.215.614.496.363.45.42-.438.55-.772.114-1.063 0-1.313-.515zm-28.044-.501c-.12-.379-.147-.76-.059-.848.088-.088.258.15.379.528.12.378.146.76.058.848-.088.088-.258-.15-.378-.528zm3.04.24c0-.279-.18-.58-.4-.668-.314-.127-.312-.167.01-.187.456-.028.901.85.59 1.162-.11.11-.2-.029-.2-.307zm6.745-.107c.015-.373.091-.448.193-.193.093.23.081.507-.025.613-.106.106-.182-.083-.168-.42zm14.055.168c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-18.35-.476c.097-.254.305-.382.463-.284.397.245.36.362-.177.568-.31.119-.405.024-.287-.284zm15.654-.305a17.71 17.71 0 0 1 .328-1.4c.076-.243-.044-.662-.267-.932-.36-.436-.326-.442.3-.052.388.242.641.504.563.582-.079.079.036.364.254.634.327.403.316.442-.057.217-.352-.212-.402-.138-.223.329.127.331.123.494-.009.362s-.429.088-.66.49c-.403.702-.412.693-.23-.23zm-.74-.532c-.04-.515.039-.593.316-.316.242.242.26.476.051.684-.208.208-.333.083-.367-.368zm-1.86.026c-.081-.13.065-.207.325-.169.668.098.909.408.316.408-.271 0-.56-.107-.641-.239zm-17.012-.614c-.092-.352-.303-.64-.469-.64-.166 0-.21-.147-.1-.325.297-.482.7-.114.874.8.182.954-.064 1.087-.305.165zm21.988.386c0-.183.18-.393.4-.467.31-.105.3-.256-.046-.674-.388-.471-.378-.514.08-.338.656.251.676.89.046 1.413-.29.24-.48.266-.48.066zm3.36-.066c-.11-.176.035-.32.32-.32.284 0 .428.144.32.32-.11.176-.253.32-.32.32-.068 0-.212-.144-.32-.32zm3.2-.32c-.11-.176.026-.32.3-.32.275 0 .5.144.5.32 0 .176-.136.32-.302.32-.165 0-.39-.144-.498-.32zm-30.72-.64c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm3.568-.15c-.1-.258-.043-.555.125-.659.169-.104.307.107.307.47 0 .773-.178.85-.432.189zm4.272.13c0-.186.144-.249.32-.14.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm1.813-.194c-.335-.335-.25-1.066.125-1.066.187 0 .24.16.12.356-.122.195-.022.481.22.635.243.153.286.281.095.284-.19.003-.443-.091-.56-.209zm18.507-.106c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm3.46-.24a7.752 7.752 0 0 0-.329-.8c-.071-.132.082-.24.34-.24.322 0 .412.215.288.69-.118.45-.06.615.168.475.192-.119.439-.07.55.11.11.178-.029.325-.309.325-.28 0-.598-.252-.708-.56zm2.606.219c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm-36.306-.648c0-.315.166-.676.369-.802.214-.132.283-.088.163.105-.238.387.66 1.24.974.926.116-.116.052-.37-.143-.565-.194-.194-.277-.552-.184-.794.093-.243.025-.441-.151-.441-.385 0-.74-.795-.902-2.026-.082-.618.006-.862.277-.77.218.074.354.482.302.906-.066.543-.009.644.196.343.23-.34.333-.313.505.134.118.31.054.661-.143.783-.22.136-.102.288.31.395.366.096.667.036.667-.134s.144-.22.32-.111c.176.109.32.342.32.518s-.128.24-.284.144c-.156-.096-.462.04-.68.301-.313.379-.313.576.004.957.42.506.36.543-1.04.642-.656.047-.88-.084-.88-.511zm8.16.349c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm19.52 0c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-24.916-.48c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm1.705-.32c-.02-.528-.082-1.177-.134-1.442-.053-.264.103-.667.347-.894.367-.343.495-.275.752.401.383 1.006.972 1.083.728.095-.097-.396-.053-.605.099-.465.152.14.294.595.316 1.01.03.55-.09.705-.441.57-.3-.114-.4-.05-.264.168.12.194.072.443-.107.554-.18.11-.337-.06-.352-.378-.017-.398-.163-.279-.465.38l-.44.96zm16.797.139c-.328-.532-.033-.605.426-.107.227.246.272.448.099.448-.173 0-.409-.154-.525-.341zm-11.826-.3c-.11-.175-.046-.32.14-.32.187 0 .34.145.34.32 0 .177-.064.32-.142.32-.077 0-.23-.143-.338-.32zm7.28.109c-.458-.185-.544-.748-.115-.748.157 0 .369.216.47.48.102.264.153.468.114.455-.038-.014-.25-.098-.47-.187zm6.32-.09c0-.165.142-.388.316-.496.181-.112.235.016.126.301-.213.555-.442.656-.442.196zm12.973.004c-.101-.164-.062-.374.088-.466.15-.093.272.041.272.298 0 .54-.101.586-.36.168zm-28.36-.102c-.178-.535-.122-1.452.081-1.327.146.09.28-.168.297-.575.032-.724.037-.723.263.062.155.534.09.886-.198 1.06-.237.142-.346.394-.244.56.102.164.105.3.007.3-.099 0-.191-.036-.206-.08zm9.787-.56c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm11.36-.02c0-.185.144-.249.32-.14.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-25.6-.48c0-.273.146-.408.325-.297.179.11.242.335.14.499-.273.444-.465.361-.465-.201zm29.596.175c-.11-.18-.37-.228-.579-.11-.207.12-.27.098-.137-.048.133-.146.002-.529-.29-.851-.586-.649-.289-.825.312-.185.725.771 1.254 1.519 1.076 1.519-.1 0-.271-.147-.382-.325zm-11.524-.513c.285-.285.615-.421.733-.303.119.119.004.35-.255.513-.756.478-1.041.353-.478-.21zm-10.246-.143c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm18.644.06c.039-.07-.223-.54-.582-1.043-.36-.507-.491-.916-.291-.916.198 0 .28-.13.183-.287-.215-.347.628-.718.935-.411.12.12.386.218.591.218.206 0 .38.396.388.88.008.484-.12.88-.284.88-.165 0-.46.181-.655.404-.196.222-.324.346-.285.276zm.73-1.44c0-.066-.252-.319-.56-.56-.508-.398-.52-.387-.121.12.418.534.68.703.68.44zm-7.68 1.062c0-.187.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-9.814-.461c0-.264.21-.48.466-.48.378 0 .39.09.068.48-.22.264-.43.48-.466.48-.037 0-.068-.216-.068-.48zm14.134.16c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm7.666-.021c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm.814-.14c0-.263.139-.48.31-.48.17 0 .227.217.125.48-.101.265-.24.48-.31.48-.069 0-.125-.215-.125-.48zm-14.72-.178c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm15.914-.02c.217-.22.475-.318.574-.22.098.1-.08.278-.395.398-.456.174-.493.137-.179-.179zm-31.594-.601c-.189-.352-.271-.64-.183-.64.088 0 .314.288.503.64.188.352.27.64.182.64-.088 0-.314-.288-.502-.64zm3.84.21c0-.292.224-.53.498-.53.275 0 .423-.123.33-.274-.093-.15.187-.206.621-.123.954.183.997.434.162.955-.544.34-.6.319-.425-.163.18-.493.125-.487-.492.054-.614.54-.694.549-.694.08zm18.47-.316c-.357-.907-.298-1.37.12-.952.192.192.296.617.23.944-.115.573-.128.573-.35.008zm-30.768-.178c-.096-.156.12-.36.48-.455.536-.14.586-.089.277.284-.442.532-.523.55-.757.171zm25.222-.219c.107-.28.196-.578.196-.662 0-.084.144-.064.32.045.474.293.388.705-.196.93-.378.144-.463.06-.32-.313zm15.062.162c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm-43.026-.3c0-.175.152-.32.338-.32.187 0 .25.145.142.32-.11.177-.262.32-.34.32-.077 0-.14-.143-.14-.32zm29.12-.477c0-.24-.252-.501-.56-.582-.529-.138-.528-.148.006-.183.44-.029.527-.231.392-.917-.165-.836-.157-.843.155-.13.18.412.247.88.148 1.04-.099.16.01.294.24.3.23.005.668.2.973.431.5.38.46.424-.4.449-.605.017-.955-.132-.955-.408zm10.794.118c.217-.219.475-.317.574-.218.098.098-.08.277-.395.397-.456.174-.493.137-.179-.179zm-37.257-.166c-.21-.086-.302-.362-.205-.615.253-.66.603-.565.66.18.026.353.02.63-.012.616-.033-.014-.232-.096-.443-.181zm3.423-.133c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm4.8-.263c0-.176.144-.41.32-.518.176-.109.32-.054.32.122s-.144.409-.32.518c-.176.109-.32.054-.32-.122zm-9.76-.571c-.45-.36-.485-.46-.12-.335.287.098.712.009.945-.197.346-.306.353-.281.042.134-.21.28-.287.604-.171.72.4.401-.06.188-.696-.322zm6.08.213c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm25.12-.31c0-.17.216-.227.48-.126s.48.24.48.31-.216.126-.48.126-.48-.14-.48-.31zm1.28-.01a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm7.835-.135c-.763-.894-.278-1.519.697-.898.283.18.282.36-.004.752-.28.382-.458.42-.693.146zm-40.644-.84c-.29-.468.131-.94.659-.737.258.1.47.294.47.432 0 .396-.92.645-1.13.306zm9.013.113c-.112-.113-.202-.36-.2-.551.003-.191.145-.131.316.133.239.37.31.38.315.046.003-.274.202-.359.539-.23.295.114.651.021.795-.205.19-.3.262-.253.266.169.003.376-.193.548-.555.488-.308-.05-.72.008-.916.131-.195.123-.447.131-.56.019zm27.532-.018c-.078-.132-.229-.744-.336-1.36l-.195-1.12.397 1.017c.219.56.529 1.135.689 1.28.168.152.194.094.06-.137-.126-.22-.077-.4.11-.4.186 0 .339.216.339.48 0 .49-.809.673-1.064.24zm-1.856-.4c-.08-.64-.135-.808-.4-1.227-.197-.309.002-.285.724.089.548.283.996.591.996.685 0 .094-.18.062-.4-.07-.272-.163-.26-.067.039.301.386.477.357.542-.24.542-.374 0-.697-.144-.72-.32zm-33.077-.325c.11-.18.335-.243.499-.142.443.275.36.467-.201.467-.275 0-.409-.147-.298-.325zm5.717-.876c-.021-.66.026-.866.105-.46.08.407.361.823.626.925.392.15.402.235.055.455-.677.43-.744.35-.786-.92zm-3.64.37c0-.28.297-.928.66-1.438.363-.51.56-1.088.439-1.285-.122-.197-.023-.483.22-.637.348-.221.323-.28-.12-.284-.353-.003-.56.238-.56.654 0 .386-.141.571-.341.447-.188-.116-.266-.41-.172-.654.093-.243-.113-.594-.458-.779-.43-.23-.628-.231-.628-.005 0 .183.144.332.32.332.176 0 .32.168.32.373s-.095.279-.211.163c-.116-.116-.44-.037-.72.176-.28.213-.403.26-.272.107.13-.154.058-.501-.16-.771-.327-.404-.316-.442.057-.217.326.196.404.144.277-.188-.097-.253.153-.874.556-1.38l.733-.919-.05 1.088c-.041.89.075 1.106.642 1.186.478.068.76-.114.91-.589.213-.668.232-.663.668.178.247.476.44 1.03.427 1.23-.012.2-.158.075-.323-.277-.222-.471-.253-.315-.118.591.124.83.073 1.163-.156 1.021-.187-.115-.34.014-.34.289 0 .274.207.499.46.499.254 0 .565.18.692.4.127.22.112.293-.032.162-.144-.13-.438-.09-.654.089-.278.23-.45.173-.593-.2-.16-.414-.297-.444-.658-.144-.252.209-.379.585-.282.836.096.251.016.457-.18.457-.194 0-.354-.23-.354-.51zm24.5-.035c-.174-.456-.137-.493.18-.18.218.218.316.476.218.574-.099.099-.278-.079-.398-.394zm1.923.012c-.112-.293-.056-.682.126-.864.227-.227.33-.06.33.534 0 .987-.16 1.103-.456.33zm11.657.195c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-10.094-.322c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm5.197-.105c-.131-.333-.163-.681-.071-.773.292-.292.549.186.426.794-.112.557-.129.556-.355-.021zm6.052-.056c-.165-.43.066-.778.517-.778.157 0 .196.144.088.32-.11.176-.046.32.14.32.187 0 .34.12.34.266 0 .42-.916.312-1.085-.128zm-3.075-.56c0-.275-.167-.603-.37-.729-.229-.141-.283-.088-.141.141.238.386-.194.519-.545.168-.249-.249.335-1.398.71-1.398.15 0 .5.347.777.77.442.675.446.82.037 1.16-.377.312-.469.29-.469-.112zm-48.956-.148c.003-.127.127-.422.276-.657.22-.347.305-.337.455.053a.505.505 0 0 1-.276.657c-.253.097-.457.073-.455-.053zm18.076-.39c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm23.865-.187c.015-.373.091-.448.193-.193.093.23.081.507-.025.613-.106.106-.182-.083-.168-.42zm1.255.168c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-41.773-.431c-.576-.42-.559-.439.259-.283.48.092.874.295.874.45 0 .41-.43.347-1.133-.167zm48.813.062c0-.16-.167-.187-.37-.062-.207.128-.283.09-.173-.088.288-.467 2.54-.494 2.385-.029-.147.44-1.842.605-1.842.179zm-38.254-.273c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm42.927-.168c-.27-.705-.243-.84.127-.612.176.11.32-.035.32-.32 0-.284-.114-.447-.254-.36-.139.085-.194-.346-.123-.958.178-1.524.452-1.112.553.831.083 1.603-.256 2.376-.623 1.42zm-8.193.057c0-.06.216-.29.48-.509.276-.23.48-.26.48-.073 0 .179-.216.408-.48.51-.264.1-.48.133-.48.072zm5.76-.208c0-.186.162-.238.361-.115.22.136.303.049.213-.221-.081-.245-.352-.448-.601-.453-.553-.01-.462-1.447.114-1.813.565-.358 1.833-.316 1.833.061 0 .176-.134.284-.298.24-.163-.044-.507.202-.764.546-.41.55-.408.716.014 1.36.45.686.436.734-.196.734-.372 0-.677-.152-.677-.339zm-35.84-1.066c0-.311.901-.428 1.309-.17.328.208.21.287-.43.29-.483.003-.88-.051-.88-.12zm27.09-.58c-.102-.389-.111-.78-.02-.871.207-.207.758.641.765 1.176.008.673-.55.445-.745-.306zm6.254.321c-.212-.21-.384-.559-.384-.773 0-.214-.146-.438-.323-.497-.178-.059.17-.262.772-.45 1.064-.333 1.092-.32.985.48-.06.454-.12 1.004-.132 1.224-.028.506-.422.513-.918.016zm.576-.576a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-30.4.32c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm26.24.175c0-.665.827-1.72 1.32-1.684.747.057.821 1.356.093 1.635-.594.228-1.414.257-1.414.05zm-40.344-.215c-.27-1.35-.26-1.575.058-1.378.197.121.474.031.617-.2.214-.346.349-.347.764-.003.278.23.5.58.494.78-.006.198-.221.08-.48-.261-.376-.497-.47-.521-.47-.12 0 .427-.915 1.525-.983 1.18zm7.18-1.78c.023-.299-.316-.728-.756-.956-.44-.228-.656-.427-.48-.443.176-.016.548-.074.826-.129.279-.055.52.064.537.264.017.2.13.688.25 1.084.128.416.085.72-.1.72-.178 0-.302-.243-.278-.54zm-5.076-.418c-.371-.602-.444-1.602-.115-1.602.18 0 .263.18.184.4-.078.22-.013.652.145.96.303.59.125.79-.214.242zm43.17-.414c-.104-.328-.104-.681 0-.785.104-.104.192.087.194.424.003.34.11.47.24.293.13-.176.855-.333 1.612-.348.835-.018 1.212.074.96.235-.23.145-.668.266-.976.268-.308.003-.56.119-.56.257 0 .525-1.29.224-1.47-.344zm-1.25-.228c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-41.227-.213c-.389-.389-.221-.73.267-.542.264.101.48.312.48.47 0 .335-.441.378-.747.072zm39.467-.427c-.289-.186-.328-.312-.1-.315.21-.003.47.14.58.315.245.398.134.398-.48 0zm7.117-.14c.13-.155.077-.474-.12-.71-.272-.328-.238-.43.144-.43.764 0 .917.518.295.994-.306.234-.45.3-.32.145zm-52.458-.664c-.42-.307-.436-.428-.087-.643.26-.161.48-.117.556.113.07.208.243.306.385.218.143-.088.333.031.422.265.203.527-.58.555-1.276.047zm2.374.279c-.091-.151.035-.46.28-.687.246-.227.449-.3.451-.16.003.139.127.06.276-.175.207-.326.31-.275.44.22.1.385-.01.715-.276.817-.244.094-.447-.005-.45-.22-.002-.273-.086-.26-.28.045-.15.238-.35.31-.44.16zm14.217-.435c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm32.91.355c0-.158.236-.377.525-.488.439-.168.459-.121.12.286-.46.555-.645.613-.645.202zm4.96-.355c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-55.51-.816c.008-.827.051-.87.352-.353.247.424.244.691-.01.944-.257.258-.35.098-.343-.59zm48.95.69c0-.069.216-.208.48-.31.264-.1.48-.044.48.126 0 .17-.216.31-.48.31s-.48-.056-.48-.125zm-43.28-1.099c.308-.321.776-.506 1.04-.409.392.143.378.196-.08.288-.308.062-.56.247-.56.41 0 .163-.216.296-.48.296-.398 0-.384-.1.08-.585zm46.976.18c-.404-1.334-.405-1.835-.005-1.835.237 0 .534.167.66.37.15.243.074.29-.222.136-.247-.128-.197-.027.11.226.309.252.56.608.56.79 0 .494-.965.769-1.103.313zm-50.576-.235c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm5.788-.2c-.226-.59.373-1.486.813-1.214a.333.333 0 0 1 .119.454c-.094.152-.034.36.132.463.167.103.395.04.508-.143.112-.181.364-.23.56-.11.228.14.132.303-.262.447-.389.143-.842.033-1.221-.295-.57-.493-.59-.482-.378.198.256.823.032.988-.27.2zm41.032.302c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm-45.03-.262c-.012-.176.085-.464.214-.64.324-.44 1.036-.55 1.036-.16 0 .176-.204.32-.454.32s-.526.18-.615.4c-.088.22-.17.256-.181.08zm13.89-.16c.108-.176.413-.32.677-.32.264 0 .391.144.283.32-.11.176-.414.32-.678.32-.264 0-.391-.144-.282-.32zm33.465-.259c-.014-.23-.17-.33-.345-.22-.176.108-.32-.019-.32-.283 0-.264.166-.583.369-.708.218-.135.283-.089.158.114-.116.188-.045.397.159.465.203.068.287.332.187.587-.132.335-.19.348-.208.045zm-38.105-.7a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm34.24-.66c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-39.84-.62c-.11-.177-.046-.32.14-.32.187 0 .34.143.34.32 0 .175-.064.32-.142.32-.077 0-.23-.145-.338-.32zm38.023.109c.116-.116.048-.408-.152-.648-.315-.38-.152-1.07.169-.715.397.44.518 1.573.168 1.573-.217 0-.3-.094-.185-.21zm11.053-.335c-.258-.317-.28-.444-.056-.31.214.13.524-.018.71-.338.3-.514.331-.501.34.134.013.936-.456 1.178-.994.514zm-56.069-.81c-.102-.392-.047-.853.123-1.023.2-.2.31-.153.31.13 0 .24.238.701.53 1.023.496.549.488.585-.124.585-.405 0-.722-.27-.839-.714zm50.378.209c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm2.375.186c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-43.894-.48c0-.264.12-.48.267-.48.147 0 .267.216.267.48s-.12.48-.267.48c-.147 0-.267-.216-.267-.48zm-10.15-.34c-.106-.275-.351-.402-.546-.281-.252.155-.25.023.009-.46.315-.588.276-.679-.288-.679-.358 0-.652.144-.652.32 0 .176-.216.32-.48.32-.664 0-.604-.563.08-.748 2.297-.623 2.813-.52 1.92.386-.32.325-.288.488.16.82.607.447.732.822.275.822-.157 0-.372-.225-.478-.5zm-3.396-.833c0-.381.1-.593.222-.47.346.345.395 1.163.07 1.163-.161 0-.292-.312-.292-.693zm47.587.293c-.348-.26-.44-.552-.262-.834.191-.302.34-.327.493-.08.12.195.04.354-.18.354s-.121.212.22.47c.342.259.541.475.443.48-.099.005-.42-.17-.714-.39zm11.172.173c-.11-.11-.2-.459-.2-.776 0-.413-.155-.517-.549-.366-.487.187-.496.154-.08-.297.426-.461.504-.445.844.18.205.377.493.686.64.686.146 0 .227.115.18.254-.046.14.224.09.6-.112.476-.255.617-.26.465-.014-.12.194-.065.352.122.352a.34.34 0 0 0 .339-.339c0-.186.128-.259.286-.161.158.097.383-.075.501-.382.203-.524.235-.523.543.026.18.322.238.674.128.784-.271.272-3.57.414-3.82.165zm-48.026-.39c-.101-.164-.038-.389.141-.5.18-.11.326.024.326.298 0 .563-.193.645-.467.201zm12.147-.023c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-10.106-1.2c.153-1.104.175-1.127.28-.28.064.505-.01 1.045-.165 1.2-.161.16-.21-.232-.115-.92zm.666.9c0-.447.588-.73.994-.479.247.153.222.303-.08.494-.572.362-.914.356-.914-.016zm7.065-.206c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm24.935.358c0-.082.324-.322.72-.533.652-.348.679-.334.28.149-.409.496-1 .723-1 .384zm17.95-.294c-.28-.338-.266-.481.056-.605.251-.097.441.083.468.443.054.72-.036.749-.523.162zm-53.726-.15c-.331-.211-.315-.347.08-.675.42-.349.496-.308.496.268 0 .765-.004.768-.576.406zm-1.901-1.227c-.43-.927-.236-1.498.249-.731.265.419.433 1.594.228 1.588-.044 0-.259-.387-.477-.857zm3.437.62c0-.153.208-.558.464-.9.447-.599.457-.595.281.104-.182.723-.745 1.324-.745.795zm44.88-.24c-.506-.573-.503-.694.015-.694.23 0 .436.264.46.587.053.693.042.695-.476.108zm3.764.24c.011-.526.616-1.166.858-.908.142.151.077.34-.144.419-.222.078-.321.275-.222.436.1.16.029.292-.158.292-.186 0-.336-.108-.334-.24zm-59.667-.952c-.987-1.065-.991-1.106-.152-1.63.545-.34.757-.34 1.181.003.437.354.473.345.234-.062-.235-.398-.2-.412.208-.082.27.218.586.327.704.242.117-.085.068.017-.11.227-.177.21-.322.579-.322.82 0 .242-.209.647-.463.901-.403.403-.567.35-1.28-.42zm14.863.061c0-.869.014-.876.64-.31.352.319.64.653.64.743 0 .09-.095.07-.211-.046-.116-.116-.404-.05-.64.145-.342.284-.43.175-.43-.532zm2.88.347c0-.376.18-.4.96-.129.528.184.96.393.96.464 0 .07-.432.128-.96.128-.625 0-.96-.161-.96-.463zm2.4.052c-.352-.214-.68-.677-.728-1.029-.082-.59-.061-.595.26-.073.19.312.518.469.727.349.21-.12.274-.1.143.044-.13.144-.077.455.12.69.433.523.315.527-.522.02zm2.266-.114c-.168-.44-.121-.459.286-.12.555.46.613.645.202.645-.157 0-.377-.236-.488-.525zm19.176.209c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm-39.193-.311c-.26-.164-.388-.381-.286-.483.102-.102.367.034.59.303.462.556.373.608-.304.18zm3.15-.253c-.398-.507-.387-.518.12-.12.534.418.703.68.44.68-.067 0-.319-.252-.56-.56zm1.026.054c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm2.099.026c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm7.796 0c0-.264.233-.48.519-.48.425 0 .447.087.12.48-.219.264-.452.48-.519.48-.066 0-.12-.216-.12-.48zm46.735.32c.13-.69-.04-.936-.335-.48-.187.289-.313.328-.316.1-.007-.553.436-.741.968-.412.381.236.389.358.042.699-.231.227-.393.27-.36.093zm-60.029-.501c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.664-.284.153zm19.823-.028c-.135-.219-.088-.283.114-.158.188.116.415.03.504-.19.098-.243.172-.18.187.157.029.633-.46.75-.805.19zm28.99.03c0-.186.145-.25.32-.14.177.108.32.26.32.338 0 .078-.143.141-.32.141-.175 0-.32-.152-.32-.339zm-42.434-.771c.038-.26.17-.571.292-.694.452-.452.2-.71-.557-.572-.824.15-1.386-.314-.812-.67.187-.114.55-.035.806.178.365.303.466.301.466-.009 0-.282.227-.247.788.12 1.013.665 1.132.652 1.132-.122 0-.352.207-.64.461-.64.296 0 .416.24.333.669-.087.451.007.617.287.51.23-.088.62-.032.868.125.38.242.376.29-.03.317a63.16 63.16 0 0 0-1.68.157c-.797.084-1.204-.006-1.212-.266-.007-.216-.228.004-.49.488-.531.978-.756 1.12-.652.409zm3.715.182c0-.332.608-.814.789-.624.058.062-.095.298-.342.525-.246.227-.447.271-.447.099zm42.914-.15c-.237-.285-.266-.705-.084-1.198.259-.698.293-.663.421.438.158 1.357.158 1.357-.337.76zm-44.514-.22c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.339zm4.373-.195c-.292-.292-.27-1.387.027-1.387.132 0 .24.36.24.8 0 .44-.012.8-.027.8s-.123-.096-.24-.213zm22.827-.126c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm26.773.126a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm-50.893-.362c-.087-.14-.03-.462.126-.716.215-.347.272-.284.231.255-.058.777-.116.852-.357.461zm43.832-.331c-.09-.147.039-.267.288-.267.248 0 .377.12.287.267-.091.146-.22.266-.287.266-.068 0-.197-.12-.288-.266zm-51.392-.534c0-.584-.366-.615-.943-.08-.345.32-.386.32-.206 0 .125-.22.09-.4-.075-.4-.166 0-.38-.302-.478-.672-.098-.377-.328-.578-.522-.458a.46.46 0 0 0-.154.592c.106.208-.099.019-.456-.42l-.649-.8-.296.8c-.164.439-.229.978-.145 1.198.084.22-.023.4-.237.4-.25 0-.32-.272-.197-.764.127-.507.058-.749-.205-.72-.219.025-.438-.1-.487-.276-.05-.176.274-.365.72-.42.445-.057.81-.264.81-.462s.193-.095.43.229c.408.558.443.549.675-.18.326-1.025.226-1.652-.333-2.086-.257-.2-.374-.591-.264-.88.276-.718.663-.652.872.148.132.507.335.618.838.458.56-.177.645-.094.543.531-.164 1.008.356 1.575 1.24 1.353.4-.1.83-.018.954.183.258.417-.414 2.246-.824 2.246-.15 0-.188.216-.087.48s.025.48-.17.48-.354-.216-.354-.48zm-.75-1.183c-.1-.387-.044-.872.127-1.078.208-.25.151-.506-.174-.775-.358-.298-.483-.304-.483-.024 0 .208-.135.295-.298.194-.164-.101-.389-.038-.5.141-.11.179-.08.325.068.325.148 0 .432.432.632.96.417 1.107.902 1.305.628.257zm1.39-.436c0-.274-.144-.41-.32-.3-.176.108-.32.333-.32.498 0 .166.144.301.32.301.176 0 .32-.224.32-.499zm-1.811-2.524c.119-.31.024-.405-.286-.286-.506.194-.638.75-.178.75.157 0 .366-.21.464-.464zm55.89 4.341c0-.176.145-.409.32-.518.177-.108.32-.053.32.123s-.143.409-.32.517c-.175.11-.32.054-.32-.122zm-61.76-.377c0-.186.145-.25.32-.14.177.108.32.26.32.338 0 .078-.143.141-.32.141-.175 0-.32-.152-.32-.339zm16.367-.345c-.506-.81-.338-1.042.37-.512.308.23.429.56.287.784-.176.277-.362.2-.657-.272zm1.656.115c-.521-.387-.481-.41.378-.209 1.449.339 2.11.776 1.062.702-.472-.033-1.12-.254-1.44-.493zm45.552.116c-.096-.25.017-.527.25-.616.289-.111.372.033.262.453-.192.736-.281.764-.512.163zm-64.442-.478c-.338-.541-.293-.6.403-.523.432.048.785-.038.785-.19 0-.151-.206-.276-.458-.276-.346 0-.397-.214-.21-.88.282-.998.117-1.773-.32-1.503-.16.1-.292.029-.292-.158 0-.186.121-.339.27-.339.42 0 1.356 1.147 1.124 1.379-.113.113.03.297.32.408.989.38.444 1.775-.665 1.7-.124-.007-.304.212-.4.489-.152.431-.23.416-.557-.107zm14.068-1.031c-.214-1.078-.2-1.583.048-1.694.193-.087-.05-.075-.541.027-.61.126-1.093.005-1.52-.382-.447-.405-.628-.446-.628-.145 0 .233-.086.337-.192.23-.105-.105-.07-.38.078-.612.325-.507.394-1.875.085-1.684-.12.074-.29-.115-.378-.421a31.262 31.262 0 0 0-.378-1.197c-.147-.43-.058-.377.272.16.27.44.496.665.502.5.006-.167.223-.023.481.32.29.382.474.46.48.201.006-.23.173-.318.372-.195.246.152.196.315-.16.514-.617.346-.69 1.397-.122 1.752.594.371 1.2.412 1.2.08 0-.16-.216-.292-.48-.292s-.48-.149-.48-.33c0-.437.821.02 2.136 1.188.824.732.959 1.023.713 1.542-.28.596-.292.59-.165-.08.082-.434.008-.64-.188-.52-.184.114-.242.716-.135 1.387.142.89.079 1.187-.253 1.187-.275 0-.56-.587-.748-1.536zm7.44 1.322c-.11-.176.035-.32.32-.32.284 0 .428.144.32.32-.11.176-.253.32-.32.32-.068 0-.212-.144-.32-.32zm44.128-.48c0-.417.115-.687.256-.6.14.087.256.357.256.6 0 .244-.116.514-.256.6-.141.088-.256-.182-.256-.6zm-54.528 0c0-.264.139-.48.31-.48.17 0 .227.216.125.48-.101.264-.24.48-.31.48-.069 0-.125-.216-.125-.48zm11.84.141c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-13.44-.247c0-.147.21-.267.465-.267.257 0 .392.12.302.267a.615.615 0 0 1-.466.266c-.166 0-.301-.12-.301-.266zm52.675-.534c.263-1.176.446-1.432.44-.613-.003.337-.151.83-.33 1.093-.237.35-.267.221-.11-.48zm-43.395-.16c0-.352.055-.64.122-.64.068 0 .198.288.29.64.092.352.037.64-.122.64-.16 0-.29-.288-.29-.64zm32.985.134c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.107.106-.182-.083-.168-.42zm-39.145-.034c-.308-.08-.56-.292-.56-.47s.18-.262.4-.188c.22.074.544-.06.72-.299.245-.332.33-.245.366.372.025.443-.047.789-.16.768a15.31 15.31 0 0 1-.766-.183zm4.873-.587c-.338-.407-.318-.454.121-.286.29.111.526.33.526.488 0 .411-.186.353-.647-.202zm2.087.167c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-17.12-.62c0-.363-.12-.66-.267-.66-.147 0-.267-.216-.267-.48 0-.782.367-.549.755.479.212.561.24 1.033.07 1.139-.16.099-.292-.116-.292-.479zm8.844.14c.101-.264.33-.48.509-.48.187 0 .156.204-.073.48-.22.264-.449.48-.51.48-.06 0-.028-.216.074-.48zm54.02.135c-.081-.131.065-.207.325-.17.668.099.909.409.316.409-.271 0-.56-.108-.641-.239zm-62.062-.407c-.168-.39-.103-.689.19-.875.657-.415.928-.355.928.206 0 .275-.134.417-.296.316-.163-.1-.357.071-.43.381-.127.527-.152.526-.392-.028zm63.198-.65c0-.264.144-.569.32-.678.176-.108.32.019.32.283 0 .264-.144.569-.32.677-.176.11-.32-.018-.32-.282zm-57.804-.268c-.085-.137.064-.25.33-.25.369 0 .45-.27.338-1.139-.09-.712-.025-1.065.175-.94.176.108.32.045.32-.142 0-.186.253-.336.56-.334.484.004.495.052.08.345-.36.255-.38.38-.08.501.601.244.482.85-.12.618-.432-.166-.49-.038-.333.745.162.808.095.938-.463.896-.359-.027-.722-.162-.807-.3zm60.864-.156c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm-50.207.013a.881.881 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.091-.262.07-.38-.048zm18.507-.107c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm21.12 0c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-18.4-.32c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm21.6 0c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm3.04-.019c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-62.564-.306c-.11-.179-.335-.242-.499-.141-.163.101-.297.032-.297-.155 0-.49.497-.416.96.141.219.264.317.48.218.48-.1 0-.271-.146-.382-.325zm1.294-.088c-.137-.316-.16-.664-.05-.774.325-.325.587.132.437.762-.132.56-.15.56-.387.011zm64.97 0c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm-67.907-1.735-.305-1.899.896.447c.973.486 1.247 1.231.336.914-.462-.16-.45-.11.067.29.678.525 1.342.457 1.213-.124-.044-.198.064-.36.24-.36s.32.225.32.5c0 .295.15.405.369.27.23-.143.282-.088.138.146-.127.206-.367.291-.532.19-.165-.103-.385.035-.489.306-.168.438-.246.435-.707-.027-.479-.478-.547-.45-.88.363-.344.844-.373.8-.666-1.016zm63.747.962c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm-58.257-.099c.11-.179.335-.242.499-.141.443.274.36.466-.201.466-.275 0-.409-.146-.298-.325zm-6.563-.936c0-.772.177-.85.431-.189.1.258.043.555-.125.659-.169.104-.306-.107-.306-.47zm5.647-.17c-.099-.258-.057-.544.093-.637.15-.092.353.043.452.3.099.257.057.544-.093.636-.15.093-.353-.042-.452-.3zm29.832-.409c-.398-.507-.387-.518.12-.12.534.418.703.68.44.68-.067 0-.319-.252-.56-.56zm22.28.24c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-58.4-.48c.22-.264.536-.48.703-.48.167 0 .087.216-.177.48s-.58.48-.702.48-.043-.216.177-.48zm5.28.16c.11-.176.262-.32.34-.32.077 0 .14.144.14.32 0 .176-.152.32-.338.32-.187 0-.25-.144-.141-.32zm3.36-.338c0-.187.145-.25.32-.142.177.11.32.262.32.34 0 .077-.143.14-.32.14-.175 0-.32-.152-.32-.338zm12.48.018c-.288-.186-.327-.312-.098-.315.21-.003.47.14.578.315.246.398.135.398-.48 0zm44.76-.24c-.398-.507-.387-.518.12-.12.309.241.56.493.56.56 0 .263-.262.093-.68-.44zm-61.893-.1c-.116-.189-.142-.41-.058-.495.084-.084.238.07.342.342.216.563.032.663-.284.152zm-7.815-1.559c-.405-.756-.433-1.4-.05-1.164.267.165.707 1.783.485 1.783-.057 0-.253-.278-.435-.619zm73.909-.04c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.338zm5.382.179c-.12-.122-.13-.46-.02-.75.178-.477.138-.482-.404-.05-.33.264-.5.313-.378.108.123-.205.05-.43-.162-.502-.258-.086-.223-.19.107-.317.734-.282 1.305.21 1.182 1.018-.059.393-.206.614-.325.493zm-76.102-.442c0-.176.144-.409.32-.518.176-.108.32-.053.32.123s-.144.409-.32.517c-.176.11-.32.054-.32-.122zm3.52-.056c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm14.882.022c-.112-.181.016-.235.3-.126.555.213.657.443.196.443-.165 0-.389-.143-.496-.317zm52.968-.556c-.42-.473-.408-.506.106-.308.317.121.636.22.71.22.073 0 .134.145.134.32 0 .471-.415.37-.95-.232zm-73.45-.088c-.11-.176-.054-.32.122-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm8.48-.018c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-2.07-.286c-.118-.19-.349-.263-.513-.162-.163.101-.297.032-.297-.155 0-.186.207-.339.46-.339.494 0 .989.578.724.843-.088.088-.257.004-.375-.187zm-2.6-.458c-.105-.273-.117-.681-.026-.907.09-.226.176-.087.19.31.026.74.486.973.775.391.09-.18.128-.153.087.06-.118.601-.814.7-1.026.146zm34.11.104c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-45.76-.32c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm16.96.037c0-.536.567-.669.756-.177.111.29-.001.478-.287.478-.258 0-.47-.135-.47-.3zm69.135-.019c-.033-.088-.114-.592-.18-1.12-.098-.778-.06-.852.203-.39.179.314.26.818.18 1.12-.08.303-.17.478-.203.39zm-72.015-.78c0-.254.13-.543.29-.641.16-.099.214.109.122.461-.195.747-.412.842-.412.18zm-10.24-.305c0-.07.223-.212.496-.317.285-.109.413-.055.301.126-.188.304-.797.45-.797.19zm50.08-.515c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm26.953-.294c-.139-.532-.097-.657.14-.42.186.186.276.527.199.758-.08.24-.225.095-.339-.338zm-87.913-.364c0-.187-.135-.257-.298-.155-.688.425-.67-.579.024-1.334.519-.565.629-.865.353-.963-.22-.079-.383-.455-.362-.836.029-.541.069-.57.183-.134.08.308.28.56.443.56.163 0 .296.201.296.446s.247.54.55.656c.477.184.451.26-.205.595-.677.345-.884 1.15-.24.935.144-.048.172.06.06.24-.265.43-.805.423-.805-.01zm37.349.141c-.114-.114-.073-.457.09-.763.164-.305.207-.646.096-.758-.111-.11-.034-.202.171-.202.426 0 .49.921.107 1.525-.142.223-.35.312-.464.198zm1.866-.357c-.122-.318-.017-.343.43-.104.325.174.681.225.792.114.112-.111.203-.043.203.151 0 .492-1.228.353-1.425-.161zm6.34.076c-.1-.263-.334-.385-.518-.27-.197.12-.241.054-.108-.162.293-.475.273-.48.916.27.302.352.401.64.221.64-.18 0-.41-.215-.51-.478zm48.87-.028c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.107.106-.182-.083-.168-.42zm-92.066-.272c-.199-.215-.46-.704-.582-1.086-.121-.383-.355-.696-.519-.696-.164 0-.298-.283-.298-.63 0-.456.146-.573.532-.425.395.151.466.087.275-.25-.202-.356-.148-.35.25.025.279.264.574.84.656 1.28.082.44.244 1.038.36 1.328.265.665-.194.974-.674.454zm16.027.117c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.342.216.563.032.663-.284.152zm25.314-.525c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm3.98.052c0-.037.192-.227.426-.421.319-.265.427-.248.427.067a.425.425 0 0 1-.427.422c-.234 0-.426-.03-.426-.068zm47.135-.432c-.323-.516-.298-.6.161-.532.299.044.518.177.488.297-.191.742-.307.783-.65.235zm-87.242.073a.882.882 0 0 1-.213-.544c0-.2.149-.181.378.048.208.208.304.453.214.544-.091.091-.262.07-.38-.048zm2.027-.215c0-.526.936-1.778.95-1.27.005.21-.15.48-.345.6-.254.157-.246.285.027.454.275.17.24.29-.126.43-.3.115-.507.027-.507-.214zm4.48-.212c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm3.114-.36c.217-.218.475-.316.574-.218.098.099-.08.278-.395.398-.456.174-.493.137-.179-.18zm38.461-.04c-.173-.564-.203-1.213-.049-1.06.234.234.397 1.14.205 1.14-.072 0-.143-.036-.156-.08zm-49.992-.685c-.131-.334-.163-.682-.071-.774.292-.292.549.187.426.794-.112.557-.129.556-.355-.02zm87.857-.347c0-.45.113-.89.251-.975.14-.086.212.21.163.656-.121 1.106-.414 1.331-.414.319zm-76.99-.024c.098-.255.307-.464.464-.464.46 0 .328.556-.178.75-.31.119-.405.024-.286-.286zm7.576-.014c0-.504.402-.601.673-.163.097.158-.014.36-.248.45-.234.09-.425-.04-.425-.287zm-20.73-.116c-.592-.215-.588-.235.08-.41.387-.1.777-.063.868.084.252.408-.249.58-.947.326zm3.303-.235c-.242-.298-.272-.44-.067-.318.205.123.432.046.504-.17.072-.217.215-.074.317.318.221.845-.14.927-.754.17zm8.873.326c.63-.473.695-1.21.166-1.864-.511-.631-.508-.632.18-.05.518.437.634.764.45 1.263-.138.37-.452.728-.699.794-.296.08-.33.031-.097-.143zm15.968-.425c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm6.56 0c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm53.425-.347c-.197-.367-.297-.728-.223-.801.073-.074.298.226.499.667.44.968.226 1.072-.276.134zm3.375.347c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-23.926-.36c.217-.218.475-.316.574-.218.098.099-.08.278-.395.398-.456.173-.493.137-.179-.18zm-70.314-.27c0-.17-.216-.227-.48-.125-.304.116-.48-.004-.48-.33 0-.301.265-.515.64-.515.426 0 .64.214.64.64 0 .352-.072.64-.16.64-.088 0-.16-.14-.16-.31zm25.46-.103c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm-35.64-1.044c-.039-1.043-.02-1.061.59-.54.777.666.78.79.04 1.251-.526.33-.593.254-.63-.71zm22.5.626c-.617-.473-.61-.483.205-.284.485.12.936.06 1.058-.139.118-.19.372-.346.565-.346.193 0 .09.288-.228.64-.687.76-.77.766-1.6.13zm71.52.201c0-.17.216-.227.48-.125.264.101.48.24.48.31 0 .069-.216.125-.48.125s-.48-.14-.48-.31zm-95.749-.97c.17-1.156 1.349-1.406 1.349-.285 0 .457-.15.617-.464.496-.31-.119-.405-.024-.286.286.104.272-.012.463-.28.463-.329 0-.42-.274-.319-.96zm9.904.77c-.256-.257.08-1.09.439-1.09.157 0 .286.288.286.64 0 .624-.34.834-.725.45zm11.138-.107c-.101-.164-.062-.374.088-.466.15-.093.272.041.272.297 0 .54-.101.587-.36.169zm-7.016-.583c-.109-.308-.282-.74-.384-.96-.103-.22-.062-.4.09-.4s.44.432.639.96.247.96.107.96-.344-.252-.452-.56zm1.263.147c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm3.34.093c0-.176.224-.32.498-.32.275 0 .41.144.302.32-.11.176-.334.32-.5.32-.165 0-.3-.144-.3-.32zm86.661-.39c.17-.17.578-.253.905-.184.44.094.359.174-.31.31-.585.12-.795.075-.595-.125zm2.212-.226c-.11-.42-.027-.564.263-.453.232.09.345.366.25.616-.232.6-.32.573-.513-.163zm-104.553-.128c0-.233.36-.762.8-1.176.44-.413.8-.582.8-.375 0 .206-.142.375-.314.375-.173 0-.405.36-.515.8-.21.837-.771 1.11-.771.376zm5.648-.044c-.094-.245.028-.4.284-.363.69.102.867.412.348.612-.257.098-.541-.014-.632-.25zm3.473.151c-.108-.175-.058-.565.112-.867.252-.451.298-.394.257.317-.056.962-.086 1.007-.369.55zm2.59-.195c-.113-.296-.135-.611-.047-.7.088-.087.254.084.367.38.114.297.136.612.048.7-.088.088-.254-.083-.367-.38zm85.409.192c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-97.845-.927c-.123-.473.017-.785.46-1.023.668-.357 1.297-.1.708.288-.186.122-.485.49-.664.819-.31.567-.335.563-.504-.084zm100.407.291c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm-85.71-.217c-.116-.117-.212-.501-.212-.853 0-.785.292-.548.471.383.14.723.088.816-.258.47zm45.068-.107c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-52-.498c0-.275.146-.409.325-.298.179.11.242.335.14.499-.273.443-.465.36-.465-.201zm26.585-.008c.015-.373.091-.45.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm1.097.19c-.112-.182.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm2.58.034c-.075-.122.213-.25.64-.286.428-.036.778-.01.778.054 0 .238-1.284.448-1.417.232zm38.004-.184c0-.256.123-.39.272-.298.15.093.19.302.088.466-.259.419-.36.372-.36-.168zm23.194.248c.23-.092.507-.081.613.025.106.107-.083.182-.42.168-.373-.015-.449-.09-.193-.193zm5.82-.12c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-98.32-.327c-.747-.435-.703-.706.178-1.114.682-.316.724-.277.6.56-.072.495-.15.895-.175.89a9.674 9.674 0 0 1-.603-.336zm53.84.025c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm36.246-.231c.058-.853.82-1.239 1.085-.55.103.27.098.579-.012.689-.11.11-.205-.077-.21-.414-.01-.52-.08-.492-.462.186-.432.77-.447.773-.4.089zm-94.166-.267c0-.275.146-.409.325-.298.179.11.242.335.14.499-.273.443-.465.36-.465-.201zm7.074-.201c-.336-.888-.286-.977.4-.714.585.225.701.947.203 1.255-.178.11-.449-.134-.603-.541zm41.406.38c-.522-.225-.54-.28-.1-.298.298-.013.63.121.74.297.227.368.216.368-.64 0zm7.362.003c-.112-.181.016-.235.3-.125.555.212.657.442.196.442-.165 0-.389-.143-.496-.317zm-2.142-.542c.23-.093.507-.081.613.025.106.107-.083.182-.42.168-.373-.015-.449-.09-.193-.193zm3.58-.286c0-.35-.268-.486-.88-.446-1.631.108-1.848-.01-.917-.495.671-.35 1.036-.387 1.34-.136.33.275.39.127.29-.716l-.125-1.063.454.8c.25.44.47.656.486.48.018-.176.166.014.33.421.162.407.444.65.624.538.18-.112.222-.373.092-.58-.349-.558-.393-1.154-.1-1.335.142-.088.341.055.442.318.1.263.02.478-.18.478-.2 0-.27.093-.158.206.311.311 1.205-.549.969-.931-.123-.199-.05-.237.179-.096.281.175.29.352.034.661-.243.293-.248.487-.016.63.185.115.335.11.335-.01s.225-.032.499.195c.273.228.467.281.429.12-.105-.448.39-1.43.641-1.274.122.076.431.005.687-.157.319-.201.339-.295.064-.299-.22-.003-.4-.149-.4-.325 0-.176.348-.32.774-.32.425 0 .829-.167.897-.37.092-.278.28-.28.747-.01.597.346.598.361.02.37-.505.008-.573.185-.423 1.111.143.878.085 1.065-.287.922-.301-.115-.394-.406-.263-.82.136-.427.085-.57-.15-.424-.195.12-.355.426-.355.68 0 .254-.124.461-.275.461-.152 0-.218.396-.147.88l.129.88-.434-.953-.434-.953-.457 1.033c-.46 1.037-.91 1.382-.826.633.025-.22-.1-.4-.276-.4-.176 0-.288.095-.25.21.078.232-.938.121-2.074-.226-.583-.178-.686-.12-.526.298.11.285.04.518-.155.518s-.355-.227-.355-.504zm9.514-.161c.113-.433.258-.578.338-.338.077.23-.013.572-.199.758-.237.237-.279.112-.14-.42zm-58.48-.142c-.224-.269-.344-.55-.268-.626.076-.075.314.144.528.488.465.744.31.826-.26.138zm44.166.152c0-.197-.18-.293-.4-.213-.22.08-.857-.04-1.414-.266-.558-.226-1.09-.336-1.182-.244-.092.092-.391-.37-.666-1.026-.586-1.402-.605-1.539-.178-1.276.462.286.374-.22-.16-.927-.472-.623-.348-1.306.178-.981.162.1.208-.042.104-.315-.135-.352.006-.497.483-.497.81 0 .826.112.157 1.133-.416.634-.44.885-.124 1.265.217.262.512.403.656.314.144-.09.366.007.493.214.161.26.02.32-.457.195-.894-.234-1.112.148-.52.912.445.574.46.575.264.015-.162-.463-.075-.564.399-.461.333.072.568.339.522.592-.071.387-.02.384.32-.018.646-.767 1.514-.778 1.368-.017-.166.86.306 1.102.93.477.279-.279.507-.365.507-.193s.301.234.67.137c.61-.16.633-.114.257.49-.229.365-.528.595-.665.51-.137-.085-.54.003-.896.192-.47.251-.646.248-.646-.012zm-48.96-.483c0-.275.144-.41.32-.302.176.11.32.334.32.5 0 .165-.144.3-.32.3-.176 0-.32-.224-.32-.498zm101.76 0c0-.275.146-.409.325-.298.179.11.242.335.14.499-.273.443-.465.36-.465-.201zm-105.774-.163c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.342.216.563.032.663-.284.152zm9.542-.286c-.067-.896.803-1.07 1.204-.24.33.682.325.685-.155.086-.274-.341-.515-.521-.537-.4-.022.122-.058.353-.08.515-.081.593-.388.62-.432.039zm14.805.33c-.101-.164-.038-.389.141-.5.18-.11.326.024.326.299 0 .562-.193.644-.467.2zm-28.153-.569c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm16.673-.307c-.389-.389-.221-.73.267-.542.264.101.48.312.48.47 0 .335-.441.378-.747.072zm93.053-.128c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.342.216.563.032.663-.284.152zm-51.346-.267c0-.332.608-.813.789-.624.058.062-.095.298-.342.525-.246.227-.447.271-.447.099zm10.56-.21c0-.275.144-.41.32-.302.176.11.32.334.32.5 0 .165-.144.3-.32.3-.176 0-.32-.224-.32-.498zm42.636.285c-.222-.09-.564-.474-.76-.854-.347-.675-.338-.674.343.035.384.4.834.643 1 .54.165-.102.3-.033.3.154 0 .358-.225.39-.883.125zm1.513.213c-.238-.981-.208-1.257.119-1.07.21.12.257.088.109-.074a1.154 1.154 0 0 0-.64-.323c-.208-.02-.638-.057-.956-.084-.319-.027-.5-.177-.403-.334.135-.219 2.447-.15 2.616.079.02.025-.154.478-.385 1.006-.232.528-.438.888-.46.8zm-103.51-.64c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm12.32-.48c-.23-.276-.26-.48-.073-.48.179 0 .408.216.51.48.1.264.134.48.073.48-.061 0-.29-.216-.51-.48zm2.88.16c-.41-.265-.398-.31.08-.315.309-.003.56.14.56.315 0 .39-.036.39-.64 0zm37.146-.186c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm9.148-.027c-.298-.298-.266-.746.053-.746.147 0 .267.216.267.48 0 .543-.024.563-.32.266zm-51.893-.427c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm32.64 0c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm18.19-.173c-.104-.272-.118-.566-.03-.653.087-.087.235.135.329.494.2.762-.022.88-.3.159zm3.09.205c0-.332.608-.813.789-.624.058.062-.095.298-.342.525-.246.227-.447.271-.447.099zm-18.7-.765c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm7.18.093a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm16.2.065c-.087-.14-.026-.464.136-.72.23-.363.295-.307.299.255.005.74-.158.914-.435.465zm-8.916-.247c-.122-.122-.077-.493.1-.824.241-.45.145-.983-.381-2.117-.387-.834-.677-1.635-.645-1.78.031-.145-.054-.196-.19-.112-.137.084-1.544-.134-3.128-.485-1.584-.35-3.06-.649-3.28-.662-.22-.013-.4-.168-.4-.344 0-.176-.09-.23-.201-.12-.11.11-.607-.01-1.104-.266-.497-.257-1.206-.468-1.575-.468-.37 0-1.133-.24-1.696-.533-.614-.32-1.695-.52-2.697-.499-.92.02-1.757-.1-1.859-.266-.102-.166.29-.312.873-.324.907-.02.967-.066.419-.323-.524-.245-.453-.28.387-.194.665.068 1.089-.054 1.2-.344.25-.653.223-.717-.307-.717-.264 0-.48-.147-.48-.328 0-.183.443-.098 1.006.193.795.41.97.427.837.076-.109-.281.05-.443.433-.443.332 0 .604.123.604.274 0 .15.216.058.48-.206s.48-.634.48-.823c0-.188.161-.343.359-.343.233 0 .205-.186-.08-.532-.377-.456-.371-.508.04-.365.502.174.545.621.166 1.697-.127.36-.107.5.044.32.149-.176.46-.358.69-.406.305-.063.337.061.116.457-.168.298-.644.592-1.06.652-1.53.221-1.867.302-2.06.496-.109.108-.42.112-.69.009-.33-.127-.443-.04-.342.262.201.605.868.585 1.96-.061.871-.515.933-.507 1.73.232.455.421.902.691.993.6.092-.092-.11-.372-.45-.623-.688-.51-.021-.537.824-.033.337.2.314.096-.08-.355-.611-.698-.75-1.224-.24-.91.176.11.32-.017.32-.28 0-.277.261-.46.617-.433.34.026.546.163.458.305-.088.143-.316.162-.507.044-.214-.132-.255-.064-.106.176.133.215.318.315.412.221.093-.093.403-.046.688.105.543.288 1.55-.435 1.043-.75-.39-.24-.382-2.107.01-2.107.183 0 .26.193.169.429-.09.236-.037.632.12.88.238.374.287.365.29-.056.004-.279.218-.507.478-.507.33 0 .419.217.295.712-.099.391-.023.808.167.926.19.117.346.023.346-.209 0-.242.388-.438.906-.46.558-.022.907.127.907.387 0 .311-.155.34-.587.109-.322-.173-.597-.273-.61-.223-.267 1.025-.243 1.536.064 1.347.222-.138.3-.052.203.22-.088.245.036.928.276 1.519.24.59.363 1.192.273 1.337-.09.146.005.369.212.496.251.155.288.092.113-.192-.19-.307-.117-.368.266-.221.291.111.514.1.495-.026-.09-.598.11-1.465.254-1.106.09.22.301.316.47.211.187-.115.145-.4-.107-.722-.366-.469-.353-.483.115-.117.293.23.492.762.445 1.191-.055.5.042.7.27.564.248-.149.246-.074-.008.25-.23.291-.263.725-.09 1.18.337.891.732.961.453.08-.234-.736.422-.88 1.087-.24.336.324.392.278.292-.24-.075-.394-.332-.603-.67-.545-.582.1-.772-.719-.243-1.046.168-.104.225-.4.126-.659-.104-.27.004-.471.254-.474.335-.004.324-.076-.046-.315-.405-.262-.387-.311.115-.315.47-.004.553.157.4.768-.113.452-.044.824.165.893.198.066.36.517.36 1.003 0 .644.14.854.52.777.377-.077.492-.388.42-1.136-.056-.567.046-1.03.225-1.03.385 0 .827 2.055.541 2.517-.108.175-.028.423.178.55.206.127.299.101.206-.058-.093-.16.101-.567.43-.905.33-.34.6-.447.6-.24 0 .206.264.376.586.376.883 0 1.07.362.449.866-.511.414-.505.426.085.155.352-.161.961-.266 1.354-.231.562.048.64-.03.361-.364-.275-.332-.207-.426.307-.426.363 0 .75.144.858.32.109.176.07.32-.088.32-.157 0-.286.213-.286.475 0 .357.105.388.423.123.318-.263.473-.222.621.166.11.283.356.516.548.516.234 0 .223-.127-.034-.384-.46-.46-.512-1.536-.074-1.536.17 0 .226.217.124.484-.242.631.444 1.447 1.03 1.222.341-.13.45.095.433.9-.013.662-.105.885-.24.58-.212-.48-1.785-.664-2.457-.287-.176.1-.644.155-1.04.124-.396-.03-.72.064-.72.21 0 .147-.24.175-.533.062-.399-.153-.464-.09-.258.25.234.389.195.39-.27.013-.3-.242-1.263-.452-2.142-.466-.878-.013-1.597-.138-1.597-.278s-.126-.254-.28-.254c-.261 0-.818 1.786-.723 2.32.024.132-.161.24-.41.24-.25 0-.505.153-.567.34-.062.187-.213.24-.336.117zm1.036-2.762c0-.517-.095-.609-.357-.347-.195.195-.259.512-.14.704.33.535.497.416.497-.357zm-.21-2.03c-.104-.271-.258-.425-.342-.34-.084.083-.058.305.058.493.316.51.5.412.284-.152zm-6.79-2.15c-.317-.315-.354-.278-.18.178.12.316.3.493.398.395.098-.099 0-.357-.219-.574zm-1.434-1.968c-.034-.559-.152-.685-.427-.457a.734.734 0 0 0-.206.773c.28.73.683.528.633-.316zm2.001-.387c-.35-.422-.323-.481.177-.389.324.06.659-.092.744-.336.095-.273.014-.358-.21-.22-.214.133-.486-.08-.66-.515-.223-.554-.303-.6-.318-.18-.011.307.004.595.034.64.03.043-.12.403-.332.8-.321.6-.304.72.106.72.27 0 .503.18.517.4.02.308.063.306.19-.011.09-.226-.02-.635-.248-.909zm44.903 9.107c.068-.204.376-.409.685-.454.45-.066.486.007.183.372-.454.547-1.041.603-.868.082zm-36.866-.376c.003-.204.145-.588.316-.852.265-.41.31-.398.315.08.003.308.173.56.378.56.502 0 .05.428-.543.515-.259.038-.468-.098-.466-.303zm38.712-.047c.217-.262.313-.803.213-1.203s-.035-.942.145-1.204c.262-.382.292-.35.15.162-.097.352.037 1.052.298 1.554.42.81.42.893-.004.73-.263-.1-.478-.044-.478.126 0 .171-.162.31-.36.31-.25 0-.238-.145.036-.475zm-53.99-.498c-.026-.345.076-.627.225-.627.15 0 .24.212.203.471-.11.746-.376.843-.428.156zm14.314.352c0-.165.144-.39.32-.499.176-.108.32.027.32.302 0 .274-.144.498-.32.498-.176 0-.32-.135-.32-.3zm8.32-.357c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-.48-.942c-.234-.378.079-.378.96 0 .617.266.614.276-.062.298-.385.012-.79-.122-.898-.298zm-19.04-.32-.8-.256.88-.032c.484-.017.88.112.88.288s-.036.306-.08.288a42.25 42.25 0 0 0-.88-.288zm21.44-1.34c0-.57 1.189-1.306 1.444-.893.106.172.051.313-.123.313s-.542.227-.819.503c-.38.38-.502.4-.502.077zm-30.208-.313c.091-.147.3-.267.466-.267.166 0 .302.12.302.267 0 .147-.21.267-.466.267-.257 0-.392-.12-.302-.267zm7.808.223c0-.325.934-.79 1.087-.541.102.164-.101.374-.451.465-.35.092-.636.126-.636.076zm51.25-.49c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm3.95.32c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-22.368-.266c-.09-.147.039-.267.288-.267.248 0 .377.12.287.267-.091.146-.22.266-.287.266-.068 0-.197-.12-.288-.266zm-40.37-.507c-.342-.25-.514-.562-.382-.694.132-.131.24-.071.24.134 0 .205.224.373.498.373.275 0 .41-.144.302-.32-.11-.176-.061-.32.106-.32.26 0 .694.717.694 1.147 0 .297-.877.105-1.459-.32zm28.498-.187c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-21.28-.48c0-.264.139-.48.31-.48.17 0 .227.216.125.48-.101.264-.24.48-.31.48-.069 0-.125-.216-.125-.48zm24.338-.444c-.268-.501-.202-.56.475-.431.883.168 1.028.554.311.83-.272.104-.607-.066-.786-.4zm-2.054-.196c-.111-.289-.002-.48.276-.48.277 0 .386.191.275.48-.101.264-.225.48-.275.48-.05 0-.175-.216-.276-.48zm-30.024-.378c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm22.14-.92c0-.275.144-.41.32-.302.176.11.32.334.32.5 0 .165-.144.3-.32.3-.176 0-.32-.224-.32-.498zm3.363.173c.11-.179.335-.242.499-.14.443.273.36.465-.201.465-.275 0-.409-.146-.298-.325zm26.397-.635c0-.76.296-.805 1.138-.175.594.443.588.455-.149.27-.537-.137-.7-.084-.54.175.125.204.076.37-.11.37-.187 0-.34-.288-.34-.64zm-35.321-1.772c-.309-.805-.218-1.012.16-.364.186.322.272.652.19.734-.083.083-.24-.084-.35-.37zm-20.167-.414c-.09-.147.039-.267.288-.267.248 0 .377.12.287.267-.091.146-.22.266-.287.266-.068 0-.197-.12-.288-.266zm37.408-.619c-.176-.129-.362-.523-.414-.875-.068-.469-.016-.526.196-.212.159.235.417.407.573.383.157-.025.331.18.388.452.11.529-.216.64-.743.252zm-32.405-.958c-.373-.797-.364-.823.117-.34.287.286.47.674.405.861-.065.188-.3-.047-.522-.52zm-3.872.083c-.029-.352-.125-1-.214-1.44-.13-.642-.11-.677.109-.18.205.466.334.517.526.205.207-.334.308-.33.53.021.431.68.333 1.032-.171.613-.375-.31-.481-.217-.592.521-.084.557-.156.656-.188.26zm17.141-1.013c.09-.235.36-.427.6-.427s.362.192.272.427c-.09.235-.36.427-.6.427s-.362-.192-.272-.427zm25.842.192c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.342.216.563.032.663-.284.152zm-3.641-.485c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm-25.767-1.264c-.541-.41-.551-.47-.08-.47.298 0 .542.162.542.36 0 .233.186.205.532-.08.453-.375.51-.372.38.02-.217.656-.658.71-1.374.17zm27.022-.15c0-.675.465-.86.8-.32.108.176.036.32-.16.32-.197 0-.27.144-.16.32.108.176.045.32-.142.32-.186 0-.338-.288-.338-.64zm-37.934-.02c-.116-.188-.142-.41-.058-.495.084-.083.238.07.342.342.216.564.032.663-.284.152zm22.044-.153c-.104-.272-.118-.566-.03-.653.087-.087.235.135.329.494.2.762-.022.88-.3.159zm14.29.013c1.047-.599 1.457-.599.96 0-.22.264-.705.475-1.08.469-.641-.01-.634-.038.12-.469zm-23.36-.16c-.289-.186-.328-.312-.1-.315.21-.003.47.14.58.315.245.398.134.398-.48 0zm-20.3-.413c.12-.316.3-.494.398-.395.098.098 0 .357-.219.574-.316.313-.353.277-.179-.18zm1.07.069c-.328-.208-.21-.287.43-.29.955-.006 1.127.15.45.41-.235.091-.631.037-.88-.12zm2.794-.136c.101-.264.24-.48.31-.48.069 0 .126.216.126.48s-.14.48-.31.48c-.17 0-.228-.216-.126-.48zm10.196-.16c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm6.585-.506c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm19.65-.142c-.112-.18-.012-.288.22-.24.25.052.386-.143.33-.472-.055-.329.107-.56.394-.56.403 0 .424.138.122.8-.388.852-.736 1.006-1.066.472zm27.845-.312c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-30.24-.62c0-.166.144-.39.32-.5.176-.108.32.027.32.301 0 .275-.144.5-.32.5-.176 0-.32-.136-.32-.302zm16.365-.305c-.267-.169-.31-.351-.113-.473.176-.109.403.017.504.28.212.553.192.563-.39.193zm21.075-.675a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-74.24-.44c0-.067.252-.319.56-.56.507-.398.518-.387.12.12-.418.533-.68.703-.68.44zm38.613-.093a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm36.353-1.089c-.026-.34.088-.618.253-.618.365 0 .402.86.047 1.08-.14.086-.275-.122-.3-.462zm-47.488-2.647c.196-.236.285-.5.199-.587-.087-.086.056-.157.317-.157.328 0 .379.117.163.376-.171.207-.217.471-.101.587.115.116-.047.21-.362.21-.443 0-.492-.097-.216-.43zm17.642-.321c0-.305-.18-.44-.448-.338-.246.095-.53.04-.63-.121-.099-.162.244-.306.763-.32 1.12-.033 1.452.343.791.892-.388.322-.476.301-.476-.113zm1.6.091c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-24-1.1c-.22-.265-.273-.483-.12-.486.154-.003.074-.134-.177-.293-.623-.395-.762-1.515-.187-1.515.25 0 .388.108.306.24-.081.133.033.433.255.668.221.234.414.75.428 1.145.03.853.01.862-.505.24zm10.24.16c0-.177.152-.32.338-.32.187 0 .25.143.142.32-.11.175-.262.32-.34.32-.077 0-.14-.145-.14-.32zm-21.227-1.494a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm6.045-.293c-.342-.25-.485-.451-.32-.449.443.007 1.268.576 1.092.752-.083.083-.43-.053-.772-.303zm2.702-.115c0-.772.177-.85.431-.189.1.258.043.555-.125.659-.169.104-.306-.107-.306-.47zm12.38.157c-.255-.256-.577-.364-.714-.24-.137.123-.146.044-.019-.176.334-.58.761-.491 1.153.24.403.754.231.826-.42.176zm-25.377-.278c.034-.208.222-.66.42-1.005.327-.574.353-.554.307.236-.028.475-.216.928-.419 1.005-.203.078-.341-.028-.308-.236zm6.837.202c-.308-.08-.563-.388-.565-.683-.004-.463-.048-.471-.315-.057-.266.41-.311.399-.316-.08-.006-.695.818-.74 1.079-.06.106.276.337.411.514.302.177-.11.323.025.323.3 0 .274-.036.482-.08.461a8.887 8.887 0 0 0-.64-.183zm12.24-.1c-.289-.186-.328-.312-.1-.315.21-.003.47.14.58.315.245.398.134.398-.48 0zm18.88 0c-.41-.265-.4-.31.08-.315.308-.003.56.14.56.315 0 .39-.037.39-.64 0zm29.44-.32c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm-34.08-.96c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-18.72-.659c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm2.082-.297c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm44.958-.004a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-63.787-.213c-.327-.327-.253-1.067.107-1.067.176 0 .284.18.24.4-.044.22.1.364.32.32.22-.044.4.064.4.24 0 .36-.74.434-1.067.107zm18.347-.766c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm5.333-.194a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.069-.38-.048zm-13.073-.966c.23-.092.507-.08.613.026.106.106-.083.182-.42.168-.373-.016-.449-.091-.193-.194zm1.18-.421c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm2.9-.094c.12-.315.3-.493.398-.394.098.098 0 .356-.219.573-.316.314-.353.277-.179-.179zm10.808-.085c-.103-.269-.078-.59.056-.715.134-.124.31-.04.39.187.095.265.28.308.517.12.202-.162.728-.402 1.168-.533l.8-.24-.8.626c-1.196.935-1.914 1.122-2.131.555zm-7.642-.162c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm3.234-.205c-.174-.456-.137-.493.18-.18.218.218.316.476.218.575-.099.098-.278-.08-.398-.395zm-21.794-.115c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm32.225-.938c-.645-.872-.658-.961-.138-.961.687 0 1.4 1.027 1.078 1.55-.152.245-.47.046-.94-.59zm-5.491-.001c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm-2.827-1.022c.058-.298-.158-.738-.482-.977-.564-.416-.565-.454-.019-.898.403-.327.496-.34.318-.043-.152.253-.027.67.315 1.048.455.503.488.705.164 1.02-.32.311-.381.28-.296-.15zm6.667.382c-.262-.842-.235-1.322.058-1.03.183.184.257.527.163.762s-.193.356-.22.268zm-4.606-2.426c-.273-.71-.242-1.094.088-1.094.156 0 .352.36.436.8.168.881-.216 1.097-.524.294zm12.926-.153c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-6.055-1.01c-.018-.6.107-.82.401-.707.235.09.427.367.427.616 0 .248-.108.385-.24.304-.131-.081-.312.033-.4.254-.09.221-.174.01-.188-.468zm-15.79-.448c-.113-.586-.036-.755.285-.632.25.096.44-.034.44-.301 0-.258.146-.47.326-.47.193 0 .239-.347.112-.853-.177-.705-.123-.817.314-.65.404.156.528.014.528-.606 0-.445.135-.725.3-.623.186.115.174.551-.03 1.139-.183.524-.461.873-.618.776-.157-.097-.205.033-.107.288.098.255.038.551-.134.657-.171.106-.247.445-.168.752.084.325-.116.72-.476.942-.542.334-.64.281-.773-.419zm10.849-.603c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm-8.684-.8c-.11-.176-.1-.48.02-.674.216-.348.763.185.775.754.007.35-.565.293-.795-.08zm12.697-.183c-.233-.264-.37-.638-.306-.832.065-.194.366.027.67.491.591.902.339 1.137-.364.34zm-12.057-1.417c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-10.08-.486c0-.259.917-.378 1.263-.164.259.16.104.25-.43.25-.458 0-.833-.039-.833-.086zm20.48-.154c-.41-.265-.4-.31.08-.315.308-.003.56.139.56.315 0 .39-.037.39-.64 0zm2.434-.186c-.24-.623-.258-1.904-.025-1.67.333.332.741 2.176.482 2.176-.145 0-.35-.228-.457-.506zm-19.517-.31c-.109-.285-.055-.414.126-.302.174.108.317.054.317-.12 0-.173-.22-.383-.487-.466-.34-.106-.317-.136.08-.1.322.029.61.36.669.767.116.812-.414.978-.705.22zm4.283.128c0-.128.288-.21.64-.184.352.027.64.153.64.28 0 .128-.288.21-.64.184-.352-.027-.64-.153-.64-.28zm16.8.048c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-25.26-.54c-.13-.341-.03-.362.467-.096.754.403.793.53.166.53a.731.731 0 0 1-.633-.435zm2.06-.139c0-.175.144-.23.32-.121.176.109.322-.063.324-.381.004-.49.053-.506.316-.099.445.69.398.818-.32.872-.352.027-.64-.095-.64-.27zm-1.235-.251c-.322-.2-.337-.33-.058-.502.439-.271.768-.031.606.442-.067.193-.293.218-.548.06zm78.38-18.457c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.107.107-.182-.082-.168-.42zm-1.445-85.8c-.174-.455-.137-.492.18-.178.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm-141.62-14.333c-.276-.332-.288-.48-.04-.48a.36.36 0 0 1 .36.36c0 .234.193.207.56-.08.507-.399.518-.388.12.12-.53.677-.506.675-1 .08zm6.573-1.738c-.101-.164-.015-.402.19-.53.248-.152.29-.091.121.18-.17.276-.107.358.191.25.244-.09.409-.324.365-.522-.044-.198.064-.36.24-.36.433 0 .403.429-.064.896-.461.46-.794.488-1.043.086zm-4.813-.662c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm6.88-.019c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-8.215-.488c-.157-.408-.247-.423-.465-.08-.149.235-.27.283-.27.107 0-.606.559-1.202.919-.979.199.123.278.357.177.521-.27.437.297.363.787-.102.331-.314.329-.246-.013.32-.511.847-.866.914-1.135.213zm2.395-.032c.23-.092.507-.08.613.026.106.106-.083.182-.42.168-.373-.016-.449-.091-.193-.194zm3.353-.865c.154-1.138-.201-1.871-.52-1.078-.117.288-.17.294-.188.021-.048-.724.572-.747 1.068-.04.349.498.39.775.14.93-.195.12-.263.37-.15.553.114.184.047.433-.15.554-.246.153-.308-.137-.2-.94zm2.492.257c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm-5.977-.378c-.503-.336-.425-1.355.104-1.355.245 0 .352.15.239.334-.114.184-.033.544.18.8.405.488.08.625-.523.221zm2.272-.075c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-3.665-.624c-.256-.161-.57-.229-.698-.15-.128.08-.328-.009-.444-.196-.145-.235-.334-.239-.609-.01-.287.238-.398.197-.398-.145 0-.261.197-.475.438-.475.353 0 .365-.14.06-.72-.366-.699-.359-.703.254-.16.348.308.888.56 1.2.56.353 0 .505.168.4.441-.092.243-.007.603.19.8.433.432.245.459-.393.055zm2.091-.861c-.168-.44-.121-.46.286-.121.555.46.613.646.202.646-.157 0-.377-.236-.488-.525zm6.854.152c0-.147.135-.267.3-.267.166 0 .376.12.467.267.09.146-.045.266-.302.266-.256 0-.465-.12-.465-.266zm-8.48-.907c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm.94-.29c.1-.16.468-.215.82-.123.88.23.801.413-.18.413-.45 0-.738-.13-.64-.29zm9.485-.537c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm-12.941-.613c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm2.996-.48a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-3.98-.607c-.356-.576.239-1.327.784-.99.416.257.41.36-.047.816-.35.351-.592.408-.737.174zm-1.78-.692c0-.186-.159-.24-.352-.121-.248.153-.244.016.01-.461.382-.712.982-.92.982-.34 0 .186-.16.24-.355.12-.238-.147-.283.003-.138.461.119.374.134.68.034.68s-.181-.152-.181-.339zm8-1.183c-.641-.63-.673-.725-.16-.476.352.171.82.247 1.04.168.443-.159.517.199.155.743-.156.234-.505.087-1.035-.435zm2.745.382c-.676-.676-.639-.874.092-.482.33.176.69.229.8.117.112-.11.202-.042.202.153 0 .623-.572.734-1.094.212zm-11.065-1.334c0-.29.186-.403.48-.29.264.101.48.036.48-.145 0-.18.144-.24.32-.13.618.382.315 1.04-.48 1.04-.494 0-.8-.183-.8-.475zm-.46-1.272c-.174-.456-.137-.493.18-.18.218.218.316.476.218.575-.099.098-.278-.08-.398-.395zm22.54-.245c0-.324.934-.79 1.087-.54.102.164-.101.373-.451.465-.35.091-.636.125-.636.075zm-17.44-1.769c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm5.156-.058c.092-.15.302-.19.466-.088.418.259.371.36-.168.36-.257 0-.39-.123-.298-.272zm-4.596-1.357c0-.57.108-.764.313-.56.204.204.204.508 0 .873-.265.473-.313.424-.313-.313zm6-.166c0-.166.142-.39.316-.497.181-.112.235.017.126.302-.213.554-.442.655-.442.195zm8.213.088c-.117-.118-.21-.442-.204-.72.008-.416.07-.402.35.077.344.593.244 1.033-.146.643zm-20.903-.6c-.104-.272-.1-.584.01-.694.11-.11.2.029.2.307 0 .279.18.58.4.668.313.127.31.167-.01.187-.226.014-.496-.197-.6-.469zm17.195-.334c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm1.655-.665c-.22-.089-.4-.446-.4-.793 0-.348.146-.542.325-.432.179.11.248.326.153.48-.095.153.083.426.395.608.577.336.253.43-.473.137zm-2-.549c0-.066.252-.318.56-.56.507-.398.518-.386.12.121-.418.533-.68.703-.68.44zm-15.211-.476c-.36-.36-.096-.67.495-.58 1.036.158 1.4.73.465.73-.446 0-.878-.068-.96-.15zm4.215-.203c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm9.003-.35c.178-.932.268-.96.48-.15.089.34-.016.687-.233.77-.267.103-.347-.097-.247-.62zm-12.887-.77c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm0-.96c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm25.47-.124c-.228-.274-.26-.534-.08-.646.167-.102.393.05.504.338.27.707.044.872-.424.308zm-21.79-1.316c.319-.385.31-.59-.041-1.04-.393-.5-.383-.516.09-.147.29.228.59.3.667.16.076-.139.095-.073.041.147-.053.22.07.4.274.4.204 0 .091.211-.25.47-.813.615-1.288.62-.781.01zm1.773-1.098c-.101-.164-.062-.373.088-.466.15-.092.272.042.272.298 0 .54-.101.587-.36.168zm.167-1.437c-.31-.373-.259-.424.281-.282.362.094.659.299.659.454 0 .432-.517.337-.94-.172zm9.44-1.879c.12-.315.3-.493.398-.394.098.098 0 .356-.219.573-.316.314-.353.277-.179-.179zm-1.78-.885c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm3.84-3.34c0-.265.056-.48.125-.48.07 0 .209.215.31.48.102.263.045.48-.126.48-.17 0-.31-.217-.31-.48zm2.4-1.12c.108-.177.26-.32.338-.32.078 0 .142.143.142.32 0 .175-.153.32-.34.32-.186 0-.25-.145-.14-.32zm1.124-.542c-.003-.386.14-.79.316-.899.407-.252.407.49 0 1.12-.253.39-.312.349-.316-.221zm11.996-2.659c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-4-.781c0-.274.144-.499.32-.499.176 0 .32.136.32.301 0 .166-.144.39-.32.5-.176.108-.32-.028-.32-.302zm-3.413-.36c-.106-.276-.03-.665.17-.864.27-.27.363-.142.363.501 0 .963-.24 1.126-.533.363zm-14.298-1.273c.098-.254.306-.383.464-.285.397.245.36.362-.177.569-.31.118-.405.024-.287-.284zm16.54-.32c-.103-.271-.099-.583.01-.693.11-.11.2.049.2.353 0 .336.145.462.37.324.229-.142.283-.088.141.14-.307.498-.494.466-.72-.124zm1.48 0c-.334-.401-.332-.565.007-.88.329-.304.368-.298.183.028-.129.228-.06.624.152.88.213.256.315.466.227.466s-.344-.222-.57-.493zm.97-1.426c0-.352.131-.64.29-.64.16 0 .215.288.123.64-.092.352-.222.64-.29.64-.067 0-.122-.288-.122-.64zm-18.214-1.467c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm-3.798-.463c-.573-.918-.471-1.212.125-.36.282.402.457.788.388.856-.069.069-.3-.155-.513-.496zm8.413.01c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-3.787-.853c-.117-.118-.213-.43-.213-.694 0-.58.417-.226.514.436.076.522.015.574-.301.258zm-7.253-.897c0-.286.187-.398.48-.286.264.102.48.313.48.47 0 .157-.216.286-.48.286a.476.476 0 0 1-.48-.47zm8.32.169c0-.166.142-.39.316-.497.181-.112.235.017.126.301-.213.555-.442.656-.442.196zm-9.396-.499c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm13.55-.008c-.224-.268-.325-.569-.226-.667.099-.1.34.12.537.487.419.784.263.873-.312.18zm15.593-.152c-.092-.352-.054-.64.085-.64.14 0 .328.288.42.64.092.352.054.64-.085.64-.14 0-.328-.288-.42-.64zm-23.67-.106c-.13-.323-.233-.899-.228-1.28.01-.633.04-.644.341-.125.183.313.285.89.228 1.28-.094.64-.128.652-.341.125zm-2.477-.214c-.289-.186-.328-.312-.1-.315.21-.003.47.14.58.315.245.397.134.397-.48 0zm-6.758-.24a1.867 1.867 0 0 1-.004-.468c.018-.126-.18-.147-.442-.046-.298.114-.477-.007-.477-.322 0-.346.175-.438.56-.294.51.19.517.153.08-.41-.428-.554-.428-.58.01-.24.446.347.833 2.02.467 2.02-.086 0-.173-.108-.194-.24zm10.598-.08c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm11.2-.32c0-.176.296-.32.658-.32.363 0 .57.144.462.32-.11.176-.406.32-.66.32-.253 0-.46-.144-.46-.32zm-15.288-.824c.304-.318.64-.49.747-.383.108.107-.141.368-.552.579-.715.366-.723.357-.195-.196zm8.273-.003c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm-14.162-.557c-.119-.584-.074-.794.126-.594.17.17.254.577.185.904-.094.44-.174.36-.31-.31zm21.177.53c.264-.11.598-.36.744-.554.17-.226.218-.18.133.128-.072.264-.407.514-.744.555-.431.052-.47.014-.133-.128zm-25.28-.936c0-.28.286-.585.636-.676.35-.092.558-.293.463-.448-.096-.154-.052-.5.098-.766.242-.434.339-.434.897-.002.517.4.528.45.066.289-.382-.133-.56-.032-.56.319 0 .47-1.063 1.794-1.44 1.794-.088 0-.16-.23-.16-.51zm-.96-.43c0-.342-.144-.711-.32-.82-.494-.305-.379-.8.186-.8.279 0 .444.18.366.4-.077.22-.02.724.126 1.12.16.437.143.72-.046.72-.172 0-.313-.28-.313-.62zm15.258-.144c-.12-.31.013-.395.445-.282.709.185.836.726.17.726-.244 0-.522-.2-.615-.444zm13.426.222c-.35-.349-.226-.631.276-.631.264 0 .48.111.48.248 0 .36-.517.622-.756.383zm-33.484-.738c-.389-.25-.343-.311.24-.315.396-.003.72.14.72.315 0 .401-.34.401-.96 0zm5.76-.12c0-.067.219-.304.487-.526.407-.338.454-.318.286.12-.173.45-.773.764-.773.405zm29.28-.52c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-35.655-.827c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm8.74-.578c.049-.46.173-.92.277-1.024.103-.103.146.19.095.651-.05.462-.175.922-.277 1.024-.101.101-.144-.192-.095-.651zm-.905-.609c.12-.315.3-.493.398-.394.098.098 0 .356-.219.573-.316.314-.353.277-.179-.179zm-10.26-.226c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm39.773-.08c-.312-.246-.425-.619-.294-.968.178-.47.277-.402.58.4.415 1.1.408 1.114-.286.568zm-24.333-.613c-.427-.447-.454-.587-.115-.587.245 0 .537.237.648.526.28.73.122.748-.533.06zm13.666.352c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.341.216.564.032.663-.284.153zm9.008-.485a3.066 3.066 0 0 1-.17-1.04c.016-.333.087-.383.187-.134.09.22.294.4.455.4.406 0 .37-.88-.04-1.018-.185-.061-.36-.433-.389-.827-.03-.393-.176-.715-.324-.715-.15 0-.182-.144-.073-.32.392-.635.8-.3.8.659 0 .692.117.912.4.749.22-.127.293-.113.162.031-.13.144-.09.44.091.658.232.279.178.546-.183.907-.281.281-.422.656-.312.834.11.177.062.322-.105.322-.168 0-.392-.228-.5-.506zm14.526.167c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-38.562-.932c.069-.357-.01-.649-.177-.649-.166 0-.301-.288-.301-.64 0-.59.599-.946.671-.4.17 1.29.149 2.049-.064 2.18-.14.086-.198-.135-.13-.491zm26.115.054c-.403-.754.033-1.234.552-.609a.749.749 0 0 1 .07.84c-.209.339-.344.289-.622-.231zm13.313.377c-.115-.115-.133-.333-.039-.485.243-.393 1.412-.34 1.412.064 0 .186-.16.24-.355.119a.425.425 0 0 0-.582.146c-.125.201-.32.271-.436.156zm-38.356-1.533c.162-.588.198-.599.303-.09.094.451.216.497.561.21.374-.31.364-.485-.063-1.136-.597-.912-.98-.983-1.14-.211-.096.455-.154.426-.314-.16-.142-.519-.06-.72.292-.72.402 0 .417-.087.084-.488-.223-.268-.312-.58-.2-.693.114-.113.207-.022.207.202 0 .23.208.328.48.223.322-.123.48.015.48.42 0 .896.347 1.637.673 1.435.44-.272.34.813-.117 1.27-.67.67-1.456.505-1.246-.262zm1.845-.962c-.576-1.07-.447-2.745.213-2.745.186 0 .242.097.124.215-.118.117.013.562.292.987.279.426.423.857.321.96-.102.101-.185.032-.185-.154 0-.187-.21-.42-.467-.518-.386-.149-.404-.045-.108.605.196.432.55.785.786.785.553 0 .556.523.004.734-.249.096-.654-.264-.98-.87zm20.391.63c0-.257.123-.391.272-.299.15.093.19.302.088.466-.259.419-.36.372-.36-.168zm-18.641-.362c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm-.185-1.733c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm36.96-.32a.32.32 0 0 1 .32-.32c.176 0 .32-.207.32-.461 0-.672.54-.899.762-.32.105.272.058.413-.103.313-.161-.1-.385.109-.498.463-.21.66-.801.9-.801.325zm-17.135-.663c-.12-.194-.077-.494.096-.666.205-.205.379-.144.502.177.224.584-.283.998-.598.49zm-22.225-.457c0-.264.139-.48.31-.48.17 0 .227.216.125.48-.101.264-.24.48-.31.48-.069 0-.125-.216-.125-.48zm1.945-.027c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm22.504.236c.126-.203.076-.369-.11-.369-.187 0-.34-.144-.34-.32 0-.49.549-.38.752.15.1.258.02.568-.175.69-.215.132-.265.073-.127-.15zm14.27-.689c0-.528.136-.96.302-.96.476 0 .704.574.322.81-.191.118-.27.416-.175.662.094.247.032.448-.139.448-.17 0-.31-.432-.31-.96zm-43.39-.08c-.34-1.05-.388-2.48-.077-2.288.373.231.335-.304-.055-.765-.178-.21-.228-.313-.112-.23.116.085.4-.097.633-.402.385-.507.422-.509.431-.022.006.294.19.606.41.695.24.097.175.172-.16.187-.69.03-.705.245-.063.887.272.273.452.718.4.99-.13.672-.896.889-.896.255 0-.279.152-.507.338-.507.187 0 .25-.144.142-.32-.493-.796-.872-.258-.678.96.224 1.4.057 1.7-.313.56zm30.19.275c-.715-.544-.711-.835.012-.835.358 0 .571.239.571.64 0 .352-.005.635-.011.63a81.506 81.506 0 0 0-.571-.435zm-28.177-.497c.095-.362.3-.658.455-.658.431 0 .337.517-.172.94-.374.309-.424.258-.283-.282zm1.083-.525c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm28.775-.136c-.37-.237-.381-.308-.046-.312.28-.003.359-.203.22-.565-.16-.422-.121-.47.157-.194.552.548.271 1.455-.332 1.07zm-25.23-.957c0-.44.073-.62.161-.4.09.22.09.58 0 .8-.088.22-.161.04-.161-.4zm40.27 0a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-44.16-.339c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm25.6-.282c0-.166.144-.39.32-.499.176-.109.32.027.32.301 0 .275-.144.5-.32.5-.176 0-.32-.136-.32-.302zm2.444-.179c.101-.264.24-.48.31-.48.069 0 .126.216.126.48s-.14.48-.31.48c-.17 0-.228-.216-.126-.48zm15.5.28c-.013-.2.192-.54.456-.76.394-.327.48-.302.48.14 0 .296-.132.456-.293.357-.161-.1-.366 0-.455.221-.1.25-.171.266-.187.041zm-18.584-.736c0-.164-.252-.37-.56-.459-.308-.089-.092-.112.48-.051.754.08 1.04-.02 1.04-.363 0-.337-.21-.417-.72-.277-.671.183-.678.17-.105-.185.51-.318.701-.276 1.126.249.567.7 1.363.643 1.086-.079-.097-.252-.03-.459.15-.459s.278.252.219.56c-.06.308-.119.659-.132.779-.014.12-.375.155-.804.077-.429-.077-.87.004-.979.181-.25.405-.801.423-.801.026zm-28.893-.664c-.092-.352-.037-.64.122-.64.16 0 .29.288.29.64 0 .352-.055.64-.122.64-.068 0-.198-.288-.29-.64zm7.773.29c0-.16.288-.29.64-.29.352 0 .64.055.64.123 0 .067-.288.198-.64.29-.352.092-.64.037-.64-.123zm40.96-.111c0-.274.144-.499.32-.499.176 0 .32.136.32.301 0 .166-.144.39-.32.5-.176.108-.32-.028-.32-.302zm-15.798-.104c.2-.13.416-.51.48-.845.146-.756 1.208-.958 1.47-.278.228.597-.71 1.37-1.654 1.363-.397-.003-.515-.098-.296-.24zm-30.602-.395c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm45.145.084c-.014-.217.46-.599 1.055-.847s1.18-.61 1.3-.804c.12-.194.375-.353.568-.353.193 0-.067.36-.579.8-.511.44-1.17.8-1.463.8-.293 0-.606.18-.695.4-.126.313-.166.314-.186.004zm-20.025-.724c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-25.76-.602c0-.176.144-.41.32-.518.176-.109.32-.054.32.122s-.144.41-.32.518c-.176.109-.32.054-.32-.122zm43.84-.198c0-.264.056-.48.125-.48.07 0 .209.216.31.48.102.264.045.48-.126.48-.17 0-.31-.216-.31-.48zm-14.51-.056c-.116-.116-.208-.367-.206-.557.003-.19.14-.135.303.124.255.404.328.392.51-.08.3-.783-1.086-1.88-1.855-1.47-.31.166-.562.44-.562.61 0 .17-.288.021-.64-.33-.702-.702-.854-2.07-.271-2.431.21-.13.283-.09.17.094-.119.192.18.31.734.29.816-.03.922-.141.835-.886-.068-.594.028-.805.316-.694.229.087.337.363.241.613-.096.249-.015.453.18.453.722 0 .32-.91-.765-1.738-.769-.586-1.12-1.113-1.12-1.677 0-.696.074-.761.48-.425.276.23.48.26.48.074 0-.582-.87-.677-1.589-.174-.67.47-.683.462-.296-.158.328-.525.328-.744-.002-1.14-.224-.27-.324-.822-.223-1.227.1-.404.1-.554-.001-.333-.102.221-.339.307-.527.19-.214-.132-.254-.043-.105.239.13.247-.06.09-.423-.35-.364-.44-.664-.63-.668-.422-.004.208-.295.47-.647.581-.352.112-.64.379-.64.594 0 .214-.29.412-.643.438-.665.05-1.597.795-1.597 1.275 0 .15-.36.303-.8.34-.607.05-.8-.087-.8-.57 0-.35.18-.641.4-.647.225-.006.129-.215-.221-.48-.385-.291-.46-.47-.197-.47.233 0 .046-.297-.416-.66-.462-.364-1.093-.635-1.403-.604-1.008.103-1.405-.01-1.2-.341.11-.179.322-.25.47-.16.147.091.192-.12.1-.47-.09-.351-.296-.557-.455-.46-.159.099-.192.336-.074.527.128.207.066.255-.155.119-.203-.126-.371-.472-.374-.77-.004-.465-.047-.474-.31-.06-.194.305-.192.518.007.586.172.06.226.246.122.416-.25.405-1.094-.29-1.094-.901 0-.253.144-.37.32-.262.321.199.407-.093.378-1.28-.014-.528.012-.542.146-.08.09.308.29.56.444.56.154 0 .427-.252.606-.56.18-.308.33-.394.336-.191.005.203.475.53 1.043.729.816.284.95.277.64-.033-.53-.53-.495-.905.087-.905.264 0 .48.144.48.32 0 .176.144.32.32.32.176 0 .32-.275.32-.612 0-.839 1.017-.655 1.484.269.209.413.45.578.569.387.113-.183.698-.27 1.3-.192.623.08 1.192-.017 1.32-.225.14-.225.084-.278-.143-.137-.537.331-.453-.093.135-.68.46-.46.496-.454.4.07-.058.315.058.63.257.7.2.071.424-.3.502-.827.077-.524.058-.94-.042-.923-.1.016-.542-.127-.982-.32-.44-.192-.62-.358-.4-.37.221-.01.396-.414.39-.9-.01-.843-.03-.854-.48-.259-.258.342-.48.558-.494.48-.339-2.013-.379-2.07-1.152-1.62-.321.187-.42.344-.218.35.201.004.456.246.567.534.17.443.124.46-.293.115-.421-.35-.466-.321-.301.195.179.56.156.557-.302-.035a32.95 32.95 0 0 0-.838-1.04c-.32-.371-.175-.529.401-.438.132.021.24-.121.24-.316s-.216-.271-.48-.17c-.31.12-.481-.01-.485-.366-.004-.476-.05-.485-.34-.07-.264.376-.293.324-.134-.24.128-.455.063-.72-.177-.72-.213 0-.31-.263-.22-.604.087-.333.039-.797-.106-1.032s-.14-.503.01-.597c.367-.226-1.06-1.858-1.978-2.261-.65-.285-.624-.302.23-.148.92.165.933.151.322-.326-.351-.273-.927-.475-1.28-.449-1.096.082-1.442-.01-1.442-.382 0-.248.149-.236.48.04.392.324.48.306.48-.098 0-.273-.252-.562-.56-.642-.517-.136-.516-.15.02-.184.347-.022.488-.183.352-.403-.125-.201-.215-.775-.2-1.274.013-.5-.11-.992-.273-1.093-.507-.314-.33-.65.341-.65.561 0 .802.436.678 1.223-.02.132.106.24.282.24a.32.32 0 0 0 .32-.32.32.32 0 0 1 .32-.32c.176 0 .32.232.32.514 0 .322.177.447.472.334.26-.1.621.065.804.365.26.429.292.339.143-.413-.145-.733-.11-.846.15-.48.188.264.344.672.346.907.003.234.491.898 1.085 1.475.826.802 1.206.978 1.617.748.347-.194.683-.18.95.042.226.188.47.284.543.212.071-.072.158.365.192.97.034.614-.07 1.02-.236.917-.164-.101-.225.008-.134.243.09.235.556.455 1.036.489.79.055.82.02.312-.367-.308-.234-.56-.61-.56-.835 0-.224.373-.035.829.42.455.456.745.963.643 1.128-.102.164.066.28.372.255.338-.027.744.36 1.036.99.264.567.696 1.038.96 1.044.427.01.427.047 0 .327-.323.212-.367.394-.136.555.188.132.45.528.583.88.231.617.254.613.648-.117.34-.632.44-.672.607-.24.109.284.49.517.848.517.486 0 .65.21.65.827 0 .522.147.775.4.687.22-.077.351-.406.292-.73-.093-.506-.036-.53.402-.166.461.383.444.481-.18 1.023-.38.33-.79.6-.91.6-.274 0-.198 1.192.096 1.486.121.12.22-.029.22-.332 0-.324.147-.462.356-.333.196.121.497.022.67-.22.23-.322.253-.268.086.198-.125.352-.22.784-.209.96.044.724.268 1.437.526 1.67.15.138.176.08.057-.128-.119-.208-.07-.468.109-.579.463-.286.404.586-.075 1.093-.32.34-.32.453 0 .57.871.32.367.808-.64.62-.788-.148-.907-.116-.491.13.43.254.484.492.248 1.114-.193.505-.189.79.011.79.172 0 .312.153.312.339 0 .186-.134.256-.298.155-.164-.101-.388-.038-.499.14-.11.18-.043.326.15.326.243 0 .232.22-.035.72l-.385.718-.293-.879c-.161-.483-.4-.879-.532-.879-.4 0-.216 1.422.219 1.7.224.143.323.395.221.56-.102.165-.033.3.153.3a.34.34 0 0 0 .34-.339c0-.786.506.055.574.955.054.699-.065.984-.41.984-.267 0-.49.18-.495.4-.005.221-.156.148-.337-.162-.18-.31-.254-.682-.164-.827.09-.145-.04-.264-.289-.264-.248 0-.364.142-.256.316.33.533.377 1.817.068 1.817-.16 0-.302.468-.314 1.04-.02.872-.067.936-.298.4-.151-.352-.285-.47-.297-.263-.013.207-.275.442-.583.523-.527.137-.527.148-.004.183.446.03 1.78 2.254 1.449 2.417a9.401 9.401 0 0 0-.594.428c-.28.213-.604.292-.72.176zm-1.917-2.17c0-.256-.123-.39-.272-.298-.15.093-.19.302-.088.466.259.419.36.372.36-.168zm2.187-.174c-.11-.176-.342-.32-.518-.32s-.231.144-.122.32c.108.176.341.32.517.32s.231-.144.123-.32zm-1.4-.725c-.317-.314-.354-.277-.18.179.12.315.3.493.398.395.098-.099 0-.357-.219-.574zm1.652-3.435c-.092-.352-.222-.64-.29-.64-.067 0-.122.288-.122.64 0 .352.13.64.29.64.16 0 .214-.288.122-.64zm-.87-3.556c.152-.246-.1-.283-.83-.122-.915.2-1.021.158-.833-.331.181-.473.138-.498-.272-.157-.622.516-.625.966-.007.966.264 0 .48.15.48.331 0 .393 1.12-.133 1.462-.687zm-8.672-1.228c.103-.167-.116-.466-.486-.664-.618-.33-.644-.306-.317.304.397.742.53.802.803.36zm11.69-.016c0-.176-.153-.32-.34-.32-.186 0-.25.144-.14.32.108.176.26.32.338.32.078 0 .142-.144.142-.32zm-3.374-2.902c-.101-.164-.036-.298.145-.298.18 0 .252-.2.158-.445-.094-.244-.43-.376-.746-.294-.33.087-.655-.058-.763-.339-.124-.323-.042-.433.243-.324a.58.58 0 0 0 .674-.226c.159-.257.108-.308-.148-.15-.218.135-.653.002-.987-.3-.57-.515-.59-.505-.432.209.128.581.091.644-.166.278-.285-.406-.36-.395-.542.08-.116.303-.122.783-.013 1.067.16.418.289.441.674.121.555-.46 1.437.068 1.437.861 0 .253.146.37.325.259.179-.11.242-.335.14-.499zm3.783-.95c-.094-.36-.242-.582-.33-.494-.173.173.133 1.146.36 1.146.078 0 .064-.294-.03-.653zm-2.54-3.682c-.103-.271-.257-.425-.341-.341-.084.084-.058.306.058.494.316.51.5.411.284-.153zm1.49-.466a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.145.32.32.32a.32.32 0 0 0 .32-.32zm-.96-.621c0-.166-.143-.39-.32-.499-.175-.109-.32.027-.32.301 0 .275.145.5.32.5.177 0 .32-.136.32-.302zm-8.586-1.053c-.237-.237-.279-.113-.14.42.114.432.259.578.339.338.077-.231-.013-.572-.199-.758zm-.795-.626c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm-1.6-4.16c-.102-.255-.178-.18-.193.193-.014.338.061.527.168.42.106-.106.118-.382.025-.613zm2.982-.38c0-.067-.192-.28-.427-.476-.323-.268-.427-.238-.427.121 0 .261.192.475.427.475s.427-.054.427-.12zm-19.036 25.12c.146-.493.075-.852-.201-1.022-.234-.145-.357-.331-.274-.414.083-.084.418.043.744.281.56.41.563.474.05 1.174l-.543.741zm-8.804-.539c0-.274.146-.408.325-.298.179.11.242.335.14.5-.273.443-.465.36-.465-.202zm7.36-.14c0-.177.152-.32.338-.32.187 0 .25.143.142.32-.11.175-.262.32-.34.32-.077 0-.14-.145-.14-.32zm31.04 0c-.254-.158-.39-.358-.302-.446.088-.088.368-.032.622.125.253.157.389.357.301.445-.088.088-.368.032-.621-.125zm-32.72-.563c-.614-.137-.672-.538-.22-1.518l.294-.64-.089.64c-.049.352.132.808.402 1.014.58.442.399.679-.387.504zm3.746-.42c-.116-.187-.142-.41-.058-.493.084-.084.238.07.342.341.216.564.032.663-.284.153zm.839-.165c.015-.372.091-.448.193-.193.093.231.081.507-.025.613-.106.107-.182-.082-.168-.42zm2.855.027c-.327-.393-.305-.48.12-.48.286 0 .52.216.52.48s-.055.48-.121.48c-.067 0-.3-.216-.52-.48zm-2.601-1.04c-.393-.5-.383-.516.09-.146.432.337.559.337.694 0 .106-.263.175-.21.191.146.014.308-.1.56-.255.56s-.479-.252-.72-.56zm17.8.24c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm16.682-.066c.086-.14.005-.254-.18-.254-.188 0-.315-.566-.287-1.28.028-.704.088-1.28.135-1.28.046 0 .3.435.565.966.265.53.348.882.184.78-.164-.1-.298-.047-.298.121 0 .168.216.388.48.489.69.265.591.813-.138.758-.34-.026-.548-.16-.461-.3zm-37.321-.315c0-.477.575-.536 1.148-.118.563.413.546.438-.273.39-.481-.028-.875-.15-.875-.272zm31.04.096c0-.216-.167-.29-.37-.164-.238.147-.282.087-.124-.169.175-.282.345-.298.588-.055.189.189.244.441.124.561-.12.12-.218.043-.218-.173zm-32.295-.541c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm8.373.294c-.222-.09-.321-.294-.222-.455.272-.44.692-.352.9.187.188.491.03.554-.678.268zm35.966-.588c.101-.264.24-.48.31-.48.069 0 .126.216.126.48s-.14.48-.31.48c-.17 0-.228-.216-.126-.48zm-48.655-.359c-.137-.355-.045-.386.416-.14.325.175.645.286.712.248.068-.038.082-.005.033.074-.22.353-1.003.23-1.161-.181zm8.014.038c-.1-.263-.052-.479.108-.479.433 0 .703.57.367.776-.16.1-.374-.034-.475-.297zm8.437-.46c0-.165.142-.389.316-.496.181-.112.235.016.126.3-.213.555-.442.657-.442.196zm1.173.088a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.091-.262.07-.38-.048zm33.557-.09c-.108-.174-.799-.235-1.543-.136-1.25.165-1.302.144-.712-.302.617-.467.619-.5.05-1.128-.322-.356-.79-.57-1.04-.473-.3.115-.392.016-.273-.295.246-.64 1.747-.334 1.747.358 0 .289.288.705.64.925.358.223.64.262.64.087 0-.443.877-.053 1.082.482.201.524-.309.94-.591.482zm-20.97-.337c-.289-.186-.328-.312-.1-.315.21-.003.47.14.58.315.245.398.134.398-.48 0zm-21.867-.213c-.374-.373-.23-.794.187-.544.264.159.249.054-.046-.309-.46-.568-.308-1.06.226-.73.477.295.668 1.796.228 1.796-.21 0-.478-.096-.595-.213zm44.9-.11c-.638-.395-.163-.763.504-.39.3.168.411.387.248.488-.163.1-.501.056-.752-.098zm-33.571-.595c-.284-.53-.222-.607.464-.567.925.053.946.098.329.716-.406.406-.506.387-.793-.149zm19.062.118c.101-.264.24-.48.31-.48.069 0 .126.216.126.48s-.14.48-.31.48c-.17 0-.228-.216-.126-.48zm-35.404-.099c0-.172.228-.4.506-.507.312-.12.458-.048.38.186-.16.478-.886.742-.886.321zm47.956-1.353c-.917-1.03-.9-1.132.102-.597.36.194.598.23.528.08a83.44 83.44 0 0 0-.574-1.162c-.393-.787-.383-.955.09-1.429.325-.324.538-.387.538-.158 0 .208.216.295.48.194.264-.101.475-.06.47.09-.018.478-.845 1.393-1.062 1.176-.115-.115-.208-.058-.208.126s.18.483.4.666c.373.31.493.354 1.12.407.132.01-.082.15-.475.307-.463.186-.648.461-.526.78.27.703.076.598-.883-.48zm1.324.633c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-11.175-.487c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm9.255.186c-.41-.265-.4-.31.08-.315.308-.003.56.14.56.315 0 .39-.037.39-.64 0zm-4.751-.46c.06-.293.255-.526.43-.517.475.026.388.741-.11.908-.27.09-.39-.057-.32-.39zm-21.33-.18c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm20.464.028c.1-.161 0-.366-.222-.455-.242-.098-.18-.172.159-.187.308-.014.56.19.56.454s-.153.48-.34.48c-.186 0-.257-.131-.157-.292zm-4.43-.536c-.257-.67-.245-.772.092-.772.4 0 .705.904.374 1.108-.15.093-.36-.058-.466-.336zm7.509-.492c-.38-.625-.658-.788-1.01-.59-.393.22-.473.084-.419-.708.077-1.111.878-2.137 1.228-1.572.124.202-.016.35-.332.35-.508 0-.506.048.03.64.32.352.773.64 1.01.64s.43.2.43.446c0 .245.216.529.48.63.726.278.576 1.027-.206 1.027-.402 0-.903-.357-1.211-.863zm-19.062.36c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm18.253.022c-.101-.163-.038-.388.141-.498.18-.111.326.023.326.297 0 .563-.193.645-.467.201zm-4.933-.563c.25-.309.277-.444.062-.315-.208.125-.47.078-.582-.104-.113-.181-.34-.247-.505-.144-.165.102-.12-.209.098-.69.318-.698.318-.902 0-1.008-.218-.073-.293-.3-.165-.505.277-.444.49-1.381.537-2.373.019-.396.15-.72.293-.72.142 0 .04-.31-.225-.69-.348-.495-.395-.854-.167-1.28.174-.324.239-.608.145-.63a6.433 6.433 0 0 0-.465-.08c-.161-.022-.413-.17-.56-.331-.155-.17-.099-.195.133-.061.264.151.4.012.4-.407 0-.35.28-.726.62-.834.34-.108.678-.37.75-.582.072-.211.07.011-.005.495-.098.64 0 .88.36.88.308 0 .426.181.312.479-.101.263-.312.398-.47.301-.156-.097-.147.187.022.63.196.516.196.876 0 .998-.513.316-.352 1.432.206 1.432.337 0 .447.174.32.507-.107.278-.195.646-.195.818 0 .172-.128.234-.284.138-.156-.097-.347.254-.424.78-.113.765-.023.957.444.957.735 0 .744.288.024.839-.475.364-.49.475-.1.73.38.25.387.389.04.807-.23.277-.562.504-.738.504-.176 0-.122-.243.12-.541zm-.04-9.2c0-.077-.144-.23-.32-.339-.176-.108-.32-.045-.32.141 0 .187.144.34.32.34.176 0 .32-.064.32-.142zm-30.643 8.792c-.333-.538-.324-.65.053-.65.25 0 .529-.18.618-.4.108-.27.17-.28.186-.03.014.208.303.297.662.203.35-.091.557-.294.461-.45-.096-.156-.023-.284.164-.284.186 0 .338.297.338.66 0 .362-.133.576-.296.475-.164-.101-.398.133-.521.52-.209.66-.25.668-.635.142-.366-.5-.424-.505-.52-.049-.09.429-.174.406-.51-.137zm32.588.123c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm8.615.205c0-.165.144-.39.32-.499.176-.108.32.027.32.301 0 .275-.144.5-.32.5-.176 0-.32-.136-.32-.302zm-2.996-.499c-.102-.264-.045-.48.126-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm4.47-.059c.05-.209-.01-.437-.132-.507-.123-.071-.022-.077.223-.014.347.09.363.017.073-.333-.296-.357-.235-.484.3-.624.535-.14.627-.066.449.36-.123.296-.23.711-.239.923-.008.213-.123.32-.254.238a.265.265 0 0 0-.375.094c-.074.134-.094.072-.045-.137zm-37.371-.58c-.21-.977.217-1.897.733-1.578.156.096.281.49.279.876-.004.541-.071.597-.294.246-.216-.341-.316-.22-.4.48l-.112.935zm31.939-.412c-.086-.138.122-.251.461-.251.34 0 .617.113.617.25 0 .14-.208.252-.462.252-.253 0-.53-.113-.616-.251zm-34.606-.674c-.11-.286.054-.68.386-.929.318-.237.53-.6.47-.808-.058-.208.007-.265.143-.128.539.538.373 1.19-.304 1.2-.623.01-.636.042-.131.336.68.396.73.828.093.828-.256 0-.552-.225-.657-.499zm40.804-.72c-.44-.497-1.016-.917-1.28-.934-.33-.022-.355-.082-.08-.193.22-.088.4-.36.4-.604 0-.273.194-.369.505-.25.304.117.444.433.35.79-.085.328-.03.596.123.596.285 0 1.08 1.269.887 1.416-.058.045-.465-.325-.905-.821zm-44.48.027c0-.187-.143-.251-.317-.144-.188.116-.23-.027-.105-.353.142-.37.09-.475-.16-.32-.244.15-.305.055-.177-.276.141-.369.303-.414.601-.166.51.423.839 1.597.448 1.597-.16 0-.29-.152-.29-.338zm1.12-.622c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm34.4-.64c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm4.48-.004c-.479-.127-.75-.394-.675-.664.07-.248.114-.812.099-1.252l-.027-.8.353.8c.194.44.365.944.381 1.12.016.176.382.37.813.431.721.102.747.063.32-.48-.414-.526-.41-.548.032-.204.273.213.85.3 1.28.196.582-.14.696-.095.442.18-.515.556-2.116.913-3.019.673zm-42.997-1.366c-.288-.754-.523-1.534-.523-1.734 0-.457.626-.677 1.376-.482.451.117.532.348.374 1.068-.155.709-.086.918.304.918.278 0 .506.132.506.292 0 .16-.355.253-.787.206-.677-.075-.743-.003-.47.508.177.33.19.594.031.594-.158 0-.523-.617-.811-1.37zm8.86.96c-.298-.483.039-.508.857-.063l.8.435-.745-.05c-.41-.029-.82-.174-.912-.323zm-5.223-.192c0-.156-.318-.366-.707-.468-.388-.101-.613-.277-.5-.39.113-.113.086-.52-.06-.904a1.306 1.306 0 0 1 .17-1.294c.24-.328.36-.719.267-.869-.092-.15-.016-.273.17-.273.187 0 .34.225.34.5 0 .274.144.41.32.3.176-.108.32-.03.32.176 0 .205-.216.29-.48.189-.46-.176-.56.047-.56 1.235 0 .91.08 1.12.434 1.12.195 0 .271-.216.17-.48s-.054-.48.104-.48c.159 0 .276.432.261.96-.015.528-.077.96-.138.96-.061 0-.111-.127-.111-.282zm37.6-.358c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-28.76-.492c-.193-.5.611-1.043.987-.667.11.11-.036.2-.324.2-.334 0-.457.173-.34.48.102.263.113.48.025.48s-.245-.222-.349-.493zm4.53-.798c-.156-1.06.188-.9.535.25.12.396.08.72-.088.72-.167 0-.369-.436-.447-.97zm-11.68.324c-.405-.163-.794-.671-.902-1.18-.105-.491-.405-1.29-.668-1.774-.3-.555-.348-.88-.129-.88.192 0 .431.216.533.48.101.264.321.48.489.48.167 0 .223-.13.124-.29-.099-.16-.078-.557.047-.88.198-.517.25-.49.415.21.135.571.458.846 1.13.962.615.107.983.385 1.058.8.063.351.245.775.404.942.41.433.357.71-.138.71-.235 0-.432-.156-.44-.347-.039-1.087-.517-1.772-1.242-1.782-.374-.005-.36 1.397.023 2.315.263.63.271.627-.705.234zm.022-2.082c-.099-.257-.302-.392-.452-.3-.15.093-.192.38-.093.637s.302.392.452.3c.15-.093.192-.38.093-.637zm38.887 1.848c-.398-.507-.387-.518.12-.12.534.418.703.68.44.68-.067 0-.319-.252-.56-.56zm-15.16-.4c-.108-.176.036-.32.32-.32.285 0 .43.144.32.32-.108.176-.252.32-.32.32-.067 0-.21-.144-.32-.32zm-20.48-.32c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm9.576-.099c-.365-.418-.255-1.18.171-1.18.14 0 .254.36.254.8 0 .44-.018.794-.04.787-.022-.007-.195-.19-.385-.407zm23.42-.28c.093-.149.303-.188.467-.087.418.259.371.36-.168.36-.257 0-.39-.123-.298-.272zm5.885-.139c0-.224.263-.313.64-.214.352.092.64.285.64.43 0 .144-.288.24-.64.214-.352-.026-.64-.22-.64-.43zm-37.82-.02c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm6.46-.76c0-.187.144-.25.32-.142.176.11.32.262.32.34 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.339zm29.192-.165c.304-.318.64-.49.747-.384.108.108-.141.368-.552.579-.715.366-.723.358-.195-.195zm-35.272-.282c0-.247.952-.446 1.087-.227.081.132-.13.26-.47.286-.34.026-.617 0-.617-.06zm37.865-.197c-.291-.292-.873-.489-1.751-.593-.113-.014-.297-.261-.408-.55-.17-.442-.123-.46.294-.114.648.538 1.011.16.471-.49-.375-.453-.33-.465.425-.122.464.212.767.508.675.658-.093.15.008.273.223.273.216 0 .297.095.182.21-.116.117-.05.405.145.64.424.512.233.577-.256.088zm-47.506-.83c-.397-.481-.372-.497.257-.161.584.31.72.28.843-.188.11-.419.156-.379.183.161.044.852-.652.954-1.283.188zm2.141-.014c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm45.586-.721c-.301-.564-.237-.62.628-.56 1.076.075 1.34.547.307.547-.363 0-.57.144-.461.32.108.176.122.32.03.32-.093 0-.32-.282-.504-.627zm-35.191-.173c-.01-.615.59-1.285.857-.957.142.175.198.284.124.242-.073-.041-.323.175-.555.48-.231.306-.424.411-.426.235zm13.326-.594c-.11-.285.067-.526.459-.629.55-.144.581-.095.228.369-.224.294-.43.577-.458.628-.029.052-.131-.114-.229-.368zm7.139.114c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm14.88-.64c-.11-.176-.03-.32.175-.32s.294-.205.198-.456c-.097-.251.059-.647.345-.88.446-.362.493-.348.326.097-.107.287-.045.67.137.852.182.183.234.488.116.68-.27.436-1.035.452-1.297.027zm-59.29-1.6c-.046-.678-.005-.716.268-.25.177.303.564.685.859.85.44.247.392.292-.267.251-.614-.038-.817-.239-.86-.85zm37.499.59c-.135-.217-.088-.282.114-.157.188.116.415.03.504-.19.098-.243.172-.18.187.157.029.634-.46.75-.805.19zm21.128-.052c-.256-.668.064-1.104.495-.674.181.182.186.488.011.77-.245.397-.322.383-.506-.096zm-54.192-.404c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm57.415-.454c-.522-.224-.54-.279-.1-.297.298-.013.63.121.74.297.227.368.216.368-.64 0zm-57.303-.742c-.256-.668.064-1.104.495-.674.181.182.186.488.011.77-.245.397-.322.383-.506-.096zm54.466-.458c.035-.484.076-1.005.09-1.159.015-.153.234-.106.489.104.363.302.386.55.108 1.16-.468 1.028-.767.983-.687-.105zm-55.858.054c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm57.265-.153c.207-.387.154-.671-.174-.943-.576-.479-.321-1 .36-.74.402.155.415.243.07.462-.32.203-.326.272-.027.275.22.003.4.341.4.752 0 .438-.19.747-.462.747-.34 0-.384-.148-.167-.553zm-59.64-.795c.097-.254.305-.382.463-.285.397.245.36.363-.177.569-.31.118-.405.024-.287-.284zm-.595-.875c-.092-.479-.051-.87.09-.87.426 0 .548.443.305 1.11-.203.56-.247.534-.395-.24zm57.985.07c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-47.68-.64c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm49.442-.297c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm.775-1.337c-.292-.706-.287-1.014.023-1.387.307-.37.311-.584.02-.935-.31-.373-.258-.423.291-.28.62.162.657.071.51-1.225-.089-.77-.082-1.146.013-.836.096.31.299.487.45.393.153-.094.196.335.095.953-.1.619-.042 1.306.13 1.528.52.673.763 1.586.387 1.461-.19-.063-.321-.239-.293-.39.089-.478-.77-.82-1.03-.412-.41.645-.28 1.503.227 1.503.264 0 .48.12.48.267 0 .653-.963.18-1.303-.64zm-1.706.245c.207-.538 1.089-.954 1.089-.513 0 .164-.285.451-.633.637-.508.272-.598.248-.456-.124zm-31.551-.512a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-2.727-2.26c-.116-.367-.136-.743-.044-.836.267-.267.85.21.85.696 0 .748-.58.85-.806.14zm4.714.148c-.227-.246-.272-.448-.099-.448.332 0 .813.61.624.79-.062.058-.298-.096-.525-.342zm27.133-.128c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm4.053-1.493c-.298-.298-.266-.747.053-.747.147 0 .267.216.267.48 0 .544-.024.564-.32.267zm2.094-.587c.093-.589.893-.947.893-.4 0 .132-.092.228-.205.213-.112-.015-.336.165-.497.4-.215.314-.266.258-.191-.213zm1.35-1.365c-.484-.33-.821-1.355-.447-1.355.17 0 .319.18.33.4.011.22.15.076.31-.32.294-.733.95-.996.95-.38 0 .186-.144.25-.32.14-.293-.18-.445.33-.406 1.36.017.465.028.46-.418.155zm-3.817-.395c-.11-.176-.054-.32.122-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm-27.081-1.2c-.398-.507-.387-.518.12-.12.309.241.56.493.56.56 0 .263-.262.093-.68-.44zm30.12-.452c0-.207-.251-.665-.56-1.017-.307-.353-.38-.535-.16-.407.22.129.4.089.4-.089 0-.177-.251-.47-.56-.649-.533-.31-.533-.327 0-.336.309-.005.667-.046.797-.09s.319.352.418.88c.1.528.353.924.563.88.604-.126.446.367-.257.806-.48.3-.64.305-.64.022zm-23.334-4.934c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm-37.039-.628c0-.256.12-.466.267-.466.147 0 .267.136.267.301 0 .166-.12.376-.267.466-.147.091-.267-.044-.267-.3zm47.254.174a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm12.16-2.08c0-.264.139-.48.31-.48.17 0 .227.216.125.48-.101.264-.24.48-.31.48-.069 0-.125-.216-.125-.48zm-29.6-.16c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-3.52-.32c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm53.28-.16c0-.264.144-.48.32-.48.176 0 .32.216.32.48s-.144.48-.32.48c-.176 0-.32-.216-.32-.48zm-57.02-.058c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm43.908-.09c-.401-.253-.388-.329.094-.514.31-.12.655-.127.765-.017.11.11.023.2-.193.2s-.303.143-.194.32c.243.393.137.396-.472.012zm-38.174-.204c-.105-.105-.947-.246-1.87-.312-.922-.066-1.773-.276-1.891-.466-.125-.202-.569-.258-1.062-.134-.475.12-.756.36-.64.548.122.197.053.24-.167.104-.206-.128-.305-.345-.22-.483.085-.138-.064-.524-.332-.858-.468-.582-.475-.58-.161.071.429.891.185 1.082-.962.754-1.349-.387-1.414-.429-1.366-.868.026-.236-.362-.111-.96.308-.552.387-.842.493-.644.236.443-.575.263-1.86-.356-2.544-.406-.449-.387-.515.168-.556.392-.03.633.156.64.492.008.451.107.425.595-.16.395-.474.69-.596.91-.376.219.22.274.064.17-.481-.148-.776-.098-.804 1.37-.743 1.21.05 1.555-.052 1.67-.49.113-.436.274-.485.749-.23.607.324.867 1.9.314 1.9-.16 0-.214-.288-.122-.64.093-.356.01-.64-.188-.64-.196 0-.315.252-.265.56.122.752.843 1.95.856 1.421.005-.23.137-.34.293-.243.156.096.367-.142.468-.53.103-.395.014-.813-.204-.951-.213-.136-.257-.249-.098-.252.16-.003.015-.317-.32-.7-.335-.382-.445-.599-.243-.481.202.117.442.017.534-.223.204-.533 1.903-.926 1.722-.399-.067.197-.469.307-.892.245l-.77-.114.64.707c.351.39.598.8.547.914-.051.113.217.254.595.313.482.075.615-.012.444-.29-.162-.26-.114-.314.14-.158.27.167.285.358.052.64-.183.22-.226.523-.096.674.13.15-.159.026-.643-.277-.484-.303-.88-.399-.88-.213 0 .186.186.409.413.496.525.201.634 1.42.128 1.426-.614.008.512.625 1.15.63.313.003.683-.3.82-.671.238-.642.28-.648.805-.122.305.305.631.479.724.386.093-.093.615-.041 1.16.115.65.187 1.135.164 1.412-.065.318-.264.473-.204.634.246.117.328.287.729.376.89.094.17-.098.192-.449.053-1.255-.495-1.732-.476-1.744.072-.008.393-.134.322-.46-.259-.39-.693-.447-.714-.424-.16.014.352-.03.856-.1 1.12-.085.328.079.45.515.387.528-.077.556-.035.16.235-.741.507-.883.421-1.278-.777-.203-.614-.516-1.207-.697-1.319-.206-.127-.197.043.024.456.22.412.238.73.046.85-.169.104-.225.4-.126.659.177.463-.24.651-.614.277zm-1.491-2.152c-.28-.28-.437-.262-.645.074-.162.263-.5.357-.831.23-.444-.17-.484-.125-.196.223.2.24.256.55.126.688-.13.138.247.005.84-.297.814-.415.986-.638.706-.918zm-3.126.406c.14-.538.09-.59-.28-.284-.247.206-.372.503-.275.659.261.422.365.352.555-.375zm-3.024-.348c-.975-.75-1.395-.76-.673-.016.308.318.755.582.993.587.241.005.1-.248-.32-.57zm.687-.7c0-.235-.216-.427-.48-.427-.507 0-.624.283-.267.64.353.353.747.24.747-.213zm1.075-1.334c-.101-.264-.402-.48-.669-.48-.395 0-.41.09-.087.48.22.264.52.48.67.48.149 0 .188-.216.086-.48zm10.845 4.108c-.558-.224-.502-.748.08-.748.264 0 .48.216.48.48s-.036.469-.08.455c-.044-.014-.26-.098-.48-.187zm-1.42-.326c.23-.093.507-.081.613.025.106.106-.083.182-.42.168-.373-.015-.449-.091-.193-.193zm36.22-.262c0-.264.128-.48.285-.48.157 0 .369.216.47.48.112.293 0 .48-.286.48a.476.476 0 0 1-.47-.48zm-68.16-.48c-.289-.186-.328-.312-.1-.315.21-.003.47.14.58.315.245.398.134.398-.48 0zm35.306-.466c0-.256.12-.391.267-.3.147.09.267.3.267.465 0 .166-.12.301-.267.301-.147 0-.267-.21-.267-.466zm-17.962-.238c-.495-.494-.487-.788.029-.986.258-.099.437.129.476.606.072.874.024.91-.506.38zm-17.15-1.082c-.107-.278-.185-.674-.174-.88.011-.205.154-.04.317.367.179.445.445.649.67.51.23-.143.285-.09.143.14-.32.518-.727.46-.956-.137zm26.846-.134c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-28.327-.487c-.223-.269-.312-.58-.2-.694.114-.113.207-.042.207.158s.18.32.4.266c.22-.054.29-.037.158.037-.134.074-.161.267-.062.428.293.473-.063.335-.503-.195zm38.046-.073c-.398-.507-.387-.519.12-.12.309.241.56.493.56.56 0 .263-.262.093-.68-.44zm-20.297-.108a.542.542 0 0 1 .073-.635c.17-.17.287-.028.287.348 0 .727-.059.774-.36.287zm12.898.128c-.308-.08-.56-.289-.56-.462 0-.173-.144-.226-.32-.118-.176.11-.32.062-.32-.103 0-.38 1.108-.686 1.507-.417.383.257.787 1.332.482 1.283-.126-.02-.481-.103-.79-.183zm18-.1c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm32.48-.32c-.11-.176-.054-.32.122-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm-40.64-.64c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm41.313-.061c-.382-.835-.094-1.68.61-1.792.397-.063.497-.003.265.157-.204.142-.428.69-.499 1.217-.1.75-.182.841-.376.418zm-52.09-1.323c-.119-.584-.074-.794.126-.594.17.17.254.578.185.904-.094.44-.174.36-.31-.31zm8.377.624c0-.067.252-.319.56-.56.507-.399.518-.387.12.12-.418.533-.68.703-.68.44zm2.407-.816c-.116-.365-.417-.664-.67-.664-.655 0-.567-.89.103-1.027.308-.063-.195-.13-1.116-.147-.922-.017-1.598.096-1.502.251.097.156.023.283-.164.283-.186 0-.338-.144-.338-.32 0-.176-.324-.336-.72-.357-.54-.028-.58-.073-.162-.183.445-.116.491-.273.23-.763-.344-.64-1.268-.857-1.268-.297 0 .176-.216.32-.48.32s-.48-.144-.48-.32a.324.324 0 0 0-.327-.32c-.188 0-.24.339-.125.8.156.623.078.8-.353.8-.456 0-.484-.084-.155-.48.25-.302.272-.48.058-.48a.667.667 0 0 0-.513.278c-.094.153-1.075.31-2.178.349-2.856.1-2.807.093-2.807.39 0 .148-.281.093-.624-.12-.444-.278-.53-.503-.3-.781.233-.28.134-.493-.345-.75-.368-.196-.571-.517-.451-.711.135-.219.071-.263-.168-.115-.212.132-.33.406-.261.61.068.204-.104.558-.383.787-.447.366-.426.394.172.231.487-.133.724-.02.833.399.105.402-.032.598-.44.629-.327.024-.593-.09-.593-.256 0-.165-.352-.3-.782-.3-.43 0-.87-.144-.978-.32-.262-.423-.8-.41-.8.02 0 .186.128.258.286.161.158-.097.369.038.47.301.232.604-.25.62-.842.027-.292-.292-.61-.35-.903-.164-.319.202-.334.287-.051.29.22.003.4.15.4.325 0 .176-.232.32-.515.32-.333 0-.447.175-.323.497.124.324.062.417-.18.267-.257-.158-.3-.042-.14.376.215.557.174.552-.505-.06-.405-.365-1.006-.76-1.334-.876-.492-.174-.525-.296-.193-.696.352-.424.446-.397.756.219.194.386.57.759.834.827.324.083.298.009-.08-.23-.684-.434-.746-1.015-.08-.76.264.102.48.035.48-.148 0-.34-1.227-.88-1.704-.751-.145.04-.173-.076-.061-.257.372-.603-.172-1.03-.744-.583-.475.371-.485.356-.095-.141.24-.306.574-.471.743-.367.17.105.12-.11-.11-.477-.229-.368-.815-.807-1.303-.977-.74-.258-.89-.22-.912.234-.015.329-.088.387-.186.146-.203-.505.49-2.643.857-2.643.491 0 .7.656.345 1.084-.354.426-.165.836.386.836.185 0 .229-.596.108-1.473-.174-1.275-.131-1.447.318-1.275.285.11.685.061.889-.108.238-.197.538-.189.84.025.375.266.348.292-.137.134-.512-.167-.543-.122-.2.29.596.719.82.6.903-.473.052-.69-.068-.96-.431-.96-.277 0-.411-.15-.298-.334.114-.183.058-.513-.125-.733-.239-.288-.162-.505.278-.78.348-.217.686-.255.789-.088.099.16.034.382-.145.492-.18.11-.314.445-.3.742.02.441.058.453.205.061.1-.264.45-.865.78-1.337.382-.545.48-.932.27-1.062a.4.4 0 0 1-.116-.552c.128-.207.065-.255-.155-.12-.203.126-.37.093-.37-.072 0-.166.371-.373.825-.46.565-.108.72-.054.495.172-.225.225-.226.523-.001.942.304.569.383.577 1.094.111.846-.554 2.544-.693 2.228-.182-.109.176.027.32.301.32.274 0 .504-.18.51-.4.006-.22.212-.04.457.4.39.702.472.732.662.242.164-.423.463-.519 1.224-.395.74.121.88.08.526-.156-.465-.31-.376-.376.64-.474.264-.026.444-.22.4-.432-.106-.51.183-.487.727.057.244.243.353.531.244.64-.109.11.006.2.256.203.373.004.368.06-.027.315-.336.217-.357.312-.07.315.225.003.492-.21.593-.473.101-.263.315-.397.476-.298.16.1.215.305.12.456-.093.152-.023.367.156.477.178.11.325.032.325-.175 0-.245.284-.19.82.162.45.295 1.134.512 1.52.481 1.314-.104 1.71-.007 1.226.3-.308.195-.33.34-.075.497.197.123.276.357.175.52-.289.468-.786.349-.786-.188 0-.35-.235-.444-.834-.335-.633.115-.874 0-.997-.474-.218-.832-.633-.791-.913.09l-.227.715-.278-.751c-.234-.632-.356-.687-.769-.344-.27.224-.427.575-.349.78.079.204-.167.564-.545.8-.638.397-.655.387-.223-.134.413-.5.395-.602-.16-.919-.344-.196-.902-.4-1.24-.455-.567-.092-.576-.055-.11.467.433.485.44.625.055.979-.64.586-.564.858.378 1.363.738.395.864.38 1.149-.129.306-.547.34-.547.795.011.261.32.384.402.273.182-.13-.256.034-.4.456-.4.362 0 .659-.168.659-.373s.095-.278.211-.162c.116.116-.064.523-.4.904-.606.686-.605.69.092.516.484-.121.747-.012.843.35.086.322.154.223.177-.259.028-.6.125-.696.413-.407.275.275.49.281.8.025.32-.266.424-.231.424.144 0 .272-.252.556-.56.63-.706.168-.157.41 1.59.7.654.109 1.41.418 1.68.688.27.27.49.34.49.157 0-.183.216-.25.48-.148.264.1.48.448.48.771 0 .414.188.551.636.465.82-.158 1.783.748 1.304 1.227-.393.393-.452.87-.1.814.575-.09 1.04.061 1.04.34 0 .166-.324.224-.72.13a6.314 6.314 0 0 0-1.304-.16c-.429.01-.497-.093-.256-.384.243-.292-.002-.6-.936-1.177-.695-.43-1.264-.9-1.264-1.045 0-.145-.147-.173-.326-.062-.178.11-.24.37-.136.578.103.208-.146.002-.555-.456-.409-.459-1.067-.914-1.463-1.01-1.07-.261-.872.289.244.678.53.185 1.046.55 1.147.812.1.261.602.567 1.115.68.514.113.934.353.934.534 0 .18.353.606.785.946.432.34.709.817.615 1.061-.093.244-.003.755.2 1.136.205.38.301.763.215.849-.086.086-.252-.142-.368-.508zm-2.545-2.945c0-.573-.04-.586-.379-.123-.29.397-.416.42-.539.101-.087-.229-.145-.114-.127.257.042.881 1.045.657 1.045-.235zm-17.356-.039c-.138-.22-.204-.688-.147-1.04.057-.352-.011-.527-.15-.39-.422.413-.44 1.318-.032 1.578.542.344.617.31.33-.148zm-.95-1.04c-.102-.264-.226-.48-.276-.48-.05 0-.175.216-.276.48-.111.29-.002.48.276.48.277 0 .386-.19.275-.48zm13.565-.56c-.15-.46-1.841-.749-1.841-.314 0 .483.389.714 1.2.714.475 0 .722-.154.641-.4zm-11.006-.4c.102-.264.045-.48-.126-.48-.17 0-.31.216-.31.48s.057.48.126.48c.07 0 .209-.216.31-.48zm-.953-2.576c.109-.285.055-.413-.126-.301-.174.107-.316.33-.316.496 0 .46.229.36.442-.195zm5.798-2.384c.108-.176.053-.32-.123-.32s-.409.144-.517.32c-.11.176-.054.32.122.32s.409-.144.518-.32zm-1.994-.53c-.217-.087-.65-.093-.96-.011-.312.08-.134.152.394.159.528.007.782-.06.566-.148zm.055-1.843c-.341-.25-.689-.386-.772-.303-.176.176.65.744 1.092.751.165.003.022-.199-.32-.448zm-1.869 12.24c.091-.147.3-.267.466-.267.166 0 .302.12.302.267 0 .147-.21.267-.466.267-.257 0-.392-.12-.302-.267zm20.608.034c0-.186-.123-.263-.272-.17-.15.092-.581-.121-.96-.474-.808-.753-.933-1.65-.19-1.365.274.105.423.387.331.626-.187.488.481.458.846-.038.129-.176.237-.025.24.336.003.361.177.83.389 1.04.298.299.298.384 0 .384-.212 0-.384-.152-.384-.339zm-15.503-.272c-.243-.393.132-1.309.536-1.309.206 0 .197.155-.027.424-.256.31-.25.525.025.8.276.275.279.376.011.376-.2 0-.446-.13-.545-.29zm-3.704-.836c-.338-.407-.318-.454.121-.286.29.111.526.33.526.488 0 .411-.186.353-.647-.202zm57.191-.366c.09-.235.293-.427.45-.427.157 0 .286.192.286.427a.44.44 0 0 1-.45.427c-.247 0-.376-.192-.286-.427zm.615-1.239c-.309-.805-.218-1.012.16-.364.186.322.272.652.19.734-.083.083-.24-.084-.35-.37zm-39.215-.38c.239-.312.475-.628.525-.701.05-.073.09.091.09.366 0 .274-.236.59-.525.7-.457.176-.469.129-.09-.365zm-.984-.728c0-.352.055-.64.122-.64.068 0 .198.288.29.64.092.352.037.64-.122.64-.16 0-.29-.288-.29-.64zm-27.52-.44c0-.067.243-.319.54-.56.299-.242.442-.272.319-.067a.36.36 0 0 0 .179.535c.22.089.078.173-.318.187-.396.014-.72-.029-.72-.095zm67.53-.36c0-.176.139-.536.31-.8.17-.264.31-.336.31-.16 0 .176-.14.536-.31.8-.171.264-.31.336-.31.16zm-80.97-.78c0-.363.18-.662.4-.665.29-.004.278-.081-.041-.284-.243-.153-.343-.44-.222-.635.208-.336-.233-.509-.937-.367-.176.036-.208-.047-.071-.185.137-.137.452-.279.7-.315.538-.079 1.244 1.684.786 1.966-.168.104-.23.314-.135.465.093.152.024.367-.155.477-.18.111-.325-.093-.325-.458zm13.12.121c0-.274.146-.408.325-.297.179.11.242.335.14.498-.273.444-.465.362-.465-.2zm0-1.44c-.73-.384-.919-.595-.542-.605.319-.008.503-.139.41-.29-.093-.15.195-.204.64-.119.52.1.748.312.64.594-.093.242-.029.44.142.44.17 0 .31.143.31.32 0 .421-.26.366-1.6-.34zm-2.24-.62c0-.177.152-.32.338-.32.187 0 .25.143.142.32-.11.175-.262.32-.34.32-.077 0-.14-.145-.14-.32zm3.68-.64c-.11-.177-.046-.32.14-.32.187 0 .34.143.34.32 0 .175-.064.32-.142.32-.077 0-.23-.145-.338-.32zm65.92 0c-.11-.177-.046-.32.14-.32.187 0 .34.143.34.32 0 .175-.064.32-.142.32-.077 0-.23-.145-.338-.32zm-2.72-1.6c0-.529.122-.96.27-.96.15 0 .284.431.3.96.014.527-.108.96-.272.96-.164 0-.298-.433-.298-.96zm2.56.64c-.289-.187-.328-.313-.1-.316.21-.003.47.14.58.315.245.398.134.398-.48 0zm-64.14-.33c-.095-.259-.236-.83-.313-1.27-.077-.44-.15-.854-.164-.92-.013-.065-.243.063-.51.285-.405.336-.456.32-.299-.089.105-.271.48-.57.833-.662.442-.115.593-.037.483.25-.088.23 0 .579.199.776.197.198.24.36.095.36-.144 0-.11.184.078.41.208.25.23.59.056.871-.246.399-.307.397-.458-.01zm42.918.09c-.076-.133-.042-.507.077-.832.195-.536.254-.544.639-.08.362.437.337.516-.175.543-.45.024-.4.096.2.288.745.239.752.259.1.288-.386.018-.764-.076-.84-.208zm-47.098-.4c-.11-.177-.046-.32.14-.32.187 0 .34.143.34.32 0 .175-.064.32-.142.32-.077 0-.23-.145-.338-.32zm2.586.042c-.138-.223-.164-.492-.059-.597.287-.287.6.135.444.599-.108.325-.183.324-.385-.001zm-2.994-1.188c.304-.317.621-.508.705-.424.085.085-.164.344-.552.577-.674.405-.68.398-.153-.153zm25.208.384c0-.066.219-.302.487-.525.407-.338.454-.318.286.121-.173.449-.773.763-.773.404zm23.385-.705c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm-62.08-.32c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm20.918-.715c-.43-.307-.61-2.107-.185-1.844.183.113.252.417.153.676-.112.292.014.47.334.47.283 0 .515.135.515.3 0 .432-.458.655-.817.398zm-20.09-.515c-.102-.266-.045-.57.126-.676a.36.36 0 0 0 .127-.49c-.101-.164-.029-.298.16-.298.199 0 .281.359.194.84-.192 1.057-.37 1.24-.607.624zm2.168-.041c-.604-.484-.603-.489.056-.172.373.18.792.224.932.098s.15-.049.023.171c-.287.5-.264.501-1.011-.097zm6.147.028c-.1-.259-.007-.57.205-.692.213-.122.28-.103.15.04-.131.145-.078.456.118.692.225.27.236.43.032.43-.179 0-.406-.212-.505-.47zm-11.408-.19c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm13.465-.181c-.014-.199.174-.527.417-.729.343-.284.487-.25.64.147.3.782.24.897-.251.488-.345-.286-.488-.276-.615.041-.099.245-.176.267-.191.052zm11.734.009c-.109-.177.08-.495.421-.707.544-.34.619-.3.615.336-.004.53-.079.606-.282.286-.224-.355-.302-.358-.416-.016-.085.254-.219.294-.338.1zm-23.437-.445c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm19.358.015c0-.165.142-.389.316-.496.181-.113.235.016.126.3-.213.555-.442.656-.442.196zm-20.318-.975c-.112-.181.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm39.371.018c-.101-.164-.062-.373.088-.466.15-.092.272.042.272.298 0 .54-.101.587-.36.168zm-18.891-.338c-.112-.182.016-.235.3-.126.555.213.657.442.196.442-.165 0-.389-.142-.496-.316zm-22.856-.414c.073-.05.369-.27.656-.489.426-.324.557-.307.71.091.139.362-.032.488-.656.488-.464 0-.783-.04-.71-.09zm-6.682-1.254c-.558-.558-.472-.896.229-.896.337 0 .686-.18.775-.4.096-.239.171-.174.186.16.014.308.237.56.495.56.284 0 .398.188.288.474-.142.37-.323.399-.828.128-.468-.25-.587-.249-.43.006.293.473-.234.45-.715-.032zm7.18-.416c-.111-.29-.002-.48.276-.48.277 0 .386.19.275.48-.101.264-.225.48-.275.48-.05 0-.175-.216-.276-.48zm-9.692-.968c-.135-.352-.3-.395-.59-.153-.3.247-.448.166-.573-.312-.093-.356-.04-.647.12-.647s.29.153.29.34c0 .185.125.26.278.167.152-.095.535.113.85.46.343.38.42.633.192.633-.209 0-.464-.22-.567-.488zm-2.039-.32c-.338-.407-.318-.453.121-.285.29.111.526.33.526.487 0 .412-.186.354-.647-.201zm4.492.015c-.286-.345-.553-.388-.98-.16-.387.208-.654.206-.785-.006-.202-.326-.147-.37.555-.441.488-.05.745-1.16.268-1.16-.189 0-.343.144-.343.32 0 .176-.222.32-.493.32-.4 0-.375-.126.136-.674.678-.729 1.317-.582 1.317.302 0 .302.224.87.498 1.26.558.798.434.97-.173.239zm8.075-.379c-.506-.204-.527-1.068-.027-1.068.205 0 .278.095.163.21-.116.117-.05.405.145.64.378.455.353.474-.282.218zm-7.692-.883c.05-.515.275-.972.5-1.016.227-.045.254-.006.06.088-.223.109-.14.406.232.831.319.364.383.547.144.406-.263-.154-.553-.08-.732.185-.208.31-.269.163-.204-.494zm2.502-.485c-.221-.413-.225-.687-.011-.82.176-.108.32.085.32.431 0 .486.164.593.72.471.579-.126.626-.09.24.185-.677.484-.891.44-1.27-.267zm80.824.388c-.34-.34.258-1.318.78-1.279.436.033.505.15.262.444-.183.22-.254.525-.158.68.167.27-.629.41-.884.155zm1.726-1.067c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-87.68-.7c0-.28-.18-.58-.4-.669-.314-.126-.312-.167.01-.187.456-.028.901.85.589 1.162-.11.11-.2-.028-.2-.307zm.836-.101c-.11-.287.025-.46.358-.46.415 0 .448-.085.15-.384-.491-.49-.501-1.006-.014-.705.255.158.313.008.185-.48-.122-.465-.057-.66.19-.57.206.077.341.292.301.48-.04.187-.107.777-.147 1.311-.08 1.045-.734 1.561-1.023.808zm8.444.001c0-.274.146-.408.325-.298.179.11.242.335.14.499-.273.444-.465.361-.465-.201zm-7.04-.393c0-.139.322-.276.715-.306.563-.042.615.01.24.247-.585.37-.955.393-.955.059zm1.92-.228c0-.264.056-.48.125-.48.07 0 .209.216.31.48.102.264.045.48-.126.48-.17 0-.31-.216-.31-.48zm-1.575-1.627c.015-.373.091-.448.193-.193.093.23.081.507-.025.613-.106.107-.182-.083-.168-.42zm1.575-.114c0-.363.144-.66.32-.66.176 0 .32.208.32.462s-.144.55-.32.659c-.176.109-.32-.099-.32-.461zm-.96-.48c0-.275.144-.5.32-.5.176 0 .32.136.32.302 0 .166-.144.39-.32.499-.176.109-.32-.027-.32-.301zm71.274.101c.217-.219.475-.317.574-.218.098.098-.08.277-.395.397-.456.174-.493.137-.179-.179zm-72.32-.471c-.248-.25.075-1.09.42-1.09.146 0 .244.289.218.64-.049.643-.28.806-.637.45zm1.686-.77c0-.175.152-.32.338-.32.187 0 .25.145.142.32-.11.177-.262.32-.34.32-.077 0-.14-.143-.14-.32zm5.44-.018c0-.186.144-.25.32-.141.176.109.32.261.32.339 0 .077-.144.14-.32.14-.176 0-.32-.152-.32-.338zm-10.24-.655c0-.478.144-.62.496-.484.285.11.413.056.301-.126-.402-.65.466-.287.944.395.459.654.499.662.499.096 0-.49.08-.534.397-.218.316.317.3.457-.077.69-.292.18-.594.176-.782-.012-.407-.407-1.231-.396-.978.013.108.176-.027.32-.302.32-.294 0-.498-.277-.498-.674zm-.747.14c-.117-.117-.21-.44-.204-.72.008-.416.07-.402.35.078.344.592.244 1.033-.146.642zm4.138-.662c-.324-.323-.212-1.044.163-1.044.197 0 .264.233.152.525-.168.44-.121.46.286.12.278-.23.488-.264.488-.079 0 .39-.818.75-1.09.478zm2.984-.164c-.245-.8-.156-1.2.266-1.2.278 0 .41.095.295.21-.116.116-.05.404.145.64.274.33.236.43-.162.43-.286 0-.53-.036-.544-.08zm5.958-.218c-.101-.164-.062-.374.088-.466.15-.092.272.042.272.298 0 .54-.101.587-.36.168zm2.547-.022c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-16.225-.613c.11-.288.037-.368-.201-.22-.206.127-.374.09-.374-.082 0-.578.755-.57 1.34.015.733.733.731.74-.18.74-.523 0-.705-.141-.585-.453zm16.545-.347c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-13.107-.618c-.101-.164-.035-.39.147-.502.181-.112.257-.322.168-.466-.089-.144.023-.415.248-.602.309-.256.422-.181.458.301.027.353-.158.72-.411.818-.253.097-.38.305-.283.462.098.158.105.287.017.287s-.243-.134-.344-.298zm-3.81-.822c-.1-.264-.044-.48.127-.48.17 0 .31.216.31.48s-.057.48-.126.48c-.07 0-.209-.216-.31-.48zm.9.186c.1-.162-.035-.512-.3-.777-.546-.546-.639-1.17-.175-1.17.38 0 .972 1.06.972 1.74 0 .275-.153.5-.34.5-.186 0-.256-.132-.156-.293zm15.242-.213c.015-.373.091-.448.193-.193.093.23.081.507-.025.613-.106.107-.182-.083-.168-.42zm-4.517-.826c-.366-.714-.358-.723.195-.195.318.304.49.64.383.748-.107.107-.367-.142-.578-.553zm8.247.502c-.105-.106-.11-.406-.01-.667.15-.388.233-.397.454-.049.472.744.132 1.292-.444.716zm-7.115-.45c.108-.175.26-.32.338-.32.078 0 .142.145.142.32 0 .177-.153.32-.34.32-.186 0-.25-.143-.14-.32zm-6.694-.596c-.094-.153-.535-.208-.979-.123-.493.094-.807.008-.807-.222 0-.207.142-.288.316-.18.181.112.235-.017.126-.302-.105-.273-.032-.496.163-.496s.357.252.36.56c.003.475.05.488.306.083.19-.3.188-.592-.005-.784-.433-.433-.382-.903.068-.626.261.162.304.047.14-.38-.172-.454-.139-.52.129-.255.198.197.39.557.428.8.036.243.178.62.314.838.173.278.087.335-.286.192-.459-.176-.482-.108-.166.483.35.652.258 1.002-.107.412zm5.24-1.01c-.331-.206-.363-.384-.114-.633.249-.25.455-.216.733.118.463.558.032.916-.618.514zm-4.018-.558c-.245-.164-.197-.479.16-1.042.528-.834 1.06-1.009 1.525-.502.15.165.117.207-.076.097-.427-.243-1.347.784-1.172 1.307.147.442.057.47-.437.14zm63.236-.795c.01-1.315.48-1.646 1.066-.75.685 1.045.713 1.7.05 1.15-.332-.275-.48-.287-.48-.04 0 .198-.145.36-.32.36-.177 0-.318-.324-.316-.72zm-59.586-.48c-.754-.878-.966-1.36-.597-1.36.186 0 .339.169.339.375s.238.638.53.96c.29.322.457.585.369.585-.088 0-.377-.252-.641-.56zm63.16-.24c.2-.44.472-.8.603-.8s.072.359-.132.797c-.203.439-.474.799-.603.8-.128.001-.069-.357.132-.797zm-1.745.287c-.128-.129-.233-.455-.233-.724 0-.36.094-.396.356-.135.195.196.3.521.233.724-.068.202-.228.263-.356.135zm-66.588-.924c-.125-.325-.094-.723.068-.885.413-.413.65.12.382.858-.214.592-.233.593-.45.027zm61.26-.03c.015-.373.091-.448.193-.193.093.23.081.507-.025.613-.106.106-.182-.083-.168-.42zm-59.975-.276c-.119-.31-.024-.405.284-.287.254.098.382.306.285.464-.245.397-.363.36-.569-.177zm66.496.122c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.342.216.563.032.663-.284.152zm-64.441-.485c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm57.28 0c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm4.482-.485c-.72-.975-.721-.98-.04-.615.38.203.77.581.87.841.338.881-.1.762-.83-.226zm-53.583.191c.101-.264.24-.48.31-.48.069 0 .126.216.126.48s-.14.48-.31.48c-.17 0-.228-.216-.126-.48zm-12.504-.706c-.174-.456-.137-.493.18-.179.218.217.316.475.218.574-.099.098-.278-.08-.398-.395zm1.74-.094c-.254-.156-.356-.391-.226-.52.13-.13.404-.069.61.136.483.484.213.754-.384.384zm2.64.108c-.22-.088-.4-.31-.4-.493 0-.219.147-.21.429.023.236.196.547.25.691.12.144-.13.159-.058.032.162s-.258.389-.291.375l-.461-.187zm1.84-.409c0-.772.177-.85.431-.189.1.258.043.555-.125.659-.169.104-.306-.107-.306-.47zm3.2-.678c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm-9.22-.82c-.244-.265-.33-.735-.206-1.128.134-.422.092-.598-.112-.471-.183.113-.29-.046-.244-.36.045-.309.18-.536.3-.506.87.224.924.312.582.95-.248.465-.25.756-.01.997.188.188.29.484.225.658-.064.176-.301.115-.535-.14zm3.262-.257c-.289-.623-.273-.739.08-.603.24.092.438.44.438.774 0 .79-.086.761-.518-.17zm2.514.404c-.218-.217-.397-.259-.398-.092 0 .168-.29-.168-.642-.746-.789-1.295-1.556-1.635-2.078-.922-.556.761-.63.682-.712-.764-.045-.78.05-1.217.24-1.1.172.107.314.402.314.655 0 .254.245.461.544.461.3 0 1.029.468 1.62 1.04.807.782 1.02.881.856.4-.19-.554-.146-.542.324.089.614.823.56 1.607-.068.98zm1.844.087c0-.158.236-.377.525-.488.439-.168.459-.121.12.286-.46.555-.645.613-.645.202zm6.293-1.528a.882.882 0 0 1-.213-.544c0-.2.149-.182.378.048.208.208.304.453.214.544-.091.09-.262.07-.38-.048zm45.467-.319c.22-.088.58-.088.8 0 .22.09.04.162-.4.162s-.62-.073-.4-.162zm-51.744-.417c-.259-.16-.104-.25.43-.25.93 0 1.041.091.404.335-.235.091-.61.052-.834-.085zm1.584-.01c0-.177.152-.32.338-.32.187 0 .25.143.142.32-.11.175-.262.32-.34.32-.077 0-.14-.145-.14-.32zm1.173-.4c-.164-.652-.142-.668.234-.166.229.306.533.45.675.32.143-.129.157-.055.03.165-.351.61-.738.48-.94-.32zm10.187.08c-.11-.177-.046-.32.14-.32.187 0 .34.143.34.32 0 .175-.064.32-.142.32-.077 0-.23-.145-.338-.32zm-19.68-.603c0-.352.144-.729.32-.838.176-.108.32.09.32.443 0 .352-.144.729-.32.837-.176.11-.32-.09-.32-.442zm3.21.362c-.006-.22-.01-.508-.01-.64s.422-.245.937-.25c.514-.007.865.101.78.24-.086.137-.003.25.183.25a.35.35 0 0 1 .34.357c0 .22-.303.159-.786-.158-.728-.477-.81-.473-1.11.044-.182.31-.33.38-.335.157zm7.99.11c0-.061.216-.29.48-.51.276-.23.48-.26.48-.073 0 .179-.216.408-.48.51-.264.1-.48.133-.48.072zm44.8-.81c0-.166.12-.376.266-.467.147-.09.267.045.267.301 0 .257-.12.466-.267.466-.146 0-.266-.135-.266-.3zm-54.106-.9c-.015-.334-.09-.399-.186-.16-.198.49-.748.531-.748.057 0-.399.665-1.07 1.149-1.157.195-.036.276.331.196.88-.153 1.043-.372 1.246-.41.38zm.87-.24c-.128-.332.021-.48.485-.48.558 0 .603.08.27.48-.219.264-.437.48-.484.48-.048 0-.17-.216-.271-.48zm1.396-.14c0-.166.142-.39.316-.497.181-.113.235.016.126.3-.213.555-.442.656-.442.196zm52.8-1.613c0-.15.113-.321.251-.38s.581-.576.985-1.15c.775-1.105 1.324-1.113 1.324-.02 0 .503-.153.618-.648.489-.387-.101-.63-.02-.602.202.097.794-.054 1.038-.67 1.084-.352.027-.64-.074-.64-.225zm2.24-1.607a.32.32 0 0 0-.32-.32.32.32 0 0 0-.32.32c0 .176.144.32.32.32a.32.32 0 0 0 .32-.32zm-4.608.374c-.09-.147.045-.267.302-.267.256 0 .466.12.466.267 0 .146-.136.266-.302.266a.615.615 0 0 1-.466-.266zM180.74 65.85c-.214-.346.581-.305 1.16.061.37.235.312.289-.265.245-.407-.03-.81-.168-.895-.306zm2.124.07c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm19.2 0c.264-.17.624-.31.8-.31.176 0 .104.14-.16.31-.264.17-.624.31-.8.31-.176 0-.104-.14.16-.31zm-33.916-.86c-.003-.562.123-1.1.28-1.197.478-.296.934.573.658 1.257-.141.352-.27.496-.285.32-.015-.176-.167-.104-.337.16-.237.366-.312.236-.316-.54zm52.476.56c0-.166.144-.39.32-.5.176-.108.32.027.32.301 0 .275-.144.5-.32.5-.176 0-.32-.136-.32-.302zm2.966-.318c.026-.345.248-.546.539-.488.272.053.675.108.895.122.22.013.4.192.4.398 0 .205-.087.286-.193.18-.106-.106-.529-.065-.94.09-.618.236-.738.184-.701-.302zm-46.166-.342c-.19-.353-.211-.64-.05-.64.163 0 .37.288.462.64.092.352.114.64.049.64s-.273-.288-.461-.64zm6.4.301c0-.186.144-.25.32-.14.176.108.32.26.32.338 0 .078-.144.141-.32.141-.176 0-.32-.152-.32-.339zm38.08-.034c0-.147.154-.267.342-.267.189 0 .117-.226-.16-.503-.276-.276-.502-.636-.502-.8 0-.383 1.825-.389 2.061-.007.099.16-.093.22-.425.133-.332-.087-.701-.002-.82.19-.118.19-.07.347.105.347s.299.264.275.587c-.043.563-.876.868-.876.32zm-4.16-.267c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm-.931-.445c-.363-.437-.35-.515.091-.515.286 0 .52-.13.52-.29 0-.16.288-.214.64-.122.815.213.834.732.026.732-.337 0-.666.16-.731.355-.074.223-.279.163-.546-.16zM179.17 64.3c-.116-.188-.142-.41-.058-.494.084-.084.238.07.342.342.216.563.032.663-.284.152zm36.21-.037c.092-.15.302-.19.466-.088.418.259.371.36-.168.36-.257 0-.39-.123-.298-.272zm-40.516-.403c0-.274.144-.499.32-.499.176 0 .32.136.32.301 0 .166-.144.39-.32.5-.176.108-.32-.027-.32-.302zm37.498.185c-.231-.147-.626-.664-.878-1.15-.42-.81-.412-.862.101-.645.307.13.82.226 1.14.212.621-.026.577.712-.048.78-.817.087-.823.16-.053.6.44.25.656.46.48.463-.176.004-.51-.114-.741-.26zm2.182-.185c0-.274.144-.499.32-.499.176 0 .32.136.32.301 0 .166-.144.39-.32.5-.176.108-.32-.027-.32-.302zm-.96-.179c0-.176.152-.32.338-.32.187 0 .25.144.142.32-.11.176-.262.32-.34.32-.077 0-.14-.144-.14-.32zm12.266-.146c0-.256.123-.39.272-.298.15.093.19.303.088.466-.259.42-.36.372-.36-.168zm-55.146-.28c0-.294-.13-.534-.286-.534-.157 0-.372-.223-.477-.496-.109-.285-.055-.414.126-.301.174.107.33.007.345-.224.016-.23.168.065.339.656.17.592.229 1.156.13 1.254-.097.098-.177-.062-.177-.355zm7.639-.755c-.242-.298-.272-.441-.067-.318a.36.36 0 0 0 .535-.179c.089-.22.173-.078.187.318.03.863-.077.892-.655.179zm36.52.202c0-.186.145-.25.32-.14.177.108.32-.033.32-.314 0-.422.08-.44.447-.1.245.228.38.521.301.653-.223.368-1.387.285-1.387-.099zm7.556.077c-.085-.137.118-.42.45-.627.333-.208.674-.265.759-.128.085.137-.118.42-.45.627-.333.207-.674.265-.759.128zm-46.275-.378c-.264-.17-.356-.312-.204-.315.153-.003.046-.357-.236-.788-.325-.495-.394-.857-.189-.984.178-.11.291-.082.25.064-.04.145.176.731.48 1.303.607 1.139.602 1.175-.101.72zm-4.448-.734c-.405-.674-.398-.681.153-.153.317.304.508.621.423.705-.084.084-.343-.164-.576-.552zm33.568.414a.32.32 0 0 1 .32-.32.32.32 0 0 1 .32.32.32.32 0 0 1-.32.32.32.32 0 0 1-.32-.32zm-35.836-1.2c-.003-.396.14-.72.316-.72.4 0 .4.34 0 .96-.251.388-.312.343-.316-.24zm45.78.054c.016-.373.092-.449.194-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm1.775.014c-.309-.805-.218-1.012.16-.364.186.321.272.652.19.734-.083.082-.24-.084-.35-.37zm-6.76-.148c.11-.176.342-.32.518-.32s.231.144.123.32c-.11.176-.342.32-.518.32s-.231-.144-.122-.32zm3.2 0c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-6.08-.64c-.108-.176-.045-.32.142-.32.186 0 .339.144.339.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm-31.2-.339c0-.186.145-.25.32-.14.177.108.32.26.32.338 0 .078-.143.141-.32.141-.175 0-.32-.152-.32-.339zm34.56.04c0-.166.279-.28.618-.254.34.025.548.16.461.3-.219.355-1.078.317-1.078-.047zm-40.64-.36c0-.186.145-.25.32-.14.177.108.32.26.32.338 0 .078-.143.141-.32.141-.175 0-.32-.152-.32-.339zm7.894.126c-.117-.117-.213-.501-.213-.853 0-.559.472-.507.484.053.003.117.12.393.26.613.263.415-.156.562-.531.187zm-6.133-.427c.108-.176.26-.32.338-.32.078 0 .142.144.142.32 0 .176-.153.32-.34.32-.186 0-.25-.144-.14-.32zm-2.867-.618c-.101-.163-.038-.388.141-.498.18-.111.326.023.326.297 0 .563-.193.645-.467.201zm.838-.515c-.463-1.019-.47-1.427-.025-1.427.19 0 .282.18.203.4-.078.22-.007.665.16.988.166.323.242.647.168.721-.073.074-.3-.233-.506-.682zm3.158.186c-.26-.164-.388-.381-.286-.483.102-.102.367.034.59.303.462.556.373.608-.304.18zm2.71-.013c-.108-.176-.053-.32.123-.32s.409.144.518.32c.108.176.053.32-.123.32s-.409-.144-.517-.32zm25.76-.32c-.188-.352-.27-.64-.182-.64.088 0 .314.288.503.64.188.352.27.64.182.64-.088 0-.314-.288-.502-.64zm-18.977-.658c-.141-.54-.09-.59.283-.28.509.422.603.938.172.938-.156 0-.36-.296-.455-.658zm1.218.338c-.11-.176-.046-.32.14-.32.187 0 .34.144.34.32 0 .176-.064.32-.142.32-.077 0-.23-.144-.338-.32zm6.38-.15c-.341-.258-.458-.474-.26-.48.199-.006.54.206.76.47.505.61.299.614-.5.01zm-13.23-.33c-.012-.176.101-.512.25-.747.216-.341.31-.322.471.097.11.288.071.443-.088.345-.159-.098-.362.002-.45.223-.09.221-.172.258-.183.082zm14.395-.346c.015-.373.091-.449.193-.194.093.231.081.507-.025.614-.106.106-.182-.083-.168-.42zm4.952-.102c-.61-.239-.609-.248.026-.414.418-.11.65-.014.65.266 0 .24-.012.426-.027.414a12.091 12.091 0 0 0-.65-.266zm4.77-.053c-.117-.188-.143-.41-.06-.494.085-.084.239.07.343.341.216.564.032.664-.284.153zm-3.027-.405c0-.294-.144-.534-.32-.534-.176 0-.32-.113-.32-.251s.273-.252.608-.252c.428 0 .573.183.49.615-.157.816-.458 1.093-.458.422zm-3.722-1.128c.674-.745 2.379-.582 1.757.168-.304.367-.43.375-.634.044-.203-.328-.336-.331-.652-.015-.636.636-1.063.458-.471-.197zm-13.994-.846c.101-.264.308-.48.46-.48.151 0 .193.216.091.48-.101.264-.308.48-.46.48-.151 0-.193-.216-.091-.48zm3.786-1.776c-.118-.19-.128-.433-.023-.538.106-.106.195.012.197.26.004.374.06.37.316-.026.186-.288.312-.328.315-.099.007.54-.55.817-.805.403zm53.98-9.943c-.537-.858-.194-1.201.503-.504.353.353.43.647.225.853-.206.206-.458.085-.729-.349zm-1.01-1.367c0-.238 1.283-.448 1.416-.232.076.123-.212.251-.64.287-.427.035-.776.01-.776-.055zm-80.086-14.953c.217-.22.475-.317.574-.219.098.099-.08.278-.395.398-.456.173-.493.137-.179-.18zm56.295-.455c.098-.254.306-.382.464-.285.397.245.36.362-.177.569-.31.118-.405.024-.287-.284zm-25.11-1.126a1 1 0 0 1 .56-.56c.24-.08.36.04.28.28a1 1 0 0 1-.56.56c-.24.08-.36-.04-.28-.28zm25.682.05c.099-.16-.109-.215-.461-.123-.372.098-.64.01-.64-.208 0-.207-.151-.283-.336-.17-.184.115-.58.101-.88-.03-.567-.247-.888-.328-1.62-.41-.284-.032-.18-.256.299-.643.404-.327 1.008-.523 1.342-.436.47.123.512.22.182.43-.346.219-.348.271-.008.275.25.003.321.167.178.405-.185.308-.123.306.265-.01.398-.322.684-.328 1.342-.028.819.373 1.166 1.238.497 1.238-.187 0-.258-.13-.16-.29zm-26.33-3.192c-.314-.198-.201-.316.412-.433.512-.098.798-.028.73.177-.158.47-.635.578-1.143.256z\"}));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgTomStampBwVector);export default __webpack_public_path__+\"static/media/tom_stamp_BW_vector.fde1870b277447a169deea45b4f16942.svg\";export{ForwardRef as ReactComponent};","import about from '../../img/home_item_images/about.jpg';\r\nimport skills from '../../img/home_item_images/skills.jpg';\r\nimport projects from '../../img/home_item_images/projects.jpg';\r\nimport photos from '../../img/home_item_images/photos.jpg';\r\nimport art from '../../img/home_item_images/art.jpg';\r\n\r\nexport const homedata = [\r\n  {\r\n    id: 1,\r\n    class: 'light',\r\n    name: 'About Me',\r\n    text: 'Coming from the high mountains of Austria, I washed ashore on an island in the Dutch North Sea. Not only did I switch my Apfelstrudel for Appeltaart - I also switched my profession from being a metrologist in the automotive industry to following my passion for creating awesome things on the Web.',\r\n    image: about,\r\n    linkto: '/aboutme',\r\n  },\r\n  {\r\n    id: 2,\r\n    class: 'dark',\r\n    name: 'My Skills',\r\n    text: 'One thing hasn’t changed since I was a kid with a GameBoy and Pokémon Red. I always wanted to be the very best, and I trained hard for those gym badges.<br/>I’m proud to show you my badge collection regarding the Web Development League.',\r\n\r\n    image: skills,\r\n    linkto: '/skills',\r\n  },\r\n  {\r\n    id: 3,\r\n    class: 'light',\r\n    name: 'Projects',\r\n    text: 'Here are some of my latest coding projects. From Websites to Full-Stack Web Apps. With screenshots and detailed information.<br/>Please have a look. And if you wish, you can take a deep dive and check their code on my Github page.',\r\n    image: projects,\r\n    linkto: '/projects',\r\n  },\r\n  {\r\n    id: 4,\r\n    class: 'dark',\r\n    name: 'Photos',\r\n    text: 'Whenever I’m out and about, I love to capture the moment with my camera. Creating beautiful memories is one of my greatest desires.<br/>My shelves are filled with photobooks, just as my hard drive is filled with images. Come along; I’ll show you some of my best. ',\r\n    image: photos,\r\n    linkto: '/photos',\r\n  },\r\n  {\r\n    id: 5,\r\n    class: 'light',\r\n    name: 'Art',\r\n    text: 'I would not describe myself as an artist, but as a creative person.<br/>I like to draw, scribble, and paint whenever I can.<br/>Click here to see some of my latest work.',\r\n    image: art,\r\n    linkto: '/art',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport tomBW from '../img/tom_stamp_BW_vector.svg';\r\nimport tomColour from '../img/tom_colour.png';\r\nimport { homedata } from '../app/data/homedata';\r\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n  const [currentImage, setCurrentImage] = useState(tomBW);\r\n\r\n  const sentences = [\r\n    'bring things to life with Java Script.',\r\n    'code.',\r\n    'build amazing things in React.',\r\n    'be creative.',\r\n    'build awesome layouts with SASS.',\r\n    'learn new things.',\r\n    'explore.',\r\n    'design Mockups in Figma.',\r\n    'drink coffee.',\r\n    'manage Data with Mongoose.',\r\n  ];\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [subIndex, setSubIndex] = useState(0);\r\n  const [reverse, setReverse] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (subIndex === sentences[index].length + 1 && !reverse) {\r\n      const timeout = setTimeout(() => {\r\n        setReverse(true);\r\n      }, 1000);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n\r\n    if (subIndex === 0 && reverse) {\r\n      setReverse(false);\r\n      setIndex((prev) => (prev < sentences.length - 1 ? prev + 1 : 0));\r\n      return;\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      setSubIndex((prev) => prev + (reverse ? -1 : 1));\r\n    }, 150);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [subIndex, index, reverse]);\r\n\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"hero__bg-image\">\r\n        <h1 className=\"hero__title\">\r\n          👋 Hi, I'm Tom! <br />\r\n          I’m a WEB-Developer\r\n        </h1>\r\n        <div className=\"hero__left\">\r\n          <div className=\"hero__text\">\r\n            <p className=\"hero__content\">\r\n              I love to{' '}\r\n              {`${sentences[index].substring(0, subIndex)}${\r\n                subIndex === sentences[index].length ? ' |' : ''\r\n              }`}\r\n            </p>\r\n            <div className=\"hero__buttons\">\r\n              <Link to=\"/contact\" className=\"hero__button button primary\">\r\n                Let's Talk!\r\n              </Link>\r\n              <Link to=\"/skills\" className=\"hero__button button secondary\">\r\n                My Skillset\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"hero__right\">\r\n          <img\r\n            className={'hero__image'}\r\n            src={currentImage}\r\n            alt=\"Tom Kra\"\r\n            width={230}\r\n            height={314}\r\n            onMouseOver={() => {\r\n              setCurrentImage(tomColour);\r\n            }}\r\n            onMouseOut={() => {\r\n              setCurrentImage(tomBW);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {homedata.map((item) => (\r\n        <div className=\"homeitem__contentContainer\">\r\n          <div className={`homeitem__${item.class}`} key={item.id}>\r\n            <div className=\"text\">\r\n              <p dangerouslySetInnerHTML={{ __html: item.text }} />\r\n            </div>\r\n            <div\r\n              className=\"image\"\r\n              style={{\r\n                backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${item.image})`,\r\n              }}\r\n            >\r\n              <Link className=\"homeitemButton\" to={item.linkto}>\r\n                <h1>{item.name}</h1>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport aboutBig from '../img/home_item_images/about_big.jpg';\r\nimport aboutTom from '../img/about_tom.JPG';\r\n\r\nexport default function About() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${aboutBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">About me</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <div className=\"about__profilecontainer\">\r\n            <div className=\"about__profilecontainer__image\">\r\n              <img src={aboutTom}></img>\r\n            </div>\r\n            <div className=\"about__profilecontainer__text\">\r\n              <table>\r\n                <tr>\r\n                  <td>Name</td>\r\n                  <td>Thomas Kranawetter</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Age</td>\r\n                  <td>32</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Pronouns</td>\r\n                  <td>he/him</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Nationality</td>\r\n                  <td>Austrian</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Languages</td>\r\n                  <td>German (native), English (C1), Dutch (B1)*</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className=\"singlepage__dividerSubHeadline\">Bio</h3>\r\n          <p className=\"about__text\">\r\n            Hi, I'm Tom, 32, originally from Styria, Austria.\r\n            <br />\r\n            Computers and the internet have fascinated me since the first PC\r\n            with an incredible 4GB hard drive and a large CRT monitor stood in\r\n            our living room. I still remember the time when modems screamed in\r\n            pain as they dialled into the internet, charging per minute, and my\r\n            grandma would get upset if the phone line was busy on Sunday\r\n            evenings because her nephew was surfing the web.\r\n          </p>\r\n\r\n          <p className=\"about__text\">\r\n            Even back then, I built websites for friends and the big band I\r\n            played in, which received a new redesign every month. I taught\r\n            myself HTML and CSS by studying the source code of other websites.\r\n          </p>\r\n\r\n          <p className=\"about__text\">\r\n            When I was 16 and decided to pursue an apprenticeship, my parents\r\n            insisted I should learn something \"proper.\" Due to a lack of IT\r\n            apprenticeships at that time, I began training as a CNC specialist\r\n            at Pankl Racing Systems.\r\n          </p>\r\n\r\n          <p className=\"about__text\">\r\n            It was a good compromise to merge programming with metal\r\n            craftsmanship. Since precise work was always important to me and\r\n            also enjoyable, I quickly transitioned towards quality assurance\r\n            after my apprenticeship, changing departments within the company. I\r\n            became a certified metrologist through AUKOM and spent many years\r\n            writing measurement programs for ZEISS coordinate measuring\r\n            machines.\r\n          </p>\r\n\r\n          <p className=\"about__text\">\r\n            In recent years, I was solely responsible for planning, creating,\r\n            and maintaining these measurement programs. It was both a\r\n            significant challenge and a tremendous opportunity for personal\r\n            growth. Whether it was independent, solution-oriented work, project\r\n            management, confident communication, or conflict resolution.\r\n          </p>\r\n\r\n          <p className=\"about__text\">\r\n            In 2024, my wife had the opportunity for a PhD candidacy position in\r\n            the Netherlands. I stood at a crossroads. After 16 years in the\r\n            automotive industry, it was time for a change and to try something\r\n            new. Since I’ve learned a “proper job” now, I seized the opportunity\r\n            to completely switch fields, through educational leave within a\r\n            year, pursuing my passion, which I had since my teenage years. Thus,\r\n            I started my journey to become a Junior Full Stack Developer through\r\n            various online courses.\r\n          </p>\r\n\r\n          <p className=\"about__text\">\r\n            Combined with my years of professional experience, the skills I\r\n            acquired there, and the many new things I've learned, I believe it's\r\n            the perfect blend to stay ahead for the future. And I think I've\r\n            come a significant step closer to finding a new job that fulfils me,\r\n            challenges me, and is enjoyable.\r\n          </p>\r\n\r\n          <h3 className=\"singlepage__dividerSubHeadline\">\r\n            Hobbies and things I like\r\n          </h3>\r\n          <div className=\"about__hobbiesContainer\">\r\n            <div className=\"about__hobbiesContainer__hobby\">\r\n              <div className=\"about__hobbiesContainer__hobby__image\">\r\n                {' '}\r\n                <img src={aboutBig}></img>\r\n              </div>\r\n              <div className=\"about__hobbiesContainer__hobby__text\">\r\n                hobbyname\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"about__hobbiesContainer__hobby\">\r\n              <div className=\"about__hobbiesContainer__hobby__image\">\r\n                {' '}\r\n                <img src={aboutBig}></img>\r\n              </div>\r\n              <div className=\"about__hobbiesContainer__hobby__text\">\r\n                hobbyname\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"about__hobbiesContainer__hobby\">\r\n              <div className=\"about__hobbiesContainer__hobby__image\">\r\n                {' '}\r\n                <img src={aboutBig}></img>\r\n              </div>\r\n              <div className=\"about__hobbiesContainer__hobby__text\">\r\n                hobbyname\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"singlepage__dividerSubHeadline\">Hot Rotation</h3>\r\n          <iframe\r\n            style={{ borderRadius: '12px' }}\r\n            src=\"https://open.spotify.com/embed/playlist/2UZ6ro8L2RJzJAclydbsXC?utm_source=generator&theme=0\"\r\n            width=\"100%\"\r\n            height=\"152\"\r\n            frameBorder=\"0\"\r\n            allowFullScreen=\"\"\r\n            allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\r\n            loading=\"lazy\"\r\n          ></iframe>\r\n          <p className=\"about__footnote\">*almost 😛</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import adaptive from '../../img/skills_icons/adaptive.png';\r\nimport api from '../../img/skills_icons/api.png';\r\nimport asyncprogramming from '../../img/skills_icons/asyncprogramming.png';\r\nimport confidentcommunication from '../../img/skills_icons/confidentcommunication.png';\r\nimport deployment from '../../img/skills_icons/deployment.png';\r\nimport flexible from '../../img/skills_icons/flexible.png';\r\nimport focus from '../../img/skills_icons/focus.png';\r\nimport fullstackapp from '../../img/skills_icons/fullstackapp.png';\r\nimport growthmindset from '../../img/skills_icons/growthmindset.png';\r\nimport ideas from '../../img/skills_icons/ideas.png';\r\nimport mockup from '../../img/skills_icons/mockup.png';\r\nimport problemdecomposition from '../../img/skills_icons/problemdecomposition.png';\r\nimport scrum from '../../img/skills_icons/scrum.png';\r\nimport selfmotivation from '../../img/skills_icons/selfmotivation.png';\r\nimport solutionfocused from '../../img/skills_icons/solutionfocused.png';\r\nimport sparkingflame from '../../img/skills_icons/sparkingflame.png';\r\nimport thinkinginreact from '../../img/skills_icons/thinkinginreact.png';\r\nimport timemanagement from '../../img/skills_icons/timemanagement.png';\r\nimport versioncontrol from '../../img/skills_icons/versioncontrol.png';\r\nimport algorithm from '../../img/skills_icons/algorithm.png';\r\n\r\nexport const skillicons = {\r\n  api: api,\r\n  adaptive: adaptive,\r\n  algorithm: algorithm,\r\n  asyncprogramming: asyncprogramming,\r\n  confidentcommunication: confidentcommunication,\r\n  deployment: deployment,\r\n  flexible: flexible,\r\n  focus: focus,\r\n  fullstackapp: fullstackapp,\r\n  growthmindset: growthmindset,\r\n  ideas: ideas,\r\n  mockup: mockup,\r\n  problemdecomposition: problemdecomposition,\r\n  scrum: scrum,\r\n  selfmotivation: selfmotivation,\r\n  solutionfocused: solutionfocused,\r\n  sparkingflame: sparkingflame,\r\n  thinkinginreact: thinkinginreact,\r\n  timemanagement: timemanagement,\r\n  versioncontrol: versioncontrol,\r\n};\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport skillsBig from '../img/home_item_images/skills_big.jpg';\r\nimport mongoDB from '../img/mongodb.png';\r\nimport express from '../img/express.png';\r\nimport react from '../img/react.png';\r\nimport node from '../img/node.png';\r\nimport sass from '../img/sass.png';\r\nimport js from '../img/js.png';\r\nimport html5 from '../img/html5.png';\r\nimport css3 from '../img/css3.png';\r\nimport { skillicons } from '../app/data/skillicons';\r\n\r\nexport default function Skills() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${skillsBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">Skills</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <p className=\"singlepage__skillcontainer__introtext\">\r\n            As a Full Stack Web Developer, I bring a broad range of abilities to\r\n            the table, which helps me to create reliable, accessible and stylish\r\n            web applications.\r\n            <br />\r\n            <br />\r\n            Here's a glimpse into my toolbox regarding hard- and soft skills:\r\n          </p>\r\n\r\n          <h1 class=\"singlepage__dividerHeadline\">Hard Skills</h1>\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={mongoDB}\r\n                alt=\"MongoDB\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>MongoDB</h2>\r\n              <p>\r\n                I'm skilled at working with MongoDB in comination with Mongoose,\r\n                where I can create, read, filter, update, and delete data\r\n                easily.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={express}\r\n                alt=\"Express\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>Express</h2>\r\n              <p>\r\n                Using Express.js, I can develop robust web applications. It's my\r\n                reliable companion for crafting a REST backend and combining it\r\n                with MongoDB.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={react}\r\n                alt=\"React\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>React</h2>\r\n              <p>\r\n                React is my go-to framework for building dynamic and\r\n                user-friendly web apps. I'm very confident within is ecosystem\r\n                using hooks, variables, the component-based architecture, and\r\n                also styling them within styled-components.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={node}\r\n                alt=\"Node.js\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>Node.js</h2>\r\n              <p>\r\n                Node.js is my preferred runtime environment for building server\r\n                & backend applications. I'm familiar with the npm-package system\r\n                and setting up a development environment.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={sass}\r\n                alt=\"Sass\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>Sass</h2>\r\n              <p>\r\n                Sass helps me write clean and easy-to-maintain CSS code. I love\r\n                to modularize my stylesheets and use variables, mixins, and\r\n                functions to make them more efficient.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={js}\r\n                alt=\"JavaScript\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>JavaScript</h2>\r\n              <p>\r\n                When it comes to interactivity and dynamic content, and React is\r\n                not an option, JavaScript is always a reliable choice. I'm\r\n                familiar with ES6 and the most important concepts and methods.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={html5}\r\n                alt=\"HTML5\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>HTML5</h2>\r\n              <p>\r\n                HTML5 is the cornerstone of my web page creation, ensuring they\r\n                well-organized structured and accessible for users and\r\n                screenreaders .\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"singlepage__skillcontainer\">\r\n            <div className=\"singlepage__skillcontainer__image\">\r\n              <img\r\n                className=\"singlepage__skillcontainer__skillbadge\"\r\n                src={css3}\r\n                alt=\"CSS3\"\r\n              />\r\n            </div>\r\n            <div className=\"singlepage__skillcontainer__text\">\r\n              <h2>CSS3</h2>\r\n              <p>\r\n                It's great fun for me to turn blank, unstylized- into\r\n                nice-looking websites. Making them look great and responsive on\r\n                all devices. And there is no better feeling than when it matches\r\n                100% with the design file.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"singlepage__dividerSubHeadline\">Furthermore</h3>\r\n          <div className=\"singlepage__furtherSkillsContainer\">\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.versioncontrol}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Version Control with Git and GitHub</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.fullstackapp}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Developing a Full Stack Web App</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.deployment}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Deployment with Heroku and Netlify</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.api}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Creating an API Deployment on RapidAPI</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.problemdecomposition}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Problem Decomposition</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.thinkinginreact}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Thinking in React</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.asyncprogramming}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Functional & Asynchronous Programming</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.algorithm}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Designing Algorithms</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.ideas}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Making Ideas Visible on a MIRO Board</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.mockup}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Designing Mockups with FIGMA</p>\r\n            </div>\r\n          </div>\r\n\r\n          <h1 class=\"singlepage__dividerHeadline\">Soft Skills</h1>\r\n          <div className=\"singlepage__furtherSkillsContainer\">\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.scrum}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Project Management with SCRUM</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.confidentcommunication}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Confident Communication</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.growthmindset}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Growth Mindset</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.focus}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Concentration & Focus</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.timemanagement}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Time Management</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.selfmotivation}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Self-Motivation</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.solutionfocused}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Solution Oriented</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.sparkingflame}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Sparking the Flame in Others</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.flexible}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Flexibility</p>\r\n            </div>\r\n            <div className=\"singlepage__furtherSkillsContainer__skill\">\r\n              <img\r\n                className=\"singlepage__furtherSkillsContainer__skillbadge\"\r\n                src={skillicons.adaptive}\r\n                alt=\"CSS3\"\r\n              />\r\n              <p>Adaptiveness</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"singlepage__furtherSkillsContainer__iconCredit\">\r\n            <a\r\n              href=\"https://www.flaticon.com/authors/freepik\"\r\n              title=\"Icons created by Freepik - Flaticon\"\r\n            >\r\n              Icons created by Freepik - Flaticon\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import img3lb1 from '../../img/projects_images/3lb/3lb1.jpg';\r\nimport img3lb2 from '../../img/projects_images/3lb/3lb2.jpg';\r\nimport img3lb3 from '../../img/projects_images/3lb/3lb3.jpg';\r\nimport img3lb4 from '../../img/projects_images/3lb/3lb4.jpg';\r\nimport imggimme5_1 from '../../img/projects_images/gimme5/gimme51.jpg';\r\nimport imggimme5_2 from '../../img/projects_images/gimme5/gimme52.jpg';\r\nimport imggimme5_3 from '../../img/projects_images/gimme5/gimme53.jpg';\r\nimport imggimme5_4 from '../../img/projects_images/gimme5/gimme54.jpg';\r\nimport imggimme5_5 from '../../img/projects_images/gimme5/gimme55.jpg';\r\nimport imggimme5_6 from '../../img/projects_images/gimme5/gimme56.jpg';\r\n\r\nexport const projectdata = [\r\n  {\r\n    id: 1,\r\n\r\n    name: '3LB - Messaging App',\r\n    tags: [\r\n      'All',\r\n      'Web-App',\r\n      'React',\r\n      'JavaScript',\r\n      'Mongo-DB',\r\n      'Express',\r\n      'Node',\r\n      'CSS',\r\n    ],\r\n    text: '\"3 Little Birbs\" was my final project for my Full Stack class at codingschule.de. It is built as a Full Stack Single Page Web Application. The idea was to build a wholesome Social Media App, where you can write down 3 good things that happened to you today, and send them to your friends or out into the wild, to a stranger...',\r\n    images: [\r\n      {\r\n        original: img3lb1,\r\n      },\r\n      {\r\n        original: img3lb2,\r\n      },\r\n      {\r\n        original: img3lb3,\r\n      },\r\n      {\r\n        original: img3lb4,\r\n      },\r\n    ],\r\n    linkto: '/3littlebirbs',\r\n    github: 'https://github.com/tom-mate-o/3-little-Birbs',\r\n    demo: 'https://3littlebirbs.netlify.app/',\r\n  },\r\n  {\r\n    id: 2,\r\n\r\n    name: 'Gimme 5 - Social App',\r\n    tags: [\r\n      'All',\r\n      'Web-App',\r\n      'React',\r\n      'JavaScript',\r\n      'Mongo-DB',\r\n      'Express',\r\n      'Node',\r\n      'CSS',\r\n    ],\r\n    text: '\"3 Little Birbs\" was my final project for my Full Stack class at codingschule.de. It is built as a Full Stack Single Page Web Application. The idea was to build a wholesome Social Media App, where you can write down 3 good things that happened to you today, and send them to your friends or out into the wild, to a stranger...',\r\n    images: [\r\n      {\r\n        original: imggimme5_1,\r\n      },\r\n      {\r\n        original: imggimme5_2,\r\n      },\r\n      {\r\n        original: imggimme5_3,\r\n      },\r\n      {\r\n        original: imggimme5_4,\r\n      },\r\n      {\r\n        original: imggimme5_5,\r\n      },\r\n      {\r\n        original: imggimme5_6,\r\n      },\r\n    ],\r\n    linkto: '/gimme5app',\r\n    github: 'https://github.com/tom-mate-o/Social-App-Gimme5',\r\n    demo: '',\r\n  },\r\n];\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgGithub(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3 .3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5 .3-6.2 2.3zm44.2-1.7c-2.9 .7-4.9 2.6-4.6 4.9 .3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3 .7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3 .3 2.9 2.3 3.9 1.6 1 3.6 .7 4.3-.7 .7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3 .7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3 .7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.0b127b18f59f45f2f6c325078f3939e3.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEyeRegular(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 576 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M288 80c-65.2 0-118.8 29.6-159.9 67.7C89.6 183.5 63 226 49.4 256c13.6 30 40.2 72.5 78.6 108.3C169.2 402.4 222.8 432 288 432s118.8-29.6 159.9-67.7C486.4 328.5 513 286 526.6 256c-13.6-30-40.2-72.5-78.6-108.3C406.8 109.6 353.2 80 288 80zM95.4 112.6C142.5 68.8 207.2 32 288 32s145.5 36.8 192.6 80.6c46.8 43.5 78.1 95.4 93 131.1c3.3 7.9 3.3 16.7 0 24.6c-14.9 35.7-46.2 87.7-93 131.1C433.5 443.2 368.8 480 288 480s-145.5-36.8-192.6-80.6C48.6 356 17.3 304 2.5 268.3c-3.3-7.9-3.3-16.7 0-24.6C17.3 208 48.6 156 95.4 112.6zM288 336c44.2 0 80-35.8 80-80s-35.8-80-80-80c-.7 0-1.3 0-2 0c1.3 5.1 2 10.5 2 16c0 35.3-28.7 64-64 64c-5.5 0-10.9-.7-16-2c0 .7 0 1.3 0 2c0 44.2 35.8 80 80 80zm0-208a128 128 0 1 1 0 256 128 128 0 1 1 0-256z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeRegular);\nexport default __webpack_public_path__ + \"static/media/eye-regular.6ff9168911e9f895c9fb0a9988cb6c26.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport projectsBig from '../img/home_item_images/projects_big.jpg';\r\nimport { projectdata } from '../app/data/projectdata';\r\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { ReactComponent as GitHubLink } from '../img/github.svg';\r\nimport { ReactComponent as WebsiteLink } from '../img/eye-regular.svg';\r\n\r\nexport default function Projects() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const [selectedTags, setSelectedTags] = useState(['All']);\r\n  const [activeTag, setActiveTag] = useState('All');\r\n\r\n  const handleTagClick = (tag) => {\r\n    setSelectedTags([tag]);\r\n    setActiveTag(tag);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${projectsBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">Projects</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <div className=\"singlepage__filterbuttonsContainer\">\r\n            {[\r\n              'All',\r\n              'React',\r\n              'Mongo-DB',\r\n              'Express',\r\n              'Node',\r\n              'SASS',\r\n              'JavaScript',\r\n              'CSS',\r\n              'Website',\r\n              'Web-App',\r\n            ].map((tag) => (\r\n              <button\r\n                className={`filterbutton ${tag} ${\r\n                  activeTag === tag ? 'active' : ''\r\n                }`}\r\n                onClick={() => handleTagClick(tag)}\r\n              >\r\n                {tag}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {projectdata\r\n            .filter((item) =>\r\n              item.tags.some((tag) => selectedTags.includes(tag))\r\n            )\r\n            .map((item) => (\r\n              <div className=\"projects__contentContainer\">\r\n                <div className=\"projects__item\" key={item.id}>\r\n                  <div className=\"text\">\r\n                    <h1>{item.name}</h1>\r\n                    <p dangerouslySetInnerHTML={{ __html: item.text }} />\r\n                  </div>\r\n                  <div className=\"image\">\r\n                    <ImageGallery\r\n                      class=\"imageGallery\"\r\n                      items={item.images}\r\n                      showFullscreenButton={false}\r\n                      showBullets={true}\r\n                      showPlayButton={false}\r\n                      showThumbnails={false}\r\n                      slideDuration={500}\r\n                      slideInterval={2000}\r\n                      emulateTouch={false}\r\n                      swipable={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    {item.linkto ? (\r\n                      <Link to={item.linkto} class=\"\">\r\n                        <div className=\"morebutton\">...more!</div>\r\n                      </Link>\r\n                    ) : null}\r\n                    <div className=\"svgbuttons\">\r\n                      {item.github ? (\r\n                        <Link\r\n                          to={item.github}\r\n                          target=\"_blank\"\r\n                          class=\"icon github\"\r\n                        >\r\n                          <GitHubLink class=\"\" />\r\n                        </Link>\r\n                      ) : null}\r\n                      {item.demo ? (\r\n                        <Link\r\n                          to={item.demo}\r\n                          target=\"_blank\"\r\n                          class=\"icon website\"\r\n                        >\r\n                          <WebsiteLink class=\"\" />\r\n                        </Link>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"tags\">\r\n                    {item.tags.map((tag) => (\r\n                      <div className={`tagbox ${tag}`}>\r\n                        <p>{tag}</p>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const images = [\r\n  {\r\n    src: 'https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg',\r\n    width: 320,\r\n    height: 174,\r\n    caption: 'After Rain (Jeshu John - designerspics.com)',\r\n  },\r\n  {\r\n    src: 'https://plus.unsplash.com/premium_photo-1709315853331-3eacd3bb2559?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    width: 636,\r\n    height: 953,\r\n    tags: [\r\n      { value: 'Ocean', title: 'Ocean' },\r\n      { value: 'People', title: 'People' },\r\n    ],\r\n    alt: 'Boats (Jeshu John - designerspics.com)',\r\n  },\r\n  {\r\n    src: 'https://plus.unsplash.com/premium_photo-1709315853331-3eacd3bb2559?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    width: 636,\r\n    height: 953,\r\n    tags: [\r\n      { value: 'Ocean', title: 'Ocean' },\r\n      { value: 'People', title: 'People' },\r\n    ],\r\n    alt: 'Boats (Jeshu John - designerspics.com)',\r\n  },\r\n  {\r\n    src: 'https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg',\r\n    width: 320,\r\n    height: 174,\r\n    caption: 'After Rain (Jeshu John - designerspics.com)',\r\n  },\r\n  {\r\n    src: 'https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg',\r\n    width: 320,\r\n    height: 174,\r\n    caption: 'After Rain (Jeshu John - designerspics.com)',\r\n  },\r\n];\r\n","const MODULE_CAROUSEL = \"carousel\";\nconst MODULE_CONTROLLER = \"controller\";\nconst MODULE_NAVIGATION = \"navigation\";\nconst MODULE_NO_SCROLL = \"no-scroll\";\nconst MODULE_PORTAL = \"portal\";\nconst MODULE_ROOT = \"root\";\nconst MODULE_TOOLBAR = \"toolbar\";\nconst PLUGIN_CAPTIONS = \"captions\";\nconst PLUGIN_COUNTER = \"counter\";\nconst PLUGIN_DOWNLOAD = \"download\";\nconst PLUGIN_FULLSCREEN = \"fullscreen\";\nconst PLUGIN_INLINE = \"inline\";\nconst PLUGIN_SHARE = \"share\";\nconst PLUGIN_SLIDESHOW = \"slideshow\";\nconst PLUGIN_THUMBNAILS = \"thumbnails\";\nconst PLUGIN_ZOOM = \"zoom\";\nconst SLIDE_STATUS_LOADING = \"loading\";\nconst SLIDE_STATUS_PLAYING = \"playing\";\nconst SLIDE_STATUS_ERROR = \"error\";\nconst SLIDE_STATUS_COMPLETE = \"complete\";\nconst SLIDE_STATUS_PLACEHOLDER = \"placeholder\";\nconst activeSlideStatus = (status) => `active-slide-${status}`;\nconst ACTIVE_SLIDE_LOADING = activeSlideStatus(SLIDE_STATUS_LOADING);\nconst ACTIVE_SLIDE_PLAYING = activeSlideStatus(SLIDE_STATUS_PLAYING);\nconst ACTIVE_SLIDE_ERROR = activeSlideStatus(SLIDE_STATUS_ERROR);\nconst ACTIVE_SLIDE_COMPLETE = activeSlideStatus(SLIDE_STATUS_COMPLETE);\nconst CLASS_FULLSIZE = \"fullsize\";\nconst CLASS_FLEX_CENTER = \"flex_center\";\nconst CLASS_NO_SCROLL = \"no_scroll\";\nconst CLASS_NO_SCROLL_PADDING = \"no_scroll_padding\";\nconst CLASS_SLIDE_WRAPPER = \"slide_wrapper\";\nconst ACTION_PREV = \"prev\";\nconst ACTION_NEXT = \"next\";\nconst ACTION_SWIPE = \"swipe\";\nconst ACTION_CLOSE = \"close\";\nconst EVENT_ON_POINTER_DOWN = \"onPointerDown\";\nconst EVENT_ON_POINTER_MOVE = \"onPointerMove\";\nconst EVENT_ON_POINTER_UP = \"onPointerUp\";\nconst EVENT_ON_POINTER_LEAVE = \"onPointerLeave\";\nconst EVENT_ON_POINTER_CANCEL = \"onPointerCancel\";\nconst EVENT_ON_KEY_DOWN = \"onKeyDown\";\nconst EVENT_ON_KEY_UP = \"onKeyUp\";\nconst EVENT_ON_WHEEL = \"onWheel\";\nconst VK_ESCAPE = \"Escape\";\nconst VK_ARROW_LEFT = \"ArrowLeft\";\nconst VK_ARROW_RIGHT = \"ArrowRight\";\nconst ELEMENT_BUTTON = \"button\";\nconst ELEMENT_ICON = \"icon\";\nconst IMAGE_FIT_CONTAIN = \"contain\";\nconst IMAGE_FIT_COVER = \"cover\";\nconst UNKNOWN_ACTION_TYPE = \"Unknown action type\";\n\nexport { ACTION_CLOSE, ACTION_NEXT, ACTION_PREV, ACTION_SWIPE, ACTIVE_SLIDE_COMPLETE, ACTIVE_SLIDE_ERROR, ACTIVE_SLIDE_LOADING, ACTIVE_SLIDE_PLAYING, CLASS_FLEX_CENTER, CLASS_FULLSIZE, CLASS_NO_SCROLL, CLASS_NO_SCROLL_PADDING, CLASS_SLIDE_WRAPPER, ELEMENT_BUTTON, ELEMENT_ICON, EVENT_ON_KEY_DOWN, EVENT_ON_KEY_UP, EVENT_ON_POINTER_CANCEL, EVENT_ON_POINTER_DOWN, EVENT_ON_POINTER_LEAVE, EVENT_ON_POINTER_MOVE, EVENT_ON_POINTER_UP, EVENT_ON_WHEEL, IMAGE_FIT_CONTAIN, IMAGE_FIT_COVER, MODULE_CAROUSEL, MODULE_CONTROLLER, MODULE_NAVIGATION, MODULE_NO_SCROLL, MODULE_PORTAL, MODULE_ROOT, MODULE_TOOLBAR, PLUGIN_CAPTIONS, PLUGIN_COUNTER, PLUGIN_DOWNLOAD, PLUGIN_FULLSCREEN, PLUGIN_INLINE, PLUGIN_SHARE, PLUGIN_SLIDESHOW, PLUGIN_THUMBNAILS, PLUGIN_ZOOM, SLIDE_STATUS_COMPLETE, SLIDE_STATUS_ERROR, SLIDE_STATUS_LOADING, SLIDE_STATUS_PLACEHOLDER, SLIDE_STATUS_PLAYING, UNKNOWN_ACTION_TYPE, VK_ARROW_LEFT, VK_ARROW_RIGHT, VK_ESCAPE, activeSlideStatus };\n","'use client';\nimport * as React from 'react';\nimport { IMAGE_FIT_COVER, IMAGE_FIT_CONTAIN, ACTION_CLOSE, MODULE_CONTROLLER, UNKNOWN_ACTION_TYPE, ELEMENT_BUTTON, ELEMENT_ICON, EVENT_ON_POINTER_DOWN, EVENT_ON_POINTER_MOVE, EVENT_ON_POINTER_UP, EVENT_ON_POINTER_LEAVE, EVENT_ON_POINTER_CANCEL, EVENT_ON_KEY_DOWN, EVENT_ON_KEY_UP, EVENT_ON_WHEEL, SLIDE_STATUS_LOADING, activeSlideStatus, SLIDE_STATUS_COMPLETE, SLIDE_STATUS_ERROR, SLIDE_STATUS_PLACEHOLDER, ACTION_PREV, ACTION_NEXT, ACTION_SWIPE, MODULE_PORTAL, CLASS_FLEX_CENTER, MODULE_CAROUSEL, CLASS_SLIDE_WRAPPER, VK_ARROW_RIGHT, VK_ARROW_LEFT, VK_ESCAPE, MODULE_NAVIGATION, CLASS_NO_SCROLL, CLASS_NO_SCROLL_PADDING, MODULE_NO_SCROLL, MODULE_ROOT, MODULE_TOOLBAR } from './types.js';\nimport { createPortal } from 'react-dom';\nexport { ACTIVE_SLIDE_COMPLETE, ACTIVE_SLIDE_ERROR, ACTIVE_SLIDE_LOADING, ACTIVE_SLIDE_PLAYING, CLASS_FULLSIZE, PLUGIN_CAPTIONS, PLUGIN_COUNTER, PLUGIN_DOWNLOAD, PLUGIN_FULLSCREEN, PLUGIN_INLINE, PLUGIN_SHARE, PLUGIN_SLIDESHOW, PLUGIN_THUMBNAILS, PLUGIN_ZOOM, SLIDE_STATUS_PLAYING } from './types.js';\n\nconst clsx = (...classes) => [...classes].filter((cls) => Boolean(cls)).join(\" \");\nconst cssPrefix$3 = \"yarl__\";\nconst cssClass = (name) => `${cssPrefix$3}${name}`;\nconst cssVar = (name) => `--${cssPrefix$3}${name}`;\nconst composePrefix = (base, prefix) => `${base}${prefix ? `_${prefix}` : \"\"}`;\nconst makeComposePrefix = (base) => (prefix) => composePrefix(base, prefix);\nconst label = (labels, lbl) => (labels && labels[lbl] ? labels[lbl] : lbl);\nconst cleanup = (...cleaners) => () => {\n    cleaners.forEach((cleaner) => {\n        cleaner();\n    });\n};\nconst makeUseContext = (name, contextName, context) => () => {\n    const ctx = React.useContext(context);\n    if (!ctx) {\n        throw new Error(`${name} must be used within a ${contextName}.Provider`);\n    }\n    return ctx;\n};\nconst hasWindow = () => typeof window !== \"undefined\";\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nconst isImageSlide = (slide) => slide.type === undefined || slide.type === \"image\";\nconst isImageFitCover = (image, imageFit) => image.imageFit === IMAGE_FIT_COVER || (image.imageFit !== IMAGE_FIT_CONTAIN && imageFit === IMAGE_FIT_COVER);\nfunction parseInt(value) {\n    return typeof value === \"string\" ? Number.parseInt(value, 10) : value;\n}\nfunction parseLengthPercentage(input) {\n    if (typeof input === \"number\") {\n        return { pixel: input };\n    }\n    if (typeof input === \"string\") {\n        const value = parseInt(input);\n        return input.endsWith(\"%\") ? { percent: value } : { pixel: value };\n    }\n    return { pixel: 0 };\n}\nfunction computeSlideRect(containerRect, padding) {\n    const paddingValue = parseLengthPercentage(padding);\n    const paddingPixels = paddingValue.percent !== undefined ? (containerRect.width / 100) * paddingValue.percent : paddingValue.pixel;\n    return {\n        width: Math.max(containerRect.width - 2 * paddingPixels, 0),\n        height: Math.max(containerRect.height - 2 * paddingPixels, 0),\n    };\n}\nconst devicePixelRatio = () => (hasWindow() ? window === null || window === void 0 ? void 0 : window.devicePixelRatio : undefined) || 1;\nconst getSlideIndex = (index, slidesCount) => slidesCount > 0 ? ((index % slidesCount) + slidesCount) % slidesCount : 0;\nconst hasSlides = (slides) => slides.length > 0;\nconst getSlide = (slides, index) => slides[getSlideIndex(index, slides.length)];\nconst getSlideIfPresent = (slides, index) => hasSlides(slides) ? getSlide(slides, index) : undefined;\nfunction addToolbarButton(toolbar, key, button) {\n    if (!button)\n        return toolbar;\n    const { buttons, ...restToolbar } = toolbar;\n    const index = buttons.findIndex((item) => item === key);\n    const buttonWithKey = React.isValidElement(button) ? React.cloneElement(button, { key }, null) : button;\n    if (index >= 0) {\n        const result = [...buttons];\n        result.splice(index, 1, buttonWithKey);\n        return { buttons: result, ...restToolbar };\n    }\n    return { buttons: [buttonWithKey, ...buttons], ...restToolbar };\n}\nfunction stopNavigationEventsPropagation() {\n    const stopPropagation = (event) => {\n        event.stopPropagation();\n    };\n    return { onPointerDown: stopPropagation, onKeyDown: stopPropagation, onWheel: stopPropagation };\n}\nfunction calculatePreload(carousel, slides, minimum = 0) {\n    return Math.min(carousel.preload, Math.max(carousel.finite ? slides.length - 1 : Math.floor(slides.length / 2), minimum));\n}\n\nconst LightboxDefaultProps = {\n    open: false,\n    close: () => { },\n    index: 0,\n    slides: [],\n    render: {},\n    plugins: [],\n    toolbar: { buttons: [ACTION_CLOSE] },\n    labels: {},\n    animation: {\n        fade: 250,\n        swipe: 500,\n        easing: {\n            fade: \"ease\",\n            swipe: \"ease-out\",\n            navigation: \"ease-in-out\",\n        },\n    },\n    carousel: {\n        finite: false,\n        preload: 2,\n        padding: \"16px\",\n        spacing: \"30%\",\n        imageFit: IMAGE_FIT_CONTAIN,\n        imageProps: {},\n    },\n    controller: {\n        ref: null,\n        focus: true,\n        aria: false,\n        touchAction: \"none\",\n        closeOnPullUp: false,\n        closeOnPullDown: false,\n        closeOnBackdropClick: false,\n    },\n    portal: {},\n    noScroll: {\n        disabled: false,\n    },\n    on: {},\n    styles: {},\n    className: \"\",\n};\n\nfunction createModule(name, component) {\n    return { name, component };\n}\nfunction createNode(module, children) {\n    return { module, children };\n}\nfunction traverseNode(node, target, apply) {\n    if (node.module.name === target) {\n        return apply(node);\n    }\n    if (node.children) {\n        return [\n            createNode(node.module, node.children.flatMap((n) => { var _a; return (_a = traverseNode(n, target, apply)) !== null && _a !== void 0 ? _a : []; })),\n        ];\n    }\n    return [node];\n}\nfunction traverse(nodes, target, apply) {\n    return nodes.flatMap((node) => { var _a; return (_a = traverseNode(node, target, apply)) !== null && _a !== void 0 ? _a : []; });\n}\nfunction withPlugins(root, plugins = [], augmentations = []) {\n    let config = root;\n    const contains = (target) => {\n        const nodes = [...config];\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            if ((node === null || node === void 0 ? void 0 : node.module.name) === target)\n                return true;\n            if (node === null || node === void 0 ? void 0 : node.children)\n                nodes.push(...node.children);\n        }\n        return false;\n    };\n    const addParent = (target, module) => {\n        if (target === \"\") {\n            config = [createNode(module, config)];\n            return;\n        }\n        config = traverse(config, target, (node) => [createNode(module, [node])]);\n    };\n    const append = (target, module) => {\n        config = traverse(config, target, (node) => [createNode(node.module, [createNode(module, node.children)])]);\n    };\n    const addChild = (target, module, precede) => {\n        config = traverse(config, target, (node) => {\n            var _a;\n            return [\n                createNode(node.module, [\n                    ...(precede ? [createNode(module)] : []),\n                    ...((_a = node.children) !== null && _a !== void 0 ? _a : []),\n                    ...(!precede ? [createNode(module)] : []),\n                ]),\n            ];\n        });\n    };\n    const addSibling = (target, module, precede) => {\n        config = traverse(config, target, (node) => [\n            ...(precede ? [createNode(module)] : []),\n            node,\n            ...(!precede ? [createNode(module)] : []),\n        ]);\n    };\n    const addModule = (module) => {\n        append(MODULE_CONTROLLER, module);\n    };\n    const replace = (target, module) => {\n        config = traverse(config, target, (node) => [createNode(module, node.children)]);\n    };\n    const remove = (target) => {\n        config = traverse(config, target, (node) => node.children);\n    };\n    const augment = (augmentation) => {\n        augmentations.push(augmentation);\n    };\n    plugins.forEach((plugin) => {\n        plugin({\n            contains,\n            addParent,\n            append,\n            addChild,\n            addSibling,\n            addModule,\n            replace,\n            remove,\n            augment,\n        });\n    });\n    return {\n        config,\n        augmentation: (props) => augmentations.reduce((acc, augmentation) => augmentation(acc), props),\n    };\n}\n\nconst EventsContext = React.createContext(null);\nconst useEvents = makeUseContext(\"useEvents\", \"EventsContext\", EventsContext);\nfunction EventsProvider({ children }) {\n    const [subscriptions] = React.useState({});\n    React.useEffect(() => () => {\n        Object.keys(subscriptions).forEach((topic) => delete subscriptions[topic]);\n    }, [subscriptions]);\n    const context = React.useMemo(() => {\n        const unsubscribe = (topic, callback) => {\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.splice(0, subscriptions[topic].length, ...subscriptions[topic].filter((cb) => cb !== callback));\n        };\n        const subscribe = (topic, callback) => {\n            if (!subscriptions[topic]) {\n                subscriptions[topic] = [];\n            }\n            subscriptions[topic].push(callback);\n            return () => unsubscribe(topic, callback);\n        };\n        const publish = (...[topic, event]) => {\n            var _a;\n            (_a = subscriptions[topic]) === null || _a === void 0 ? void 0 : _a.forEach((callback) => callback(event));\n        };\n        return { publish, subscribe, unsubscribe };\n    }, [subscriptions]);\n    return React.createElement(EventsContext.Provider, { value: context }, children);\n}\n\nconst LightboxPropsContext = React.createContext(null);\nconst useLightboxProps = makeUseContext(\"useLightboxProps\", \"LightboxPropsContext\", LightboxPropsContext);\nfunction LightboxPropsProvider({ children, ...props }) {\n    return React.createElement(LightboxPropsContext.Provider, { value: props }, children);\n}\n\nconst LightboxStateContext = React.createContext(null);\nconst useLightboxState = makeUseContext(\"useLightboxState\", \"LightboxStateContext\", LightboxStateContext);\nconst LightboxDispatchContext = React.createContext(null);\nconst useLightboxDispatch = makeUseContext(\"useLightboxDispatch\", \"LightboxDispatchContext\", LightboxDispatchContext);\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"swipe\": {\n            const { slides } = state;\n            const increment = (action === null || action === void 0 ? void 0 : action.increment) || 0;\n            const globalIndex = state.globalIndex + increment;\n            const currentIndex = getSlideIndex(globalIndex, slides.length);\n            const currentSlide = getSlideIfPresent(slides, currentIndex);\n            const animation = increment || action.duration\n                ? {\n                    increment,\n                    duration: action.duration,\n                    easing: action.easing,\n                }\n                : undefined;\n            return { slides, currentIndex, globalIndex, currentSlide, animation };\n        }\n        case \"update\":\n            if (action.slides !== state.slides || action.index !== state.currentIndex) {\n                return {\n                    slides: action.slides,\n                    currentIndex: action.index,\n                    globalIndex: action.index,\n                    currentSlide: getSlideIfPresent(action.slides, action.index),\n                };\n            }\n            return state;\n        default:\n            throw new Error(UNKNOWN_ACTION_TYPE);\n    }\n}\nfunction LightboxStateProvider({ slides, index, children }) {\n    const [state, dispatch] = React.useReducer(reducer, {\n        slides,\n        currentIndex: index,\n        globalIndex: index,\n        currentSlide: getSlideIfPresent(slides, index),\n    });\n    React.useEffect(() => {\n        dispatch({ type: \"update\", slides, index });\n    }, [slides, index]);\n    const context = React.useMemo(() => ({ ...state, state, dispatch }), [state, dispatch]);\n    return (React.createElement(LightboxDispatchContext.Provider, { value: dispatch },\n        React.createElement(LightboxStateContext.Provider, { value: context }, children)));\n}\n\nconst TimeoutsContext = React.createContext(null);\nconst useTimeouts = makeUseContext(\"useTimeouts\", \"TimeoutsContext\", TimeoutsContext);\nfunction TimeoutsProvider({ children }) {\n    const [timeouts] = React.useState([]);\n    React.useEffect(() => () => {\n        timeouts.forEach((tid) => window.clearTimeout(tid));\n        timeouts.splice(0, timeouts.length);\n    }, [timeouts]);\n    const context = React.useMemo(() => {\n        const removeTimeout = (id) => {\n            timeouts.splice(0, timeouts.length, ...timeouts.filter((tid) => tid !== id));\n        };\n        const setTimeout = (fn, delay) => {\n            const id = window.setTimeout(() => {\n                removeTimeout(id);\n                fn();\n            }, delay);\n            timeouts.push(id);\n            return id;\n        };\n        const clearTimeout = (id) => {\n            if (id !== undefined) {\n                removeTimeout(id);\n                window.clearTimeout(id);\n            }\n        };\n        return { setTimeout, clearTimeout };\n    }, [timeouts]);\n    return React.createElement(TimeoutsContext.Provider, { value: context }, children);\n}\n\nconst IconButton = React.forwardRef(function IconButton({ label: label$1, className, icon: Icon, renderIcon, onClick, style, ...rest }, ref) {\n    const { styles, labels } = useLightboxProps();\n    return (React.createElement(\"button\", { ref: ref, type: \"button\", \"aria-label\": label(labels, label$1), className: clsx(cssClass(ELEMENT_BUTTON), className), onClick: onClick, style: { ...style, ...styles.button }, ...rest }, renderIcon ? renderIcon() : React.createElement(Icon, { className: cssClass(ELEMENT_ICON), style: styles.icon })));\n});\n\nfunction svgIcon(name, children) {\n    const icon = (props) => (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", width: \"24\", height: \"24\", \"aria-hidden\": \"true\", focusable: \"false\", ...props }, children));\n    icon.displayName = name;\n    return icon;\n}\nfunction createIcon(name, glyph) {\n    return svgIcon(name, React.createElement(\"g\", { fill: \"currentColor\" },\n        React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" }),\n        glyph));\n}\nfunction createIconDisabled(name, glyph) {\n    return svgIcon(name, React.createElement(React.Fragment, null,\n        React.createElement(\"defs\", null,\n            React.createElement(\"mask\", { id: \"strike\" },\n                React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"white\" }),\n                React.createElement(\"path\", { d: \"M0 0L24 24\", stroke: \"black\", strokeWidth: 4 }))),\n        React.createElement(\"path\", { d: \"M0.70707 2.121320L21.878680 23.292883\", stroke: \"currentColor\", strokeWidth: 2 }),\n        React.createElement(\"g\", { fill: \"currentColor\", mask: \"url(#strike)\" },\n            React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" }),\n            glyph)));\n}\nconst CloseIcon = createIcon(\"Close\", React.createElement(\"path\", { d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" }));\nconst PreviousIcon = createIcon(\"Previous\", React.createElement(\"path\", { d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" }));\nconst NextIcon = createIcon(\"Next\", React.createElement(\"path\", { d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" }));\nconst LoadingIcon = createIcon(\"Loading\", React.createElement(React.Fragment, null, Array.from({ length: 8 }).map((_, index, array) => (React.createElement(\"line\", { key: index, x1: \"12\", y1: \"6.5\", x2: \"12\", y2: \"1.8\", strokeLinecap: \"round\", strokeWidth: \"2.6\", stroke: \"currentColor\", strokeOpacity: (1 / array.length) * (index + 1), transform: `rotate(${(360 / array.length) * index}, 12, 12)` })))));\nconst ErrorIcon = createIcon(\"Error\", React.createElement(\"path\", { d: \"M21.9,21.9l-8.49-8.49l0,0L3.59,3.59l0,0L2.1,2.1L0.69,3.51L3,5.83V19c0,1.1,0.9,2,2,2h13.17l2.31,2.31L21.9,21.9z M5,18 l3.5-4.5l2.5,3.01L12.17,15l3,3H5z M21,18.17L5.83,3H19c1.1,0,2,0.9,2,2V18.17z\" }));\n\nconst useLayoutEffect = hasWindow() ? React.useLayoutEffect : React.useEffect;\n\nfunction useMotionPreference() {\n    const [reduceMotion, setReduceMotion] = React.useState(false);\n    React.useEffect(() => {\n        var _a, _b;\n        const mediaQuery = (_a = window.matchMedia) === null || _a === void 0 ? void 0 : _a.call(window, \"(prefers-reduced-motion: reduce)\");\n        setReduceMotion(mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.matches);\n        const listener = (event) => setReduceMotion(event.matches);\n        (_b = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.addEventListener) === null || _b === void 0 ? void 0 : _b.call(mediaQuery, \"change\", listener);\n        return () => { var _a; return (_a = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.removeEventListener) === null || _a === void 0 ? void 0 : _a.call(mediaQuery, \"change\", listener); };\n    }, []);\n    return reduceMotion;\n}\n\nfunction currentTransformation(node) {\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    const matrix = window.getComputedStyle(node).transform;\n    const matcher = matrix.match(/matrix.*\\((.+)\\)/);\n    if (matcher) {\n        const values = matcher[1].split(\",\").map(parseInt);\n        if (values.length === 6) {\n            x = values[4];\n            y = values[5];\n        }\n        else if (values.length === 16) {\n            x = values[12];\n            y = values[13];\n            z = values[14];\n        }\n    }\n    return { x, y, z };\n}\nfunction useAnimation(nodeRef, computeAnimation) {\n    const snapshot = React.useRef();\n    const animation = React.useRef();\n    const reduceMotion = useMotionPreference();\n    useLayoutEffect(() => {\n        var _a, _b, _c;\n        if (nodeRef.current && snapshot.current !== undefined && !reduceMotion) {\n            const { keyframes, duration, easing, onfinish } = computeAnimation(snapshot.current, nodeRef.current.getBoundingClientRect(), currentTransformation(nodeRef.current)) || {};\n            if (keyframes && duration) {\n                (_a = animation.current) === null || _a === void 0 ? void 0 : _a.cancel();\n                animation.current = undefined;\n                try {\n                    animation.current = (_c = (_b = nodeRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, keyframes, { duration, easing });\n                }\n                catch (err) {\n                    console.error(err);\n                }\n                if (animation.current) {\n                    animation.current.onfinish = () => {\n                        animation.current = undefined;\n                        onfinish === null || onfinish === void 0 ? void 0 : onfinish();\n                    };\n                }\n            }\n        }\n        snapshot.current = undefined;\n    });\n    return {\n        prepareAnimation: (currentSnapshot) => {\n            snapshot.current = currentSnapshot;\n        },\n        isAnimationPlaying: () => { var _a; return ((_a = animation.current) === null || _a === void 0 ? void 0 : _a.playState) === \"running\"; },\n    };\n}\n\nfunction useContainerRect() {\n    const containerRef = React.useRef(null);\n    const observerRef = React.useRef();\n    const [containerRect, setContainerRect] = React.useState();\n    const setContainerRef = React.useCallback((node) => {\n        containerRef.current = node;\n        if (observerRef.current) {\n            observerRef.current.disconnect();\n            observerRef.current = undefined;\n        }\n        const updateContainerRect = () => {\n            if (node) {\n                const styles = window.getComputedStyle(node);\n                const parse = (value) => parseFloat(value) || 0;\n                setContainerRect({\n                    width: Math.round(node.clientWidth - parse(styles.paddingLeft) - parse(styles.paddingRight)),\n                    height: Math.round(node.clientHeight - parse(styles.paddingTop) - parse(styles.paddingBottom)),\n                });\n            }\n            else {\n                setContainerRect(undefined);\n            }\n        };\n        updateContainerRect();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateContainerRect);\n            observerRef.current.observe(node);\n        }\n    }, []);\n    return { setContainerRef, containerRef, containerRect };\n}\n\nfunction useDelay() {\n    const timeoutId = React.useRef();\n    const { setTimeout, clearTimeout } = useTimeouts();\n    return React.useCallback((callback, delay) => {\n        clearTimeout(timeoutId.current);\n        timeoutId.current = setTimeout(callback, delay > 0 ? delay : 0);\n    }, [setTimeout, clearTimeout]);\n}\n\nfunction useEventCallback(fn) {\n    const ref = React.useRef(fn);\n    useLayoutEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((...args) => { var _a; return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args); }, []);\n}\n\nfunction setRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n}\nfunction useForkRef(refA, refB) {\n    return React.useMemo(() => refA == null && refB == null\n        ? null\n        : (refValue) => {\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        }, [refA, refB]);\n}\n\nfunction useLoseFocus(focus, disabled = false) {\n    const focused = React.useRef();\n    useLayoutEffect(() => {\n        if (disabled && focused.current) {\n            focused.current = false;\n            focus();\n        }\n    }, [disabled, focus]);\n    const onFocus = React.useCallback(() => {\n        focused.current = true;\n    }, []);\n    const onBlur = React.useCallback(() => {\n        focused.current = false;\n    }, []);\n    return { onFocus, onBlur };\n}\n\nfunction useRTL() {\n    const [isRTL, setIsRTL] = React.useState(false);\n    useLayoutEffect(() => {\n        setIsRTL(window.getComputedStyle(window.document.documentElement).direction === \"rtl\");\n    }, []);\n    return isRTL;\n}\n\nfunction useSensors() {\n    const [subscribers] = React.useState({});\n    const notifySubscribers = React.useCallback((type, event) => {\n        var _a;\n        (_a = subscribers[type]) === null || _a === void 0 ? void 0 : _a.forEach((listener) => {\n            if (!event.isPropagationStopped())\n                listener(event);\n        });\n    }, [subscribers]);\n    const registerSensors = React.useMemo(() => ({\n        onPointerDown: (event) => notifySubscribers(EVENT_ON_POINTER_DOWN, event),\n        onPointerMove: (event) => notifySubscribers(EVENT_ON_POINTER_MOVE, event),\n        onPointerUp: (event) => notifySubscribers(EVENT_ON_POINTER_UP, event),\n        onPointerLeave: (event) => notifySubscribers(EVENT_ON_POINTER_LEAVE, event),\n        onPointerCancel: (event) => notifySubscribers(EVENT_ON_POINTER_CANCEL, event),\n        onKeyDown: (event) => notifySubscribers(EVENT_ON_KEY_DOWN, event),\n        onKeyUp: (event) => notifySubscribers(EVENT_ON_KEY_UP, event),\n        onWheel: (event) => notifySubscribers(EVENT_ON_WHEEL, event),\n    }), [notifySubscribers]);\n    const subscribeSensors = React.useCallback((type, callback) => {\n        if (!subscribers[type]) {\n            subscribers[type] = [];\n        }\n        subscribers[type].unshift(callback);\n        return () => {\n            const listeners = subscribers[type];\n            if (listeners) {\n                listeners.splice(0, listeners.length, ...listeners.filter((el) => el !== callback));\n            }\n        };\n    }, [subscribers]);\n    return { registerSensors, subscribeSensors };\n}\n\nfunction useThrottle(callback, delay) {\n    const lastCallbackTime = React.useRef(0);\n    const delayCallback = useDelay();\n    const executeCallback = useEventCallback((...args) => {\n        lastCallbackTime.current = Date.now();\n        callback(args);\n    });\n    return React.useCallback((...args) => {\n        delayCallback(() => {\n            executeCallback(args);\n        }, delay - (Date.now() - lastCallbackTime.current));\n    }, [delay, executeCallback, delayCallback]);\n}\n\nconst slidePrefix = makeComposePrefix(\"slide\");\nconst slideImagePrefix = makeComposePrefix(\"slide_image\");\nfunction ImageSlide({ slide: image, offset, render, rect, imageFit, imageProps, onClick, onLoad, style, }) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const [status, setStatus] = React.useState(SLIDE_STATUS_LOADING);\n    const { publish } = useEvents();\n    const { setTimeout } = useTimeouts();\n    const imageRef = React.useRef(null);\n    React.useEffect(() => {\n        if (offset === 0) {\n            publish(activeSlideStatus(status));\n        }\n    }, [offset, status, publish]);\n    const handleLoading = useEventCallback((img) => {\n        (\"decode\" in img ? img.decode() : Promise.resolve())\n            .catch(() => { })\n            .then(() => {\n            if (!img.parentNode) {\n                return;\n            }\n            setStatus(SLIDE_STATUS_COMPLETE);\n            setTimeout(() => {\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(img);\n            }, 0);\n        });\n    });\n    const setImageRef = React.useCallback((img) => {\n        imageRef.current = img;\n        if (img === null || img === void 0 ? void 0 : img.complete) {\n            handleLoading(img);\n        }\n    }, [handleLoading]);\n    const handleOnLoad = React.useCallback((event) => {\n        handleLoading(event.currentTarget);\n    }, [handleLoading]);\n    const onError = React.useCallback(() => {\n        setStatus(SLIDE_STATUS_ERROR);\n    }, []);\n    const cover = isImageFitCover(image, imageFit);\n    const nonInfinite = (value, fallback) => (Number.isFinite(value) ? value : fallback);\n    const maxWidth = nonInfinite(Math.max(...((_b = (_a = image.srcSet) === null || _a === void 0 ? void 0 : _a.map((x) => x.width)) !== null && _b !== void 0 ? _b : []).concat(image.width ? [image.width] : []).filter(Boolean)), ((_c = imageRef.current) === null || _c === void 0 ? void 0 : _c.naturalWidth) || 0);\n    const maxHeight = nonInfinite(Math.max(...((_e = (_d = image.srcSet) === null || _d === void 0 ? void 0 : _d.map((x) => x.height)) !== null && _e !== void 0 ? _e : []).concat(image.height ? [image.height] : []).filter(Boolean)), ((_f = imageRef.current) === null || _f === void 0 ? void 0 : _f.naturalHeight) || 0);\n    const defaultStyle = maxWidth && maxHeight\n        ? {\n            maxWidth: `min(${maxWidth}px, 100%)`,\n            maxHeight: `min(${maxHeight}px, 100%)`,\n        }\n        : {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n        };\n    const srcSet = (_g = image.srcSet) === null || _g === void 0 ? void 0 : _g.sort((a, b) => a.width - b.width).map((item) => `${item.src} ${item.width}w`).join(\", \");\n    const estimateActualWidth = () => rect && !cover && image.width && image.height ? (rect.height / image.height) * image.width : Number.MAX_VALUE;\n    const sizes = srcSet && rect && hasWindow() ? `${Math.round(Math.min(estimateActualWidth(), rect.width))}px` : undefined;\n    const { style: imagePropsStyle, className: imagePropsClassName, ...restImageProps } = imageProps || {};\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"img\", { ref: setImageRef, onLoad: handleOnLoad, onError: onError, onClick: onClick, draggable: false, className: clsx(cssClass(slideImagePrefix()), cover && cssClass(slideImagePrefix(\"cover\")), status !== SLIDE_STATUS_COMPLETE && cssClass(slideImagePrefix(\"loading\")), imagePropsClassName), style: { ...defaultStyle, ...style, ...imagePropsStyle }, ...restImageProps, alt: image.alt, sizes: sizes, srcSet: srcSet, src: image.src }),\n        status !== SLIDE_STATUS_COMPLETE && (React.createElement(\"div\", { className: cssClass(slidePrefix(SLIDE_STATUS_PLACEHOLDER)) },\n            status === SLIDE_STATUS_LOADING &&\n                ((render === null || render === void 0 ? void 0 : render.iconLoading) ? (render.iconLoading()) : (React.createElement(LoadingIcon, { className: clsx(cssClass(ELEMENT_ICON), cssClass(slidePrefix(SLIDE_STATUS_LOADING))) }))),\n            status === SLIDE_STATUS_ERROR &&\n                ((render === null || render === void 0 ? void 0 : render.iconError) ? (render.iconError()) : (React.createElement(ErrorIcon, { className: clsx(cssClass(ELEMENT_ICON), cssClass(slidePrefix(SLIDE_STATUS_ERROR))) })))))));\n}\n\nvar SwipeState;\n(function (SwipeState) {\n    SwipeState[SwipeState[\"NONE\"] = 0] = \"NONE\";\n    SwipeState[SwipeState[\"SWIPE\"] = 1] = \"SWIPE\";\n    SwipeState[SwipeState[\"PULL\"] = 2] = \"PULL\";\n    SwipeState[SwipeState[\"ANIMATION\"] = 3] = \"ANIMATION\";\n})(SwipeState || (SwipeState = {}));\n\nfunction usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled) {\n    React.useEffect(() => !disabled\n        ? cleanup(subscribeSensors(EVENT_ON_POINTER_DOWN, onPointerDown), subscribeSensors(EVENT_ON_POINTER_MOVE, onPointerMove), subscribeSensors(EVENT_ON_POINTER_UP, onPointerUp), subscribeSensors(EVENT_ON_POINTER_LEAVE, onPointerUp), subscribeSensors(EVENT_ON_POINTER_CANCEL, onPointerUp))\n        : () => { }, [subscribeSensors, onPointerDown, onPointerMove, onPointerUp, disabled]);\n}\n\nvar Gesture;\n(function (Gesture) {\n    Gesture[Gesture[\"NONE\"] = 0] = \"NONE\";\n    Gesture[Gesture[\"SWIPE\"] = 1] = \"SWIPE\";\n    Gesture[Gesture[\"PULL\"] = 2] = \"PULL\";\n})(Gesture || (Gesture = {}));\nconst SWIPE_THRESHOLD = 30;\nfunction usePointerSwipe(subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel, pullUpEnabled, pullDownEnabled, onPullStart, onPullProgress, onPullFinish, onPullCancel) {\n    const offset = React.useRef(0);\n    const pointers = React.useRef([]);\n    const activePointer = React.useRef();\n    const startTime = React.useRef(0);\n    const gesture = React.useRef(Gesture.NONE);\n    const clearPointer = React.useCallback((event) => {\n        if (activePointer.current === event.pointerId) {\n            activePointer.current = undefined;\n            gesture.current = Gesture.NONE;\n        }\n        const currentPointers = pointers.current;\n        currentPointers.splice(0, currentPointers.length, ...currentPointers.filter((p) => p.pointerId !== event.pointerId));\n    }, []);\n    const addPointer = React.useCallback((event) => {\n        clearPointer(event);\n        event.persist();\n        pointers.current.push(event);\n    }, [clearPointer]);\n    const onPointerDown = useEventCallback((event) => {\n        addPointer(event);\n    });\n    const exceedsPullThreshold = (value, threshold) => (pullDownEnabled && value > threshold) || (pullUpEnabled && value < -threshold);\n    const onPointerUp = useEventCallback((event) => {\n        if (pointers.current.find((x) => x.pointerId === event.pointerId) && activePointer.current === event.pointerId) {\n            const duration = Date.now() - startTime.current;\n            const currentOffset = offset.current;\n            if (gesture.current === Gesture.SWIPE) {\n                if (Math.abs(currentOffset) > 0.3 * containerWidth ||\n                    (Math.abs(currentOffset) > 5 && duration < swipeAnimationDuration)) {\n                    onSwipeFinish(currentOffset, duration);\n                }\n                else {\n                    onSwipeCancel(currentOffset);\n                }\n            }\n            else if (gesture.current === Gesture.PULL) {\n                if (exceedsPullThreshold(currentOffset, 2 * SWIPE_THRESHOLD)) {\n                    onPullFinish(currentOffset, duration);\n                }\n                else {\n                    onPullCancel(currentOffset);\n                }\n            }\n            offset.current = 0;\n            gesture.current = Gesture.NONE;\n        }\n        clearPointer(event);\n    });\n    const onPointerMove = useEventCallback((event) => {\n        const pointer = pointers.current.find((p) => p.pointerId === event.pointerId);\n        if (pointer) {\n            const isCurrentPointer = activePointer.current === event.pointerId;\n            if (event.buttons === 0) {\n                if (isCurrentPointer && offset.current !== 0) {\n                    onPointerUp(event);\n                }\n                else {\n                    clearPointer(pointer);\n                }\n                return;\n            }\n            const deltaX = event.clientX - pointer.clientX;\n            const deltaY = event.clientY - pointer.clientY;\n            if (activePointer.current === undefined) {\n                const startGesture = (newGesture) => {\n                    addPointer(event);\n                    activePointer.current = event.pointerId;\n                    startTime.current = Date.now();\n                    gesture.current = newGesture;\n                };\n                if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > SWIPE_THRESHOLD && isSwipeValid(deltaX)) {\n                    startGesture(Gesture.SWIPE);\n                    onSwipeStart();\n                }\n                else if (Math.abs(deltaY) > Math.abs(deltaX) && exceedsPullThreshold(deltaY, SWIPE_THRESHOLD)) {\n                    startGesture(Gesture.PULL);\n                    onPullStart();\n                }\n            }\n            else if (isCurrentPointer) {\n                if (gesture.current === Gesture.SWIPE) {\n                    offset.current = deltaX;\n                    onSwipeProgress(deltaX);\n                }\n                else if (gesture.current === Gesture.PULL) {\n                    offset.current = deltaY;\n                    onPullProgress(deltaY);\n                }\n            }\n        }\n    });\n    usePointerEvents(subscribeSensors, onPointerDown, onPointerMove, onPointerUp);\n}\n\nconst WHEEL = \"wheel\";\nfunction preventDefault(event) {\n    if (Math.abs(event.deltaX) > Math.abs(event.deltaY) || event.ctrlKey) {\n        event.preventDefault();\n    }\n}\nfunction usePreventSwipeNavigation() {\n    const ref = React.useRef(null);\n    return React.useCallback((node) => {\n        var _a;\n        if (node) {\n            node.addEventListener(WHEEL, preventDefault, { passive: false });\n        }\n        else {\n            (_a = ref.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(WHEEL, preventDefault);\n        }\n        ref.current = node;\n    }, []);\n}\n\nfunction useWheelSwipe(swipeState, subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel) {\n    const offset = React.useRef(0);\n    const intent = React.useRef(0);\n    const intentCleanup = React.useRef();\n    const resetCleanup = React.useRef();\n    const wheelResidualMomentum = React.useRef(0);\n    const startTime = React.useRef(0);\n    const { setTimeout, clearTimeout } = useTimeouts();\n    const cancelSwipeIntentCleanup = React.useCallback(() => {\n        if (intentCleanup.current) {\n            clearTimeout(intentCleanup.current);\n            intentCleanup.current = undefined;\n        }\n    }, [clearTimeout]);\n    const cancelSwipeResetCleanup = React.useCallback(() => {\n        if (resetCleanup.current) {\n            clearTimeout(resetCleanup.current);\n            resetCleanup.current = undefined;\n        }\n    }, [clearTimeout]);\n    const handleCleanup = useEventCallback(() => {\n        if (swipeState !== SwipeState.SWIPE) {\n            offset.current = 0;\n            startTime.current = 0;\n            cancelSwipeIntentCleanup();\n            cancelSwipeResetCleanup();\n        }\n    });\n    React.useEffect(handleCleanup, [swipeState, handleCleanup]);\n    const handleCancelSwipe = useEventCallback((currentSwipeOffset) => {\n        resetCleanup.current = undefined;\n        if (offset.current === currentSwipeOffset) {\n            onSwipeCancel(offset.current);\n        }\n    });\n    const onWheel = useEventCallback((event) => {\n        if (event.ctrlKey) {\n            return;\n        }\n        if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {\n            return;\n        }\n        if (swipeState === SwipeState.NONE) {\n            if (Math.abs(event.deltaX) <= 1.2 * Math.abs(wheelResidualMomentum.current)) {\n                wheelResidualMomentum.current = event.deltaX;\n                return;\n            }\n            if (!isSwipeValid(-event.deltaX)) {\n                return;\n            }\n            intent.current += event.deltaX;\n            cancelSwipeIntentCleanup();\n            if (Math.abs(intent.current) > 30) {\n                intent.current = 0;\n                wheelResidualMomentum.current = 0;\n                startTime.current = Date.now();\n                onSwipeStart();\n            }\n            else {\n                const currentSwipeIntent = intent.current;\n                intentCleanup.current = setTimeout(() => {\n                    intentCleanup.current = undefined;\n                    if (currentSwipeIntent === intent.current) {\n                        intent.current = 0;\n                    }\n                }, swipeAnimationDuration);\n            }\n        }\n        else if (swipeState === SwipeState.SWIPE) {\n            let newSwipeOffset = offset.current - event.deltaX;\n            newSwipeOffset = Math.min(Math.abs(newSwipeOffset), containerWidth) * Math.sign(newSwipeOffset);\n            offset.current = newSwipeOffset;\n            onSwipeProgress(newSwipeOffset);\n            cancelSwipeResetCleanup();\n            if (Math.abs(newSwipeOffset) > 0.2 * containerWidth) {\n                wheelResidualMomentum.current = event.deltaX;\n                onSwipeFinish(newSwipeOffset, Date.now() - startTime.current);\n                return;\n            }\n            resetCleanup.current = setTimeout(() => handleCancelSwipe(newSwipeOffset), 2 * swipeAnimationDuration);\n        }\n        else {\n            wheelResidualMomentum.current = event.deltaX;\n        }\n    });\n    React.useEffect(() => subscribeSensors(EVENT_ON_WHEEL, onWheel), [subscribeSensors, onWheel]);\n}\n\nconst cssContainerPrefix = makeComposePrefix(\"container\");\nconst ControllerContext = React.createContext(null);\nconst useController = makeUseContext(\"useController\", \"ControllerContext\", ControllerContext);\nfunction Controller({ children, ...props }) {\n    var _a;\n    const { carousel, animation, controller, on, styles, render } = props;\n    const [toolbarWidth, setToolbarWidth] = React.useState();\n    const state = useLightboxState();\n    const dispatch = useLightboxDispatch();\n    const [swipeState, setSwipeState] = React.useState(SwipeState.NONE);\n    const swipeOffset = React.useRef(0);\n    const pullOffset = React.useRef(0);\n    const pullOpacity = React.useRef(1);\n    const { registerSensors, subscribeSensors } = useSensors();\n    const { subscribe, publish } = useEvents();\n    const cleanupAnimationIncrement = useDelay();\n    const cleanupSwipeOffset = useDelay();\n    const cleanupPullOffset = useDelay();\n    const { containerRef, setContainerRef, containerRect } = useContainerRect();\n    const handleContainerRef = useForkRef(usePreventSwipeNavigation(), setContainerRef);\n    const carouselRef = React.useRef(null);\n    const setCarouselRef = useForkRef(carouselRef, undefined);\n    const isRTL = useRTL();\n    const rtl = (value) => (isRTL ? -1 : 1) * (typeof value === \"number\" ? value : 1);\n    const focus = useEventCallback(() => { var _a; return (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.focus(); });\n    const getLightboxProps = useEventCallback(() => props);\n    const getLightboxState = useEventCallback(() => state);\n    const prev = React.useCallback((params) => publish(ACTION_PREV, params), [publish]);\n    const next = React.useCallback((params) => publish(ACTION_NEXT, params), [publish]);\n    const close = React.useCallback(() => publish(ACTION_CLOSE), [publish]);\n    const isSwipeValid = (offset) => !(carousel.finite &&\n        ((rtl(offset) > 0 && state.currentIndex === 0) ||\n            (rtl(offset) < 0 && state.currentIndex === state.slides.length - 1)));\n    const setSwipeOffset = (offset) => {\n        var _a;\n        swipeOffset.current = offset;\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"swipe_offset\"), `${Math.round(offset)}px`);\n    };\n    const { closeOnPullUp, closeOnPullDown } = controller;\n    const setPullOffset = (offset) => {\n        var _a, _b;\n        pullOffset.current = offset;\n        pullOpacity.current = (() => {\n            const threshold = 60;\n            const minOpacity = 0.5;\n            const offsetValue = (() => {\n                if (closeOnPullDown && offset > 0)\n                    return offset;\n                if (closeOnPullUp && offset < 0)\n                    return -offset;\n                return 0;\n            })();\n            return Math.min(Math.max(round(1 - (offsetValue / threshold) * (1 - minOpacity), 2), minOpacity), 1);\n        })();\n        (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.style.setProperty(cssVar(\"pull_offset\"), `${Math.round(offset)}px`);\n        (_b = containerRef.current) === null || _b === void 0 ? void 0 : _b.style.setProperty(cssVar(\"pull_opacity\"), `${pullOpacity.current}`);\n    };\n    const { prepareAnimation: preparePullAnimation } = useAnimation(carouselRef, (snapshot, rect, translate) => {\n        if (carouselRef.current && containerRect) {\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(0, ${snapshot.rect.y - rect.y + translate.y}px)`,\n                        opacity: snapshot.opacity,\n                    },\n                    { transform: \"translate(0, 0)\", opacity: 1 },\n                ],\n                duration: snapshot.duration,\n                easing: animation.easing.fade,\n            };\n        }\n        return undefined;\n    });\n    const pull = (offset, cancel) => {\n        if (closeOnPullUp || closeOnPullDown) {\n            setPullOffset(offset);\n            let duration = 0;\n            if (carouselRef.current) {\n                duration = animation.fade * (cancel ? 2 : 1);\n                preparePullAnimation({\n                    rect: carouselRef.current.getBoundingClientRect(),\n                    opacity: pullOpacity.current,\n                    duration,\n                });\n            }\n            cleanupPullOffset(() => {\n                setPullOffset(0);\n                setSwipeState(SwipeState.NONE);\n            }, duration);\n            setSwipeState(SwipeState.ANIMATION);\n            if (!cancel) {\n                close();\n            }\n        }\n    };\n    const { prepareAnimation, isAnimationPlaying } = useAnimation(carouselRef, (snapshot, rect, translate) => {\n        var _a;\n        if (carouselRef.current && containerRect && ((_a = state.animation) === null || _a === void 0 ? void 0 : _a.duration)) {\n            const parsedSpacing = parseLengthPercentage(carousel.spacing);\n            const spacingValue = (parsedSpacing.percent ? (parsedSpacing.percent * containerRect.width) / 100 : parsedSpacing.pixel) || 0;\n            return {\n                keyframes: [\n                    {\n                        transform: `translate(${rtl(state.globalIndex - snapshot.index) * (containerRect.width + spacingValue) +\n                            snapshot.rect.x -\n                            rect.x +\n                            translate.x}px, 0)`,\n                    },\n                    { transform: \"translate(0, 0)\" },\n                ],\n                duration: state.animation.duration,\n                easing: state.animation.easing,\n            };\n        }\n        return undefined;\n    });\n    const swipe = useEventCallback((action) => {\n        var _a, _b;\n        const currentSwipeOffset = action.offset || 0;\n        const swipeDuration = !currentSwipeOffset ? (_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe : animation.swipe;\n        const swipeEasing = !currentSwipeOffset && !isAnimationPlaying() ? animation.easing.navigation : animation.easing.swipe;\n        let { direction } = action;\n        const count = (_b = action.count) !== null && _b !== void 0 ? _b : 1;\n        let newSwipeState = SwipeState.ANIMATION;\n        let newSwipeAnimationDuration = swipeDuration * count;\n        if (!direction) {\n            const containerWidth = containerRect === null || containerRect === void 0 ? void 0 : containerRect.width;\n            const elapsedTime = action.duration || 0;\n            const expectedTime = containerWidth\n                ? (swipeDuration / containerWidth) * Math.abs(currentSwipeOffset)\n                : swipeDuration;\n            if (count !== 0) {\n                if (elapsedTime < expectedTime) {\n                    newSwipeAnimationDuration =\n                        (newSwipeAnimationDuration / expectedTime) * Math.max(elapsedTime, expectedTime / 5);\n                }\n                else if (containerWidth) {\n                    newSwipeAnimationDuration =\n                        (swipeDuration / containerWidth) * (containerWidth - Math.abs(currentSwipeOffset));\n                }\n                direction = rtl(currentSwipeOffset) > 0 ? ACTION_PREV : ACTION_NEXT;\n            }\n            else {\n                newSwipeAnimationDuration = swipeDuration / 2;\n            }\n        }\n        let increment = 0;\n        if (direction === ACTION_PREV) {\n            if (isSwipeValid(rtl(1))) {\n                increment = -count;\n            }\n            else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        }\n        else if (direction === ACTION_NEXT) {\n            if (isSwipeValid(rtl(-1))) {\n                increment = count;\n            }\n            else {\n                newSwipeState = SwipeState.NONE;\n                newSwipeAnimationDuration = swipeDuration;\n            }\n        }\n        newSwipeAnimationDuration = Math.round(newSwipeAnimationDuration);\n        cleanupSwipeOffset(() => {\n            setSwipeOffset(0);\n            setSwipeState(SwipeState.NONE);\n        }, newSwipeAnimationDuration);\n        if (carouselRef.current) {\n            prepareAnimation({\n                rect: carouselRef.current.getBoundingClientRect(),\n                index: state.globalIndex,\n            });\n        }\n        setSwipeState(newSwipeState);\n        publish(ACTION_SWIPE, {\n            type: \"swipe\",\n            increment,\n            duration: newSwipeAnimationDuration,\n            easing: swipeEasing,\n        });\n    });\n    React.useEffect(() => {\n        var _a, _b;\n        if (((_a = state.animation) === null || _a === void 0 ? void 0 : _a.increment) && ((_b = state.animation) === null || _b === void 0 ? void 0 : _b.duration)) {\n            cleanupAnimationIncrement(() => dispatch({ type: \"swipe\", increment: 0 }), state.animation.duration);\n        }\n    }, [state.animation, dispatch, cleanupAnimationIncrement]);\n    const swipeParams = [\n        subscribeSensors,\n        isSwipeValid,\n        (containerRect === null || containerRect === void 0 ? void 0 : containerRect.width) || 0,\n        animation.swipe,\n        () => setSwipeState(SwipeState.SWIPE),\n        (offset) => setSwipeOffset(offset),\n        (offset, duration) => swipe({ offset, duration, count: 1 }),\n        (offset) => swipe({ offset, count: 0 }),\n    ];\n    const pullParams = [\n        () => {\n            if (closeOnPullDown) {\n                setSwipeState(SwipeState.PULL);\n            }\n        },\n        (offset) => setPullOffset(offset),\n        (offset) => pull(offset),\n        (offset) => pull(offset, true),\n    ];\n    usePointerSwipe(...swipeParams, closeOnPullUp, closeOnPullDown, ...pullParams);\n    useWheelSwipe(swipeState, ...swipeParams);\n    const focusOnMount = useEventCallback(() => {\n        if (controller.focus) {\n            if (document.querySelector(`.${cssClass(MODULE_PORTAL)} .${cssClass(cssContainerPrefix())}`)) {\n                focus();\n            }\n        }\n    });\n    React.useEffect(focusOnMount, [focusOnMount]);\n    const onViewCallback = useEventCallback(() => {\n        var _a;\n        (_a = on.view) === null || _a === void 0 ? void 0 : _a.call(on, { index: state.currentIndex });\n    });\n    React.useEffect(onViewCallback, [state.globalIndex, onViewCallback]);\n    React.useEffect(() => cleanup(subscribe(ACTION_PREV, (action) => swipe({ direction: ACTION_PREV, ...action })), subscribe(ACTION_NEXT, (action) => swipe({ direction: ACTION_NEXT, ...action })), subscribe(ACTION_SWIPE, (action) => dispatch(action))), [subscribe, swipe, dispatch]);\n    const context = React.useMemo(() => ({\n        prev,\n        next,\n        close,\n        focus,\n        slideRect: containerRect ? computeSlideRect(containerRect, carousel.padding) : { width: 0, height: 0 },\n        containerRect: containerRect || { width: 0, height: 0 },\n        subscribeSensors,\n        containerRef,\n        setCarouselRef,\n        toolbarWidth,\n        setToolbarWidth,\n    }), [\n        prev,\n        next,\n        close,\n        focus,\n        subscribeSensors,\n        containerRect,\n        containerRef,\n        setCarouselRef,\n        toolbarWidth,\n        setToolbarWidth,\n        carousel.padding,\n    ]);\n    React.useImperativeHandle(controller.ref, () => ({\n        prev,\n        next,\n        close,\n        focus,\n        getLightboxProps,\n        getLightboxState,\n    }), [prev, next, close, focus, getLightboxProps, getLightboxState]);\n    return (React.createElement(\"div\", { ref: handleContainerRef, className: clsx(cssClass(cssContainerPrefix()), cssClass(CLASS_FLEX_CENTER)), style: {\n            ...(swipeState === SwipeState.SWIPE\n                ? { [cssVar(\"swipe_offset\")]: `${Math.round(swipeOffset.current)}px` }\n                : null),\n            ...(swipeState === SwipeState.PULL\n                ? {\n                    [cssVar(\"pull_offset\")]: `${Math.round(pullOffset.current)}px`,\n                    [cssVar(\"pull_opacity\")]: `${pullOpacity.current}`,\n                }\n                : null),\n            ...(controller.touchAction !== \"none\" ? { [cssVar(\"controller_touch_action\")]: controller.touchAction } : null),\n            ...styles.container,\n        }, ...(controller.aria ? { role: \"presentation\", \"aria-live\": \"polite\" } : null), tabIndex: -1, ...registerSensors }, containerRect && (React.createElement(ControllerContext.Provider, { value: context },\n        children, (_a = render.controls) === null || _a === void 0 ? void 0 :\n        _a.call(render)))));\n}\nconst ControllerModule = createModule(MODULE_CONTROLLER, Controller);\n\nfunction cssPrefix$2(value) {\n    return composePrefix(MODULE_CAROUSEL, value);\n}\nfunction cssSlidePrefix(value) {\n    return composePrefix(\"slide\", value);\n}\nfunction CarouselSlide({ slide, offset }) {\n    const containerRef = React.useRef(null);\n    const { currentIndex } = useLightboxState();\n    const { slideRect, close } = useController();\n    const { render, carousel: { imageFit, imageProps }, on: { click: onClick }, controller: { closeOnBackdropClick }, styles: { slide: style }, } = useLightboxProps();\n    const renderSlide = () => {\n        var _a, _b, _c, _d;\n        let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, { slide, offset, rect: slideRect });\n        if (!rendered && isImageSlide(slide)) {\n            rendered = (React.createElement(ImageSlide, { slide: slide, offset: offset, render: render, rect: slideRect, imageFit: imageFit, imageProps: imageProps, onClick: offset === 0 ? () => onClick === null || onClick === void 0 ? void 0 : onClick({ index: currentIndex }) : undefined }));\n        }\n        return rendered ? (React.createElement(React.Fragment, null, (_b = render.slideHeader) === null || _b === void 0 ? void 0 :\n            _b.call(render, { slide }),\n            ((_c = render.slideContainer) !== null && _c !== void 0 ? _c : (({ children }) => children))({ slide, children: rendered }), (_d = render.slideFooter) === null || _d === void 0 ? void 0 :\n            _d.call(render, { slide }))) : null;\n    };\n    const handleBackdropClick = (event) => {\n        const container = containerRef.current;\n        const target = event.target instanceof HTMLElement ? event.target : undefined;\n        if (closeOnBackdropClick &&\n            target &&\n            container &&\n            (target === container ||\n                (Array.from(container.children).find((x) => x === target) &&\n                    target.classList.contains(cssClass(CLASS_SLIDE_WRAPPER))))) {\n            close();\n        }\n    };\n    return (React.createElement(\"div\", { ref: containerRef, className: clsx(cssClass(cssSlidePrefix()), offset === 0 && cssClass(cssSlidePrefix(\"current\")), cssClass(CLASS_FLEX_CENTER)), onClick: handleBackdropClick, style: style }, renderSlide()));\n}\nfunction Placeholder() {\n    const style = useLightboxProps().styles.slide;\n    return React.createElement(\"div\", { className: cssClass(\"slide\"), style: style });\n}\nfunction Carousel({ carousel }) {\n    const { slides, currentIndex, globalIndex } = useLightboxState();\n    const { setCarouselRef } = useController();\n    const spacingValue = parseLengthPercentage(carousel.spacing);\n    const paddingValue = parseLengthPercentage(carousel.padding);\n    const items = [];\n    const preload = calculatePreload(carousel, slides, 1);\n    if (hasSlides(slides)) {\n        for (let i = currentIndex - preload; i < currentIndex; i += 1) {\n            const key = globalIndex + i - currentIndex;\n            items.push(!carousel.finite || i >= 0 ? (React.createElement(CarouselSlide, { key: key, slide: slides[(i + preload * slides.length) % slides.length], offset: i - currentIndex })) : (React.createElement(Placeholder, { key: key })));\n        }\n        items.push(React.createElement(CarouselSlide, { key: globalIndex, slide: slides[currentIndex], offset: 0 }));\n        for (let i = currentIndex + 1; i <= currentIndex + preload; i += 1) {\n            const key = globalIndex + i - currentIndex;\n            items.push(!carousel.finite || i <= slides.length - 1 ? (React.createElement(CarouselSlide, { key: key, slide: slides[i % slides.length], offset: i - currentIndex })) : (React.createElement(Placeholder, { key: key })));\n        }\n    }\n    return (React.createElement(\"div\", { ref: setCarouselRef, className: clsx(cssClass(cssPrefix$2()), items.length > 0 && cssClass(cssPrefix$2(\"with_slides\"))), style: {\n            [`${cssVar(cssPrefix$2(\"slides_count\"))}`]: items.length,\n            [`${cssVar(cssPrefix$2(\"spacing_px\"))}`]: spacingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"spacing_percent\"))}`]: spacingValue.percent || 0,\n            [`${cssVar(cssPrefix$2(\"padding_px\"))}`]: paddingValue.pixel || 0,\n            [`${cssVar(cssPrefix$2(\"padding_percent\"))}`]: paddingValue.percent || 0,\n        } }, items));\n}\nconst CarouselModule = createModule(MODULE_CAROUSEL, Carousel);\n\nfunction useNavigationState() {\n    const { carousel } = useLightboxProps();\n    const { slides, currentIndex } = useLightboxState();\n    const prevDisabled = slides.length === 0 || (carousel.finite && currentIndex === 0);\n    const nextDisabled = slides.length === 0 || (carousel.finite && currentIndex === slides.length - 1);\n    return { prevDisabled, nextDisabled };\n}\n\nfunction useKeyboardNavigation(subscribeSensors) {\n    var _a;\n    const isRTL = useRTL();\n    const { publish } = useEvents();\n    const { animation } = useLightboxProps();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    const throttle = ((_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe) / 2;\n    const prev = useThrottle(() => publish(ACTION_PREV), throttle);\n    const next = useThrottle(() => publish(ACTION_NEXT), throttle);\n    const handleKeyDown = useEventCallback((event) => {\n        switch (event.key) {\n            case VK_ESCAPE:\n                publish(ACTION_CLOSE);\n                break;\n            case VK_ARROW_LEFT:\n                if (!(isRTL ? nextDisabled : prevDisabled))\n                    (isRTL ? next : prev)();\n                break;\n            case VK_ARROW_RIGHT:\n                if (!(isRTL ? prevDisabled : nextDisabled))\n                    (isRTL ? prev : next)();\n                break;\n            default:\n        }\n    });\n    React.useEffect(() => subscribeSensors(EVENT_ON_KEY_DOWN, handleKeyDown), [subscribeSensors, handleKeyDown]);\n}\n\nfunction NavigationButton({ label, icon, renderIcon, action, onClick, disabled, style }) {\n    return (React.createElement(IconButton, { label: label, icon: icon, renderIcon: renderIcon, className: cssClass(`navigation_${action}`), disabled: disabled, onClick: onClick, style: style, ...useLoseFocus(useController().focus, disabled) }));\n}\nfunction Navigation({ render: { buttonPrev, buttonNext, iconPrev, iconNext }, styles }) {\n    const { prev, next, subscribeSensors } = useController();\n    const { prevDisabled, nextDisabled } = useNavigationState();\n    useKeyboardNavigation(subscribeSensors);\n    return (React.createElement(React.Fragment, null,\n        buttonPrev ? (buttonPrev()) : (React.createElement(NavigationButton, { label: \"Previous\", action: ACTION_PREV, icon: PreviousIcon, renderIcon: iconPrev, style: styles.navigationPrev, disabled: prevDisabled, onClick: prev })),\n        buttonNext ? (buttonNext()) : (React.createElement(NavigationButton, { label: \"Next\", action: ACTION_NEXT, icon: NextIcon, renderIcon: iconNext, style: styles.navigationNext, disabled: nextDisabled, onClick: next }))));\n}\nconst NavigationModule = createModule(MODULE_NAVIGATION, Navigation);\n\nconst noScroll = cssClass(CLASS_NO_SCROLL);\nconst noScrollPadding = cssClass(CLASS_NO_SCROLL_PADDING);\nfunction isHTMLElement(element) {\n    return \"style\" in element;\n}\nfunction padScrollbar(element, padding, rtl) {\n    const styles = window.getComputedStyle(element);\n    const property = rtl ? \"padding-left\" : \"padding-right\";\n    const computedValue = rtl ? styles.paddingLeft : styles.paddingRight;\n    const originalValue = element.style.getPropertyValue(property);\n    element.style.setProperty(property, `${(parseInt(computedValue) || 0) + padding}px`);\n    return () => {\n        if (originalValue) {\n            element.style.setProperty(property, originalValue);\n        }\n        else {\n            element.style.removeProperty(property);\n        }\n    };\n}\nfunction NoScroll({ noScroll: { disabled }, children }) {\n    const rtl = useRTL();\n    useLayoutEffect(() => {\n        if (disabled)\n            return () => { };\n        const cleanup = [];\n        const { body, documentElement } = document;\n        const scrollbar = Math.round(window.innerWidth - documentElement.clientWidth);\n        if (scrollbar > 0) {\n            cleanup.push(padScrollbar(body, scrollbar, rtl));\n            const elements = body.getElementsByTagName(\"*\");\n            for (let i = 0; i < elements.length; i += 1) {\n                const element = elements[i];\n                if (isHTMLElement(element) &&\n                    window.getComputedStyle(element).getPropertyValue(\"position\") === \"fixed\" &&\n                    !element.classList.contains(noScrollPadding)) {\n                    cleanup.push(padScrollbar(element, scrollbar, rtl));\n                }\n            }\n        }\n        body.classList.add(noScroll);\n        return () => {\n            body.classList.remove(noScroll);\n            cleanup.forEach((clean) => clean());\n        };\n    }, [rtl, disabled]);\n    return React.createElement(React.Fragment, null, children);\n}\nconst NoScrollModule = createModule(MODULE_NO_SCROLL, NoScroll);\n\nfunction cssPrefix$1(value) {\n    return composePrefix(MODULE_PORTAL, value);\n}\nfunction setAttribute(element, attribute, value) {\n    const previousValue = element.getAttribute(attribute);\n    element.setAttribute(attribute, value);\n    return () => {\n        if (previousValue) {\n            element.setAttribute(attribute, previousValue);\n        }\n        else {\n            element.removeAttribute(attribute);\n        }\n    };\n}\nfunction Portal({ children, animation, styles, className, on, portal, close }) {\n    const [mounted, setMounted] = React.useState(false);\n    const [visible, setVisible] = React.useState(false);\n    const cleanup = React.useRef([]);\n    const restoreFocus = React.useRef(null);\n    const { setTimeout } = useTimeouts();\n    const { subscribe } = useEvents();\n    const reduceMotion = useMotionPreference();\n    const animationDuration = !reduceMotion ? animation.fade : 0;\n    React.useEffect(() => {\n        setMounted(true);\n        return () => {\n            setMounted(false);\n            setVisible(false);\n        };\n    }, []);\n    const handleCleanup = useEventCallback(() => {\n        cleanup.current.forEach((clean) => clean());\n        cleanup.current = [];\n    });\n    const handleClose = useEventCallback(() => {\n        var _a;\n        setVisible(false);\n        handleCleanup();\n        (_a = on.exiting) === null || _a === void 0 ? void 0 : _a.call(on);\n        setTimeout(() => {\n            var _a;\n            (_a = on.exited) === null || _a === void 0 ? void 0 : _a.call(on);\n            close();\n        }, animationDuration);\n    });\n    React.useEffect(() => subscribe(ACTION_CLOSE, handleClose), [subscribe, handleClose]);\n    const handleEnter = useEventCallback((node) => {\n        var _a, _b, _c;\n        node.scrollTop;\n        setVisible(true);\n        (_a = on.entering) === null || _a === void 0 ? void 0 : _a.call(on);\n        const elements = (_c = (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.children) !== null && _c !== void 0 ? _c : [];\n        for (let i = 0; i < elements.length; i += 1) {\n            const element = elements[i];\n            if ([\"TEMPLATE\", \"SCRIPT\", \"STYLE\"].indexOf(element.tagName) === -1 && element !== node) {\n                cleanup.current.push(setAttribute(element, \"inert\", \"true\"));\n                cleanup.current.push(setAttribute(element, \"aria-hidden\", \"true\"));\n            }\n        }\n        cleanup.current.push(() => {\n            var _a, _b;\n            (_b = (_a = restoreFocus.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n        setTimeout(() => {\n            var _a;\n            (_a = on.entered) === null || _a === void 0 ? void 0 : _a.call(on);\n        }, animationDuration);\n    });\n    const handleRef = React.useCallback((node) => {\n        if (node) {\n            handleEnter(node);\n        }\n        else {\n            handleCleanup();\n        }\n    }, [handleEnter, handleCleanup]);\n    return mounted\n        ? createPortal(React.createElement(\"div\", { ref: handleRef, className: clsx(className, cssClass(\"root\"), cssClass(cssPrefix$1()), cssClass(CLASS_NO_SCROLL_PADDING), visible && cssClass(cssPrefix$1(\"open\"))), role: \"presentation\", \"aria-live\": \"polite\", style: {\n                ...(animation.fade !== LightboxDefaultProps.animation.fade\n                    ? { [cssVar(\"fade_animation_duration\")]: `${animationDuration}ms` }\n                    : null),\n                ...(animation.easing.fade !== LightboxDefaultProps.animation.easing.fade\n                    ? { [cssVar(\"fade_animation_timing_function\")]: animation.easing.fade }\n                    : null),\n                ...styles.root,\n            }, onFocus: (event) => {\n                if (!restoreFocus.current) {\n                    restoreFocus.current = event.relatedTarget;\n                }\n            } }, children), portal.root || document.body)\n        : null;\n}\nconst PortalModule = createModule(MODULE_PORTAL, Portal);\n\nfunction Root({ children }) {\n    return React.createElement(React.Fragment, null, children);\n}\nconst RootModule = createModule(MODULE_ROOT, Root);\n\nfunction cssPrefix(value) {\n    return composePrefix(MODULE_TOOLBAR, value);\n}\nfunction Toolbar({ toolbar: { buttons }, render: { buttonClose, iconClose }, styles }) {\n    const { close, setToolbarWidth } = useController();\n    const { setContainerRef, containerRect } = useContainerRect();\n    useLayoutEffect(() => {\n        setToolbarWidth(containerRect === null || containerRect === void 0 ? void 0 : containerRect.width);\n    }, [setToolbarWidth, containerRect === null || containerRect === void 0 ? void 0 : containerRect.width]);\n    const renderCloseButton = () => {\n        if (buttonClose)\n            return buttonClose();\n        return React.createElement(IconButton, { key: ACTION_CLOSE, label: \"Close\", icon: CloseIcon, renderIcon: iconClose, onClick: close });\n    };\n    return (React.createElement(\"div\", { ref: setContainerRef, style: styles.toolbar, className: cssClass(cssPrefix()) }, buttons === null || buttons === void 0 ? void 0 : buttons.map((button) => (button === ACTION_CLOSE ? renderCloseButton() : button))));\n}\nconst ToolbarModule = createModule(MODULE_TOOLBAR, Toolbar);\n\nfunction renderNode(node, props) {\n    var _a;\n    return React.createElement(node.module.component, { key: node.module.name, ...props }, (_a = node.children) === null || _a === void 0 ? void 0 : _a.map((child) => renderNode(child, props)));\n}\nfunction mergeAnimation(defaultAnimation, animation = {}) {\n    const { easing: defaultAnimationEasing, ...restDefaultAnimation } = defaultAnimation;\n    const { easing, ...restAnimation } = animation;\n    return {\n        easing: { ...defaultAnimationEasing, ...easing },\n        ...restDefaultAnimation,\n        ...restAnimation,\n    };\n}\nfunction Lightbox({ carousel, animation, render, toolbar, controller, noScroll, on, plugins, slides, index, ...restProps }) {\n    const { animation: defaultAnimation, carousel: defaultCarousel, render: defaultRender, toolbar: defaultToolbar, controller: defaultController, noScroll: defaultNoScroll, on: defaultOn, slides: defaultSlides, index: defaultIndex, plugins: defaultPlugins, ...restDefaultProps } = LightboxDefaultProps;\n    const { config, augmentation } = withPlugins([\n        createNode(PortalModule, [\n            createNode(NoScrollModule, [\n                createNode(ControllerModule, [\n                    createNode(CarouselModule),\n                    createNode(ToolbarModule),\n                    createNode(NavigationModule),\n                ]),\n            ]),\n        ]),\n    ], plugins || defaultPlugins);\n    const props = augmentation({\n        animation: mergeAnimation(defaultAnimation, animation),\n        carousel: { ...defaultCarousel, ...carousel },\n        render: { ...defaultRender, ...render },\n        toolbar: { ...defaultToolbar, ...toolbar },\n        controller: { ...defaultController, ...controller },\n        noScroll: { ...defaultNoScroll, ...noScroll },\n        on: { ...defaultOn, ...on },\n        ...restDefaultProps,\n        ...restProps,\n    });\n    if (!props.open)\n        return null;\n    return (React.createElement(LightboxPropsProvider, { ...props },\n        React.createElement(LightboxStateProvider, { slides: slides || defaultSlides, index: parseInt(index || defaultIndex) },\n            React.createElement(TimeoutsProvider, null,\n                React.createElement(EventsProvider, null, renderNode(createNode(RootModule, config), props))))));\n}\n\nexport { ACTION_CLOSE, ACTION_NEXT, ACTION_PREV, ACTION_SWIPE, CLASS_FLEX_CENTER, CLASS_NO_SCROLL, CLASS_NO_SCROLL_PADDING, CLASS_SLIDE_WRAPPER, Carousel, CarouselModule, CloseIcon, Controller, ControllerContext, ControllerModule, ELEMENT_BUTTON, ELEMENT_ICON, EVENT_ON_KEY_DOWN, EVENT_ON_KEY_UP, EVENT_ON_POINTER_CANCEL, EVENT_ON_POINTER_DOWN, EVENT_ON_POINTER_LEAVE, EVENT_ON_POINTER_MOVE, EVENT_ON_POINTER_UP, EVENT_ON_WHEEL, ErrorIcon, EventsContext, EventsProvider, IMAGE_FIT_CONTAIN, IMAGE_FIT_COVER, IconButton, ImageSlide, Lightbox, LightboxDefaultProps, LightboxDispatchContext, LightboxPropsContext, LightboxPropsProvider, LightboxStateContext, LightboxStateProvider, LoadingIcon, MODULE_CAROUSEL, MODULE_CONTROLLER, MODULE_NAVIGATION, MODULE_NO_SCROLL, MODULE_PORTAL, MODULE_ROOT, MODULE_TOOLBAR, Navigation, NavigationButton, NavigationModule, NextIcon, NoScroll, NoScrollModule, Portal, PortalModule, PreviousIcon, Root, RootModule, SLIDE_STATUS_COMPLETE, SLIDE_STATUS_ERROR, SLIDE_STATUS_LOADING, SLIDE_STATUS_PLACEHOLDER, SwipeState, TimeoutsContext, TimeoutsProvider, Toolbar, ToolbarModule, UNKNOWN_ACTION_TYPE, VK_ARROW_LEFT, VK_ARROW_RIGHT, VK_ESCAPE, activeSlideStatus, addToolbarButton, calculatePreload, cleanup, clsx, composePrefix, computeSlideRect, createIcon, createIconDisabled, createModule, createNode, cssClass, cssVar, Lightbox as default, devicePixelRatio, getSlide, getSlideIfPresent, getSlideIndex, hasSlides, hasWindow, isImageFitCover, isImageSlide, label, makeComposePrefix, makeUseContext, parseInt, parseLengthPercentage, round, setRef, stopNavigationEventsPropagation, useAnimation, useContainerRect, useController, useDelay, useEventCallback, useEvents, useForkRef, useKeyboardNavigation, useLayoutEffect, useLightboxDispatch, useLightboxProps, useLightboxState, useLoseFocus, useMotionPreference, useNavigationState, usePointerEvents, usePointerSwipe, usePreventSwipeNavigation, useRTL, useSensors, useThrottle, useTimeouts, useWheelSwipe, withPlugins };","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport photosBig from '../img/home_item_images/photos_big.jpg';\r\nimport { images } from '../app/data/photos-imagesdata';\r\nimport { Gallery } from 'react-grid-gallery';\r\nimport Lightbox from 'yet-another-react-lightbox';\r\nimport 'yet-another-react-lightbox/styles.css';\r\n\r\nexport default function Photos() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const [index, setIndex] = useState(-1);\r\n\r\n  const slides = images.map((image) => ({\r\n    src: image.src,\r\n    width: image.width,\r\n    height: image.height,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${photosBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">Photos</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <Gallery\r\n            images={images}\r\n            onClick={(event, obj) => {\r\n              const index = images.findIndex((image) => image.src === obj.src);\r\n              setIndex(index);\r\n            }}\r\n            enableImageSelection={false}\r\n          />\r\n          <Lightbox\r\n            slides={slides}\r\n            open={index >= 0}\r\n            index={index}\r\n            close={() => setIndex(-1)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import tomkra_art001 from '../../img/art_images/tomkra_art001.jpg';\r\nimport tomkra_art002 from '../../img/art_images/tomkra_art002.jpg';\r\nimport tomkra_art003 from '../../img/art_images/tomkra_art003.jpg';\r\nimport tomkra_art004 from '../../img/art_images/tomkra_art004.jpg';\r\nimport tomkra_art005 from '../../img/art_images/tomkra_art005.jpg';\r\nimport tomkra_art006 from '../../img/art_images/tomkra_art006.jpg';\r\nimport tomkra_art007 from '../../img/art_images/tomkra_art007.jpg';\r\nimport tomkra_art008 from '../../img/art_images/tomkra_art008.jpg';\r\nimport tomkra_art009 from '../../img/art_images/tomkra_art009.jpg';\r\nimport tomkra_art010 from '../../img/art_images/tomkra_art010.jpg';\r\nimport tomkra_art011 from '../../img/art_images/tomkra_art011.jpg';\r\nimport tomkra_art012 from '../../img/art_images/tomkra_art012.jpg';\r\nimport tomkra_art013 from '../../img/art_images/tomkra_art013.jpg';\r\nimport tomkra_art014 from '../../img/art_images/tomkra_art014.jpg';\r\nimport tomkra_art015 from '../../img/art_images/tomkra_art015.jpg';\r\nimport tomkra_art016 from '../../img/art_images/tomkra_art016.jpg';\r\nimport tomkra_art017 from '../../img/art_images/tomkra_art017.jpg';\r\nimport tomkra_art018 from '../../img/art_images/tomkra_art018.jpg';\r\nimport tomkra_art019 from '../../img/art_images/tomkra_art019.jpg';\r\nimport tomkra_art020 from '../../img/art_images/tomkra_art020.jpg';\r\nimport tomkra_art021 from '../../img/art_images/tomkra_art021.jpg';\r\nimport tomkra_art022 from '../../img/art_images/tomkra_art022.jpg';\r\nimport tomkra_art023 from '../../img/art_images/tomkra_art023.jpg';\r\nimport tomkra_art024 from '../../img/art_images/tomkra_art024.jpg';\r\nimport tomkra_art025 from '../../img/art_images/tomkra_art025.jpg';\r\nimport tomkra_art026 from '../../img/art_images/tomkra_art026.jpg';\r\nimport tomkra_art027 from '../../img/art_images/tomkra_art027.jpg';\r\nimport tomkra_art028 from '../../img/art_images/tomkra_art028.jpg';\r\nimport tomkra_art029 from '../../img/art_images/tomkra_art029.jpg';\r\nimport tomkra_art030 from '../../img/art_images/tomkra_art030.jpg';\r\nimport tomkra_art031 from '../../img/art_images/tomkra_art031.jpg';\r\nimport tomkra_art032 from '../../img/art_images/tomkra_art032.jpg';\r\nimport tomkra_art033 from '../../img/art_images/tomkra_art033.jpg';\r\nimport tomkra_art034 from '../../img/art_images/tomkra_art034.jpg';\r\nimport tomkra_art035 from '../../img/art_images/tomkra_art035.jpg';\r\nimport tomkra_art036 from '../../img/art_images/tomkra_art036.jpg';\r\nimport tomkra_art037 from '../../img/art_images/tomkra_art037.jpg';\r\nimport tomkra_art038 from '../../img/art_images/tomkra_art038.jpg';\r\nimport tomkra_art039 from '../../img/art_images/tomkra_art039.jpg';\r\nimport tomkra_art040 from '../../img/art_images/tomkra_art040.jpg';\r\nimport tomkra_art041 from '../../img/art_images/tomkra_art041.jpg';\r\nimport tomkra_art042 from '../../img/art_images/tomkra_art042.jpg';\r\nimport tomkra_art043 from '../../img/art_images/tomkra_art043.jpg';\r\nimport tomkra_art044 from '../../img/art_images/tomkra_art044.jpg';\r\nimport tomkra_art045 from '../../img/art_images/tomkra_art045.jpg';\r\nimport tomkra_art046 from '../../img/art_images/tomkra_art046.jpg';\r\nimport tomkra_art047 from '../../img/art_images/tomkra_art047.JPG';\r\n\r\nexport const images = [\r\n  {\r\n    src: tomkra_art047,\r\n    width: 800,\r\n    height: 533,\r\n    caption: 'Acrylic Painting of Pikachu and Caterpie in Van Gogh Style.',\r\n  },\r\n  {\r\n    src: tomkra_art001,\r\n    width: 800,\r\n    height: 582,\r\n    caption: 'Map of Austria in LOTR Style',\r\n  },\r\n  {\r\n    src: tomkra_art002,\r\n    width: 800,\r\n    height: 566,\r\n    caption: 'Crab in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art003,\r\n    width: 800,\r\n    height: 565,\r\n    caption: 'Oystercatcher in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art004,\r\n    width: 800,\r\n    height: 343,\r\n    caption: 'Birthday Scene in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art005,\r\n    width: 400,\r\n    height: 600,\r\n    caption: 'Painting of 2 Koi-Fish in Zen-Circle',\r\n  },\r\n  {\r\n    src: tomkra_art006,\r\n    width: 800,\r\n    height: 566,\r\n    caption: 'Cartoon Drawing of my Wife, in DragonBall Style',\r\n  },\r\n  {\r\n    src: tomkra_art007,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'A Crab as Santa in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art008,\r\n    width: 429,\r\n    height: 600,\r\n    caption: 'A painting of Simba and Rafiki from the Lion King on Canvas',\r\n  },\r\n  {\r\n    src: tomkra_art009,\r\n    width: 484,\r\n    height: 600,\r\n    caption: 'Ice Cube in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art010,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'A Drone in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art011,\r\n    width: 400,\r\n    height: 600,\r\n    caption: 'A Map of Texel in LOTR Style',\r\n  },\r\n  {\r\n    src: tomkra_art012,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'A Kettlebell in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art013,\r\n    width: 800,\r\n    height: 565,\r\n    caption: 'A painting of 2 Highland Cows',\r\n  },\r\n  {\r\n    src: tomkra_art014,\r\n    width: 800,\r\n    height: 571,\r\n    caption: 'A painted scene from My Neighbour Totoro in Guoache on Canvas',\r\n  },\r\n  {\r\n    src: tomkra_art015,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'A deep Sea creature drawing from my Sketchbook',\r\n  },\r\n  {\r\n    src: tomkra_art016,\r\n    width: 800,\r\n    height: 571,\r\n    caption:\r\n      'A painting in Guoache of a photo from Vending-Machines, which I took in Japan',\r\n  },\r\n  {\r\n    src: tomkra_art017,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'a drawing of my friends as mouses for a Pen&Paper Game',\r\n  },\r\n  {\r\n    src: tomkra_art018,\r\n    width: 429,\r\n    height: 600,\r\n    caption: 'A Bialetti floating in Space in Ink. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art019,\r\n    width: 800,\r\n    height: 533,\r\n    caption: 'A skelleton crawling of of his grave for coffe. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art020,\r\n    width: 800,\r\n    height: 600,\r\n    caption: 'A Bean as Indiana Jones. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art021,\r\n    width: 429,\r\n    height: 600,\r\n    caption: 'A fish, floating in space. Guoache on Paper',\r\n  },\r\n  {\r\n    src: tomkra_art022,\r\n    width: 800,\r\n    height: 533,\r\n    caption: 'A fish, underwater, watering his corals. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art023,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'A Kettlebell and a Barbell in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art024,\r\n    width: 800,\r\n    height: 533,\r\n    caption: 'A Cat in a Spacesuit. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art025,\r\n    width: 800,\r\n    height: 533,\r\n    caption: 'Dancing Skeletons. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art026,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'A whistling Hammer in Vintage Cartoon Style',\r\n  },\r\n  {\r\n    src: tomkra_art027,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'Majin Boo from Dragonball for Inktober',\r\n  },\r\n  {\r\n    src: tomkra_art045,\r\n    width: 591,\r\n    height: 600,\r\n    caption: 'Logo for the Earth-Science-Student-Community Graz.',\r\n  },\r\n  {\r\n    src: tomkra_art028,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'A Glitch between Mew and Pikachu for Inktober',\r\n  },\r\n  {\r\n    src: tomkra_art029,\r\n    width: 429,\r\n    height: 600,\r\n    caption: 'A Star wars Fanart for the birth of my niece. Guoache on Paper',\r\n  },\r\n  {\r\n    src: tomkra_art030,\r\n    width: 429,\r\n    height: 600,\r\n    caption: 'A grumpy thunderstorm for Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art031,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'Son Goku from Dragonball for Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art032,\r\n    width: 800,\r\n    height: 533,\r\n    caption: 'Dugtrio for Inktober',\r\n  },\r\n  {\r\n    src: tomkra_art033,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'A comic vulcano, spreading love.',\r\n  },\r\n  {\r\n    src: tomkra_art034,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'A whistling Bean in Vintage Cartoon Style. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art035,\r\n    width: 800,\r\n    height: 600,\r\n    caption: 'A Bean on a Rocket. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art036,\r\n    width: 800,\r\n    height: 566,\r\n    caption: 'A Logo for an Outdoor-Fitness-Coach.',\r\n  },\r\n  {\r\n    src: tomkra_art037,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'A Skelleton greeting. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art038,\r\n    width: 424,\r\n    height: 600,\r\n    caption: 'A Bear with a Pearl-Earring. Digital. For a GameJam.',\r\n  },\r\n  {\r\n    src: tomkra_art039,\r\n    width: 800,\r\n    height: 566,\r\n    caption: 'A Logo for a GameJam.',\r\n  },\r\n  {\r\n    src: tomkra_art040,\r\n    width: 800,\r\n    height: 571,\r\n    caption: 'Vintage Radio in Vintage Cartoon Style. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art041,\r\n    width: 429,\r\n    height: 600,\r\n    caption: 'A Razor in Vintage Cartoon Style. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art042,\r\n    width: 600,\r\n    height: 600,\r\n    caption: 'Logo Idea for a Science Podcast.',\r\n  },\r\n  {\r\n    src: tomkra_art043,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'Sketch of a Bottle Skele-Gro. For Inktober.',\r\n  },\r\n  {\r\n    src: tomkra_art044,\r\n    width: 800,\r\n    height: 570,\r\n    caption: 'Sketchbook Drawing of 3 teeth. For Inktober.',\r\n  },\r\n\r\n  {\r\n    src: tomkra_art046,\r\n    width: 450,\r\n    height: 600,\r\n    caption: 'Werewolf for Inktober.',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport artBig from '../img/home_item_images/art_big.jpg';\r\nimport { images } from '../app/data/art-imagesdata';\r\nimport { Gallery } from 'react-grid-gallery';\r\nimport Lightbox from 'yet-another-react-lightbox';\r\nimport 'yet-another-react-lightbox/styles.css';\r\n\r\nexport default function Art() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const [index, setIndex] = useState(-1);\r\n\r\n  const slides = images.map((image) => ({\r\n    src: image.src,\r\n    width: image.width,\r\n    height: image.height,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${artBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">Art</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <Gallery\r\n            images={images}\r\n            onClick={(event, obj) => {\r\n              const index = images.findIndex((image) => image.src === obj.src);\r\n              setIndex(index);\r\n            }}\r\n            enableImageSelection={false}\r\n          />\r\n          <Lightbox\r\n            slides={slides}\r\n            open={index >= 0}\r\n            index={index}\r\n            close={() => setIndex(-1)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport aboutBig from '../img/home_item_images/about_big.jpg';\r\n\r\nexport default function Contact() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${aboutBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">Contact</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <p>Contact</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport aboutBig from '../img/home_item_images/about_big.jpg';\r\n\r\nexport default function Impressum() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"singlepage__contentContainer\">\r\n        <div\r\n          className=\"singlepage__headerImage\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(96, 92, 78, 0.5), rgba(96, 92, 78, 0.5)), url(${aboutBig})`,\r\n          }}\r\n        >\r\n          <h1 className=\"singlepage__headerTitle\">Impressum</h1>\r\n        </div>\r\n        <div className=\"singlepage__content\">\r\n          <p>Impressum</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMastodon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M433 179.1c0-97.2-63.7-125.7-63.7-125.7-62.5-28.7-228.6-28.4-290.5 0 0 0-63.7 28.5-63.7 125.7 0 115.7-6.6 259.4 105.6 289.1 40.5 10.7 75.3 13 103.3 11.4 50.8-2.8 79.3-18.1 79.3-18.1l-1.7-36.9s-36.3 11.4-77.1 10.1c-40.4-1.4-83-4.4-89.6-54a102.5 102.5 0 0 1 -.9-13.9c85.6 20.9 158.7 9.1 178.8 6.7 56.1-6.7 105-41.3 111.2-72.9 9.8-49.8 9-121.5 9-121.5zm-75.1 125.2h-46.6v-114.2c0-49.7-64-51.6-64 6.9v62.5h-46.3V197c0-58.5-64-56.6-64-6.9v114.2H90.2c0-122.1-5.2-147.9 18.4-175 25.9-28.9 79.8-30.8 103.8 6.1l11.6 19.5 11.6-19.5c24.1-37.1 78.1-34.8 103.8-6.1 23.7 27.3 18.4 53 18.4 175z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMastodon);\nexport default __webpack_public_path__ + \"static/media/mastodon.9a2ac2a3d567c71c258da7330971ce18.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSquareArrowUpRightSolid(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffffff4d\",\n    d: \"M384 32c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96C0 60.7 28.7 32 64 32H384zM160 144c-13.3 0-24 10.7-24 24s10.7 24 24 24h94.1L119 327c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l135-135V328c0 13.3 10.7 24 24 24s24-10.7 24-24V168c0-13.3-10.7-24-24-24H160z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSquareArrowUpRightSolid);\nexport default __webpack_public_path__ + \"static/media/square-arrow-up-right-solid.aa99a51db1a7411485d4c498ca6ba9a1.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\r\nimport './dist/style.css';\r\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport { ReactComponent as Logo } from './img/crow_stamp_svg.svg';\r\nimport { ReactComponent as Hamburger } from './img/bars-solid.svg';\r\nimport { ReactComponent as Close } from './img/x-bars-solid.svg';\r\n\r\nimport Home from './pages/home';\r\nimport About from './pages/about';\r\nimport Skills from './pages/skills';\r\nimport Projects from './pages/projects';\r\nimport Photos from './pages/photos';\r\nimport Art from './pages/art';\r\nimport Contact from './pages/contact';\r\nimport Impressum from './pages/impressum';\r\n\r\nimport { ReactComponent as Mastdodon } from './img/mastodon.svg';\r\nimport { ReactComponent as GitHub } from './img/github.svg';\r\nimport { ReactComponent as Extern } from './img/square-arrow-up-right-solid.svg';\r\n\r\nexport default function App() {\r\n  const [isMobileNavVisible, setMobileNavVisible] = useState(false);\r\n\r\n  const handleHamburgerClick = () => {\r\n    setMobileNavVisible(true);\r\n  };\r\n\r\n  const handleCloseClick = () => {\r\n    setMobileNavVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMobileNavVisible) {\r\n      document.body.classList.add('no-scroll');\r\n    } else {\r\n      document.body.classList.remove('no-scroll');\r\n    }\r\n  }, [isMobileNavVisible]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Link to=\"#main\" class=\"visually-hidden\">\r\n        Skip to main content\r\n      </Link>\r\n      <header class=\"topnav\">\r\n        <h2 class=\"visually-hidden\">Header</h2>\r\n        <div class=\"wrapper topnav__wrapper\">\r\n          <div class=\"topnav__leftcolumn\">\r\n            <Link to=\"/\" class=\"topnav__homelink hover-fade\">\r\n              <Logo class=\"topnav__logo\" />\r\n            </Link>\r\n          </div>\r\n          <div class=\"topnav__rightcolumn\">\r\n            <h1 class=\"topnav__title\">Tom Kra</h1>\r\n            <nav>\r\n              <ul class=\"topnav__links\">\r\n                <Hamburger\r\n                  class=\"topnav__hamburger\"\r\n                  style={{ fill: 'var(--text-color-light)' }}\r\n                  onClick={handleHamburgerClick}\r\n                />\r\n                <div\r\n                  class=\"topnav__hamburgerwrapper\"\r\n                  onClick={handleHamburgerClick}\r\n                ></div>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/\" class=\"topnav__link\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/aboutme\" class=\"topnav__link\">\r\n                    About Me\r\n                  </Link>\r\n                </li>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/skills\" class=\"topnav__link\">\r\n                    Skills\r\n                  </Link>\r\n                </li>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/projects\" class=\"topnav__link\">\r\n                    Projects\r\n                  </Link>\r\n                </li>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/photos\" class=\"topnav__link\">\r\n                    Photos\r\n                  </Link>\r\n                </li>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/art\" class=\"topnav__link\">\r\n                    Art\r\n                  </Link>\r\n                </li>\r\n                <li class=\"topnav__item\">\r\n                  <Link to=\"/contact\" class=\"topnav__link\">\r\n                    Contact\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        <div class={`mobilenav ${isMobileNavVisible ? '' : 'hidden'}`}>\r\n          <nav>\r\n            <Close\r\n              class=\"mobilenav__close\"\r\n              style={{ fill: 'var(--text-color-light)' }}\r\n              onClick={handleCloseClick}\r\n            />\r\n\r\n            <ul class=\"mobilenav__links\">\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/\" class=\"mobilenav__link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/aboutme\" class=\"mobilenav__link\">\r\n                  About Me\r\n                </Link>\r\n              </li>\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/skills\" class=\"mobilenav__link\">\r\n                  Skills\r\n                </Link>\r\n              </li>\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/projects\" class=\"mobilenav__link\">\r\n                  Projects\r\n                </Link>\r\n              </li>\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/photos\" class=\"mobilenav__link\">\r\n                  Photos\r\n                </Link>\r\n              </li>\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/art\" class=\"mobilenav__link\">\r\n                  Art\r\n                </Link>\r\n              </li>\r\n              <li class=\"mobilenav__item\" onClick={handleCloseClick}>\r\n                <Link to=\"/contact\" class=\"mobilenav__link\">\r\n                  Contact\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"wrapper__content\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/aboutme\" element={<About />} />\r\n          <Route path=\"/skills\" element={<Skills />} />\r\n          <Route path=\"/projects\" element={<Projects />} />\r\n          <Route path=\"/photos\" element={<Photos />} />\r\n          <Route path=\"/art\" element={<Art />} />\r\n          <Route path=\"/contact\" element={<Contact />} />\r\n          <Route path=\"/impressum\" element={<Impressum />} />\r\n        </Routes>\r\n        <footer class=\"footer\">\r\n          <div class=\"footer__collumn1\">\r\n            <Link to=\"/\" class=\"topnav__homelink hover-fade\">\r\n              <Logo class=\"footer__logo\" />\r\n            </Link>\r\n            <p>©2024 Tom Kra</p>\r\n          </div>\r\n          <div class=\"footer__collumn2\">\r\n            <ul>\r\n              <li>\r\n                <a\r\n                  href=\"https://github.com/tom-mate-o\"\r\n                  target=\"_blank\"\r\n                  class=\"footer__link\"\r\n                >\r\n                  <GitHub class=\"footer__socialicon\" />\r\n                  GitHub\r\n                  <Extern class=\"footer__externicon\" />\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"https://mastodon.art/@tomkra\"\r\n                  target=\"_blank\"\r\n                  class=\"footer__link\"\r\n                >\r\n                  <Mastdodon class=\"footer__socialicon\" />\r\n                  Mastodon\r\n                  <Extern class=\"footer__externicon\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"footer__collumn3\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"\" class=\"footer__link\">\r\n                  <Link to=\"/contact\" class=\"footer__link\">\r\n                    Contact\r\n                  </Link>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"footer__collumn4\">\r\n            <ul>\r\n              <li>\r\n                <a href=\"\" class=\"footer__link\">\r\n                  <Link to=\"/impressum\" class=\"footer__link\">\r\n                    Impressum\r\n                  </Link>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","exports","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","require$$0__default","__self","__source","reactJsxRuntime_production_min","Fragment","jsx","jsxs","jsxRuntime","requireReactJsxRuntime_production_min","getStyle","styleProp","rotationTransformMap","SELECTION_MARGIN","gallery","flexWrap","thumbnail","_a","item","rotationTransformValue","orientation","cursor","maxWidth","scaledWidth","scaledHeight","marginLeft","marginTop","transform","isSelected","ratio","viewportHeight","viewportWidth","floor","abs","tileViewport","styles","nano","background","backgroundSize","backgroundPosition","margin","customOverlay","pointerEvents","hover","position","galleryItem","WebkitUserSelect","padding","tileOverlay","showOverlay","tileIconBar","tileDescription","userSelect","MozUserSelect","bottomBar","minHeight","maxHeight","bottom","tagItemBlock","tagItem","fontSize","textAlign","whiteSpace","verticalAlign","borderRadius","checkButton","visibility","isVisible","float","border","CheckButton","_b","_c","_d","_e","selectedColor","_f","hoverColor","_g","require$$0","setHover","circleStyle","fillColor","handleMouseOver","handleMouseOut","jsxRuntimeExports","__assign","title","onMouseOver","onMouseOut","fill","viewBox","xmlns","cx","cy","gradientTransform","gradientUnits","stopColor","Image","ThumbnailImageComponent","thumbnailImageComponent","isSelectable","thumbnailStyle","tagStyle","tileViewportStyle","onSelect","styleContext","thumbnailProps","alt","caption","handleCheckButtonClick","handleViewportClick","thumbnailImageProps","className","onMouseEnter","onMouseLeave","tags","map","imageProps","thumbnailCaption","useContainerWidth","defaultContainerWidth","observerRef","containerWidth","setContainerWidth","containerRef","disconnect","undefined","updateWidth","clientWidth","getBoundingClientRect","ResizeObserver","observe","calculateCutOff","items","totalRowWidth","protrudingWidth","cutOff","cutSum","i","fractionOfWidth","stillToCutOff","getRow","images","rowHeight","row","imgMargin","__spreadArray","extendedItem","cutoff","pixelsToRemove","getRows","rows","imagesLeft","nextRows","maxRows","buildLayout","buildLayoutFlat","Gallery","enableImageSelection","_h","_j","thumbnails","handleSelect","handleClick","resetWarningCache","o","s","isRequired","array","bool","func","object","string","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","Element","ArrayBuffer","isView","entries","RegExp","warn","__esModule","default","globalThis","Function","toStringTag","nt","global","self","parseInt","NaN","j","max","TypeError","leading","maxWait","trailing","cancel","flush","_","some","__entries__","clear","requestAnimationFrame","MutationObserver","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","connect_","removeObserver","disconnect_","updateObservers_","filter","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","getInstance","instance_","writable","parseFloat","reduce","SVGGraphicsElement","SVGElement","getBBox","broadcastWidth","broadcastHeight","contentRect_","isActive","clientHeight","getComputedStyle","right","boxSizing","round","broadcastRect","$","DOMRectReadOnly","contentRect","activeObservations_","observations_","callback_","controller_","callbackCtx_","unobserve","clearActive","delta","preventScrollOnSwipe","rotationAngle","trackMouse","trackTouch","swipeDuration","touchEventOptions","first","initial","swiping","xy","PI","cos","sin","onTouchStartOrOnMouseDown","sqrt","absX","absY","dir","velocity","vxvy","onSwipeStart","onSwiping","onSwiped","eventData","onTap","onTouchEndOrOnMouseUp","_ref","_ref2","cleanUpTouch","onMouseDown","getOwnPropertySymbols","getOwnPropertyDescriptors","defineProperties","toPrimitive","description","fullscreen","isFullscreen","originalAlt","originalHeight","originalWidth","originalTitle","sizes","srcSet","loading","memo","handleImageLoaded","onImageError","original","onLoad","propTypes","points","maximize","minimize","play","pause","icon","stroke","strokeLinecap","strokeLinejoin","isPlaying","Ge","setPrototypeOf","__proto__","ReferenceError","getPrototypeOf","media","et","tt","sham","Proxy","Boolean","onBulletClick","currentIndex","blur","slideToIndexWithStyleReset","slideToIndex","startIndex","thumbsTranslate","thumbsSwipedTranslate","currentSlideOffset","galleryWidth","thumbnailsWrapperWidth","thumbnailsWrapperHeight","thumbsStyle","slideDuration","isSwipingThumbnail","loadedImages","imageGallery","createRef","thumbnailsWrapper","imageGallerySlideWrapper","handleKeyDown","handleMouseDown","handleResize","handleTouchMove","handleOnSwiped","handleScreenChange","handleSwiping","handleThumbnailSwiping","handleOnThumbnailSwiped","onThumbnailMouseLeave","handleImageError","pauseOrPlay","renderThumbInner","renderItem","slideLeft","slideRight","toggleFullScreen","togglePlay","unthrottledSlideToIndex","lazyLoad","lazyLoaded","autoPlay","useWindowKeyDown","initSlideWrapperResizeObserver","initThumbnailWrapperResizeObserver","addScreenChangeEvent","slideInterval","thumbnailPosition","showThumbnails","removeResizeObserver","removeThumbnailsResizeObserver","slideThumbnailBar","setState","slideStyle","removeScreenChangeEvent","playPauseIntervalId","clearInterval","transitionTimer","isTransitioning","onSlide","onThumbnailClick","thumbnailMouseOverTimer","onScreenChange","modalFullscreen","disableThumbnailScroll","isThumbnailVertical","scrollHeight","scrollWidth","infinite","previousIndex","direction","gallerySlideWrapperHeight","useTranslate3D","isRTL","getTranslateXForTwoSlide","isSlideVisible","WebkitTransform","MozTransform","msTransform","OTransform","slideOnThumbnailOver","onTouchMove","onTouchEnd","onTouchStart","showBullets","getAlignmentClassName","originalClass","thumbnailClass","getSlideStyle","tabIndex","onKeyUp","handleSlideKeyUp","onFocus","role","active","handleThumbnailMouseOver","handleThumbnailKeyUp","bulletClass","slides","bullets","slideIsTransitioning","ignoreIsTransitioning","isFirstOrLastSlide","getThumbsTranslate","canSlidePrevious","canSlideNext","disableSwipe","swipingUpDown","swipingLeftRight","swipingTransitionDuration","swipingThumbnailTransitionDuration","resetSwipingDirection","swipeThreshold","flickThreshold","handleOnSwipedTo","sufficientSwipe","canSlideLeft","canSlideRight","classList","disableKeyDown","useBrowserFullscreen","remove","exitFullScreen","onErrorImageURL","resizeThumbnailWrapperObserver","resizeSlideWrapperObserver","offsetWidth","offsetHeight","setThumbsTranslate","fullScreen","fullscreenElement","msFullscreenElement","mozFullScreenElement","webkitFullscreenElement","onBeforeSlide","onSliding","slideTo","onThumbnailMouseOver","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","setModalFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","onPlay","setInterval","onPause","onImageLoad","onThumbnailError","thumbnailHeight","thumbnailWidth","thumbnailAlt","thumbnailTitle","thumbnailLoading","thumbnailLabel","additionalClass","disableThumbnailSwipe","indexSeparator","renderFullscreenButton","renderCustomControls","renderLeftNav","renderRightNav","showFullscreenButton","showIndex","showNav","showPlayButton","renderPlayPauseButton","getThumbnailStyle","getSlideItems","getThumbnailPositionClassName","canSlide","getThumbnailBarHeight","bulletOnClick","imageSet","forceUpdate","escape","_status","_result","Children","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","forwardRef","isValidElement","lazy","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","obj","ns","def","getOwnPropertyNames","definition","prop","Action","PopStateEventType","invariant","warning","cond","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","createURL","origin","URL","replaceState","listen","fn","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","paramName","compilePath","captureGroups","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","findIndex","renderFallback","fallbackIndex","v7_partialHydration","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","BrowserRouter","_ref4","historyRef","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","reloadDocument","preventScrollReset","unstable_viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","_defs","SvgCrowStampSvg","svgRef","titleId","clipPath","ForwardRef","_path","SvgBarsSolid","SvgXBarsSolid","homedata","class","image","linkto","Home","currentImage","setCurrentImage","tomBW","sentences","setIndex","subIndex","setSubIndex","reverse","setReverse","scrollTo","timeout","prev","_jsxs","_jsx","tomColour","backgroundImage","About","aboutBig","aboutTom","frameBorder","allowFullScreen","allow","skillicons","api","adaptive","algorithm","asyncprogramming","confidentcommunication","deployment","flexible","fullstackapp","growthmindset","ideas","mockup","problemdecomposition","scrum","selfmotivation","solutionfocused","sparkingflame","thinkinginreact","timemanagement","versioncontrol","Skills","skillsBig","mongoDB","express","react","sass","js","html5","css3","projectdata","github","demo","SvgGithub","SvgEyeRegular","Projects","selectedTags","setSelectedTags","activeTag","setActiveTag","projectsBig","handleTagClick","ImageGallery","emulateTouch","swipable","GitHubLink","WebsiteLink","MODULE_CAROUSEL","MODULE_CONTROLLER","MODULE_PORTAL","MODULE_TOOLBAR","SLIDE_STATUS_LOADING","SLIDE_STATUS_ERROR","SLIDE_STATUS_COMPLETE","SLIDE_STATUS_PLACEHOLDER","activeSlideStatus","CLASS_FLEX_CENTER","CLASS_NO_SCROLL_PADDING","CLASS_SLIDE_WRAPPER","ACTION_PREV","ACTION_NEXT","ACTION_SWIPE","ACTION_CLOSE","EVENT_ON_POINTER_DOWN","EVENT_ON_POINTER_MOVE","EVENT_ON_POINTER_UP","EVENT_ON_POINTER_LEAVE","EVENT_ON_POINTER_CANCEL","EVENT_ON_KEY_DOWN","EVENT_ON_KEY_UP","EVENT_ON_WHEEL","VK_ESCAPE","VK_ARROW_LEFT","VK_ARROW_RIGHT","ELEMENT_ICON","IMAGE_FIT_CONTAIN","IMAGE_FIT_COVER","UNKNOWN_ACTION_TYPE","clsx","_len","classes","_key","cls","cssPrefix$3","cssClass","cssVar","composePrefix","prefix","makeComposePrefix","label","labels","lbl","cleanup","_len2","cleaners","_key2","cleaner","makeUseContext","contextName","hasWindow","isImageSlide","slide","isImageFitCover","imageFit","Number","parseLengthPercentage","pixel","percent","computeSlideRect","containerRect","paddingValue","paddingPixels","getSlideIndex","slidesCount","hasSlides","getSlideIfPresent","getSlide","LightboxDefaultProps","open","close","plugins","toolbar","fade","swipe","easing","navigation","carousel","finite","preload","spacing","controller","aria","touchAction","closeOnPullUp","closeOnPullDown","closeOnBackdropClick","portal","noScroll","on","createModule","createNode","traverseNode","flatMap","traverse","nodes","EventsContext","useEvents","EventsProvider","subscriptions","topic","unsubscribe","publish","_len3","_key3","subscribe","LightboxPropsContext","useLightboxProps","LightboxPropsProvider","_ref3","LightboxStateContext","useLightboxState","LightboxDispatchContext","useLightboxDispatch","reducer","increment","globalIndex","currentSlide","duration","LightboxStateProvider","TimeoutsContext","useTimeouts","TimeoutsProvider","timeouts","tid","removeTimeout","IconButton","label$1","Icon","renderIcon","svgIcon","focusable","createIcon","glyph","CloseIcon","PreviousIcon","NextIcon","LoadingIcon","x1","y1","x2","y2","ErrorIcon","useMotionPreference","reduceMotion","setReduceMotion","mediaQuery","matchMedia","useAnimation","nodeRef","computeAnimation","snapshot","keyframes","onfinish","values","currentTransformation","animate","prepareAnimation","currentSnapshot","isAnimationPlaying","playState","useContainerRect","setContainerRect","setContainerRef","updateContainerRect","paddingLeft","paddingRight","paddingTop","paddingBottom","useDelay","timeoutId","useEventCallback","_len4","args","_key4","setRef","useForkRef","refA","refB","refValue","useLoseFocus","focused","onBlur","useRTL","setIsRTL","useThrottle","lastCallbackTime","delayCallback","executeCallback","_len5","_key5","_len6","_key6","slidePrefix","slideImagePrefix","ImageSlide","rect","setStatus","imageRef","handleLoading","decode","setImageRef","complete","handleOnLoad","cover","nonInfinite","isFinite","naturalWidth","naturalHeight","defaultStyle","MAX_VALUE","imagePropsStyle","imagePropsClassName","restImageProps","draggable","iconLoading","iconError","SwipeState","Gesture","SWIPE_THRESHOLD","usePointerSwipe","subscribeSensors","isSwipeValid","swipeAnimationDuration","onSwipeProgress","onSwipeFinish","onSwipeCancel","pullUpEnabled","pullDownEnabled","onPullStart","onPullProgress","onPullFinish","onPullCancel","pointers","activePointer","gesture","NONE","clearPointer","currentPointers","addPointer","onPointerDown","exceedsPullThreshold","threshold","onPointerUp","find","currentOffset","SWIPE","PULL","onPointerMove","usePointerEvents","pointer","isCurrentPointer","startGesture","newGesture","WHEEL","cssContainerPrefix","ControllerContext","useController","ControllerModule","_ref8","toolbarWidth","setToolbarWidth","swipeState","setSwipeState","swipeOffset","pullOffset","pullOpacity","registerSensors","subscribers","notifySubscribers","onPointerLeave","onPointerCancel","onKeyDown","onWheel","useSensors","cleanupAnimationIncrement","cleanupSwipeOffset","cleanupPullOffset","handleContainerRef","usePreventSwipeNavigation","carouselRef","setCarouselRef","rtl","getLightboxProps","getLightboxState","setSwipeOffset","setPullOffset","offsetValue","factor","EPSILON","preparePullAnimation","translate","pull","ANIMATION","parsedSpacing","spacingValue","currentSwipeOffset","swipeEasing","newSwipeState","newSwipeAnimationDuration","expectedTime","swipeParams","pullParams","intent","intentCleanup","resetCleanup","wheelResidualMomentum","cancelSwipeIntentCleanup","cancelSwipeResetCleanup","handleCleanup","handleCancelSwipe","currentSwipeIntent","newSwipeOffset","sign","useWheelSwipe","focusOnMount","querySelector","onViewCallback","slideRect","container","controls","cssPrefix$2","cssSlidePrefix","CarouselSlide","_ref9","click","HTMLElement","renderSlide","rendered","slideHeader","slideContainer","_ref10","slideFooter","Placeholder","CarouselModule","_ref11","minimum","calculatePreload","useNavigationState","prevDisabled","nextDisabled","NavigationButton","_ref12","NavigationModule","_ref13","buttonPrev","buttonNext","iconPrev","iconNext","throttle","useKeyboardNavigation","navigationPrev","navigationNext","noScrollPadding","isHTMLElement","padScrollbar","property","computedValue","originalValue","getPropertyValue","removeProperty","NoScrollModule","_ref14","scrollbar","innerWidth","elements","getElementsByTagName","clean","cssPrefix$1","attribute","previousValue","getAttribute","PortalModule","_ref15","mounted","setMounted","visible","setVisible","restoreFocus","animationDuration","handleClose","exiting","exited","handleEnter","entering","entered","handleRef","root","RootModule","_ref16","ToolbarModule","_ref17","buttonClose","iconClose","renderNode","mergeAnimation","defaultAnimation","defaultAnimationEasing","restDefaultAnimation","restAnimation","Lightbox","_ref18","restProps","defaultCarousel","defaultRender","defaultToolbar","defaultController","defaultNoScroll","defaultOn","defaultSlides","defaultIndex","defaultPlugins","restDefaultProps","config","augmentation","augmentations","addParent","append","addChild","precede","addSibling","addModule","augment","plugin","acc","withPlugins","Photos","photosBig","tomkra_art001","tomkra_art002","tomkra_art003","tomkra_art004","tomkra_art005","tomkra_art006","tomkra_art007","tomkra_art008","tomkra_art009","tomkra_art010","tomkra_art011","tomkra_art012","tomkra_art013","tomkra_art014","tomkra_art015","tomkra_art016","tomkra_art017","tomkra_art018","tomkra_art019","tomkra_art020","tomkra_art021","tomkra_art022","tomkra_art023","tomkra_art024","tomkra_art025","tomkra_art026","tomkra_art027","tomkra_art045","tomkra_art028","tomkra_art029","tomkra_art030","tomkra_art031","tomkra_art032","tomkra_art033","tomkra_art034","tomkra_art035","tomkra_art036","tomkra_art037","tomkra_art038","tomkra_art039","tomkra_art040","tomkra_art041","tomkra_art042","tomkra_art043","tomkra_art044","tomkra_art046","Art","artBig","Contact","Impressum","SvgMastodon","SvgSquareArrowUpRightSolid","App","isMobileNavVisible","setMobileNavVisible","handleHamburgerClick","handleCloseClick","Logo","Hamburger","Close","GitHub","Extern","Mastdodon","getElementById"],"sourceRoot":""}